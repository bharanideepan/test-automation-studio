<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241128 12:21:26.805" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="42">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 12:21:40.545" endtime="20241128 12:21:40.546"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 19:39:23.041" level="INFO">KafkaError{code=_RESOLVE,val=-193,str="FindCoordinator response error: Local: Host resolution failure"}</msg>
<msg timestamp="20241128 19:39:23.053" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '2', 'testCaseId': '2', 'testSuiteRunId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:09:22.527Z', 'createdAt': '2024-11-28T14:...</msg>
<status status="PASS" starttime="20241128 12:21:40.546" endtime="20241128 19:39:23.054"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 19:39:23.066" endtime="20241128 19:39:23.067"/>
</break>
<status status="NOT RUN" starttime="20241128 19:39:23.066" endtime="20241128 19:39:23.067"/>
</branch>
<status status="PASS" starttime="20241128 19:39:23.060" endtime="20241128 19:39:23.067"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 19:39:23.086" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\2cbabeee-e2d5-47e2-b706-a365ecb304cf"}</msg>
<msg timestamp="20241128 19:39:24.387" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\2cbabeee-e2d5-47e2-b706-a365ecb304cf"}</msg>
<status status="PASS" starttime="20241128 19:39:23.076" endtime="20241128 19:39:24.387"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 19:39:24.398" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 19:39:24.436" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 19:39:24.436" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 19:39:24.388" endtime="20241128 19:39:24.436"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241128 19:39:24.446" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241128 19:39:24.437" endtime="20241128 19:39:24.447"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 19:39:25.669" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 19:39:25.670" level="INFO">${page_id} = {'page_id': 'page=3b8da151-bcf3-4f12-ad8a-87bf37c97a3b', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 19:39:24.448" endtime="20241128 19:39:25.670"/>
</kw>
<status status="PASS" starttime="20241128 19:39:23.070" endtime="20241128 19:39:25.671"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:25.672" endtime="20241128 19:39:25.678"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:25.683" endtime="20241128 19:39:25.691"/>
</kw>
<msg timestamp="20241128 19:39:25.691" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.683" endtime="20241128 19:39:25.691"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.696" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 19:39:25.695" endtime="20241128 19:39:25.696"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.697" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.697" endtime="20241128 19:39:25.698"/>
</kw>
<status status="PASS" starttime="20241128 19:39:25.697" endtime="20241128 19:39:25.698"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.698" endtime="20241128 19:39:25.698"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:25.698" endtime="20241128 19:39:25.699"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.696" endtime="20241128 19:39:25.699"/>
</if>
<status status="PASS" starttime="20241128 19:39:25.695" endtime="20241128 19:39:25.699"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.691" endtime="20241128 19:39:25.699"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:25.699" endtime="20241128 19:39:25.699"/>
</return>
<msg timestamp="20241128 19:39:25.699" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.682" endtime="20241128 19:39:25.699"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.700" endtime="20241128 19:39:25.700"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 19:39:25.700" endtime="20241128 19:39:25.700"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:25.700" endtime="20241128 19:39:25.700"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.700" endtime="20241128 19:39:25.700"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:25.706" endtime="20241128 19:39:25.706"/>
</kw>
<msg timestamp="20241128 19:39:25.706" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.705" endtime="20241128 19:39:25.706"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.707" level="INFO">${values} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241128 19:39:25.707" endtime="20241128 19:39:25.708"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.708" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.708" endtime="20241128 19:39:25.708"/>
</kw>
<status status="PASS" starttime="20241128 19:39:25.708" endtime="20241128 19:39:25.708"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.709" endtime="20241128 19:39:25.709"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:25.708" endtime="20241128 19:39:25.709"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.708" endtime="20241128 19:39:25.709"/>
</if>
<status status="PASS" starttime="20241128 19:39:25.707" endtime="20241128 19:39:25.709"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.706" endtime="20241128 19:39:25.709"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:25.709" endtime="20241128 19:39:25.709"/>
</return>
<msg timestamp="20241128 19:39:25.709" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.703" endtime="20241128 19:39:25.709"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:25.712" endtime="20241128 19:39:25.712"/>
</kw>
<msg timestamp="20241128 19:39:25.712" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.712" endtime="20241128 19:39:25.712"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.713" level="INFO">${values} = {'id': '2', 'testCaseId': '2', 'testSuiteRunId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:09:22.527Z', 'createdAt': '2024-11-28T14:09:22.527Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 19:39:25.713" endtime="20241128 19:39:25.713"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.714" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.714" endtime="20241128 19:39:25.714"/>
</kw>
<status status="PASS" starttime="20241128 19:39:25.713" endtime="20241128 19:39:25.714"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.714" endtime="20241128 19:39:25.714"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:25.714" endtime="20241128 19:39:25.714"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.713" endtime="20241128 19:39:25.715"/>
</if>
<status status="PASS" starttime="20241128 19:39:25.713" endtime="20241128 19:39:25.715"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.712" endtime="20241128 19:39:25.715"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:25.715" endtime="20241128 19:39:25.715"/>
</return>
<msg timestamp="20241128 19:39:25.715" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.711" endtime="20241128 19:39:25.715"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.716" endtime="20241128 19:39:25.716"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:25.715" endtime="20241128 19:39:25.716"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.715" endtime="20241128 19:39:25.716"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.717" level="INFO">${testCase} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241128 19:39:25.716" endtime="20241128 19:39:25.718"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.720" level="INFO">${testCaseRun} = {'id': '2', 'testCaseId': '2', 'testSuiteRunId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:09:22.527Z', 'createdAt': '2024-11-28T14:09:22.527Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 19:39:25.718" endtime="20241128 19:39:25.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.721" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 19:39:25.720" endtime="20241128 19:39:25.721"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:25.721" endtime="20241128 19:39:25.722"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:25.725" endtime="20241128 19:39:25.725"/>
</kw>
<msg timestamp="20241128 19:39:25.726" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.725" endtime="20241128 19:39:25.726"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.726" level="INFO">${values} = [{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241128 19:39:25.726" endtime="20241128 19:39:25.726"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.728" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.728" endtime="20241128 19:39:25.728"/>
</kw>
<status status="PASS" starttime="20241128 19:39:25.728" endtime="20241128 19:39:25.728"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.728" endtime="20241128 19:39:25.729"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:25.728" endtime="20241128 19:39:25.729"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.728" endtime="20241128 19:39:25.729"/>
</if>
<status status="PASS" starttime="20241128 19:39:25.726" endtime="20241128 19:39:25.729"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.726" endtime="20241128 19:39:25.729"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:25.729" endtime="20241128 19:39:25.729"/>
</return>
<msg timestamp="20241128 19:39:25.729" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.724" endtime="20241128 19:39:25.729"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:25.731" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '2', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 19:39:25.729" endtime="20241128 19:39:25.731"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:25.733" level="INFO">${json_response} = {"testCaseRunId": "2", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 19:39:25.733" endtime="20241128 19:39:25.733"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:25.741" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:25.741" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:25.733" endtime="20241128 19:39:25.741"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:25.741" endtime="20241128 19:39:25.742"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:25.742" endtime="20241128 19:39:25.742"/>
</return>
<status status="PASS" starttime="20241128 19:39:25.731" endtime="20241128 19:39:25.742"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:25.744" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 19:39:25.743" endtime="20241128 19:39:25.744"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.746" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 19:39:25.746" endtime="20241128 19:39:25.746"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:25.747" endtime="20241128 19:39:25.748"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:25.752" endtime="20241128 19:39:25.752"/>
</kw>
<msg timestamp="20241128 19:39:25.752" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.752" endtime="20241128 19:39:25.752"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.753" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 19:39:25.753" endtime="20241128 19:39:25.753"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.755" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.755" endtime="20241128 19:39:25.755"/>
</kw>
<status status="PASS" starttime="20241128 19:39:25.753" endtime="20241128 19:39:25.755"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.755" endtime="20241128 19:39:25.755"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:25.755" endtime="20241128 19:39:25.756"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.753" endtime="20241128 19:39:25.756"/>
</if>
<status status="PASS" starttime="20241128 19:39:25.753" endtime="20241128 19:39:25.756"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.753" endtime="20241128 19:39:25.756"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:25.756" endtime="20241128 19:39:25.757"/>
</return>
<msg timestamp="20241128 19:39:25.758" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:25.750" endtime="20241128 19:39:25.758"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.761" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 19:39:25.760" endtime="20241128 19:39:25.761"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:25.761" endtime="20241128 19:39:25.762"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 19:39:25.762" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 19:39:25.762" endtime="20241128 19:39:25.762"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.763" endtime="20241128 19:39:25.763"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:25.763" endtime="20241128 19:39:25.763"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:25.763" endtime="20241128 19:39:25.763"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.762" endtime="20241128 19:39:25.763"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:25.765" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 19:39:25.763" endtime="20241128 19:39:25.765"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 19:39:28.002" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 19:39:28.002" level="INFO">${page_id} = {'page_id': 'page=3cddb263-483c-45d8-974f-c78c8e105749', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 19:39:25.765" endtime="20241128 19:39:28.002"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 19:39:28.003" level="INFO">Switching to page {'page_id': 'page=3cddb263-483c-45d8-974f-c78c8e105749', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 19:39:28.043" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=409f6655-0707-452c-85c6-53b12ebe5b66",
    "contexts": [
      {
        "type": "context",
        "id": "context=bf7ebba1-4bd7-4295-bddd-6343456f96be",
        "activePage": "page=3cddb263-483c-45d8-974f-c78c8e105749",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=3b8da151-bcf3-4f12-ad8a-87bf37c97a3b",
            "timestamp": 1732802964.701
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=3cddb263-483c-45d8-974f-c78c8e105749",
            "timestamp": 1732802965.827
          }
        ]
      }
    ],
    "activeContext": "context=bf7ebba1-4bd7-4295-bddd-6343456f96be",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 19:39:28.050" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 19:39:28.003" endtime="20241128 19:39:28.051"/>
</kw>
<status status="PASS" starttime="20241128 19:39:25.765" endtime="20241128 19:39:28.051"/>
</kw>
<status status="PASS" starttime="20241128 19:39:25.765" endtime="20241128 19:39:28.052"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.052" endtime="20241128 19:39:28.052"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.052" endtime="20241128 19:39:28.052"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.055" endtime="20241128 19:39:28.056"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.053" endtime="20241128 19:39:28.056"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.058" endtime="20241128 19:39:28.058"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.060" endtime="20241128 19:39:28.060"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.056" endtime="20241128 19:39:28.060"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.061" endtime="20241128 19:39:28.061"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.060" endtime="20241128 19:39:28.061"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.064" endtime="20241128 19:39:28.064"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.061" endtime="20241128 19:39:28.064"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.067" endtime="20241128 19:39:28.068"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.068" endtime="20241128 19:39:28.068"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.068" endtime="20241128 19:39:28.068"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.068" endtime="20241128 19:39:28.068"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.065" endtime="20241128 19:39:28.068"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.070" endtime="20241128 19:39:28.070"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.069" endtime="20241128 19:39:28.071"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.074" endtime="20241128 19:39:28.074"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.075" endtime="20241128 19:39:28.075"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.075" endtime="20241128 19:39:28.075"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.075" endtime="20241128 19:39:28.075"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.075" endtime="20241128 19:39:28.075"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.074" endtime="20241128 19:39:28.075"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.071" endtime="20241128 19:39:28.076"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:28.083" endtime="20241128 19:39:28.085"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.087" endtime="20241128 19:39:28.087"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.076" endtime="20241128 19:39:28.088"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.089" endtime="20241128 19:39:28.089"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.089" endtime="20241128 19:39:28.089"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.089" endtime="20241128 19:39:28.090"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.090" endtime="20241128 19:39:28.090"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.090" endtime="20241128 19:39:28.090"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.089" endtime="20241128 19:39:28.090"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.088" endtime="20241128 19:39:28.091"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:28.096" endtime="20241128 19:39:28.096"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.099" endtime="20241128 19:39:28.099"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.091" endtime="20241128 19:39:28.099"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.102" endtime="20241128 19:39:28.102"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.103" endtime="20241128 19:39:28.103"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.102" endtime="20241128 19:39:28.103"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.103" endtime="20241128 19:39:28.103"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.103" endtime="20241128 19:39:28.103"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.102" endtime="20241128 19:39:28.103"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.100" endtime="20241128 19:39:28.103"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.108" endtime="20241128 19:39:28.108"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.105" endtime="20241128 19:39:28.108"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.116" endtime="20241128 19:39:28.116"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.118" endtime="20241128 19:39:28.118"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.108" endtime="20241128 19:39:28.118"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.765" endtime="20241128 19:39:28.118"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.119" endtime="20241128 19:39:28.120"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 19:39:28.120" endtime="20241128 19:39:28.121"/>
</return>
<msg timestamp="20241128 19:39:28.121" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 19:39:25.763" endtime="20241128 19:39:28.121"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.125" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 19:39:28.124" endtime="20241128 19:39:28.125"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.126" endtime="20241128 19:39:28.126"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.126" endtime="20241128 19:39:28.126"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.126" endtime="20241128 19:39:28.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.127" endtime="20241128 19:39:28.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.127" endtime="20241128 19:39:28.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.128" endtime="20241128 19:39:28.128"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.128" endtime="20241128 19:39:28.128"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.128" endtime="20241128 19:39:28.128"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.130" endtime="20241128 19:39:28.130"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.132" endtime="20241128 19:39:28.132"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:28.132" endtime="20241128 19:39:28.132"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.132" endtime="20241128 19:39:28.133"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.132" endtime="20241128 19:39:28.133"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.133" endtime="20241128 19:39:28.133"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.133" endtime="20241128 19:39:28.134"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.133" endtime="20241128 19:39:28.134"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.133" endtime="20241128 19:39:28.134"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.134" endtime="20241128 19:39:28.134"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.135" endtime="20241128 19:39:28.135"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.134" endtime="20241128 19:39:28.135"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.134" endtime="20241128 19:39:28.136"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.132" endtime="20241128 19:39:28.136"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.132" endtime="20241128 19:39:28.136"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:28.136" endtime="20241128 19:39:28.136"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.136" endtime="20241128 19:39:28.136"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.136" endtime="20241128 19:39:28.137"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.137" endtime="20241128 19:39:28.137"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.137" endtime="20241128 19:39:28.137"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.137" endtime="20241128 19:39:28.137"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.138" endtime="20241128 19:39:28.138"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.138" endtime="20241128 19:39:28.138"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.138" endtime="20241128 19:39:28.138"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.138" endtime="20241128 19:39:28.139"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.136" endtime="20241128 19:39:28.139"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.136" endtime="20241128 19:39:28.139"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.126" endtime="20241128 19:39:28.139"/>
</iter>
<status status="NOT RUN" starttime="20241128 19:39:28.125" endtime="20241128 19:39:28.139"/>
</for>
<msg timestamp="20241128 19:39:28.140" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 19:39:28.122" endtime="20241128 19:39:28.140"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.140" endtime="20241128 19:39:28.142"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 19:39:28.154" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 19:39:28.152" endtime="20241128 19:39:28.154"/>
</kw>
<msg timestamp="20241128 19:39:28.154" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 19:39:28.152" endtime="20241128 19:39:28.154"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.155" endtime="20241128 19:39:28.155"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.157" endtime="20241128 19:39:28.157"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.157" endtime="20241128 19:39:28.157"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.158" endtime="20241128 19:39:28.158"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.157" endtime="20241128 19:39:28.158"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.155" endtime="20241128 19:39:28.158"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.155" endtime="20241128 19:39:28.159"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.154" endtime="20241128 19:39:28.159"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:28.159" endtime="20241128 19:39:28.159"/>
</return>
<msg timestamp="20241128 19:39:28.160" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 19:39:28.151" endtime="20241128 19:39:28.160"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.161" endtime="20241128 19:39:28.161"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.161" endtime="20241128 19:39:28.161"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.163" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 19:39:28.161" endtime="20241128 19:39:28.163"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.161" endtime="20241128 19:39:28.163"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.160" endtime="20241128 19:39:28.163"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:28.164" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '5', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'errorM...</msg>
<status status="PASS" starttime="20241128 19:39:28.163" endtime="20241128 19:39:28.164"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:28.171" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "5", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "errorM...</msg>
<status status="PASS" starttime="20241128 19:39:28.166" endtime="20241128 19:39:28.171"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:28.180" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:28.180" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:28.172" endtime="20241128 19:39:28.180"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.181" endtime="20241128 19:39:28.182"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:28.182" endtime="20241128 19:39:28.182"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.165" endtime="20241128 19:39:28.182"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.145" endtime="20241128 19:39:28.182"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 19:39:28.183" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 19:39:28.183" endtime="20241128 19:39:28.184"/>
</kw>
<status status="PASS" starttime="20241128 19:39:25.760" endtime="20241128 19:39:28.184"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.186" endtime="20241128 19:39:28.187"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.188" endtime="20241128 19:39:28.188"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.189" endtime="20241128 19:39:28.189"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.185" endtime="20241128 19:39:28.189"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.760" endtime="20241128 19:39:28.190"/>
</try>
<status status="PASS" starttime="20241128 19:39:25.760" endtime="20241128 19:39:28.190"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.192" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 19:39:28.191" endtime="20241128 19:39:28.192"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.192" endtime="20241128 19:39:28.193"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 19:39:28.194" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 19:39:28.193" endtime="20241128 19:39:28.194"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.195" endtime="20241128 19:39:28.195"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.196" endtime="20241128 19:39:28.196"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.194" endtime="20241128 19:39:28.196"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.194" endtime="20241128 19:39:28.196"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.198" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 19:39:28.198" endtime="20241128 19:39:28.198"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.199" endtime="20241128 19:39:28.199"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.199" endtime="20241128 19:39:28.199"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.200" endtime="20241128 19:39:28.200"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.200" endtime="20241128 19:39:28.201"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.206" endtime="20241128 19:39:28.207"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.201" endtime="20241128 19:39:28.207"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.229" endtime="20241128 19:39:28.229"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.234" endtime="20241128 19:39:28.235"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.209" endtime="20241128 19:39:28.237"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.241" endtime="20241128 19:39:28.241"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.239" endtime="20241128 19:39:28.241"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.246" endtime="20241128 19:39:28.246"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.242" endtime="20241128 19:39:28.246"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:28.311" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 19:39:28.260" endtime="20241128 19:39:28.311"/>
</kw>
<msg timestamp="20241128 19:39:28.312" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.260" endtime="20241128 19:39:28.312"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.312" endtime="20241128 19:39:28.312"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.259" endtime="20241128 19:39:28.312"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.313" endtime="20241128 19:39:28.313"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.314" endtime="20241128 19:39:28.314"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.312" endtime="20241128 19:39:28.314"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.259" endtime="20241128 19:39:28.314"/>
</try>
<msg timestamp="20241128 19:39:28.314" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.259" endtime="20241128 19:39:28.314"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.314" endtime="20241128 19:39:28.314"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.257" endtime="20241128 19:39:28.315"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.315" endtime="20241128 19:39:28.315"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.315" endtime="20241128 19:39:28.315"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.257" endtime="20241128 19:39:28.315"/>
</try>
<msg timestamp="20241128 19:39:28.316" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.257" endtime="20241128 19:39:28.316"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.322" endtime="20241128 19:39:28.322"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.322" endtime="20241128 19:39:28.322"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.322" endtime="20241128 19:39:28.323"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.321" endtime="20241128 19:39:28.323"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.319" endtime="20241128 19:39:28.323"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.255" endtime="20241128 19:39:28.323"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:28.347" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 19:39:28.337" endtime="20241128 19:39:28.347"/>
</kw>
<msg timestamp="20241128 19:39:28.348" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.336" endtime="20241128 19:39:28.348"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.348" endtime="20241128 19:39:28.348"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.336" endtime="20241128 19:39:28.348"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.349" endtime="20241128 19:39:28.349"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.349" endtime="20241128 19:39:28.349"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.348" endtime="20241128 19:39:28.349"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.336" endtime="20241128 19:39:28.350"/>
</try>
<msg timestamp="20241128 19:39:28.350" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.335" endtime="20241128 19:39:28.350"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.350" endtime="20241128 19:39:28.350"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.333" endtime="20241128 19:39:28.350"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.351" endtime="20241128 19:39:28.351"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.350" endtime="20241128 19:39:28.351"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.333" endtime="20241128 19:39:28.351"/>
</try>
<msg timestamp="20241128 19:39:28.351" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.332" endtime="20241128 19:39:28.351"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.354" endtime="20241128 19:39:28.354"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.354" endtime="20241128 19:39:28.354"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.354" endtime="20241128 19:39:28.354"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.353" endtime="20241128 19:39:28.354"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.352" endtime="20241128 19:39:28.354"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.331" endtime="20241128 19:39:28.354"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 19:39:28.380" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 19:39:28.380" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 19:39:28.354" endtime="20241128 19:39:28.380"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 19:39:28.380" endtime="20241128 19:39:28.380"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.354" endtime="20241128 19:39:28.380"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.380" endtime="20241128 19:39:28.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.381" endtime="20241128 19:39:28.381"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.380" endtime="20241128 19:39:28.381"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.354" endtime="20241128 19:39:28.381"/>
</try>
<msg timestamp="20241128 19:39:28.381" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 19:39:28.328" endtime="20241128 19:39:28.381"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.383" endtime="20241128 19:39:28.384"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.384" endtime="20241128 19:39:28.384"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.383" endtime="20241128 19:39:28.384"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.383" endtime="20241128 19:39:28.384"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.382" endtime="20241128 19:39:28.384"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.326" endtime="20241128 19:39:28.384"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.385" endtime="20241128 19:39:28.385"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.384" endtime="20241128 19:39:28.385"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.326" endtime="20241128 19:39:28.385"/>
</try>
<status status="PASS" starttime="20241128 19:39:28.326" endtime="20241128 19:39:28.385"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:28.395" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241128 19:39:28.390" endtime="20241128 19:39:28.396"/>
</kw>
<msg timestamp="20241128 19:39:28.396" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.390" endtime="20241128 19:39:28.396"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.396" endtime="20241128 19:39:28.396"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.390" endtime="20241128 19:39:28.396"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.396" endtime="20241128 19:39:28.396"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.397" endtime="20241128 19:39:28.397"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.396" endtime="20241128 19:39:28.397"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.390" endtime="20241128 19:39:28.397"/>
</try>
<msg timestamp="20241128 19:39:28.397" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.389" endtime="20241128 19:39:28.397"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.397" endtime="20241128 19:39:28.397"/>
</return>
<msg timestamp="20241128 19:39:28.398" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.388" endtime="20241128 19:39:28.398"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.400" endtime="20241128 19:39:28.400"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.401" endtime="20241128 19:39:28.401"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.400" endtime="20241128 19:39:28.401"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.400" endtime="20241128 19:39:28.401"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.399" endtime="20241128 19:39:28.401"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.387" endtime="20241128 19:39:28.401"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.250" endtime="20241128 19:39:28.401"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:28.422" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241128 19:39:28.407" endtime="20241128 19:39:28.422"/>
</kw>
<msg timestamp="20241128 19:39:28.423" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.406" endtime="20241128 19:39:28.423"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.423" endtime="20241128 19:39:28.423"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.406" endtime="20241128 19:39:28.423"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.423" endtime="20241128 19:39:28.423"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.423" endtime="20241128 19:39:28.424"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.423" endtime="20241128 19:39:28.424"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.406" endtime="20241128 19:39:28.424"/>
</try>
<msg timestamp="20241128 19:39:28.424" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.405" endtime="20241128 19:39:28.424"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.424" endtime="20241128 19:39:28.424"/>
</return>
<msg timestamp="20241128 19:39:28.424" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.404" endtime="20241128 19:39:28.424"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.426" endtime="20241128 19:39:28.426"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.426" endtime="20241128 19:39:28.426"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.426" endtime="20241128 19:39:28.426"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.425" endtime="20241128 19:39:28.426"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.425" endtime="20241128 19:39:28.426"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.403" endtime="20241128 19:39:28.426"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:28.427" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 19:39:28.427" endtime="20241128 19:39:28.427"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.429" endtime="20241128 19:39:28.429"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.433" endtime="20241128 19:39:28.433"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.428" endtime="20241128 19:39:28.433"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:28.433" endtime="20241128 19:39:28.435"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.433" endtime="20241128 19:39:28.435"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.428" endtime="20241128 19:39:28.435"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 19:39:28.437" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 19:39:28.436" endtime="20241128 19:39:28.484"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.436" endtime="20241128 19:39:28.484"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.485" endtime="20241128 19:39:28.485"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.486" endtime="20241128 19:39:28.486"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.484" endtime="20241128 19:39:28.486"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.435" endtime="20241128 19:39:28.486"/>
</try>
<status status="PASS" starttime="20241128 19:39:28.428" endtime="20241128 19:39:28.487"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.427" endtime="20241128 19:39:28.487"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.427" endtime="20241128 19:39:28.487"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.487" endtime="20241128 19:39:28.487"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.487" endtime="20241128 19:39:28.487"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.427" endtime="20241128 19:39:28.487"/>
</try>
<status status="PASS" starttime="20241128 19:39:28.249" endtime="20241128 19:39:28.488"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.488" endtime="20241128 19:39:28.488"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.488" endtime="20241128 19:39:28.488"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.488" endtime="20241128 19:39:28.488"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.246" endtime="20241128 19:39:28.488"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.490" endtime="20241128 19:39:28.490"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.489" endtime="20241128 19:39:28.490"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.491" endtime="20241128 19:39:28.491"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.492" endtime="20241128 19:39:28.492"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.492" endtime="20241128 19:39:28.492"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.492" endtime="20241128 19:39:28.492"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.492" endtime="20241128 19:39:28.493"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.492" endtime="20241128 19:39:28.493"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.490" endtime="20241128 19:39:28.493"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:28.500" endtime="20241128 19:39:28.500"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.503" endtime="20241128 19:39:28.503"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.493" endtime="20241128 19:39:28.503"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.505" endtime="20241128 19:39:28.505"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.506" endtime="20241128 19:39:28.506"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.505" endtime="20241128 19:39:28.506"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.506" endtime="20241128 19:39:28.506"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.506" endtime="20241128 19:39:28.506"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.505" endtime="20241128 19:39:28.506"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.504" endtime="20241128 19:39:28.506"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:28.511" endtime="20241128 19:39:28.511"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.514" endtime="20241128 19:39:28.514"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.506" endtime="20241128 19:39:28.514"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.516" endtime="20241128 19:39:28.516"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.516" endtime="20241128 19:39:28.518"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.516" endtime="20241128 19:39:28.518"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.518" endtime="20241128 19:39:28.518"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.518" endtime="20241128 19:39:28.518"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.516" endtime="20241128 19:39:28.518"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.514" endtime="20241128 19:39:28.518"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.521" endtime="20241128 19:39:28.521"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.518" endtime="20241128 19:39:28.521"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.526" endtime="20241128 19:39:28.527"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.527" endtime="20241128 19:39:28.527"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.521" endtime="20241128 19:39:28.527"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.198" endtime="20241128 19:39:28.527"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.527" endtime="20241128 19:39:28.528"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 19:39:28.528" endtime="20241128 19:39:28.528"/>
</return>
<msg timestamp="20241128 19:39:28.528" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 19:39:28.197" endtime="20241128 19:39:28.529"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.530" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 19:39:28.530" endtime="20241128 19:39:28.530"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.531" endtime="20241128 19:39:28.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.531" endtime="20241128 19:39:28.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.531" endtime="20241128 19:39:28.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.532" endtime="20241128 19:39:28.532"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.532" endtime="20241128 19:39:28.532"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.532" endtime="20241128 19:39:28.532"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.532" endtime="20241128 19:39:28.532"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.533" endtime="20241128 19:39:28.533"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.535" endtime="20241128 19:39:28.536"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.537" endtime="20241128 19:39:28.537"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:28.537" endtime="20241128 19:39:28.537"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.537" endtime="20241128 19:39:28.537"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.537" endtime="20241128 19:39:28.538"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.538" endtime="20241128 19:39:28.538"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.538" endtime="20241128 19:39:28.538"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.538" endtime="20241128 19:39:28.538"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.538" endtime="20241128 19:39:28.538"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.538" endtime="20241128 19:39:28.539"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.539" endtime="20241128 19:39:28.539"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.538" endtime="20241128 19:39:28.539"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.538" endtime="20241128 19:39:28.539"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.537" endtime="20241128 19:39:28.539"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.537" endtime="20241128 19:39:28.539"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:28.539" endtime="20241128 19:39:28.539"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.539" endtime="20241128 19:39:28.540"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.539" endtime="20241128 19:39:28.540"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.540" endtime="20241128 19:39:28.540"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.540" endtime="20241128 19:39:28.540"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.540" endtime="20241128 19:39:28.540"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.540" endtime="20241128 19:39:28.541"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.541" endtime="20241128 19:39:28.541"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.540" endtime="20241128 19:39:28.541"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.540" endtime="20241128 19:39:28.541"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.539" endtime="20241128 19:39:28.541"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.539" endtime="20241128 19:39:28.541"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.531" endtime="20241128 19:39:28.541"/>
</iter>
<status status="NOT RUN" starttime="20241128 19:39:28.530" endtime="20241128 19:39:28.541"/>
</for>
<msg timestamp="20241128 19:39:28.541" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 19:39:28.529" endtime="20241128 19:39:28.541"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.542" endtime="20241128 19:39:28.542"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:28.546" endtime="20241128 19:39:28.546"/>
</kw>
<msg timestamp="20241128 19:39:28.546" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.545" endtime="20241128 19:39:28.546"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.547" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 19:39:28.546" endtime="20241128 19:39:28.547"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.547" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.547" endtime="20241128 19:39:28.547"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.547" endtime="20241128 19:39:28.547"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.548" endtime="20241128 19:39:28.548"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.548" endtime="20241128 19:39:28.548"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.547" endtime="20241128 19:39:28.548"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.546" endtime="20241128 19:39:28.548"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.546" endtime="20241128 19:39:28.548"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:28.548" endtime="20241128 19:39:28.548"/>
</return>
<msg timestamp="20241128 19:39:28.548" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.545" endtime="20241128 19:39:28.548"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.549" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 19:39:28.549" endtime="20241128 19:39:28.549"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.549" endtime="20241128 19:39:28.549"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.549" endtime="20241128 19:39:28.549"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.549" endtime="20241128 19:39:28.550"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.548" endtime="20241128 19:39:28.550"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:28.551" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '6', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage':...</msg>
<status status="PASS" starttime="20241128 19:39:28.550" endtime="20241128 19:39:28.551"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:28.552" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "6", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage":...</msg>
<status status="PASS" starttime="20241128 19:39:28.552" endtime="20241128 19:39:28.552"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:28.558" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:28.558" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:28.552" endtime="20241128 19:39:28.558"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.559" endtime="20241128 19:39:28.559"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:28.559" endtime="20241128 19:39:28.559"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.551" endtime="20241128 19:39:28.560"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.542" endtime="20241128 19:39:28.560"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 19:39:28.561" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 19:39:28.560" endtime="20241128 19:39:28.561"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.191" endtime="20241128 19:39:28.561"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.561" endtime="20241128 19:39:28.561"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.561" endtime="20241128 19:39:28.561"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.562" endtime="20241128 19:39:28.562"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.561" endtime="20241128 19:39:28.562"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.190" endtime="20241128 19:39:28.562"/>
</try>
<status status="PASS" starttime="20241128 19:39:28.190" endtime="20241128 19:39:28.562"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.563" level="INFO">${action} = {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:58.626Z', 'updatedAt': '2024-11-28T06:56:58....</msg>
<status status="PASS" starttime="20241128 19:39:28.562" endtime="20241128 19:39:28.563"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.563" endtime="20241128 19:39:28.564"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 19:39:28.564" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:58.757Z', 'updatedAt': '2024-11-28T06:57:07.363Z'}</msg>
<status status="PASS" starttime="20241128 19:39:28.564" endtime="20241128 19:39:28.564"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.564" endtime="20241128 19:39:28.565"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.565" endtime="20241128 19:39:28.565"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.564" endtime="20241128 19:39:28.565"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.564" endtime="20241128 19:39:28.565"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.566" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 19:39:28.566" endtime="20241128 19:39:28.566"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.568" endtime="20241128 19:39:28.568"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.566" endtime="20241128 19:39:28.568"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.569" endtime="20241128 19:39:28.569"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.568" endtime="20241128 19:39:28.569"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.572" endtime="20241128 19:39:28.572"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.570" endtime="20241128 19:39:28.572"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.573" endtime="20241128 19:39:28.573"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.577" endtime="20241128 19:39:28.577"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.572" endtime="20241128 19:39:28.577"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.579" endtime="20241128 19:39:28.580"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.578" endtime="20241128 19:39:28.580"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.582" endtime="20241128 19:39:28.582"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.580" endtime="20241128 19:39:28.582"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:28.599" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 19:39:28.593" endtime="20241128 19:39:28.599"/>
</kw>
<msg timestamp="20241128 19:39:28.599" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.593" endtime="20241128 19:39:28.599"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.599" endtime="20241128 19:39:28.599"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.593" endtime="20241128 19:39:28.599"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.600" endtime="20241128 19:39:28.600"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.600" endtime="20241128 19:39:28.600"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.600" endtime="20241128 19:39:28.600"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.593" endtime="20241128 19:39:28.600"/>
</try>
<msg timestamp="20241128 19:39:28.600" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.592" endtime="20241128 19:39:28.600"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.601" endtime="20241128 19:39:28.601"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.591" endtime="20241128 19:39:28.601"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.601" endtime="20241128 19:39:28.601"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.601" endtime="20241128 19:39:28.601"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.591" endtime="20241128 19:39:28.601"/>
</try>
<msg timestamp="20241128 19:39:28.602" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.591" endtime="20241128 19:39:28.602"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.605" endtime="20241128 19:39:28.605"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.605" endtime="20241128 19:39:28.605"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.603" endtime="20241128 19:39:28.605"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.603" endtime="20241128 19:39:28.605"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.603" endtime="20241128 19:39:28.605"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.590" endtime="20241128 19:39:28.605"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:28.623" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 19:39:28.614" endtime="20241128 19:39:28.623"/>
</kw>
<msg timestamp="20241128 19:39:28.623" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.613" endtime="20241128 19:39:28.623"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.623" endtime="20241128 19:39:28.624"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.613" endtime="20241128 19:39:28.624"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.624" endtime="20241128 19:39:28.624"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.624" endtime="20241128 19:39:28.624"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.624" endtime="20241128 19:39:28.624"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.613" endtime="20241128 19:39:28.624"/>
</try>
<msg timestamp="20241128 19:39:28.624" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.613" endtime="20241128 19:39:28.624"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.624" endtime="20241128 19:39:28.624"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.611" endtime="20241128 19:39:28.624"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.625" endtime="20241128 19:39:28.625"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.625" endtime="20241128 19:39:28.625"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.611" endtime="20241128 19:39:28.625"/>
</try>
<msg timestamp="20241128 19:39:28.625" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.611" endtime="20241128 19:39:28.625"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.627" endtime="20241128 19:39:28.627"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.627" endtime="20241128 19:39:28.627"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.627" endtime="20241128 19:39:28.628"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.627" endtime="20241128 19:39:28.628"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.626" endtime="20241128 19:39:28.628"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.610" endtime="20241128 19:39:28.628"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 19:39:28.637" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 19:39:28.637" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 19:39:28.628" endtime="20241128 19:39:28.638"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 19:39:28.638" endtime="20241128 19:39:28.638"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.628" endtime="20241128 19:39:28.638"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.638" endtime="20241128 19:39:28.638"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.638" endtime="20241128 19:39:28.638"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.638" endtime="20241128 19:39:28.638"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.628" endtime="20241128 19:39:28.639"/>
</try>
<msg timestamp="20241128 19:39:28.639" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 19:39:28.608" endtime="20241128 19:39:28.639"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.641" endtime="20241128 19:39:28.641"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.641" endtime="20241128 19:39:28.641"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.641" endtime="20241128 19:39:28.641"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.641" endtime="20241128 19:39:28.641"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.640" endtime="20241128 19:39:28.642"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.607" endtime="20241128 19:39:28.642"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.642" endtime="20241128 19:39:28.642"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.642" endtime="20241128 19:39:28.642"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.607" endtime="20241128 19:39:28.642"/>
</try>
<status status="PASS" starttime="20241128 19:39:28.607" endtime="20241128 19:39:28.642"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:28.654" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241128 19:39:28.647" endtime="20241128 19:39:28.654"/>
</kw>
<msg timestamp="20241128 19:39:28.654" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.647" endtime="20241128 19:39:28.654"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.654" endtime="20241128 19:39:28.654"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.647" endtime="20241128 19:39:28.654"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.654" endtime="20241128 19:39:28.654"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.655" endtime="20241128 19:39:28.655"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.654" endtime="20241128 19:39:28.655"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.647" endtime="20241128 19:39:28.655"/>
</try>
<msg timestamp="20241128 19:39:28.655" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.646" endtime="20241128 19:39:28.655"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.655" endtime="20241128 19:39:28.655"/>
</return>
<msg timestamp="20241128 19:39:28.655" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.645" endtime="20241128 19:39:28.655"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.657" endtime="20241128 19:39:28.657"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.658" endtime="20241128 19:39:28.658"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.657" endtime="20241128 19:39:28.658"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.657" endtime="20241128 19:39:28.658"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.656" endtime="20241128 19:39:28.658"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.645" endtime="20241128 19:39:28.658"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.588" endtime="20241128 19:39:28.658"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:28.676" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241128 19:39:28.663" endtime="20241128 19:39:28.676"/>
</kw>
<msg timestamp="20241128 19:39:28.676" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.662" endtime="20241128 19:39:28.676"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.677" endtime="20241128 19:39:28.677"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.662" endtime="20241128 19:39:28.677"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.677" endtime="20241128 19:39:28.677"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.677" endtime="20241128 19:39:28.677"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.677" endtime="20241128 19:39:28.677"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.662" endtime="20241128 19:39:28.677"/>
</try>
<msg timestamp="20241128 19:39:28.678" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.662" endtime="20241128 19:39:28.678"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:28.678" endtime="20241128 19:39:28.678"/>
</return>
<msg timestamp="20241128 19:39:28.678" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.660" endtime="20241128 19:39:28.678"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.683" endtime="20241128 19:39:28.683"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.683" endtime="20241128 19:39:28.683"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.683" endtime="20241128 19:39:28.683"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.682" endtime="20241128 19:39:28.683"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.680" endtime="20241128 19:39:28.683"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.660" endtime="20241128 19:39:28.685"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:28.685" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 19:39:28.685" endtime="20241128 19:39:28.685"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.687" endtime="20241128 19:39:28.687"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.689" endtime="20241128 19:39:28.689"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.687" endtime="20241128 19:39:28.689"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:28.689" endtime="20241128 19:39:28.690"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.689" endtime="20241128 19:39:28.690"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.686" endtime="20241128 19:39:28.690"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 19:39:28.691" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 19:39:28.690" endtime="20241128 19:39:28.710"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.690" endtime="20241128 19:39:28.710"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.711" endtime="20241128 19:39:28.711"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.711" endtime="20241128 19:39:28.711"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.710" endtime="20241128 19:39:28.711"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.690" endtime="20241128 19:39:28.711"/>
</try>
<status status="PASS" starttime="20241128 19:39:28.686" endtime="20241128 19:39:28.711"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.686" endtime="20241128 19:39:28.711"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.685" endtime="20241128 19:39:28.711"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.712" endtime="20241128 19:39:28.712"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.711" endtime="20241128 19:39:28.712"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.685" endtime="20241128 19:39:28.712"/>
</try>
<status status="PASS" starttime="20241128 19:39:28.587" endtime="20241128 19:39:28.712"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.713" endtime="20241128 19:39:28.713"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.712" endtime="20241128 19:39:28.713"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.712" endtime="20241128 19:39:28.713"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.583" endtime="20241128 19:39:28.713"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.714" endtime="20241128 19:39:28.714"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.713" endtime="20241128 19:39:28.714"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.715" endtime="20241128 19:39:28.715"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.715" endtime="20241128 19:39:28.715"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.715" endtime="20241128 19:39:28.715"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.717" endtime="20241128 19:39:28.717"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.715" endtime="20241128 19:39:28.717"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.715" endtime="20241128 19:39:28.717"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.714" endtime="20241128 19:39:28.718"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:28.723" endtime="20241128 19:39:28.723"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.726" endtime="20241128 19:39:28.727"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.718" endtime="20241128 19:39:28.727"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.728" endtime="20241128 19:39:28.728"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.728" endtime="20241128 19:39:28.728"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.728" endtime="20241128 19:39:28.728"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.729" endtime="20241128 19:39:28.729"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.728" endtime="20241128 19:39:28.729"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.728" endtime="20241128 19:39:28.729"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.727" endtime="20241128 19:39:28.729"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:28.735" endtime="20241128 19:39:28.735"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.738" endtime="20241128 19:39:28.738"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.729" endtime="20241128 19:39:28.738"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.740" endtime="20241128 19:39:28.740"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.740" endtime="20241128 19:39:28.740"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.740" endtime="20241128 19:39:28.740"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.740" endtime="20241128 19:39:28.741"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.740" endtime="20241128 19:39:28.741"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.740" endtime="20241128 19:39:28.741"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.738" endtime="20241128 19:39:28.741"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.743" endtime="20241128 19:39:28.743"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.741" endtime="20241128 19:39:28.743"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.749" endtime="20241128 19:39:28.749"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.749" endtime="20241128 19:39:28.749"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.743" endtime="20241128 19:39:28.749"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.566" endtime="20241128 19:39:28.750"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.750" endtime="20241128 19:39:28.750"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 19:39:28.751" endtime="20241128 19:39:28.751"/>
</return>
<msg timestamp="20241128 19:39:28.751" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 19:39:28.565" endtime="20241128 19:39:28.751"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.752" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 19:39:28.752" endtime="20241128 19:39:28.752"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.753" endtime="20241128 19:39:28.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.753" endtime="20241128 19:39:28.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.753" endtime="20241128 19:39:28.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.754" endtime="20241128 19:39:28.754"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.754" endtime="20241128 19:39:28.754"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.754" endtime="20241128 19:39:28.754"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.754" endtime="20241128 19:39:28.754"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.754" endtime="20241128 19:39:28.755"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.756" endtime="20241128 19:39:28.756"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.757" endtime="20241128 19:39:28.757"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:28.758" endtime="20241128 19:39:28.758"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.758" endtime="20241128 19:39:28.758"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.757" endtime="20241128 19:39:28.758"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.758" endtime="20241128 19:39:28.758"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.758" endtime="20241128 19:39:28.758"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.758" endtime="20241128 19:39:28.758"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.758" endtime="20241128 19:39:28.759"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.759" endtime="20241128 19:39:28.759"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.759" endtime="20241128 19:39:28.759"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.759" endtime="20241128 19:39:28.759"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.759" endtime="20241128 19:39:28.759"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.757" endtime="20241128 19:39:28.759"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.757" endtime="20241128 19:39:28.759"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:28.760" endtime="20241128 19:39:28.760"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.760" endtime="20241128 19:39:28.760"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.759" endtime="20241128 19:39:28.760"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.760" endtime="20241128 19:39:28.760"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.760" endtime="20241128 19:39:28.760"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.760" endtime="20241128 19:39:28.760"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.760" endtime="20241128 19:39:28.761"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:28.761" endtime="20241128 19:39:28.761"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:28.760" endtime="20241128 19:39:28.761"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.760" endtime="20241128 19:39:28.761"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.759" endtime="20241128 19:39:28.761"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:28.759" endtime="20241128 19:39:28.761"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:28.753" endtime="20241128 19:39:28.761"/>
</iter>
<status status="NOT RUN" starttime="20241128 19:39:28.752" endtime="20241128 19:39:28.761"/>
</for>
<msg timestamp="20241128 19:39:28.761" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 19:39:28.751" endtime="20241128 19:39:28.761"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.761" endtime="20241128 19:39:28.762"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:28.765" endtime="20241128 19:39:28.765"/>
</kw>
<msg timestamp="20241128 19:39:28.765" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.764" endtime="20241128 19:39:28.765"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.766" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:57.275Z', 'updatedAt': '2024-11-28T06:56:57.275Z'}</msg>
<status status="PASS" starttime="20241128 19:39:28.766" endtime="20241128 19:39:28.766"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.767" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.767" endtime="20241128 19:39:28.767"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.767" endtime="20241128 19:39:28.767"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.767" endtime="20241128 19:39:28.767"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.767" endtime="20241128 19:39:28.768"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.766" endtime="20241128 19:39:28.768"/>
</if>
<status status="PASS" starttime="20241128 19:39:28.766" endtime="20241128 19:39:28.768"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.765" endtime="20241128 19:39:28.768"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:28.768" endtime="20241128 19:39:28.768"/>
</return>
<msg timestamp="20241128 19:39:28.768" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:28.764" endtime="20241128 19:39:28.768"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.769" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241128 19:39:28.769" endtime="20241128 19:39:28.769"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.768" endtime="20241128 19:39:28.769"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.769" endtime="20241128 19:39:28.769"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.769" endtime="20241128 19:39:28.769"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.768" endtime="20241128 19:39:28.769"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:28.770" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '7', 'status': 'COMPLETED', 'actionName': 'Set Password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', 'as...</msg>
<status status="PASS" starttime="20241128 19:39:28.769" endtime="20241128 19:39:28.770"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:28.772" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "7", "status": "COMPLETED", "actionName": "Set Password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "as...</msg>
<status status="PASS" starttime="20241128 19:39:28.771" endtime="20241128 19:39:28.772"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:28.800" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:28.801" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:28.772" endtime="20241128 19:39:28.801"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.801" endtime="20241128 19:39:28.802"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:28.802" endtime="20241128 19:39:28.802"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.771" endtime="20241128 19:39:28.802"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.762" endtime="20241128 19:39:28.802"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 19:39:28.803" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 19:39:28.803" endtime="20241128 19:39:28.803"/>
</kw>
<status status="PASS" starttime="20241128 19:39:28.562" endtime="20241128 19:39:28.803"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.803" endtime="20241128 19:39:28.803"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.803" endtime="20241128 19:39:28.803"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.803" endtime="20241128 19:39:28.803"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.803" endtime="20241128 19:39:28.803"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.562" endtime="20241128 19:39:28.803"/>
</try>
<status status="PASS" starttime="20241128 19:39:28.562" endtime="20241128 19:39:28.803"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.803" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:57:48.296Z', 'updatedAt': '2024-11-28T06:57:4...</msg>
<status status="PASS" starttime="20241128 19:39:28.803" endtime="20241128 19:39:28.803"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:28.805" endtime="20241128 19:39:28.805"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 19:39:28.805" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:57:48.432Z', 'updatedAt': '2024-11-28T06:57:48.432Z'}</msg>
<status status="PASS" starttime="20241128 19:39:28.805" endtime="20241128 19:39:28.806"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.806" endtime="20241128 19:39:28.806"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:28.806" endtime="20241128 19:39:28.806"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.806" endtime="20241128 19:39:28.807"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.806" endtime="20241128 19:39:28.807"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:28.808" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 19:39:28.807" endtime="20241128 19:39:28.808"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.808" endtime="20241128 19:39:28.808"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.808" endtime="20241128 19:39:28.808"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:28.808" endtime="20241128 19:39:28.808"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:28.808" endtime="20241128 19:39:28.809"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:41.572" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241128 19:39:41.574" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241128 19:39:41.576" level="FAIL">Error: locator.waitFor: DOMException: Failed to execute 'evaluate' on 'Document': The string './/button[@tupe="submit" and type()="Login"]' is not a valid XPath expression.
    at Object.queryAll (&lt;anonymous&gt;:23:25)
    at InjectedScript._queryEngineAll (&lt;anonymous&gt;:4594:49)
    at InjectedScript.querySelectorAll (&lt;anonymous&gt;:4581:30)
    at eval (eval at evaluate (:197:30), &lt;anonymous&gt;:5:37)
    at UtilityScript.evaluate (&lt;anonymous&gt;:199:17)
    at UtilityScript.&lt;anonymous&gt; (&lt;anonymous&gt;:1:44)
=========================== logs ===========================
waiting for locator('xpath=//button[@tupe="submit" and type()="Login"]')
============================================================</msg>
<status status="FAIL" starttime="20241128 19:39:28.821" endtime="20241128 19:39:41.693"/>
</kw>
<msg timestamp="20241128 19:39:41.693" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 19:39:28.819" endtime="20241128 19:39:41.693"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:41.695" endtime="20241128 19:39:41.695"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.818" endtime="20241128 19:39:41.695"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.695" endtime="20241128 19:39:41.695"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.695" endtime="20241128 19:39:41.696"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.695" endtime="20241128 19:39:41.696"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.818" endtime="20241128 19:39:41.696"/>
</try>
<msg timestamp="20241128 19:39:41.696" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 19:39:28.817" endtime="20241128 19:39:41.696"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:41.696" endtime="20241128 19:39:41.696"/>
</return>
<status status="PASS" starttime="20241128 19:39:28.815" endtime="20241128 19:39:41.696"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:41.697" endtime="20241128 19:39:41.697"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:41.697" endtime="20241128 19:39:41.697"/>
</branch>
<status status="PASS" starttime="20241128 19:39:28.815" endtime="20241128 19:39:41.697"/>
</try>
<msg timestamp="20241128 19:39:41.697" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241128 19:39:28.814" endtime="20241128 19:39:41.697"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.700" endtime="20241128 19:39:41.701"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.701" endtime="20241128 19:39:41.702"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 19:39:41.703" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 19:39:41.702" endtime="20241128 19:39:41.703"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:41.701" endtime="20241128 19:39:41.704"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:41.700" endtime="20241128 19:39:41.705"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:41.700" endtime="20241128 19:39:41.705"/>
</if>
<status status="FAIL" starttime="20241128 19:39:41.699" endtime="20241128 19:39:41.707"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:28.814" endtime="20241128 19:39:41.708"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.711" endtime="20241128 19:39:41.711"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.713" endtime="20241128 19:39:41.713"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:28.812" endtime="20241128 19:39:41.713"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.715" endtime="20241128 19:39:41.715"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.715" endtime="20241128 19:39:41.715"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.715" endtime="20241128 19:39:41.715"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.716" endtime="20241128 19:39:41.716"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.715" endtime="20241128 19:39:41.716"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:41.715" endtime="20241128 19:39:41.716"/>
</try>
<status status="FAIL" starttime="20241128 19:39:28.811" endtime="20241128 19:39:41.716"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:28.809" endtime="20241128 19:39:41.717"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.721" endtime="20241128 19:39:41.721"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.723" endtime="20241128 19:39:41.723"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.717" endtime="20241128 19:39:41.723"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.725" endtime="20241128 19:39:41.725"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.723" endtime="20241128 19:39:41.725"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.728" endtime="20241128 19:39:41.728"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.725" endtime="20241128 19:39:41.728"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.731" endtime="20241128 19:39:41.731"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.731" endtime="20241128 19:39:41.731"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.731" endtime="20241128 19:39:41.731"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:41.731" endtime="20241128 19:39:41.731"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:41.728" endtime="20241128 19:39:41.732"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.733" endtime="20241128 19:39:41.733"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.732" endtime="20241128 19:39:41.733"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.734" endtime="20241128 19:39:41.734"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.735" endtime="20241128 19:39:41.735"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.735" endtime="20241128 19:39:41.735"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.736" endtime="20241128 19:39:41.736"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.736" endtime="20241128 19:39:41.736"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:41.735" endtime="20241128 19:39:41.736"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:41.733" endtime="20241128 19:39:41.736"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:41.743" endtime="20241128 19:39:41.743"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.746" endtime="20241128 19:39:41.746"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.736" endtime="20241128 19:39:41.746"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.747" endtime="20241128 19:39:41.747"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.748" endtime="20241128 19:39:41.748"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.747" endtime="20241128 19:39:41.748"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.748" endtime="20241128 19:39:41.748"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.748" endtime="20241128 19:39:41.748"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:41.747" endtime="20241128 19:39:41.748"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:41.746" endtime="20241128 19:39:41.748"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:41.755" endtime="20241128 19:39:41.756"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.759" endtime="20241128 19:39:41.759"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.748" endtime="20241128 19:39:41.759"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.760" endtime="20241128 19:39:41.760"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.761" endtime="20241128 19:39:41.761"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.760" endtime="20241128 19:39:41.761"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.761" endtime="20241128 19:39:41.761"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.761" endtime="20241128 19:39:41.761"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:41.760" endtime="20241128 19:39:41.761"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:41.759" endtime="20241128 19:39:41.761"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.764" endtime="20241128 19:39:41.764"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.761" endtime="20241128 19:39:41.764"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 19:39:41.770" endtime="20241128 19:39:41.770"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.771" endtime="20241128 19:39:41.771"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.764" endtime="20241128 19:39:41.771"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:28.808" endtime="20241128 19:39:41.771"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.772" endtime="20241128 19:39:41.774"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241128 19:39:41.774" endtime="20241128 19:39:41.774"/>
</return>
<status status="FAIL" starttime="20241128 19:39:28.807" endtime="20241128 19:39:41.774"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241128 19:39:41.775" endtime="20241128 19:39:41.775"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.775" endtime="20241128 19:39:41.775"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241128 19:39:41.775" endtime="20241128 19:39:41.776"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.776" endtime="20241128 19:39:41.776"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:28.803" endtime="20241128 19:39:41.776"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.776" endtime="20241128 19:39:41.777"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:41.781" endtime="20241128 19:39:41.781"/>
</kw>
<msg timestamp="20241128 19:39:41.782" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:41.781" endtime="20241128 19:39:41.782"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:41.782" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@tupe="submit" and type()="Login"]', 'pageId': '1', 'createdAt': '2024-11-28T06:57:46.898Z', 'updatedAt': '2024-11-28T06:57:46.898Z'}</msg>
<status status="PASS" starttime="20241128 19:39:41.782" endtime="20241128 19:39:41.782"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:41.783" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:41.783" endtime="20241128 19:39:41.783"/>
</kw>
<status status="PASS" starttime="20241128 19:39:41.783" endtime="20241128 19:39:41.784"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.784" endtime="20241128 19:39:41.784"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.784" endtime="20241128 19:39:41.784"/>
</branch>
<status status="PASS" starttime="20241128 19:39:41.783" endtime="20241128 19:39:41.784"/>
</if>
<status status="PASS" starttime="20241128 19:39:41.782" endtime="20241128 19:39:41.784"/>
</branch>
<status status="PASS" starttime="20241128 19:39:41.782" endtime="20241128 19:39:41.784"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:41.784" endtime="20241128 19:39:41.784"/>
</return>
<msg timestamp="20241128 19:39:41.785" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:41.780" endtime="20241128 19:39:41.785"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:41.786" level="INFO">${xpath} = //button[@tupe="submit" and type()="Login"]</msg>
<status status="PASS" starttime="20241128 19:39:41.786" endtime="20241128 19:39:41.786"/>
</kw>
<status status="PASS" starttime="20241128 19:39:41.785" endtime="20241128 19:39:41.786"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.786" endtime="20241128 19:39:41.786"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.786" endtime="20241128 19:39:41.786"/>
</branch>
<status status="PASS" starttime="20241128 19:39:41.785" endtime="20241128 19:39:41.786"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:41.788" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '8', 'status': 'FAILED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@tupe="submit" and type()="Login"]', 'inputValue': '', 'err...</msg>
<status status="PASS" starttime="20241128 19:39:41.787" endtime="20241128 19:39:41.788"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:41.790" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "8", "status": "FAILED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@tupe=\"submit\" and type()=\"Login\"]", "inputValue": "", ...</msg>
<status status="PASS" starttime="20241128 19:39:41.789" endtime="20241128 19:39:41.790"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:41.795" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:41.796" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:41.790" endtime="20241128 19:39:41.796"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.796" endtime="20241128 19:39:41.797"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:41.797" endtime="20241128 19:39:41.797"/>
</return>
<status status="PASS" starttime="20241128 19:39:41.789" endtime="20241128 19:39:41.797"/>
</kw>
<status status="PASS" starttime="20241128 19:39:41.777" endtime="20241128 19:39:41.798"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.798" endtime="20241128 19:39:41.799"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 19:39:41.800" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 19:39:41.800" endtime="20241128 19:39:41.800"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:41.798" endtime="20241128 19:39:41.801"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:41.776" endtime="20241128 19:39:41.802"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:28.803" endtime="20241128 19:39:41.802"/>
</try>
<status status="FAIL" starttime="20241128 19:39:28.803" endtime="20241128 19:39:41.802"/>
</iter>
<status status="FAIL" starttime="20241128 19:39:25.760" endtime="20241128 19:39:41.803"/>
</for>
<status status="FAIL" starttime="20241128 19:39:25.759" endtime="20241128 19:39:41.803"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:25.758" endtime="20241128 19:39:41.803"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241128 19:39:41.805" endtime="20241128 19:39:41.805"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:25.746" endtime="20241128 19:39:41.805"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.806" endtime="20241128 19:39:41.808"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:41.813" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '2', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 19:39:41.812" endtime="20241128 19:39:41.813"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:41.815" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "2", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 19:39:41.815" endtime="20241128 19:39:41.815"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:41.835" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:41.835" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:41.815" endtime="20241128 19:39:41.835"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.835" endtime="20241128 19:39:41.836"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:41.836" endtime="20241128 19:39:41.836"/>
</return>
<status status="PASS" starttime="20241128 19:39:41.814" endtime="20241128 19:39:41.836"/>
</kw>
<status status="PASS" starttime="20241128 19:39:41.809" endtime="20241128 19:39:41.836"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.839" endtime="20241128 19:39:41.840"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 19:39:41.842" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 19:39:41.840" endtime="20241128 19:39:41.842"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:41.838" endtime="20241128 19:39:41.844"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:41.806" endtime="20241128 19:39:41.844"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:25.745" endtime="20241128 19:39:41.844"/>
</try>
<status status="FAIL" starttime="20241128 19:39:25.745" endtime="20241128 19:39:41.845"/>
</iter>
<status status="FAIL" starttime="20241128 19:39:25.744" endtime="20241128 19:39:41.846"/>
</for>
<status status="FAIL" starttime="20241128 19:39:25.743" endtime="20241128 19:39:41.846"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:25.742" endtime="20241128 19:39:41.846"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241128 19:39:41.847" endtime="20241128 19:39:41.847"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:25.722" endtime="20241128 19:39:41.847"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.848" endtime="20241128 19:39:41.849"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:41.850" level="INFO">${response_message} = {'testCaseRunId': '2', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 19:39:41.850" endtime="20241128 19:39:41.850"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:41.851" level="INFO">${json_response} = {"testCaseRunId": "2", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 19:39:41.851" endtime="20241128 19:39:41.851"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:41.868" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:41.869" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:41.852" endtime="20241128 19:39:41.869"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.869" endtime="20241128 19:39:41.870"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:41.870" endtime="20241128 19:39:41.870"/>
</return>
<status status="PASS" starttime="20241128 19:39:41.850" endtime="20241128 19:39:41.870"/>
</kw>
<status status="PASS" starttime="20241128 19:39:41.849" endtime="20241128 19:39:41.870"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.874" endtime="20241128 19:39:41.875"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 19:39:41.876" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 19:39:41.875" endtime="20241128 19:39:41.877"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:41.871" endtime="20241128 19:39:41.878"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:41.848" endtime="20241128 19:39:41.879"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:25.722" endtime="20241128 19:39:41.879"/>
</try>
<status status="FAIL" starttime="20241128 19:39:25.701" endtime="20241128 19:39:41.880"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:41.880" endtime="20241128 19:39:41.880"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:41.880" endtime="20241128 19:39:41.880"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:25.700" endtime="20241128 19:39:41.880"/>
</if>
<status status="FAIL" starttime="20241128 19:39:25.672" endtime="20241128 19:39:41.881"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:25.671" endtime="20241128 19:39:41.883"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:41.883" endtime="20241128 19:39:41.896"/>
</kw>
<status status="PASS" starttime="20241128 19:39:41.883" endtime="20241128 19:39:41.897"/>
</branch>
<status status="PASS" starttime="20241128 19:39:25.671" endtime="20241128 19:39:41.897"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 19:39:42.277" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 19:39:41.898" endtime="20241128 19:39:42.277"/>
</kw>
<status status="PASS" starttime="20241128 19:39:41.898" endtime="20241128 19:39:42.277"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:42.278" endtime="20241128 19:39:42.278"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:42.277" endtime="20241128 19:39:42.278"/>
</branch>
<status status="PASS" starttime="20241128 19:39:41.898" endtime="20241128 19:39:42.278"/>
</try>
<status status="PASS" starttime="20241128 19:39:41.897" endtime="20241128 19:39:42.278"/>
</kw>
<status status="PASS" starttime="20241128 12:21:40.545" endtime="20241128 19:39:42.278"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:42.279" endtime="20241128 19:39:42.279"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 19:39:42.310" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '1', 'testCaseId': '1', 'testSuiteRunId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:09:22.527Z', 'createdAt': '2024-11-28T14:...</msg>
<status status="PASS" starttime="20241128 19:39:42.280" endtime="20241128 19:39:42.310"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 19:39:42.311" endtime="20241128 19:39:42.311"/>
</break>
<status status="NOT RUN" starttime="20241128 19:39:42.311" endtime="20241128 19:39:42.311"/>
</branch>
<status status="PASS" starttime="20241128 19:39:42.310" endtime="20241128 19:39:42.311"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 19:39:42.313" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\9c88ac10-5018-409b-a196-0b55913f9ef4"}</msg>
<msg timestamp="20241128 19:39:43.010" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\9c88ac10-5018-409b-a196-0b55913f9ef4"}</msg>
<status status="PASS" starttime="20241128 19:39:42.312" endtime="20241128 19:39:43.010"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 19:39:43.012" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 19:39:43.041" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 19:39:43.042" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 19:39:43.011" endtime="20241128 19:39:43.042"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 19:39:43.043" endtime="20241128 19:39:43.043"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 19:39:44.939" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 19:39:44.940" level="INFO">${page_id} = {'page_id': 'page=a07dc58e-763a-4214-8af3-6c9020450d41', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 19:39:43.045" endtime="20241128 19:39:44.940"/>
</kw>
<status status="PASS" starttime="20241128 19:39:42.311" endtime="20241128 19:39:44.940"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:44.942" endtime="20241128 19:39:44.948"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:44.954" endtime="20241128 19:39:44.956"/>
</kw>
<msg timestamp="20241128 19:39:44.956" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.954" endtime="20241128 19:39:44.956"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.958" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 19:39:44.957" endtime="20241128 19:39:44.958"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.960" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.959" endtime="20241128 19:39:44.960"/>
</kw>
<status status="PASS" starttime="20241128 19:39:44.959" endtime="20241128 19:39:44.960"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:44.961" endtime="20241128 19:39:44.961"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:44.960" endtime="20241128 19:39:44.961"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.958" endtime="20241128 19:39:44.961"/>
</if>
<status status="PASS" starttime="20241128 19:39:44.957" endtime="20241128 19:39:44.961"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.956" endtime="20241128 19:39:44.961"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:44.961" endtime="20241128 19:39:44.962"/>
</return>
<msg timestamp="20241128 19:39:44.962" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.952" endtime="20241128 19:39:44.962"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:44.963" endtime="20241128 19:39:44.963"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 19:39:44.963" endtime="20241128 19:39:44.963"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:44.963" endtime="20241128 19:39:44.963"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.962" endtime="20241128 19:39:44.963"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:44.969" endtime="20241128 19:39:44.970"/>
</kw>
<msg timestamp="20241128 19:39:44.970" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.967" endtime="20241128 19:39:44.970"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.972" level="INFO">${values} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 19:39:44.971" endtime="20241128 19:39:44.972"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.973" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.973" endtime="20241128 19:39:44.974"/>
</kw>
<status status="PASS" starttime="20241128 19:39:44.972" endtime="20241128 19:39:44.974"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:44.975" endtime="20241128 19:39:44.975"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:44.974" endtime="20241128 19:39:44.975"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.972" endtime="20241128 19:39:44.975"/>
</if>
<status status="PASS" starttime="20241128 19:39:44.970" endtime="20241128 19:39:44.975"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.970" endtime="20241128 19:39:44.975"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:44.975" endtime="20241128 19:39:44.975"/>
</return>
<msg timestamp="20241128 19:39:44.976" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.966" endtime="20241128 19:39:44.976"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:44.982" endtime="20241128 19:39:44.982"/>
</kw>
<msg timestamp="20241128 19:39:44.983" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.982" endtime="20241128 19:39:44.983"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.984" level="INFO">${values} = {'id': '1', 'testCaseId': '1', 'testSuiteRunId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:09:22.527Z', 'createdAt': '2024-11-28T14:09:22.527Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 19:39:44.983" endtime="20241128 19:39:44.984"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.986" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.986" endtime="20241128 19:39:44.986"/>
</kw>
<status status="PASS" starttime="20241128 19:39:44.985" endtime="20241128 19:39:44.986"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:44.987" endtime="20241128 19:39:44.987"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:44.987" endtime="20241128 19:39:44.987"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.984" endtime="20241128 19:39:44.987"/>
</if>
<status status="PASS" starttime="20241128 19:39:44.983" endtime="20241128 19:39:44.987"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.983" endtime="20241128 19:39:44.988"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:44.988" endtime="20241128 19:39:44.988"/>
</return>
<msg timestamp="20241128 19:39:44.988" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.981" endtime="20241128 19:39:44.988"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:44.989" endtime="20241128 19:39:44.989"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:44.989" endtime="20241128 19:39:44.989"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.988" endtime="20241128 19:39:44.989"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.990" level="INFO">${testCase} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 19:39:44.990" endtime="20241128 19:39:44.990"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.991" level="INFO">${testCaseRun} = {'id': '1', 'testCaseId': '1', 'testSuiteRunId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:09:22.527Z', 'createdAt': '2024-11-28T14:09:22.527Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 19:39:44.991" endtime="20241128 19:39:44.991"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.992" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 19:39:44.991" endtime="20241128 19:39:44.992"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:44.992" endtime="20241128 19:39:44.993"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:44.997" endtime="20241128 19:39:44.997"/>
</kw>
<msg timestamp="20241128 19:39:44.998" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.996" endtime="20241128 19:39:44.998"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:44.999" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241128 19:39:44.998" endtime="20241128 19:39:44.999"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:45.000" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:45.000" endtime="20241128 19:39:45.000"/>
</kw>
<status status="PASS" starttime="20241128 19:39:45.000" endtime="20241128 19:39:45.000"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:45.001" endtime="20241128 19:39:45.001"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:45.001" endtime="20241128 19:39:45.001"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.999" endtime="20241128 19:39:45.001"/>
</if>
<status status="PASS" starttime="20241128 19:39:44.998" endtime="20241128 19:39:45.002"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.998" endtime="20241128 19:39:45.002"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:45.002" endtime="20241128 19:39:45.002"/>
</return>
<msg timestamp="20241128 19:39:45.002" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:44.995" endtime="20241128 19:39:45.002"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:45.004" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '1', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 19:39:45.003" endtime="20241128 19:39:45.004"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:45.007" level="INFO">${json_response} = {"testCaseRunId": "1", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 19:39:45.006" endtime="20241128 19:39:45.007"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:45.015" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:45.016" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:45.008" endtime="20241128 19:39:45.016"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:45.016" endtime="20241128 19:39:45.018"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:45.019" endtime="20241128 19:39:45.019"/>
</return>
<status status="PASS" starttime="20241128 19:39:45.005" endtime="20241128 19:39:45.019"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:45.020" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 19:39:45.020" endtime="20241128 19:39:45.020"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:45.023" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 19:39:45.022" endtime="20241128 19:39:45.023"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:45.023" endtime="20241128 19:39:45.024"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:45.032" endtime="20241128 19:39:45.032"/>
</kw>
<msg timestamp="20241128 19:39:45.032" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:45.031" endtime="20241128 19:39:45.032"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:45.033" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 19:39:45.033" endtime="20241128 19:39:45.033"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:45.036" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:45.036" endtime="20241128 19:39:45.036"/>
</kw>
<status status="PASS" starttime="20241128 19:39:45.035" endtime="20241128 19:39:45.036"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:45.037" endtime="20241128 19:39:45.037"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:45.037" endtime="20241128 19:39:45.037"/>
</branch>
<status status="PASS" starttime="20241128 19:39:45.035" endtime="20241128 19:39:45.037"/>
</if>
<status status="PASS" starttime="20241128 19:39:45.033" endtime="20241128 19:39:45.037"/>
</branch>
<status status="PASS" starttime="20241128 19:39:45.032" endtime="20241128 19:39:45.037"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:45.038" endtime="20241128 19:39:45.038"/>
</return>
<msg timestamp="20241128 19:39:45.038" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:45.030" endtime="20241128 19:39:45.038"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:45.040" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 19:39:45.040" endtime="20241128 19:39:45.040"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:45.041" endtime="20241128 19:39:45.041"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 19:39:45.042" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 19:39:45.042" endtime="20241128 19:39:45.042"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:45.043" endtime="20241128 19:39:45.043"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:45.043" endtime="20241128 19:39:45.044"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:45.043" endtime="20241128 19:39:45.044"/>
</branch>
<status status="PASS" starttime="20241128 19:39:45.042" endtime="20241128 19:39:45.044"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:45.045" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 19:39:45.045" endtime="20241128 19:39:45.045"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 19:39:49.015" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 19:39:49.017" level="INFO">${page_id} = {'page_id': 'page=a4d8835c-cbfc-4495-8e42-3d30ac624dbc', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 19:39:45.049" endtime="20241128 19:39:49.017"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 19:39:49.019" level="INFO">Switching to page {'page_id': 'page=a4d8835c-cbfc-4495-8e42-3d30ac624dbc', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 19:39:49.107" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=f7497d82-5494-457b-b9d9-958ca61a42ab",
    "contexts": [
      {
        "type": "context",
        "id": "context=6d8cab5a-492a-4817-b9f2-af2a460c2921",
        "activePage": "page=a4d8835c-cbfc-4495-8e42-3d30ac624dbc",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=a07dc58e-763a-4214-8af3-6c9020450d41",
            "timestamp": 1732802983.382
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=a4d8835c-cbfc-4495-8e42-3d30ac624dbc",
            "timestamp": 1732802985.114
          }
        ]
      }
    ],
    "activeContext": "context=6d8cab5a-492a-4817-b9f2-af2a460c2921",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 19:39:49.144" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 19:39:49.018" endtime="20241128 19:39:49.144"/>
</kw>
<status status="PASS" starttime="20241128 19:39:45.046" endtime="20241128 19:39:49.145"/>
</kw>
<status status="PASS" starttime="20241128 19:39:45.046" endtime="20241128 19:39:49.145"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:49.146" endtime="20241128 19:39:49.146"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.145" endtime="20241128 19:39:49.146"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.152" endtime="20241128 19:39:49.152"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.146" endtime="20241128 19:39:49.152"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.155" endtime="20241128 19:39:49.156"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.159" endtime="20241128 19:39:49.160"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.152" endtime="20241128 19:39:49.160"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.163" endtime="20241128 19:39:49.164"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.160" endtime="20241128 19:39:49.164"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.172" endtime="20241128 19:39:49.172"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.164" endtime="20241128 19:39:49.173"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.178" endtime="20241128 19:39:49.178"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.180" endtime="20241128 19:39:49.180"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.179" endtime="20241128 19:39:49.180"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.179" endtime="20241128 19:39:49.181"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:49.173" endtime="20241128 19:39:49.182"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.185" endtime="20241128 19:39:49.186"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.182" endtime="20241128 19:39:49.186"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.190" endtime="20241128 19:39:49.190"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.191" endtime="20241128 19:39:49.191"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.191" endtime="20241128 19:39:49.191"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.192" endtime="20241128 19:39:49.192"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.191" endtime="20241128 19:39:49.192"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.190" endtime="20241128 19:39:49.192"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:49.186" endtime="20241128 19:39:49.192"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:49.203" endtime="20241128 19:39:49.203"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.210" endtime="20241128 19:39:49.210"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.192" endtime="20241128 19:39:49.210"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.212" endtime="20241128 19:39:49.213"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.213" endtime="20241128 19:39:49.213"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.213" endtime="20241128 19:39:49.214"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.214" endtime="20241128 19:39:49.215"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.214" endtime="20241128 19:39:49.215"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.213" endtime="20241128 19:39:49.215"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:49.211" endtime="20241128 19:39:49.215"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:49.240" endtime="20241128 19:39:49.241"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.255" endtime="20241128 19:39:49.255"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.216" endtime="20241128 19:39:49.256"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.261" endtime="20241128 19:39:49.261"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.263" endtime="20241128 19:39:49.263"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.262" endtime="20241128 19:39:49.263"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.265" endtime="20241128 19:39:49.266"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.264" endtime="20241128 19:39:49.267"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.262" endtime="20241128 19:39:49.267"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:49.256" endtime="20241128 19:39:49.268"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.283" endtime="20241128 19:39:49.284"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.269" endtime="20241128 19:39:49.284"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 19:39:49.309" endtime="20241128 19:39:49.310"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.311" endtime="20241128 19:39:49.311"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.284" endtime="20241128 19:39:49.311"/>
</branch>
<status status="PASS" starttime="20241128 19:39:45.045" endtime="20241128 19:39:49.311"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:49.312" endtime="20241128 19:39:49.313"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 19:39:49.314" endtime="20241128 19:39:49.315"/>
</return>
<msg timestamp="20241128 19:39:49.316" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 19:39:45.044" endtime="20241128 19:39:49.316"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:49.320" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 19:39:49.319" endtime="20241128 19:39:49.320"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.323" endtime="20241128 19:39:49.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.328" endtime="20241128 19:39:49.329"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.331" endtime="20241128 19:39:49.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.332" endtime="20241128 19:39:49.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.333" endtime="20241128 19:39:49.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.333" endtime="20241128 19:39:49.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.334" endtime="20241128 19:39:49.334"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.334" endtime="20241128 19:39:49.335"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.343" endtime="20241128 19:39:49.343"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.348" endtime="20241128 19:39:49.349"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:49.351" endtime="20241128 19:39:49.351"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:49.350" endtime="20241128 19:39:49.351"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.350" endtime="20241128 19:39:49.351"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.353" endtime="20241128 19:39:49.353"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:49.353" endtime="20241128 19:39:49.353"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:49.352" endtime="20241128 19:39:49.353"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.352" endtime="20241128 19:39:49.353"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.355" endtime="20241128 19:39:49.356"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:49.356" endtime="20241128 19:39:49.356"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:49.355" endtime="20241128 19:39:49.357"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.355" endtime="20241128 19:39:49.357"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:49.350" endtime="20241128 19:39:49.357"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.349" endtime="20241128 19:39:49.358"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:49.362" endtime="20241128 19:39:49.371"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:49.362" endtime="20241128 19:39:49.372"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.361" endtime="20241128 19:39:49.372"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.373" endtime="20241128 19:39:49.375"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.373" endtime="20241128 19:39:49.375"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.373" endtime="20241128 19:39:49.376"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.383" endtime="20241128 19:39:49.384"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:49.384" endtime="20241128 19:39:49.384"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:49.379" endtime="20241128 19:39:49.384"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.377" endtime="20241128 19:39:49.385"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:49.360" endtime="20241128 19:39:49.385"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.360" endtime="20241128 19:39:49.385"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:49.322" endtime="20241128 19:39:49.386"/>
</iter>
<status status="NOT RUN" starttime="20241128 19:39:49.321" endtime="20241128 19:39:49.386"/>
</for>
<msg timestamp="20241128 19:39:49.388" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 19:39:49.317" endtime="20241128 19:39:49.389"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:49.392" endtime="20241128 19:39:49.394"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 19:39:49.412" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 19:39:49.410" endtime="20241128 19:39:49.413"/>
</kw>
<msg timestamp="20241128 19:39:49.413" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 19:39:49.409" endtime="20241128 19:39:49.413"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.415" endtime="20241128 19:39:49.416"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.417" endtime="20241128 19:39:49.417"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.416" endtime="20241128 19:39:49.417"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.418" endtime="20241128 19:39:49.418"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.417" endtime="20241128 19:39:49.419"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:49.416" endtime="20241128 19:39:49.419"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:49.414" endtime="20241128 19:39:49.419"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.414" endtime="20241128 19:39:49.419"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:49.420" endtime="20241128 19:39:49.420"/>
</return>
<msg timestamp="20241128 19:39:49.422" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 19:39:49.408" endtime="20241128 19:39:49.422"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.423" endtime="20241128 19:39:49.423"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.422" endtime="20241128 19:39:49.423"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:49.426" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 19:39:49.424" endtime="20241128 19:39:49.426"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.423" endtime="20241128 19:39:49.426"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.422" endtime="20241128 19:39:49.426"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:49.429" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '1', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'errorM...</msg>
<status status="PASS" starttime="20241128 19:39:49.427" endtime="20241128 19:39:49.430"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:49.432" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "1", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "errorM...</msg>
<status status="PASS" starttime="20241128 19:39:49.431" endtime="20241128 19:39:49.432"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:49.450" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:49.451" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:49.433" endtime="20241128 19:39:49.451"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:49.451" endtime="20241128 19:39:49.452"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:49.453" endtime="20241128 19:39:49.453"/>
</return>
<status status="PASS" starttime="20241128 19:39:49.430" endtime="20241128 19:39:49.453"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.395" endtime="20241128 19:39:49.455"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 19:39:49.456" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 19:39:49.455" endtime="20241128 19:39:49.457"/>
</kw>
<status status="PASS" starttime="20241128 19:39:45.040" endtime="20241128 19:39:49.457"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.458" endtime="20241128 19:39:49.462"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 19:39:49.462" endtime="20241128 19:39:49.462"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.463" endtime="20241128 19:39:49.464"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.457" endtime="20241128 19:39:49.465"/>
</branch>
<status status="PASS" starttime="20241128 19:39:45.039" endtime="20241128 19:39:49.465"/>
</try>
<status status="PASS" starttime="20241128 19:39:45.039" endtime="20241128 19:39:49.465"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:49.469" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 19:39:49.468" endtime="20241128 19:39:49.469"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:49.470" endtime="20241128 19:39:49.471"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 19:39:49.473" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 19:39:49.471" endtime="20241128 19:39:49.473"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.475" endtime="20241128 19:39:49.475"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.476" endtime="20241128 19:39:49.476"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.473" endtime="20241128 19:39:49.477"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.473" endtime="20241128 19:39:49.477"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:49.537" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 19:39:49.479" endtime="20241128 19:39:49.538"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:49.539" endtime="20241128 19:39:49.540"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.539" endtime="20241128 19:39:49.540"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:49.541" endtime="20241128 19:39:49.542"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.541" endtime="20241128 19:39:49.542"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.552" endtime="20241128 19:39:49.553"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.543" endtime="20241128 19:39:49.553"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.698" endtime="20241128 19:39:49.698"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.707" endtime="20241128 19:39:49.708"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.554" endtime="20241128 19:39:49.708"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.712" endtime="20241128 19:39:49.712"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.708" endtime="20241128 19:39:49.713"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.738" endtime="20241128 19:39:49.739"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.714" endtime="20241128 19:39:49.739"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:49.806" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 19:39:49.767" endtime="20241128 19:39:49.807"/>
</kw>
<msg timestamp="20241128 19:39:49.807" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.766" endtime="20241128 19:39:49.807"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:49.807" endtime="20241128 19:39:49.807"/>
</return>
<status status="PASS" starttime="20241128 19:39:49.766" endtime="20241128 19:39:49.807"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.808" endtime="20241128 19:39:49.808"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.809" endtime="20241128 19:39:49.809"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.808" endtime="20241128 19:39:49.809"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.766" endtime="20241128 19:39:49.809"/>
</try>
<msg timestamp="20241128 19:39:49.810" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.764" endtime="20241128 19:39:49.810"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:49.810" endtime="20241128 19:39:49.810"/>
</return>
<status status="PASS" starttime="20241128 19:39:49.761" endtime="20241128 19:39:49.810"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:49.811" endtime="20241128 19:39:49.811"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:49.810" endtime="20241128 19:39:49.811"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.761" endtime="20241128 19:39:49.811"/>
</try>
<msg timestamp="20241128 19:39:49.811" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.760" endtime="20241128 19:39:49.811"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.816" endtime="20241128 19:39:49.816"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.817" endtime="20241128 19:39:49.817"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.816" endtime="20241128 19:39:49.817"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.816" endtime="20241128 19:39:49.817"/>
</if>
<status status="PASS" starttime="20241128 19:39:49.814" endtime="20241128 19:39:49.817"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.758" endtime="20241128 19:39:49.818"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:49.845" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 19:39:49.836" endtime="20241128 19:39:49.845"/>
</kw>
<msg timestamp="20241128 19:39:49.846" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.835" endtime="20241128 19:39:49.846"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:49.846" endtime="20241128 19:39:49.846"/>
</return>
<status status="PASS" starttime="20241128 19:39:49.835" endtime="20241128 19:39:49.846"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.847" endtime="20241128 19:39:49.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.848" endtime="20241128 19:39:49.848"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.847" endtime="20241128 19:39:49.848"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.835" endtime="20241128 19:39:49.849"/>
</try>
<msg timestamp="20241128 19:39:49.849" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.834" endtime="20241128 19:39:49.849"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:49.850" endtime="20241128 19:39:49.850"/>
</return>
<status status="PASS" starttime="20241128 19:39:49.832" endtime="20241128 19:39:49.850"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:49.850" endtime="20241128 19:39:49.850"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:49.850" endtime="20241128 19:39:49.851"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.831" endtime="20241128 19:39:49.851"/>
</try>
<msg timestamp="20241128 19:39:49.851" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.830" endtime="20241128 19:39:49.851"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.856" endtime="20241128 19:39:49.856"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.857" endtime="20241128 19:39:49.857"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.856" endtime="20241128 19:39:49.857"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.856" endtime="20241128 19:39:49.857"/>
</if>
<status status="PASS" starttime="20241128 19:39:49.853" endtime="20241128 19:39:49.857"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.829" endtime="20241128 19:39:49.858"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 19:39:49.901" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 19:39:49.901" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 19:39:49.858" endtime="20241128 19:39:49.902"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 19:39:49.902" endtime="20241128 19:39:49.902"/>
</return>
<status status="PASS" starttime="20241128 19:39:49.858" endtime="20241128 19:39:49.902"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.903" endtime="20241128 19:39:49.904"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.905" endtime="20241128 19:39:49.905"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.903" endtime="20241128 19:39:49.905"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.858" endtime="20241128 19:39:49.905"/>
</try>
<msg timestamp="20241128 19:39:49.906" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 19:39:49.826" endtime="20241128 19:39:49.906"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.912" endtime="20241128 19:39:49.912"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.912" endtime="20241128 19:39:49.913"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.911" endtime="20241128 19:39:49.913"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.911" endtime="20241128 19:39:49.913"/>
</if>
<status status="PASS" starttime="20241128 19:39:49.909" endtime="20241128 19:39:49.913"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.823" endtime="20241128 19:39:49.913"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.915" endtime="20241128 19:39:49.916"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.915" endtime="20241128 19:39:49.916"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.823" endtime="20241128 19:39:49.916"/>
</try>
<status status="PASS" starttime="20241128 19:39:49.822" endtime="20241128 19:39:49.918"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:49.944" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241128 19:39:49.929" endtime="20241128 19:39:49.944"/>
</kw>
<msg timestamp="20241128 19:39:49.945" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.928" endtime="20241128 19:39:49.945"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:49.946" endtime="20241128 19:39:49.947"/>
</return>
<status status="PASS" starttime="20241128 19:39:49.928" endtime="20241128 19:39:49.948"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.949" endtime="20241128 19:39:49.949"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.949" endtime="20241128 19:39:49.950"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.948" endtime="20241128 19:39:49.950"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.928" endtime="20241128 19:39:49.950"/>
</try>
<msg timestamp="20241128 19:39:49.950" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.927" endtime="20241128 19:39:49.951"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:49.951" endtime="20241128 19:39:49.951"/>
</return>
<msg timestamp="20241128 19:39:49.951" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.924" endtime="20241128 19:39:49.951"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.959" endtime="20241128 19:39:49.960"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:49.960" endtime="20241128 19:39:49.960"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:49.958" endtime="20241128 19:39:49.961"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.958" endtime="20241128 19:39:49.961"/>
</if>
<status status="PASS" starttime="20241128 19:39:49.955" endtime="20241128 19:39:49.961"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.924" endtime="20241128 19:39:49.961"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.750" endtime="20241128 19:39:49.961"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:50.023" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241128 19:39:49.974" endtime="20241128 19:39:50.024"/>
</kw>
<msg timestamp="20241128 19:39:50.025" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.973" endtime="20241128 19:39:50.025"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.025" endtime="20241128 19:39:50.026"/>
</return>
<status status="PASS" starttime="20241128 19:39:49.973" endtime="20241128 19:39:50.026"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.026" endtime="20241128 19:39:50.027"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.028" endtime="20241128 19:39:50.029"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.026" endtime="20241128 19:39:50.029"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.973" endtime="20241128 19:39:50.030"/>
</try>
<msg timestamp="20241128 19:39:50.032" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.971" endtime="20241128 19:39:50.032"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.033" endtime="20241128 19:39:50.033"/>
</return>
<msg timestamp="20241128 19:39:50.034" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 19:39:49.968" endtime="20241128 19:39:50.034"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.042" endtime="20241128 19:39:50.042"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.043" endtime="20241128 19:39:50.044"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.041" endtime="20241128 19:39:50.044"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.041" endtime="20241128 19:39:50.044"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.038" endtime="20241128 19:39:50.045"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.967" endtime="20241128 19:39:50.045"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:50.050" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 19:39:50.046" endtime="20241128 19:39:50.050"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.057" endtime="20241128 19:39:50.057"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.061" endtime="20241128 19:39:50.061"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.056" endtime="20241128 19:39:50.061"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:50.062" endtime="20241128 19:39:50.063"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.062" endtime="20241128 19:39:50.063"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.056" endtime="20241128 19:39:50.063"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 19:39:50.068" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 19:39:50.067" endtime="20241128 19:39:50.141"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.064" endtime="20241128 19:39:50.142"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.143" endtime="20241128 19:39:50.143"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.143" endtime="20241128 19:39:50.143"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.142" endtime="20241128 19:39:50.144"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.064" endtime="20241128 19:39:50.144"/>
</try>
<status status="PASS" starttime="20241128 19:39:50.055" endtime="20241128 19:39:50.144"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.052" endtime="20241128 19:39:50.144"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.051" endtime="20241128 19:39:50.144"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.146" endtime="20241128 19:39:50.146"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.145" endtime="20241128 19:39:50.146"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.051" endtime="20241128 19:39:50.148"/>
</try>
<status status="PASS" starttime="20241128 19:39:49.748" endtime="20241128 19:39:50.151"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.153" endtime="20241128 19:39:50.154"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.153" endtime="20241128 19:39:50.154"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.152" endtime="20241128 19:39:50.154"/>
</if>
<status status="PASS" starttime="20241128 19:39:49.741" endtime="20241128 19:39:50.154"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.156" endtime="20241128 19:39:50.156"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.154" endtime="20241128 19:39:50.156"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.158" endtime="20241128 19:39:50.158"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.159" endtime="20241128 19:39:50.159"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.159" endtime="20241128 19:39:50.159"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.159" endtime="20241128 19:39:50.160"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.159" endtime="20241128 19:39:50.160"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.159" endtime="20241128 19:39:50.160"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.156" endtime="20241128 19:39:50.160"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:50.172" endtime="20241128 19:39:50.172"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.175" endtime="20241128 19:39:50.175"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.160" endtime="20241128 19:39:50.175"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.176" endtime="20241128 19:39:50.178"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.178" endtime="20241128 19:39:50.178"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.178" endtime="20241128 19:39:50.179"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.179" endtime="20241128 19:39:50.179"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.179" endtime="20241128 19:39:50.179"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.178" endtime="20241128 19:39:50.179"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.176" endtime="20241128 19:39:50.179"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:50.188" endtime="20241128 19:39:50.188"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.192" endtime="20241128 19:39:50.192"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.180" endtime="20241128 19:39:50.192"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.194" endtime="20241128 19:39:50.194"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.194" endtime="20241128 19:39:50.195"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.194" endtime="20241128 19:39:50.195"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.195" endtime="20241128 19:39:50.196"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.195" endtime="20241128 19:39:50.196"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.194" endtime="20241128 19:39:50.196"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.192" endtime="20241128 19:39:50.196"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.199" endtime="20241128 19:39:50.200"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.196" endtime="20241128 19:39:50.200"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 19:39:50.209" endtime="20241128 19:39:50.209"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.209" endtime="20241128 19:39:50.209"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.200" endtime="20241128 19:39:50.209"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.538" endtime="20241128 19:39:50.209"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:50.210" endtime="20241128 19:39:50.210"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 19:39:50.210" endtime="20241128 19:39:50.211"/>
</return>
<msg timestamp="20241128 19:39:50.211" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 19:39:49.477" endtime="20241128 19:39:50.211"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.213" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 19:39:50.212" endtime="20241128 19:39:50.213"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.214" endtime="20241128 19:39:50.214"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.215" endtime="20241128 19:39:50.215"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.216" endtime="20241128 19:39:50.216"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.216" endtime="20241128 19:39:50.216"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.217" endtime="20241128 19:39:50.217"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.218" endtime="20241128 19:39:50.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.219" endtime="20241128 19:39:50.219"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.219" endtime="20241128 19:39:50.219"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.221" endtime="20241128 19:39:50.221"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.223" endtime="20241128 19:39:50.223"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:50.224" endtime="20241128 19:39:50.224"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.224" endtime="20241128 19:39:50.224"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.224" endtime="20241128 19:39:50.224"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.224" endtime="20241128 19:39:50.225"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:50.225" endtime="20241128 19:39:50.225"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.224" endtime="20241128 19:39:50.225"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.224" endtime="20241128 19:39:50.225"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.226" endtime="20241128 19:39:50.226"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:50.226" endtime="20241128 19:39:50.226"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.226" endtime="20241128 19:39:50.226"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.225" endtime="20241128 19:39:50.226"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.223" endtime="20241128 19:39:50.226"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.223" endtime="20241128 19:39:50.227"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:50.227" endtime="20241128 19:39:50.227"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.227" endtime="20241128 19:39:50.228"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.227" endtime="20241128 19:39:50.228"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.228" endtime="20241128 19:39:50.228"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.228" endtime="20241128 19:39:50.228"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.228" endtime="20241128 19:39:50.228"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.229" endtime="20241128 19:39:50.229"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:50.229" endtime="20241128 19:39:50.229"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.229" endtime="20241128 19:39:50.229"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.229" endtime="20241128 19:39:50.229"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.227" endtime="20241128 19:39:50.230"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.227" endtime="20241128 19:39:50.230"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.214" endtime="20241128 19:39:50.230"/>
</iter>
<status status="NOT RUN" starttime="20241128 19:39:50.213" endtime="20241128 19:39:50.231"/>
</for>
<msg timestamp="20241128 19:39:50.231" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 19:39:50.211" endtime="20241128 19:39:50.231"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:50.231" endtime="20241128 19:39:50.232"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:50.237" endtime="20241128 19:39:50.238"/>
</kw>
<msg timestamp="20241128 19:39:50.238" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.237" endtime="20241128 19:39:50.238"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.239" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 19:39:50.239" endtime="20241128 19:39:50.239"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.240" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.240" endtime="20241128 19:39:50.240"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.240" endtime="20241128 19:39:50.240"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.241" endtime="20241128 19:39:50.241"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.241" endtime="20241128 19:39:50.241"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.239" endtime="20241128 19:39:50.241"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.239" endtime="20241128 19:39:50.241"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.238" endtime="20241128 19:39:50.241"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:50.241" endtime="20241128 19:39:50.242"/>
</return>
<msg timestamp="20241128 19:39:50.242" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.236" endtime="20241128 19:39:50.242"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.243" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 19:39:50.243" endtime="20241128 19:39:50.243"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.242" endtime="20241128 19:39:50.243"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.244" endtime="20241128 19:39:50.244"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.243" endtime="20241128 19:39:50.244"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.242" endtime="20241128 19:39:50.244"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:50.245" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '2', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage':...</msg>
<status status="PASS" starttime="20241128 19:39:50.244" endtime="20241128 19:39:50.245"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:50.249" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "2", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage":...</msg>
<status status="PASS" starttime="20241128 19:39:50.248" endtime="20241128 19:39:50.249"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:50.255" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:50.255" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:50.249" endtime="20241128 19:39:50.256"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:50.256" endtime="20241128 19:39:50.257"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:50.257" endtime="20241128 19:39:50.257"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.246" endtime="20241128 19:39:50.258"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.232" endtime="20241128 19:39:50.258"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 19:39:50.259" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 19:39:50.259" endtime="20241128 19:39:50.259"/>
</kw>
<status status="PASS" starttime="20241128 19:39:49.466" endtime="20241128 19:39:50.259"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.260" endtime="20241128 19:39:50.260"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 19:39:50.260" endtime="20241128 19:39:50.260"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.261" endtime="20241128 19:39:50.261"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.260" endtime="20241128 19:39:50.261"/>
</branch>
<status status="PASS" starttime="20241128 19:39:49.466" endtime="20241128 19:39:50.261"/>
</try>
<status status="PASS" starttime="20241128 19:39:49.465" endtime="20241128 19:39:50.261"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.265" level="INFO">${action} = {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:58.626Z', 'updatedAt': '2024-11-28T06:56:58....</msg>
<status status="PASS" starttime="20241128 19:39:50.263" endtime="20241128 19:39:50.265"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:50.265" endtime="20241128 19:39:50.266"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 19:39:50.267" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:58.757Z', 'updatedAt': '2024-11-28T06:57:07.363Z'}</msg>
<status status="PASS" starttime="20241128 19:39:50.267" endtime="20241128 19:39:50.268"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.268" endtime="20241128 19:39:50.269"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.269" endtime="20241128 19:39:50.269"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.268" endtime="20241128 19:39:50.269"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.268" endtime="20241128 19:39:50.269"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.271" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 19:39:50.270" endtime="20241128 19:39:50.272"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:50.273" endtime="20241128 19:39:50.273"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.272" endtime="20241128 19:39:50.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:50.275" endtime="20241128 19:39:50.276"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.275" endtime="20241128 19:39:50.276"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.279" endtime="20241128 19:39:50.279"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.276" endtime="20241128 19:39:50.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.284" endtime="20241128 19:39:50.285"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.289" endtime="20241128 19:39:50.289"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.280" endtime="20241128 19:39:50.289"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.292" endtime="20241128 19:39:50.292"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.289" endtime="20241128 19:39:50.292"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.297" endtime="20241128 19:39:50.297"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.292" endtime="20241128 19:39:50.297"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:50.324" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 19:39:50.316" endtime="20241128 19:39:50.324"/>
</kw>
<msg timestamp="20241128 19:39:50.324" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.315" endtime="20241128 19:39:50.324"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.325" endtime="20241128 19:39:50.325"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.314" endtime="20241128 19:39:50.325"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.325" endtime="20241128 19:39:50.325"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.326" endtime="20241128 19:39:50.326"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.325" endtime="20241128 19:39:50.326"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.314" endtime="20241128 19:39:50.326"/>
</try>
<msg timestamp="20241128 19:39:50.326" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.313" endtime="20241128 19:39:50.326"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.327" endtime="20241128 19:39:50.327"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.311" endtime="20241128 19:39:50.327"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:50.327" endtime="20241128 19:39:50.327"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.327" endtime="20241128 19:39:50.327"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.311" endtime="20241128 19:39:50.327"/>
</try>
<msg timestamp="20241128 19:39:50.328" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.310" endtime="20241128 19:39:50.328"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.333" endtime="20241128 19:39:50.333"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.334" endtime="20241128 19:39:50.334"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.333" endtime="20241128 19:39:50.334"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.332" endtime="20241128 19:39:50.334"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.330" endtime="20241128 19:39:50.335"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.309" endtime="20241128 19:39:50.336"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:50.361" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 19:39:50.353" endtime="20241128 19:39:50.361"/>
</kw>
<msg timestamp="20241128 19:39:50.362" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.353" endtime="20241128 19:39:50.362"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.362" endtime="20241128 19:39:50.362"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.352" endtime="20241128 19:39:50.362"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.362" endtime="20241128 19:39:50.363"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.363" endtime="20241128 19:39:50.363"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.362" endtime="20241128 19:39:50.363"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.352" endtime="20241128 19:39:50.363"/>
</try>
<msg timestamp="20241128 19:39:50.364" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.352" endtime="20241128 19:39:50.364"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.364" endtime="20241128 19:39:50.364"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.350" endtime="20241128 19:39:50.364"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:39:50.364" endtime="20241128 19:39:50.364"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.364" endtime="20241128 19:39:50.364"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.350" endtime="20241128 19:39:50.364"/>
</try>
<msg timestamp="20241128 19:39:50.365" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.350" endtime="20241128 19:39:50.365"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.370" endtime="20241128 19:39:50.370"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.370" endtime="20241128 19:39:50.370"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.369" endtime="20241128 19:39:50.370"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.369" endtime="20241128 19:39:50.371"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.366" endtime="20241128 19:39:50.371"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.349" endtime="20241128 19:39:50.371"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 19:39:50.388" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 19:39:50.389" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 19:39:50.372" endtime="20241128 19:39:50.389"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 19:39:50.389" endtime="20241128 19:39:50.389"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.371" endtime="20241128 19:39:50.389"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.390" endtime="20241128 19:39:50.390"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.391" endtime="20241128 19:39:50.391"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.390" endtime="20241128 19:39:50.391"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.371" endtime="20241128 19:39:50.391"/>
</try>
<msg timestamp="20241128 19:39:50.392" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 19:39:50.344" endtime="20241128 19:39:50.392"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.396" endtime="20241128 19:39:50.396"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.397" endtime="20241128 19:39:50.397"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.396" endtime="20241128 19:39:50.397"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.395" endtime="20241128 19:39:50.397"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.393" endtime="20241128 19:39:50.397"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.342" endtime="20241128 19:39:50.397"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.398" endtime="20241128 19:39:50.398"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.398" endtime="20241128 19:39:50.398"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.342" endtime="20241128 19:39:50.398"/>
</try>
<status status="PASS" starttime="20241128 19:39:50.341" endtime="20241128 19:39:50.398"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:50.420" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241128 19:39:50.408" endtime="20241128 19:39:50.420"/>
</kw>
<msg timestamp="20241128 19:39:50.420" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.406" endtime="20241128 19:39:50.420"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.420" endtime="20241128 19:39:50.420"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.406" endtime="20241128 19:39:50.420"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.420" endtime="20241128 19:39:50.421"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.421" endtime="20241128 19:39:50.421"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.420" endtime="20241128 19:39:50.421"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.406" endtime="20241128 19:39:50.422"/>
</try>
<msg timestamp="20241128 19:39:50.422" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.405" endtime="20241128 19:39:50.422"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.423" endtime="20241128 19:39:50.423"/>
</return>
<msg timestamp="20241128 19:39:50.425" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.402" endtime="20241128 19:39:50.425"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.430" endtime="20241128 19:39:50.430"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.430" endtime="20241128 19:39:50.431"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.429" endtime="20241128 19:39:50.431"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.429" endtime="20241128 19:39:50.431"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.427" endtime="20241128 19:39:50.431"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.401" endtime="20241128 19:39:50.431"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.305" endtime="20241128 19:39:50.431"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:39:50.458" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241128 19:39:50.439" endtime="20241128 19:39:50.458"/>
</kw>
<msg timestamp="20241128 19:39:50.459" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.438" endtime="20241128 19:39:50.459"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.459" endtime="20241128 19:39:50.459"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.438" endtime="20241128 19:39:50.460"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.460" endtime="20241128 19:39:50.460"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.461" endtime="20241128 19:39:50.461"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.460" endtime="20241128 19:39:50.461"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.438" endtime="20241128 19:39:50.462"/>
</try>
<msg timestamp="20241128 19:39:50.462" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.437" endtime="20241128 19:39:50.462"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:39:50.462" endtime="20241128 19:39:50.463"/>
</return>
<msg timestamp="20241128 19:39:50.463" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.435" endtime="20241128 19:39:50.463"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.470" endtime="20241128 19:39:50.470"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.471" endtime="20241128 19:39:50.471"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.469" endtime="20241128 19:39:50.471"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.469" endtime="20241128 19:39:50.471"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.466" endtime="20241128 19:39:50.471"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.434" endtime="20241128 19:39:50.472"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:50.472" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 19:39:50.472" endtime="20241128 19:39:50.473"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.475" endtime="20241128 19:39:50.475"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.478" endtime="20241128 19:39:50.478"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.474" endtime="20241128 19:39:50.478"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:50.479" endtime="20241128 19:39:50.479"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.478" endtime="20241128 19:39:50.480"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.474" endtime="20241128 19:39:50.480"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 19:39:50.481" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 19:39:50.481" endtime="20241128 19:39:50.513"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.480" endtime="20241128 19:39:50.513"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.514" endtime="20241128 19:39:50.514"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.514" endtime="20241128 19:39:50.514"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.513" endtime="20241128 19:39:50.515"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.480" endtime="20241128 19:39:50.515"/>
</try>
<status status="PASS" starttime="20241128 19:39:50.474" endtime="20241128 19:39:50.515"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.473" endtime="20241128 19:39:50.516"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.473" endtime="20241128 19:39:50.516"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.517" endtime="20241128 19:39:50.517"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.516" endtime="20241128 19:39:50.517"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.473" endtime="20241128 19:39:50.517"/>
</try>
<status status="PASS" starttime="20241128 19:39:50.303" endtime="20241128 19:39:50.518"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.519" endtime="20241128 19:39:50.520"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.519" endtime="20241128 19:39:50.520"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.518" endtime="20241128 19:39:50.520"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.298" endtime="20241128 19:39:50.520"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.525" endtime="20241128 19:39:50.525"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.521" endtime="20241128 19:39:50.526"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.528" endtime="20241128 19:39:50.528"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.529" endtime="20241128 19:39:50.530"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.529" endtime="20241128 19:39:50.530"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.530" endtime="20241128 19:39:50.530"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.530" endtime="20241128 19:39:50.530"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.529" endtime="20241128 19:39:50.530"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.526" endtime="20241128 19:39:50.531"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:50.539" endtime="20241128 19:39:50.539"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.543" endtime="20241128 19:39:50.543"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.531" endtime="20241128 19:39:50.543"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.545" endtime="20241128 19:39:50.545"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.545" endtime="20241128 19:39:50.546"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.545" endtime="20241128 19:39:50.546"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.546" endtime="20241128 19:39:50.546"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.546" endtime="20241128 19:39:50.547"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.545" endtime="20241128 19:39:50.547"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.544" endtime="20241128 19:39:50.547"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:39:50.556" endtime="20241128 19:39:50.556"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.560" endtime="20241128 19:39:50.560"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.547" endtime="20241128 19:39:50.561"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.562" endtime="20241128 19:39:50.562"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.563" endtime="20241128 19:39:50.563"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.563" endtime="20241128 19:39:50.563"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.564" endtime="20241128 19:39:50.564"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.564" endtime="20241128 19:39:50.564"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.563" endtime="20241128 19:39:50.564"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.561" endtime="20241128 19:39:50.564"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.567" endtime="20241128 19:39:50.567"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.564" endtime="20241128 19:39:50.567"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 19:39:50.578" endtime="20241128 19:39:50.579"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.579" endtime="20241128 19:39:50.579"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.568" endtime="20241128 19:39:50.579"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.272" endtime="20241128 19:39:50.580"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:50.580" endtime="20241128 19:39:50.581"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 19:39:50.581" endtime="20241128 19:39:50.581"/>
</return>
<msg timestamp="20241128 19:39:50.581" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 19:39:50.270" endtime="20241128 19:39:50.581"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.583" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 19:39:50.582" endtime="20241128 19:39:50.583"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.584" endtime="20241128 19:39:50.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.584" endtime="20241128 19:39:50.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.584" endtime="20241128 19:39:50.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.585" endtime="20241128 19:39:50.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.586" endtime="20241128 19:39:50.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.586" endtime="20241128 19:39:50.586"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.587" endtime="20241128 19:39:50.587"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.587" endtime="20241128 19:39:50.587"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.589" endtime="20241128 19:39:50.589"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.591" endtime="20241128 19:39:50.591"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:50.592" endtime="20241128 19:39:50.592"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.591" endtime="20241128 19:39:50.592"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.591" endtime="20241128 19:39:50.592"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.592" endtime="20241128 19:39:50.592"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:50.593" endtime="20241128 19:39:50.593"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.592" endtime="20241128 19:39:50.593"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.592" endtime="20241128 19:39:50.593"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.593" endtime="20241128 19:39:50.594"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:50.594" endtime="20241128 19:39:50.594"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.593" endtime="20241128 19:39:50.594"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.593" endtime="20241128 19:39:50.594"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.591" endtime="20241128 19:39:50.594"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.591" endtime="20241128 19:39:50.594"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 19:39:50.594" endtime="20241128 19:39:50.594"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.594" endtime="20241128 19:39:50.594"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.594" endtime="20241128 19:39:50.594"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.595" endtime="20241128 19:39:50.595"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.595" endtime="20241128 19:39:50.596"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.595" endtime="20241128 19:39:50.596"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.597" endtime="20241128 19:39:50.597"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 19:39:50.597" endtime="20241128 19:39:50.597"/>
</return>
<status status="NOT RUN" starttime="20241128 19:39:50.596" endtime="20241128 19:39:50.598"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.596" endtime="20241128 19:39:50.598"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.594" endtime="20241128 19:39:50.598"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:39:50.594" endtime="20241128 19:39:50.598"/>
</if>
<status status="NOT RUN" starttime="20241128 19:39:50.584" endtime="20241128 19:39:50.598"/>
</iter>
<status status="NOT RUN" starttime="20241128 19:39:50.583" endtime="20241128 19:39:50.598"/>
</for>
<msg timestamp="20241128 19:39:50.598" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 19:39:50.581" endtime="20241128 19:39:50.599"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:50.599" endtime="20241128 19:39:50.600"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:39:50.610" endtime="20241128 19:39:50.611"/>
</kw>
<msg timestamp="20241128 19:39:50.611" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.609" endtime="20241128 19:39:50.611"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.612" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:57.275Z', 'updatedAt': '2024-11-28T06:56:57.275Z'}</msg>
<status status="PASS" starttime="20241128 19:39:50.612" endtime="20241128 19:39:50.612"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.614" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.613" endtime="20241128 19:39:50.614"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.613" endtime="20241128 19:39:50.614"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.615" endtime="20241128 19:39:50.615"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.614" endtime="20241128 19:39:50.616"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.612" endtime="20241128 19:39:50.616"/>
</if>
<status status="PASS" starttime="20241128 19:39:50.611" endtime="20241128 19:39:50.617"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.611" endtime="20241128 19:39:50.617"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:39:50.617" endtime="20241128 19:39:50.617"/>
</return>
<msg timestamp="20241128 19:39:50.618" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 19:39:50.608" endtime="20241128 19:39:50.618"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.621" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241128 19:39:50.619" endtime="20241128 19:39:50.621"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.619" endtime="20241128 19:39:50.621"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.622" endtime="20241128 19:39:50.622"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.622" endtime="20241128 19:39:50.623"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.618" endtime="20241128 19:39:50.623"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:39:50.626" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '3', 'status': 'COMPLETED', 'actionName': 'Set Password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', 'as...</msg>
<status status="PASS" starttime="20241128 19:39:50.623" endtime="20241128 19:39:50.626"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:39:50.629" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "3", "status": "COMPLETED", "actionName": "Set Password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "as...</msg>
<status status="PASS" starttime="20241128 19:39:50.628" endtime="20241128 19:39:50.629"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:39:50.639" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:39:50.639" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:39:50.630" endtime="20241128 19:39:50.639"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:50.639" endtime="20241128 19:39:50.640"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:39:50.640" endtime="20241128 19:39:50.640"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.627" endtime="20241128 19:39:50.641"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.600" endtime="20241128 19:39:50.641"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 19:39:50.642" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 19:39:50.641" endtime="20241128 19:39:50.642"/>
</kw>
<status status="PASS" starttime="20241128 19:39:50.262" endtime="20241128 19:39:50.642"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.643" endtime="20241128 19:39:50.643"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 19:39:50.643" endtime="20241128 19:39:50.643"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.643" endtime="20241128 19:39:50.645"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.643" endtime="20241128 19:39:50.645"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.262" endtime="20241128 19:39:50.645"/>
</try>
<status status="PASS" starttime="20241128 19:39:50.262" endtime="20241128 19:39:50.645"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.648" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:57:48.296Z', 'updatedAt': '2024-11-28T06:57:4...</msg>
<status status="PASS" starttime="20241128 19:39:50.647" endtime="20241128 19:39:50.648"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:39:50.648" endtime="20241128 19:39:50.652"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 19:39:50.654" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:57:48.432Z', 'updatedAt': '2024-11-28T06:57:48.432Z'}</msg>
<status status="PASS" starttime="20241128 19:39:50.653" endtime="20241128 19:39:50.654"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.656" endtime="20241128 19:39:50.656"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:39:50.656" endtime="20241128 19:39:50.657"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.655" endtime="20241128 19:39:50.657"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.654" endtime="20241128 19:39:50.657"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:39:50.659" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 19:39:50.658" endtime="20241128 19:39:50.659"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:50.660" endtime="20241128 19:39:50.660"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.660" endtime="20241128 19:39:50.661"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 19:39:50.661" endtime="20241128 19:39:50.662"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:39:50.661" endtime="20241128 19:39:50.662"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 19:40:03.261" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241128 19:40:03.261" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241128 19:40:03.262" level="FAIL">Error: locator.waitFor: DOMException: Failed to execute 'evaluate' on 'Document': The string './/button[@tupe="submit" and type()="Login"]' is not a valid XPath expression.
    at Object.queryAll (&lt;anonymous&gt;:23:25)
    at InjectedScript._queryEngineAll (&lt;anonymous&gt;:4594:49)
    at InjectedScript.querySelectorAll (&lt;anonymous&gt;:4581:30)
    at eval (eval at evaluate (:197:30), &lt;anonymous&gt;:5:37)
    at UtilityScript.evaluate (&lt;anonymous&gt;:199:17)
    at UtilityScript.&lt;anonymous&gt; (&lt;anonymous&gt;:1:44)
=========================== logs ===========================
waiting for locator('xpath=//button[@tupe="submit" and type()="Login"]')
============================================================</msg>
<status status="FAIL" starttime="20241128 19:39:50.678" endtime="20241128 19:40:03.263"/>
</kw>
<msg timestamp="20241128 19:40:03.263" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 19:39:50.678" endtime="20241128 19:40:03.263"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:40:03.263" endtime="20241128 19:40:03.263"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.678" endtime="20241128 19:40:03.263"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.265" endtime="20241128 19:40:03.265"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.265" endtime="20241128 19:40:03.265"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.265" endtime="20241128 19:40:03.265"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.677" endtime="20241128 19:40:03.266"/>
</try>
<msg timestamp="20241128 19:40:03.266" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 19:39:50.677" endtime="20241128 19:40:03.266"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 19:40:03.266" endtime="20241128 19:40:03.266"/>
</return>
<status status="PASS" starttime="20241128 19:39:50.675" endtime="20241128 19:40:03.266"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 19:40:03.266" endtime="20241128 19:40:03.266"/>
</return>
<status status="NOT RUN" starttime="20241128 19:40:03.266" endtime="20241128 19:40:03.266"/>
</branch>
<status status="PASS" starttime="20241128 19:39:50.675" endtime="20241128 19:40:03.266"/>
</try>
<msg timestamp="20241128 19:40:03.267" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241128 19:39:50.675" endtime="20241128 19:40:03.267"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.273" endtime="20241128 19:40:03.275"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.276" endtime="20241128 19:40:03.276"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 19:40:03.278" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 19:40:03.277" endtime="20241128 19:40:03.278"/>
</kw>
<status status="FAIL" starttime="20241128 19:40:03.275" endtime="20241128 19:40:03.280"/>
</kw>
<status status="FAIL" starttime="20241128 19:40:03.273" endtime="20241128 19:40:03.281"/>
</branch>
<status status="FAIL" starttime="20241128 19:40:03.272" endtime="20241128 19:40:03.281"/>
</if>
<status status="FAIL" starttime="20241128 19:40:03.270" endtime="20241128 19:40:03.282"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:50.673" endtime="20241128 19:40:03.284"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.287" endtime="20241128 19:40:03.288"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.290" endtime="20241128 19:40:03.290"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:50.670" endtime="20241128 19:40:03.291"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.292" endtime="20241128 19:40:03.292"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.293" endtime="20241128 19:40:03.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.292" endtime="20241128 19:40:03.293"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.293" endtime="20241128 19:40:03.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.293" endtime="20241128 19:40:03.293"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:40:03.292" endtime="20241128 19:40:03.293"/>
</try>
<status status="FAIL" starttime="20241128 19:39:50.668" endtime="20241128 19:40:03.294"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:50.662" endtime="20241128 19:40:03.294"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.296" endtime="20241128 19:40:03.296"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.298" endtime="20241128 19:40:03.298"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.294" endtime="20241128 19:40:03.298"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.300" endtime="20241128 19:40:03.300"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.299" endtime="20241128 19:40:03.300"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.303" endtime="20241128 19:40:03.303"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.300" endtime="20241128 19:40:03.303"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.306" endtime="20241128 19:40:03.306"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.307" endtime="20241128 19:40:03.307"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.306" endtime="20241128 19:40:03.307"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:40:03.306" endtime="20241128 19:40:03.307"/>
</if>
<status status="NOT RUN" starttime="20241128 19:40:03.304" endtime="20241128 19:40:03.307"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.308" endtime="20241128 19:40:03.309"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.307" endtime="20241128 19:40:03.309"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.310" endtime="20241128 19:40:03.310"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.310" endtime="20241128 19:40:03.311"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.310" endtime="20241128 19:40:03.311"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.311" endtime="20241128 19:40:03.311"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.311" endtime="20241128 19:40:03.311"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:40:03.310" endtime="20241128 19:40:03.311"/>
</if>
<status status="NOT RUN" starttime="20241128 19:40:03.309" endtime="20241128 19:40:03.311"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:40:03.319" endtime="20241128 19:40:03.319"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.323" endtime="20241128 19:40:03.324"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.311" endtime="20241128 19:40:03.324"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.325" endtime="20241128 19:40:03.325"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.325" endtime="20241128 19:40:03.325"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.325" endtime="20241128 19:40:03.325"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.326" endtime="20241128 19:40:03.326"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.325" endtime="20241128 19:40:03.326"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:40:03.325" endtime="20241128 19:40:03.326"/>
</if>
<status status="NOT RUN" starttime="20241128 19:40:03.324" endtime="20241128 19:40:03.326"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 19:40:03.332" endtime="20241128 19:40:03.332"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.335" endtime="20241128 19:40:03.335"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.326" endtime="20241128 19:40:03.336"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.337" endtime="20241128 19:40:03.337"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.337" endtime="20241128 19:40:03.337"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.337" endtime="20241128 19:40:03.337"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.338" endtime="20241128 19:40:03.338"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.337" endtime="20241128 19:40:03.338"/>
</branch>
<status status="NOT RUN" starttime="20241128 19:40:03.337" endtime="20241128 19:40:03.338"/>
</if>
<status status="NOT RUN" starttime="20241128 19:40:03.336" endtime="20241128 19:40:03.338"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.340" endtime="20241128 19:40:03.340"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.338" endtime="20241128 19:40:03.340"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 19:40:03.348" endtime="20241128 19:40:03.348"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.348" endtime="20241128 19:40:03.348"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.340" endtime="20241128 19:40:03.349"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:50.659" endtime="20241128 19:40:03.349"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.349" endtime="20241128 19:40:03.349"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241128 19:40:03.349" endtime="20241128 19:40:03.349"/>
</return>
<status status="FAIL" starttime="20241128 19:39:50.657" endtime="20241128 19:40:03.350"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241128 19:40:03.350" endtime="20241128 19:40:03.350"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.350" endtime="20241128 19:40:03.351"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241128 19:40:03.351" endtime="20241128 19:40:03.351"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.351" endtime="20241128 19:40:03.351"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:50.646" endtime="20241128 19:40:03.351"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.352" endtime="20241128 19:40:03.352"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 19:40:03.356" endtime="20241128 19:40:03.356"/>
</kw>
<msg timestamp="20241128 19:40:03.356" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:40:03.355" endtime="20241128 19:40:03.356"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:40:03.357" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@tupe="submit" and type()="Login"]', 'pageId': '1', 'createdAt': '2024-11-28T06:57:46.898Z', 'updatedAt': '2024-11-28T06:57:46.898Z'}</msg>
<status status="PASS" starttime="20241128 19:40:03.357" endtime="20241128 19:40:03.357"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:40:03.358" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 19:40:03.358" endtime="20241128 19:40:03.358"/>
</kw>
<status status="PASS" starttime="20241128 19:40:03.358" endtime="20241128 19:40:03.358"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.358" endtime="20241128 19:40:03.359"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.358" endtime="20241128 19:40:03.359"/>
</branch>
<status status="PASS" starttime="20241128 19:40:03.357" endtime="20241128 19:40:03.359"/>
</if>
<status status="PASS" starttime="20241128 19:40:03.357" endtime="20241128 19:40:03.359"/>
</branch>
<status status="PASS" starttime="20241128 19:40:03.356" endtime="20241128 19:40:03.359"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 19:40:03.359" endtime="20241128 19:40:03.359"/>
</return>
<msg timestamp="20241128 19:40:03.359" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 19:40:03.355" endtime="20241128 19:40:03.359"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 19:40:03.360" level="INFO">${xpath} = //button[@tupe="submit" and type()="Login"]</msg>
<status status="PASS" starttime="20241128 19:40:03.360" endtime="20241128 19:40:03.360"/>
</kw>
<status status="PASS" starttime="20241128 19:40:03.360" endtime="20241128 19:40:03.360"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.361" endtime="20241128 19:40:03.361"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.360" endtime="20241128 19:40:03.361"/>
</branch>
<status status="PASS" starttime="20241128 19:40:03.359" endtime="20241128 19:40:03.361"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:40:03.362" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '4', 'status': 'FAILED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@tupe="submit" and type()="Login"]', 'inputValue': '', 'err...</msg>
<status status="PASS" starttime="20241128 19:40:03.361" endtime="20241128 19:40:03.362"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:40:03.363" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "4", "status": "FAILED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@tupe=\"submit\" and type()=\"Login\"]", "inputValue": "", ...</msg>
<status status="PASS" starttime="20241128 19:40:03.363" endtime="20241128 19:40:03.363"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:40:03.373" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:40:03.374" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:40:03.363" endtime="20241128 19:40:03.374"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.374" endtime="20241128 19:40:03.375"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:40:03.375" endtime="20241128 19:40:03.375"/>
</return>
<status status="PASS" starttime="20241128 19:40:03.362" endtime="20241128 19:40:03.375"/>
</kw>
<status status="PASS" starttime="20241128 19:40:03.352" endtime="20241128 19:40:03.375"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.377" endtime="20241128 19:40:03.378"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 19:40:03.380" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 19:40:03.378" endtime="20241128 19:40:03.380"/>
</kw>
<status status="FAIL" starttime="20241128 19:40:03.377" endtime="20241128 19:40:03.381"/>
</kw>
<status status="FAIL" starttime="20241128 19:40:03.351" endtime="20241128 19:40:03.381"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:50.646" endtime="20241128 19:40:03.381"/>
</try>
<status status="FAIL" starttime="20241128 19:39:50.646" endtime="20241128 19:40:03.382"/>
</iter>
<status status="FAIL" starttime="20241128 19:39:45.039" endtime="20241128 19:40:03.382"/>
</for>
<status status="FAIL" starttime="20241128 19:39:45.039" endtime="20241128 19:40:03.383"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:45.038" endtime="20241128 19:40:03.383"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241128 19:40:03.383" endtime="20241128 19:40:03.384"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:45.022" endtime="20241128 19:40:03.384"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.384" endtime="20241128 19:40:03.386"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:40:03.387" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '1', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 19:40:03.387" endtime="20241128 19:40:03.387"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:40:03.390" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "1", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 19:40:03.389" endtime="20241128 19:40:03.390"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:40:03.401" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:40:03.402" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:40:03.390" endtime="20241128 19:40:03.402"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.402" endtime="20241128 19:40:03.403"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:40:03.404" endtime="20241128 19:40:03.404"/>
</return>
<status status="PASS" starttime="20241128 19:40:03.388" endtime="20241128 19:40:03.404"/>
</kw>
<status status="PASS" starttime="20241128 19:40:03.386" endtime="20241128 19:40:03.404"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.405" endtime="20241128 19:40:03.406"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 19:40:03.407" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 19:40:03.407" endtime="20241128 19:40:03.408"/>
</kw>
<status status="FAIL" starttime="20241128 19:40:03.404" endtime="20241128 19:40:03.408"/>
</kw>
<status status="FAIL" starttime="20241128 19:40:03.384" endtime="20241128 19:40:03.409"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:45.021" endtime="20241128 19:40:03.409"/>
</try>
<status status="FAIL" starttime="20241128 19:39:45.021" endtime="20241128 19:40:03.409"/>
</iter>
<status status="FAIL" starttime="20241128 19:39:45.021" endtime="20241128 19:40:03.410"/>
</for>
<status status="FAIL" starttime="20241128 19:39:45.020" endtime="20241128 19:40:03.410"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:45.019" endtime="20241128 19:40:03.410"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241128 19:40:03.411" endtime="20241128 19:40:03.411"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:44.993" endtime="20241128 19:40:03.411"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.411" endtime="20241128 19:40:03.412"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 19:40:03.413" level="INFO">${response_message} = {'testCaseRunId': '1', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 19:40:03.413" endtime="20241128 19:40:03.413"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 19:40:03.415" level="INFO">${json_response} = {"testCaseRunId": "1", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 19:40:03.414" endtime="20241128 19:40:03.415"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 19:40:03.427" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 19:40:03.427" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 19:40:03.415" endtime="20241128 19:40:03.427"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.427" endtime="20241128 19:40:03.428"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 19:40:03.428" endtime="20241128 19:40:03.429"/>
</return>
<status status="PASS" starttime="20241128 19:40:03.414" endtime="20241128 19:40:03.429"/>
</kw>
<status status="PASS" starttime="20241128 19:40:03.412" endtime="20241128 19:40:03.429"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.430" endtime="20241128 19:40:03.431"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 19:40:03.432" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 19:40:03.431" endtime="20241128 19:40:03.432"/>
</kw>
<status status="FAIL" starttime="20241128 19:40:03.430" endtime="20241128 19:40:03.434"/>
</kw>
<status status="FAIL" starttime="20241128 19:40:03.411" endtime="20241128 19:40:03.434"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:44.993" endtime="20241128 19:40:03.435"/>
</try>
<status status="FAIL" starttime="20241128 19:39:44.964" endtime="20241128 19:40:03.436"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.436" endtime="20241128 19:40:03.437"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.436" endtime="20241128 19:40:03.437"/>
</branch>
<status status="FAIL" starttime="20241128 19:39:44.963" endtime="20241128 19:40:03.437"/>
</if>
<status status="FAIL" starttime="20241128 19:39:44.941" endtime="20241128 19:40:03.439"/>
</kw>
<status status="FAIL" starttime="20241128 19:39:44.941" endtime="20241128 19:40:03.439"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.441" endtime="20241128 19:40:03.442"/>
</kw>
<status status="PASS" starttime="20241128 19:40:03.440" endtime="20241128 19:40:03.442"/>
</branch>
<status status="PASS" starttime="20241128 19:39:44.941" endtime="20241128 19:40:03.442"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 19:40:03.978" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 19:40:03.444" endtime="20241128 19:40:03.979"/>
</kw>
<status status="PASS" starttime="20241128 19:40:03.443" endtime="20241128 19:40:03.979"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 19:40:03.980" endtime="20241128 19:40:03.980"/>
</kw>
<status status="NOT RUN" starttime="20241128 19:40:03.979" endtime="20241128 19:40:03.980"/>
</branch>
<status status="PASS" starttime="20241128 19:40:03.443" endtime="20241128 19:40:03.981"/>
</try>
<status status="PASS" starttime="20241128 19:40:03.442" endtime="20241128 19:40:03.981"/>
</kw>
<status status="PASS" starttime="20241128 19:39:42.279" endtime="20241128 19:40:03.981"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 19:40:03.982" endtime="20241128 19:40:03.984"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 20:17:04.229" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '3', 'testCaseId': '1', 'testSuiteRunId': None, 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:47:03.827Z', 'createdAt': '2024-11-28T14...</msg>
<status status="PASS" starttime="20241128 19:40:03.984" endtime="20241128 20:17:04.229"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 20:17:04.230" endtime="20241128 20:17:04.231"/>
</break>
<status status="NOT RUN" starttime="20241128 20:17:04.230" endtime="20241128 20:17:04.231"/>
</branch>
<status status="PASS" starttime="20241128 20:17:04.230" endtime="20241128 20:17:04.231"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 20:17:04.233" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\602a25f5-5242-4b07-aec9-d305f8d49d2c"}</msg>
<msg timestamp="20241128 20:17:05.245" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\602a25f5-5242-4b07-aec9-d305f8d49d2c"}</msg>
<status status="PASS" starttime="20241128 20:17:04.232" endtime="20241128 20:17:05.245"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 20:17:05.247" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 20:17:05.325" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 20:17:05.326" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 20:17:05.246" endtime="20241128 20:17:05.326"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 20:17:05.326" endtime="20241128 20:17:05.327"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 20:17:06.838" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 20:17:06.838" level="INFO">${page_id} = {'page_id': 'page=20f7ca82-1125-4e2c-b315-a1d8cd5131fe', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 20:17:05.328" endtime="20241128 20:17:06.838"/>
</kw>
<status status="PASS" starttime="20241128 20:17:04.231" endtime="20241128 20:17:06.839"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:06.841" endtime="20241128 20:17:06.844"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:06.848" endtime="20241128 20:17:06.849"/>
</kw>
<msg timestamp="20241128 20:17:06.849" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.848" endtime="20241128 20:17:06.849"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.851" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 20:17:06.850" endtime="20241128 20:17:06.851"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.853" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.852" endtime="20241128 20:17:06.853"/>
</kw>
<status status="PASS" starttime="20241128 20:17:06.852" endtime="20241128 20:17:06.853"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.853" endtime="20241128 20:17:06.853"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:06.853" endtime="20241128 20:17:06.853"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.851" endtime="20241128 20:17:06.853"/>
</if>
<status status="PASS" starttime="20241128 20:17:06.850" endtime="20241128 20:17:06.854"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.849" endtime="20241128 20:17:06.854"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:06.854" endtime="20241128 20:17:06.854"/>
</return>
<msg timestamp="20241128 20:17:06.854" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.847" endtime="20241128 20:17:06.854"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.854" endtime="20241128 20:17:06.854"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 20:17:06.854" endtime="20241128 20:17:06.855"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:06.854" endtime="20241128 20:17:06.855"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.854" endtime="20241128 20:17:06.855"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:06.859" endtime="20241128 20:17:06.859"/>
</kw>
<msg timestamp="20241128 20:17:06.859" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.858" endtime="20241128 20:17:06.859"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.860" level="INFO">${values} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 20:17:06.860" endtime="20241128 20:17:06.860"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.861" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.861" endtime="20241128 20:17:06.861"/>
</kw>
<status status="PASS" starttime="20241128 20:17:06.861" endtime="20241128 20:17:06.861"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.862" endtime="20241128 20:17:06.862"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:06.862" endtime="20241128 20:17:06.862"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.861" endtime="20241128 20:17:06.862"/>
</if>
<status status="PASS" starttime="20241128 20:17:06.860" endtime="20241128 20:17:06.862"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.859" endtime="20241128 20:17:06.862"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:06.862" endtime="20241128 20:17:06.862"/>
</return>
<msg timestamp="20241128 20:17:06.862" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.857" endtime="20241128 20:17:06.862"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:06.866" endtime="20241128 20:17:06.867"/>
</kw>
<msg timestamp="20241128 20:17:06.867" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.866" endtime="20241128 20:17:06.867"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.868" level="INFO">${values} = {'id': '3', 'testCaseId': '1', 'testSuiteRunId': None, 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:47:03.827Z', 'createdAt': '2024-11-28T14:47:03.827Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 20:17:06.867" endtime="20241128 20:17:06.868"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.869" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.869" endtime="20241128 20:17:06.869"/>
</kw>
<status status="PASS" starttime="20241128 20:17:06.868" endtime="20241128 20:17:06.869"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.869" endtime="20241128 20:17:06.870"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:06.869" endtime="20241128 20:17:06.870"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.868" endtime="20241128 20:17:06.870"/>
</if>
<status status="PASS" starttime="20241128 20:17:06.867" endtime="20241128 20:17:06.870"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.867" endtime="20241128 20:17:06.870"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:06.870" endtime="20241128 20:17:06.871"/>
</return>
<msg timestamp="20241128 20:17:06.871" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.865" endtime="20241128 20:17:06.871"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.872" endtime="20241128 20:17:06.873"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:06.872" endtime="20241128 20:17:06.873"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.871" endtime="20241128 20:17:06.873"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.874" level="INFO">${testCase} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 20:17:06.873" endtime="20241128 20:17:06.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.875" level="INFO">${testCaseRun} = {'id': '3', 'testCaseId': '1', 'testSuiteRunId': None, 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:47:03.827Z', 'createdAt': '2024-11-28T14:47:03.827Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 20:17:06.874" endtime="20241128 20:17:06.875"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.875" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 20:17:06.875" endtime="20241128 20:17:06.876"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:06.876" endtime="20241128 20:17:06.876"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:06.880" endtime="20241128 20:17:06.880"/>
</kw>
<msg timestamp="20241128 20:17:06.880" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.879" endtime="20241128 20:17:06.880"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.881" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241128 20:17:06.881" endtime="20241128 20:17:06.881"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.882" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.882" endtime="20241128 20:17:06.882"/>
</kw>
<status status="PASS" starttime="20241128 20:17:06.881" endtime="20241128 20:17:06.882"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.882" endtime="20241128 20:17:06.882"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:06.882" endtime="20241128 20:17:06.882"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.881" endtime="20241128 20:17:06.882"/>
</if>
<status status="PASS" starttime="20241128 20:17:06.881" endtime="20241128 20:17:06.882"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.880" endtime="20241128 20:17:06.883"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:06.883" endtime="20241128 20:17:06.883"/>
</return>
<msg timestamp="20241128 20:17:06.884" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.879" endtime="20241128 20:17:06.884"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:06.885" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '3', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 20:17:06.884" endtime="20241128 20:17:06.885"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:06.886" level="INFO">${json_response} = {"testCaseRunId": "3", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 20:17:06.885" endtime="20241128 20:17:06.886"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:06.904" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:06.904" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:06.886" endtime="20241128 20:17:06.904"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:06.904" endtime="20241128 20:17:06.905"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:06.905" endtime="20241128 20:17:06.905"/>
</return>
<status status="PASS" starttime="20241128 20:17:06.885" endtime="20241128 20:17:06.905"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:06.906" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 20:17:06.906" endtime="20241128 20:17:06.906"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.908" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 20:17:06.907" endtime="20241128 20:17:06.908"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:06.908" endtime="20241128 20:17:06.908"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:06.912" endtime="20241128 20:17:06.912"/>
</kw>
<msg timestamp="20241128 20:17:06.912" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.911" endtime="20241128 20:17:06.912"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.914" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 20:17:06.912" endtime="20241128 20:17:06.914"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.914" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.914" endtime="20241128 20:17:06.914"/>
</kw>
<status status="PASS" starttime="20241128 20:17:06.914" endtime="20241128 20:17:06.914"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.915" endtime="20241128 20:17:06.915"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:06.914" endtime="20241128 20:17:06.915"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.914" endtime="20241128 20:17:06.915"/>
</if>
<status status="PASS" starttime="20241128 20:17:06.912" endtime="20241128 20:17:06.915"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.912" endtime="20241128 20:17:06.915"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:06.915" endtime="20241128 20:17:06.915"/>
</return>
<msg timestamp="20241128 20:17:06.915" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:06.911" endtime="20241128 20:17:06.915"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.917" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 20:17:06.916" endtime="20241128 20:17:06.917"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:06.917" endtime="20241128 20:17:06.918"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 20:17:06.918" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 20:17:06.918" endtime="20241128 20:17:06.918"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.919" endtime="20241128 20:17:06.919"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:06.919" endtime="20241128 20:17:06.919"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:06.919" endtime="20241128 20:17:06.919"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.918" endtime="20241128 20:17:06.919"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:06.920" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 20:17:06.920" endtime="20241128 20:17:06.920"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 20:17:09.856" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 20:17:09.856" level="INFO">${page_id} = {'page_id': 'page=c96f8504-4f39-4076-81d3-74e77b223812', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 20:17:06.921" endtime="20241128 20:17:09.856"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 20:17:09.858" level="INFO">Switching to page {'page_id': 'page=c96f8504-4f39-4076-81d3-74e77b223812', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 20:17:09.906" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=cd71e60e-4391-48d5-a3ea-26bd016f8bb5",
    "contexts": [
      {
        "type": "context",
        "id": "context=64eff912-6c1d-4f0b-a784-46c8991f4c68",
        "activePage": "page=c96f8504-4f39-4076-81d3-74e77b223812",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=20f7ca82-1125-4e2c-b315-a1d8cd5131fe",
            "timestamp": 1732805225.553
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=c96f8504-4f39-4076-81d3-74e77b223812",
            "timestamp": 1732805226.978
          }
        ]
      }
    ],
    "activeContext": "context=64eff912-6c1d-4f0b-a784-46c8991f4c68",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 20:17:09.929" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 20:17:09.857" endtime="20241128 20:17:09.930"/>
</kw>
<status status="PASS" starttime="20241128 20:17:06.921" endtime="20241128 20:17:09.930"/>
</kw>
<status status="PASS" starttime="20241128 20:17:06.920" endtime="20241128 20:17:09.930"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:09.931" endtime="20241128 20:17:09.931"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.931" endtime="20241128 20:17:09.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.935" endtime="20241128 20:17:09.936"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.932" endtime="20241128 20:17:09.936"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.938" endtime="20241128 20:17:09.939"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.941" endtime="20241128 20:17:09.942"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.936" endtime="20241128 20:17:09.942"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.944" endtime="20241128 20:17:09.944"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.942" endtime="20241128 20:17:09.944"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.948" endtime="20241128 20:17:09.948"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.944" endtime="20241128 20:17:09.948"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.951" endtime="20241128 20:17:09.951"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.952" endtime="20241128 20:17:09.952"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.952" endtime="20241128 20:17:09.952"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:09.951" endtime="20241128 20:17:09.953"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:09.948" endtime="20241128 20:17:09.953"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.955" endtime="20241128 20:17:09.956"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.953" endtime="20241128 20:17:09.956"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.959" endtime="20241128 20:17:09.959"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.960" endtime="20241128 20:17:09.960"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.959" endtime="20241128 20:17:09.960"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.961" endtime="20241128 20:17:09.961"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.960" endtime="20241128 20:17:09.961"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:09.959" endtime="20241128 20:17:09.961"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:09.956" endtime="20241128 20:17:09.961"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:09.969" endtime="20241128 20:17:09.969"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.976" endtime="20241128 20:17:09.976"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.961" endtime="20241128 20:17:09.976"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.979" endtime="20241128 20:17:09.979"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.980" endtime="20241128 20:17:09.980"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.980" endtime="20241128 20:17:09.980"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:09.981" endtime="20241128 20:17:09.981"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.981" endtime="20241128 20:17:09.981"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:09.980" endtime="20241128 20:17:09.981"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:09.977" endtime="20241128 20:17:09.982"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:09.994" endtime="20241128 20:17:09.994"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.001" endtime="20241128 20:17:10.001"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:09.982" endtime="20241128 20:17:10.001"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.003" endtime="20241128 20:17:10.004"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.007" endtime="20241128 20:17:10.007"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.006" endtime="20241128 20:17:10.008"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.008" endtime="20241128 20:17:10.008"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.008" endtime="20241128 20:17:10.009"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.005" endtime="20241128 20:17:10.009"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.001" endtime="20241128 20:17:10.009"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.013" endtime="20241128 20:17:10.013"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.009" endtime="20241128 20:17:10.013"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.027" endtime="20241128 20:17:10.027"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.028" endtime="20241128 20:17:10.028"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.013" endtime="20241128 20:17:10.028"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.920" endtime="20241128 20:17:10.028"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.029" endtime="20241128 20:17:10.030"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 20:17:10.030" endtime="20241128 20:17:10.030"/>
</return>
<msg timestamp="20241128 20:17:10.031" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 20:17:06.919" endtime="20241128 20:17:10.031"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.034" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 20:17:10.032" endtime="20241128 20:17:10.034"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.035" endtime="20241128 20:17:10.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.035" endtime="20241128 20:17:10.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.038" endtime="20241128 20:17:10.038"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.042" endtime="20241128 20:17:10.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.044" endtime="20241128 20:17:10.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.044" endtime="20241128 20:17:10.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.045" endtime="20241128 20:17:10.045"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.045" endtime="20241128 20:17:10.045"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.048" endtime="20241128 20:17:10.049"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.057" endtime="20241128 20:17:10.057"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:10.058" endtime="20241128 20:17:10.058"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.058" endtime="20241128 20:17:10.058"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.058" endtime="20241128 20:17:10.059"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.059" endtime="20241128 20:17:10.060"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.060" endtime="20241128 20:17:10.060"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.059" endtime="20241128 20:17:10.060"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.059" endtime="20241128 20:17:10.060"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.061" endtime="20241128 20:17:10.061"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.061" endtime="20241128 20:17:10.061"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.061" endtime="20241128 20:17:10.062"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.061" endtime="20241128 20:17:10.062"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.057" endtime="20241128 20:17:10.062"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.057" endtime="20241128 20:17:10.062"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:10.062" endtime="20241128 20:17:10.062"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.062" endtime="20241128 20:17:10.063"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.062" endtime="20241128 20:17:10.063"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.063" endtime="20241128 20:17:10.063"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.063" endtime="20241128 20:17:10.063"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.063" endtime="20241128 20:17:10.063"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.064" endtime="20241128 20:17:10.064"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.064" endtime="20241128 20:17:10.064"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.064" endtime="20241128 20:17:10.064"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.064" endtime="20241128 20:17:10.065"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.062" endtime="20241128 20:17:10.065"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.062" endtime="20241128 20:17:10.065"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.034" endtime="20241128 20:17:10.065"/>
</iter>
<status status="NOT RUN" starttime="20241128 20:17:10.034" endtime="20241128 20:17:10.065"/>
</for>
<msg timestamp="20241128 20:17:10.066" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 20:17:10.031" endtime="20241128 20:17:10.066"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.066" endtime="20241128 20:17:10.067"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 20:17:10.080" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 20:17:10.077" endtime="20241128 20:17:10.080"/>
</kw>
<msg timestamp="20241128 20:17:10.081" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 20:17:10.076" endtime="20241128 20:17:10.081"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.082" endtime="20241128 20:17:10.082"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.084" endtime="20241128 20:17:10.088"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.084" endtime="20241128 20:17:10.089"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.090" endtime="20241128 20:17:10.091"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.089" endtime="20241128 20:17:10.092"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.083" endtime="20241128 20:17:10.092"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.081" endtime="20241128 20:17:10.092"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.081" endtime="20241128 20:17:10.092"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:10.092" endtime="20241128 20:17:10.093"/>
</return>
<msg timestamp="20241128 20:17:10.094" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 20:17:10.075" endtime="20241128 20:17:10.094"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.094" endtime="20241128 20:17:10.094"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.094" endtime="20241128 20:17:10.094"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.096" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 20:17:10.095" endtime="20241128 20:17:10.096"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.095" endtime="20241128 20:17:10.096"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.094" endtime="20241128 20:17:10.096"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:10.098" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '13', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241128 20:17:10.096" endtime="20241128 20:17:10.098"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:10.100" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "13", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241128 20:17:10.099" endtime="20241128 20:17:10.100"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:10.107" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:10.107" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:10.100" endtime="20241128 20:17:10.107"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.108" endtime="20241128 20:17:10.109"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:10.109" endtime="20241128 20:17:10.109"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.098" endtime="20241128 20:17:10.110"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.067" endtime="20241128 20:17:10.110"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 20:17:10.111" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 20:17:10.111" endtime="20241128 20:17:10.111"/>
</kw>
<status status="PASS" starttime="20241128 20:17:06.916" endtime="20241128 20:17:10.111"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.112" endtime="20241128 20:17:10.112"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.112" endtime="20241128 20:17:10.112"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.112" endtime="20241128 20:17:10.112"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.112" endtime="20241128 20:17:10.114"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.916" endtime="20241128 20:17:10.114"/>
</try>
<status status="PASS" starttime="20241128 20:17:06.916" endtime="20241128 20:17:10.114"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.117" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 20:17:10.116" endtime="20241128 20:17:10.117"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.117" endtime="20241128 20:17:10.118"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 20:17:10.120" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 20:17:10.119" endtime="20241128 20:17:10.120"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.126" endtime="20241128 20:17:10.130"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.132" endtime="20241128 20:17:10.132"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.124" endtime="20241128 20:17:10.134"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.123" endtime="20241128 20:17:10.135"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.147" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 20:17:10.146" endtime="20241128 20:17:10.148"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.151" endtime="20241128 20:17:10.152"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.150" endtime="20241128 20:17:10.159"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.160" endtime="20241128 20:17:10.160"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.160" endtime="20241128 20:17:10.161"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.178" endtime="20241128 20:17:10.178"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.161" endtime="20241128 20:17:10.179"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.194" endtime="20241128 20:17:10.194"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.200" endtime="20241128 20:17:10.201"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.181" endtime="20241128 20:17:10.202"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.212" endtime="20241128 20:17:10.213"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.204" endtime="20241128 20:17:10.213"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.225" endtime="20241128 20:17:10.225"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.213" endtime="20241128 20:17:10.225"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:10.299" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 20:17:10.257" endtime="20241128 20:17:10.299"/>
</kw>
<msg timestamp="20241128 20:17:10.299" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.256" endtime="20241128 20:17:10.299"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.300" endtime="20241128 20:17:10.300"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.255" endtime="20241128 20:17:10.300"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.300" endtime="20241128 20:17:10.301"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.301" endtime="20241128 20:17:10.301"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.300" endtime="20241128 20:17:10.301"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.255" endtime="20241128 20:17:10.302"/>
</try>
<msg timestamp="20241128 20:17:10.302" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.253" endtime="20241128 20:17:10.302"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.302" endtime="20241128 20:17:10.302"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.249" endtime="20241128 20:17:10.302"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.304" endtime="20241128 20:17:10.304"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.304" endtime="20241128 20:17:10.304"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.249" endtime="20241128 20:17:10.304"/>
</try>
<msg timestamp="20241128 20:17:10.305" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.248" endtime="20241128 20:17:10.305"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.310" endtime="20241128 20:17:10.310"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.310" endtime="20241128 20:17:10.311"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.309" endtime="20241128 20:17:10.311"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.309" endtime="20241128 20:17:10.311"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.307" endtime="20241128 20:17:10.312"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.247" endtime="20241128 20:17:10.312"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:10.341" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 20:17:10.329" endtime="20241128 20:17:10.342"/>
</kw>
<msg timestamp="20241128 20:17:10.342" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.328" endtime="20241128 20:17:10.342"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.342" endtime="20241128 20:17:10.343"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.327" endtime="20241128 20:17:10.343"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.343" endtime="20241128 20:17:10.344"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.345" endtime="20241128 20:17:10.345"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.343" endtime="20241128 20:17:10.345"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.327" endtime="20241128 20:17:10.345"/>
</try>
<msg timestamp="20241128 20:17:10.345" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.327" endtime="20241128 20:17:10.346"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.346" endtime="20241128 20:17:10.346"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.325" endtime="20241128 20:17:10.346"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.346" endtime="20241128 20:17:10.346"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.346" endtime="20241128 20:17:10.346"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.325" endtime="20241128 20:17:10.347"/>
</try>
<msg timestamp="20241128 20:17:10.347" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.324" endtime="20241128 20:17:10.347"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.352" endtime="20241128 20:17:10.352"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.352" endtime="20241128 20:17:10.353"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.351" endtime="20241128 20:17:10.353"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.351" endtime="20241128 20:17:10.353"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.349" endtime="20241128 20:17:10.353"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.324" endtime="20241128 20:17:10.353"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 20:17:10.386" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 20:17:10.387" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 20:17:10.354" endtime="20241128 20:17:10.387"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 20:17:10.387" endtime="20241128 20:17:10.387"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.354" endtime="20241128 20:17:10.388"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.389" endtime="20241128 20:17:10.389"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.389" endtime="20241128 20:17:10.389"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.388" endtime="20241128 20:17:10.389"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.354" endtime="20241128 20:17:10.390"/>
</try>
<msg timestamp="20241128 20:17:10.390" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 20:17:10.320" endtime="20241128 20:17:10.390"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.397" endtime="20241128 20:17:10.398"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.398" endtime="20241128 20:17:10.398"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.397" endtime="20241128 20:17:10.399"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.397" endtime="20241128 20:17:10.399"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.394" endtime="20241128 20:17:10.399"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.318" endtime="20241128 20:17:10.400"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.400" endtime="20241128 20:17:10.401"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.400" endtime="20241128 20:17:10.401"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.318" endtime="20241128 20:17:10.401"/>
</try>
<status status="PASS" starttime="20241128 20:17:10.317" endtime="20241128 20:17:10.401"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:10.417" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241128 20:17:10.409" endtime="20241128 20:17:10.417"/>
</kw>
<msg timestamp="20241128 20:17:10.418" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.409" endtime="20241128 20:17:10.418"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.418" endtime="20241128 20:17:10.418"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.408" endtime="20241128 20:17:10.418"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.419" endtime="20241128 20:17:10.419"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.420" endtime="20241128 20:17:10.420"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.419" endtime="20241128 20:17:10.420"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.408" endtime="20241128 20:17:10.420"/>
</try>
<msg timestamp="20241128 20:17:10.421" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.408" endtime="20241128 20:17:10.421"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.421" endtime="20241128 20:17:10.422"/>
</return>
<msg timestamp="20241128 20:17:10.422" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.406" endtime="20241128 20:17:10.422"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.427" endtime="20241128 20:17:10.427"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.428" endtime="20241128 20:17:10.428"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.426" endtime="20241128 20:17:10.428"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.426" endtime="20241128 20:17:10.428"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.424" endtime="20241128 20:17:10.429"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.405" endtime="20241128 20:17:10.430"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.237" endtime="20241128 20:17:10.430"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:10.462" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241128 20:17:10.440" endtime="20241128 20:17:10.464"/>
</kw>
<msg timestamp="20241128 20:17:10.464" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.439" endtime="20241128 20:17:10.464"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.464" endtime="20241128 20:17:10.464"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.439" endtime="20241128 20:17:10.464"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.465" endtime="20241128 20:17:10.465"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.465" endtime="20241128 20:17:10.465"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.464" endtime="20241128 20:17:10.465"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.439" endtime="20241128 20:17:10.466"/>
</try>
<msg timestamp="20241128 20:17:10.466" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.438" endtime="20241128 20:17:10.466"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.466" endtime="20241128 20:17:10.466"/>
</return>
<msg timestamp="20241128 20:17:10.467" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.436" endtime="20241128 20:17:10.467"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.473" endtime="20241128 20:17:10.473"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.473" endtime="20241128 20:17:10.474"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.472" endtime="20241128 20:17:10.474"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.471" endtime="20241128 20:17:10.474"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.469" endtime="20241128 20:17:10.474"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.434" endtime="20241128 20:17:10.474"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:10.475" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 20:17:10.474" endtime="20241128 20:17:10.475"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.478" endtime="20241128 20:17:10.478"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.481" endtime="20241128 20:17:10.482"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.477" endtime="20241128 20:17:10.482"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:10.482" endtime="20241128 20:17:10.484"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.482" endtime="20241128 20:17:10.484"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.477" endtime="20241128 20:17:10.484"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 20:17:10.485" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 20:17:10.485" endtime="20241128 20:17:10.539"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.484" endtime="20241128 20:17:10.539"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.540" endtime="20241128 20:17:10.541"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.541" endtime="20241128 20:17:10.541"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.540" endtime="20241128 20:17:10.541"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.484" endtime="20241128 20:17:10.542"/>
</try>
<status status="PASS" starttime="20241128 20:17:10.476" endtime="20241128 20:17:10.542"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.476" endtime="20241128 20:17:10.542"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.475" endtime="20241128 20:17:10.542"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.544" endtime="20241128 20:17:10.544"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.542" endtime="20241128 20:17:10.544"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.475" endtime="20241128 20:17:10.544"/>
</try>
<status status="PASS" starttime="20241128 20:17:10.231" endtime="20241128 20:17:10.545"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.546" endtime="20241128 20:17:10.547"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.546" endtime="20241128 20:17:10.547"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.545" endtime="20241128 20:17:10.547"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.225" endtime="20241128 20:17:10.547"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.549" endtime="20241128 20:17:10.549"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.547" endtime="20241128 20:17:10.549"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.551" endtime="20241128 20:17:10.551"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.552" endtime="20241128 20:17:10.552"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.552" endtime="20241128 20:17:10.552"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.553" endtime="20241128 20:17:10.553"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.552" endtime="20241128 20:17:10.553"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.551" endtime="20241128 20:17:10.553"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.549" endtime="20241128 20:17:10.553"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:10.561" endtime="20241128 20:17:10.562"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.566" endtime="20241128 20:17:10.567"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.553" endtime="20241128 20:17:10.567"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.569" endtime="20241128 20:17:10.569"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.570" endtime="20241128 20:17:10.570"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.569" endtime="20241128 20:17:10.570"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.570" endtime="20241128 20:17:10.571"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.570" endtime="20241128 20:17:10.571"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.569" endtime="20241128 20:17:10.571"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.567" endtime="20241128 20:17:10.571"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:10.579" endtime="20241128 20:17:10.579"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.585" endtime="20241128 20:17:10.585"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.571" endtime="20241128 20:17:10.585"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.587" endtime="20241128 20:17:10.588"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.588" endtime="20241128 20:17:10.588"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.588" endtime="20241128 20:17:10.589"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.589" endtime="20241128 20:17:10.589"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.589" endtime="20241128 20:17:10.589"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.588" endtime="20241128 20:17:10.589"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.585" endtime="20241128 20:17:10.590"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.592" endtime="20241128 20:17:10.592"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.590" endtime="20241128 20:17:10.592"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.602" endtime="20241128 20:17:10.603"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.603" endtime="20241128 20:17:10.604"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.592" endtime="20241128 20:17:10.604"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.148" endtime="20241128 20:17:10.604"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.604" endtime="20241128 20:17:10.605"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 20:17:10.605" endtime="20241128 20:17:10.605"/>
</return>
<msg timestamp="20241128 20:17:10.605" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 20:17:10.135" endtime="20241128 20:17:10.605"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.607" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 20:17:10.607" endtime="20241128 20:17:10.607"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.608" endtime="20241128 20:17:10.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.608" endtime="20241128 20:17:10.609"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.609" endtime="20241128 20:17:10.609"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.609" endtime="20241128 20:17:10.609"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.610" endtime="20241128 20:17:10.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.610" endtime="20241128 20:17:10.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.610" endtime="20241128 20:17:10.610"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.611" endtime="20241128 20:17:10.611"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.612" endtime="20241128 20:17:10.612"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.615" endtime="20241128 20:17:10.615"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:10.616" endtime="20241128 20:17:10.616"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.616" endtime="20241128 20:17:10.616"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.616" endtime="20241128 20:17:10.616"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.617" endtime="20241128 20:17:10.617"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.617" endtime="20241128 20:17:10.617"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.617" endtime="20241128 20:17:10.617"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.616" endtime="20241128 20:17:10.617"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.618" endtime="20241128 20:17:10.618"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.618" endtime="20241128 20:17:10.618"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.618" endtime="20241128 20:17:10.618"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.617" endtime="20241128 20:17:10.618"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.615" endtime="20241128 20:17:10.618"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.615" endtime="20241128 20:17:10.619"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:10.620" endtime="20241128 20:17:10.620"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.620" endtime="20241128 20:17:10.620"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.619" endtime="20241128 20:17:10.620"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.621" endtime="20241128 20:17:10.621"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.620" endtime="20241128 20:17:10.621"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.620" endtime="20241128 20:17:10.621"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.622" endtime="20241128 20:17:10.622"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.622" endtime="20241128 20:17:10.622"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.621" endtime="20241128 20:17:10.622"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.621" endtime="20241128 20:17:10.622"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.619" endtime="20241128 20:17:10.622"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.619" endtime="20241128 20:17:10.622"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.608" endtime="20241128 20:17:10.622"/>
</iter>
<status status="NOT RUN" starttime="20241128 20:17:10.608" endtime="20241128 20:17:10.623"/>
</for>
<msg timestamp="20241128 20:17:10.623" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 20:17:10.606" endtime="20241128 20:17:10.623"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.623" endtime="20241128 20:17:10.624"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:10.631" endtime="20241128 20:17:10.632"/>
</kw>
<msg timestamp="20241128 20:17:10.632" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.630" endtime="20241128 20:17:10.632"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.634" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 20:17:10.634" endtime="20241128 20:17:10.634"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.635" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.635" endtime="20241128 20:17:10.635"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.634" endtime="20241128 20:17:10.635"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.636" endtime="20241128 20:17:10.636"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.636" endtime="20241128 20:17:10.636"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.634" endtime="20241128 20:17:10.636"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.632" endtime="20241128 20:17:10.636"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.632" endtime="20241128 20:17:10.637"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:10.637" endtime="20241128 20:17:10.637"/>
</return>
<msg timestamp="20241128 20:17:10.637" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.629" endtime="20241128 20:17:10.637"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.639" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 20:17:10.638" endtime="20241128 20:17:10.639"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.638" endtime="20241128 20:17:10.639"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.639" endtime="20241128 20:17:10.639"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.639" endtime="20241128 20:17:10.639"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.638" endtime="20241128 20:17:10.640"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:10.641" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '14', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage'...</msg>
<status status="PASS" starttime="20241128 20:17:10.640" endtime="20241128 20:17:10.641"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:10.644" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "14", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage"...</msg>
<status status="PASS" starttime="20241128 20:17:10.642" endtime="20241128 20:17:10.644"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:10.664" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:10.664" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:10.644" endtime="20241128 20:17:10.665"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.665" endtime="20241128 20:17:10.666"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:10.666" endtime="20241128 20:17:10.666"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.642" endtime="20241128 20:17:10.667"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.624" endtime="20241128 20:17:10.667"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 20:17:10.668" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 20:17:10.668" endtime="20241128 20:17:10.669"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.115" endtime="20241128 20:17:10.669"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.670" endtime="20241128 20:17:10.670"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.670" endtime="20241128 20:17:10.671"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.671" endtime="20241128 20:17:10.672"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.669" endtime="20241128 20:17:10.672"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.115" endtime="20241128 20:17:10.673"/>
</try>
<status status="PASS" starttime="20241128 20:17:10.115" endtime="20241128 20:17:10.673"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.674" level="INFO">${action} = {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:58.626Z', 'updatedAt': '2024-11-28T06:56:58....</msg>
<status status="PASS" starttime="20241128 20:17:10.674" endtime="20241128 20:17:10.674"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.676" endtime="20241128 20:17:10.677"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 20:17:10.677" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:58.757Z', 'updatedAt': '2024-11-28T06:57:07.363Z'}</msg>
<status status="PASS" starttime="20241128 20:17:10.677" endtime="20241128 20:17:10.678"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.678" endtime="20241128 20:17:10.679"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.679" endtime="20241128 20:17:10.679"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.678" endtime="20241128 20:17:10.679"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.678" endtime="20241128 20:17:10.679"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.682" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 20:17:10.680" endtime="20241128 20:17:10.682"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.682" endtime="20241128 20:17:10.682"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.682" endtime="20241128 20:17:10.682"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.684" endtime="20241128 20:17:10.684"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.684" endtime="20241128 20:17:10.684"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.689" endtime="20241128 20:17:10.689"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.684" endtime="20241128 20:17:10.689"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.693" endtime="20241128 20:17:10.693"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.696" endtime="20241128 20:17:10.696"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.690" endtime="20241128 20:17:10.696"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.699" endtime="20241128 20:17:10.699"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.697" endtime="20241128 20:17:10.699"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.705" endtime="20241128 20:17:10.705"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.699" endtime="20241128 20:17:10.705"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:10.726" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 20:17:10.718" endtime="20241128 20:17:10.727"/>
</kw>
<msg timestamp="20241128 20:17:10.727" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.717" endtime="20241128 20:17:10.727"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.727" endtime="20241128 20:17:10.727"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.717" endtime="20241128 20:17:10.727"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.728" endtime="20241128 20:17:10.728"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.728" endtime="20241128 20:17:10.729"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.728" endtime="20241128 20:17:10.729"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.717" endtime="20241128 20:17:10.729"/>
</try>
<msg timestamp="20241128 20:17:10.729" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.716" endtime="20241128 20:17:10.729"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.729" endtime="20241128 20:17:10.730"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.715" endtime="20241128 20:17:10.730"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.730" endtime="20241128 20:17:10.730"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.730" endtime="20241128 20:17:10.730"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.715" endtime="20241128 20:17:10.730"/>
</try>
<msg timestamp="20241128 20:17:10.731" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.714" endtime="20241128 20:17:10.731"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.737" endtime="20241128 20:17:10.737"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.738" endtime="20241128 20:17:10.738"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.737" endtime="20241128 20:17:10.738"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.736" endtime="20241128 20:17:10.738"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.734" endtime="20241128 20:17:10.738"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.713" endtime="20241128 20:17:10.739"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:10.764" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 20:17:10.754" endtime="20241128 20:17:10.764"/>
</kw>
<msg timestamp="20241128 20:17:10.765" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.753" endtime="20241128 20:17:10.765"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.765" endtime="20241128 20:17:10.765"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.752" endtime="20241128 20:17:10.765"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.766" endtime="20241128 20:17:10.766"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.766" endtime="20241128 20:17:10.766"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.765" endtime="20241128 20:17:10.766"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.752" endtime="20241128 20:17:10.767"/>
</try>
<msg timestamp="20241128 20:17:10.767" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.751" endtime="20241128 20:17:10.767"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.767" endtime="20241128 20:17:10.767"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.750" endtime="20241128 20:17:10.767"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.768" endtime="20241128 20:17:10.768"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.768" endtime="20241128 20:17:10.768"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.749" endtime="20241128 20:17:10.768"/>
</try>
<msg timestamp="20241128 20:17:10.768" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.749" endtime="20241128 20:17:10.769"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.772" endtime="20241128 20:17:10.772"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.774" endtime="20241128 20:17:10.774"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.772" endtime="20241128 20:17:10.774"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.772" endtime="20241128 20:17:10.774"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.770" endtime="20241128 20:17:10.774"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.748" endtime="20241128 20:17:10.774"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 20:17:10.792" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 20:17:10.792" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 20:17:10.775" endtime="20241128 20:17:10.792"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 20:17:10.792" endtime="20241128 20:17:10.792"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.775" endtime="20241128 20:17:10.792"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.793" endtime="20241128 20:17:10.793"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.793" endtime="20241128 20:17:10.794"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.793" endtime="20241128 20:17:10.794"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.774" endtime="20241128 20:17:10.794"/>
</try>
<msg timestamp="20241128 20:17:10.794" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 20:17:10.745" endtime="20241128 20:17:10.794"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.798" endtime="20241128 20:17:10.798"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.798" endtime="20241128 20:17:10.798"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.798" endtime="20241128 20:17:10.799"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.797" endtime="20241128 20:17:10.799"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.796" endtime="20241128 20:17:10.799"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.742" endtime="20241128 20:17:10.799"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.799" endtime="20241128 20:17:10.800"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.799" endtime="20241128 20:17:10.800"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.742" endtime="20241128 20:17:10.800"/>
</try>
<status status="PASS" starttime="20241128 20:17:10.742" endtime="20241128 20:17:10.800"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:10.816" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241128 20:17:10.809" endtime="20241128 20:17:10.816"/>
</kw>
<msg timestamp="20241128 20:17:10.817" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.809" endtime="20241128 20:17:10.817"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.817" endtime="20241128 20:17:10.817"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.808" endtime="20241128 20:17:10.817"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.818" endtime="20241128 20:17:10.818"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.818" endtime="20241128 20:17:10.818"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.817" endtime="20241128 20:17:10.818"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.808" endtime="20241128 20:17:10.818"/>
</try>
<msg timestamp="20241128 20:17:10.819" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.807" endtime="20241128 20:17:10.819"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.819" endtime="20241128 20:17:10.819"/>
</return>
<msg timestamp="20241128 20:17:10.820" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.805" endtime="20241128 20:17:10.820"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.824" endtime="20241128 20:17:10.824"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.824" endtime="20241128 20:17:10.824"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.824" endtime="20241128 20:17:10.824"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.824" endtime="20241128 20:17:10.824"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.822" endtime="20241128 20:17:10.825"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.804" endtime="20241128 20:17:10.825"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.710" endtime="20241128 20:17:10.825"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:10.852" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241128 20:17:10.834" endtime="20241128 20:17:10.852"/>
</kw>
<msg timestamp="20241128 20:17:10.854" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.832" endtime="20241128 20:17:10.854"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.854" endtime="20241128 20:17:10.854"/>
</return>
<status status="PASS" starttime="20241128 20:17:10.832" endtime="20241128 20:17:10.854"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.855" endtime="20241128 20:17:10.855"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.855" endtime="20241128 20:17:10.856"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.854" endtime="20241128 20:17:10.856"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.832" endtime="20241128 20:17:10.856"/>
</try>
<msg timestamp="20241128 20:17:10.856" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.832" endtime="20241128 20:17:10.856"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:10.856" endtime="20241128 20:17:10.856"/>
</return>
<msg timestamp="20241128 20:17:10.857" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.829" endtime="20241128 20:17:10.857"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.861" endtime="20241128 20:17:10.861"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.861" endtime="20241128 20:17:10.861"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.860" endtime="20241128 20:17:10.861"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.860" endtime="20241128 20:17:10.861"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.859" endtime="20241128 20:17:10.862"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.828" endtime="20241128 20:17:10.862"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:10.863" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 20:17:10.862" endtime="20241128 20:17:10.863"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.865" endtime="20241128 20:17:10.865"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.868" endtime="20241128 20:17:10.868"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.864" endtime="20241128 20:17:10.868"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:10.869" endtime="20241128 20:17:10.870"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.869" endtime="20241128 20:17:10.870"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.864" endtime="20241128 20:17:10.871"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 20:17:10.872" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 20:17:10.871" endtime="20241128 20:17:10.901"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.871" endtime="20241128 20:17:10.901"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.902" endtime="20241128 20:17:10.902"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.902" endtime="20241128 20:17:10.903"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.902" endtime="20241128 20:17:10.903"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.871" endtime="20241128 20:17:10.903"/>
</try>
<status status="PASS" starttime="20241128 20:17:10.864" endtime="20241128 20:17:10.903"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.863" endtime="20241128 20:17:10.904"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.863" endtime="20241128 20:17:10.904"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.904" endtime="20241128 20:17:10.904"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.904" endtime="20241128 20:17:10.905"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.863" endtime="20241128 20:17:10.905"/>
</try>
<status status="PASS" starttime="20241128 20:17:10.709" endtime="20241128 20:17:10.905"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.907" endtime="20241128 20:17:10.907"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.905" endtime="20241128 20:17:10.907"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.905" endtime="20241128 20:17:10.907"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.705" endtime="20241128 20:17:10.907"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.909" endtime="20241128 20:17:10.909"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.908" endtime="20241128 20:17:10.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.911" endtime="20241128 20:17:10.911"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.912" endtime="20241128 20:17:10.912"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.912" endtime="20241128 20:17:10.912"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.912" endtime="20241128 20:17:10.912"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.912" endtime="20241128 20:17:10.913"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.911" endtime="20241128 20:17:10.913"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.910" endtime="20241128 20:17:10.913"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:10.922" endtime="20241128 20:17:10.923"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.927" endtime="20241128 20:17:10.927"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.913" endtime="20241128 20:17:10.927"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.929" endtime="20241128 20:17:10.929"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.930" endtime="20241128 20:17:10.930"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.930" endtime="20241128 20:17:10.930"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.931" endtime="20241128 20:17:10.931"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.930" endtime="20241128 20:17:10.931"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.929" endtime="20241128 20:17:10.931"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.928" endtime="20241128 20:17:10.931"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:10.941" endtime="20241128 20:17:10.941"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.945" endtime="20241128 20:17:10.945"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.931" endtime="20241128 20:17:10.945"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.947" endtime="20241128 20:17:10.947"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.948" endtime="20241128 20:17:10.948"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.948" endtime="20241128 20:17:10.948"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.948" endtime="20241128 20:17:10.949"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.948" endtime="20241128 20:17:10.949"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.947" endtime="20241128 20:17:10.949"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.946" endtime="20241128 20:17:10.949"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.952" endtime="20241128 20:17:10.952"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.949" endtime="20241128 20:17:10.952"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 20:17:10.961" endtime="20241128 20:17:10.961"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.962" endtime="20241128 20:17:10.962"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.953" endtime="20241128 20:17:10.962"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.682" endtime="20241128 20:17:10.962"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.962" endtime="20241128 20:17:10.963"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 20:17:10.963" endtime="20241128 20:17:10.964"/>
</return>
<msg timestamp="20241128 20:17:10.964" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 20:17:10.679" endtime="20241128 20:17:10.964"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.966" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 20:17:10.965" endtime="20241128 20:17:10.966"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.967" endtime="20241128 20:17:10.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.967" endtime="20241128 20:17:10.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.967" endtime="20241128 20:17:10.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.968" endtime="20241128 20:17:10.968"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.968" endtime="20241128 20:17:10.968"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.969" endtime="20241128 20:17:10.970"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.970" endtime="20241128 20:17:10.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.970" endtime="20241128 20:17:10.971"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.973" endtime="20241128 20:17:10.973"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.974" endtime="20241128 20:17:10.974"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:10.975" endtime="20241128 20:17:10.975"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.975" endtime="20241128 20:17:10.975"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.975" endtime="20241128 20:17:10.975"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.976" endtime="20241128 20:17:10.976"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.976" endtime="20241128 20:17:10.976"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.975" endtime="20241128 20:17:10.976"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.975" endtime="20241128 20:17:10.976"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.976" endtime="20241128 20:17:10.977"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.977" endtime="20241128 20:17:10.977"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.976" endtime="20241128 20:17:10.977"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.976" endtime="20241128 20:17:10.977"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.975" endtime="20241128 20:17:10.977"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.974" endtime="20241128 20:17:10.977"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:10.978" endtime="20241128 20:17:10.978"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.978" endtime="20241128 20:17:10.978"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.977" endtime="20241128 20:17:10.978"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.979" endtime="20241128 20:17:10.979"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.978" endtime="20241128 20:17:10.979"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.978" endtime="20241128 20:17:10.979"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.979" endtime="20241128 20:17:10.980"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:10.980" endtime="20241128 20:17:10.980"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:10.979" endtime="20241128 20:17:10.980"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.979" endtime="20241128 20:17:10.980"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.977" endtime="20241128 20:17:10.980"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:10.977" endtime="20241128 20:17:10.980"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:10.966" endtime="20241128 20:17:10.980"/>
</iter>
<status status="NOT RUN" starttime="20241128 20:17:10.966" endtime="20241128 20:17:10.980"/>
</for>
<msg timestamp="20241128 20:17:10.981" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 20:17:10.964" endtime="20241128 20:17:10.981"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:10.981" endtime="20241128 20:17:10.982"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:10.991" endtime="20241128 20:17:10.991"/>
</kw>
<msg timestamp="20241128 20:17:10.991" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.990" endtime="20241128 20:17:10.991"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.992" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:57.275Z', 'updatedAt': '2024-11-28T06:56:57.275Z'}</msg>
<status status="PASS" starttime="20241128 20:17:10.992" endtime="20241128 20:17:10.992"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.994" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.994" endtime="20241128 20:17:10.994"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.992" endtime="20241128 20:17:10.994"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.995" endtime="20241128 20:17:10.995"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.994" endtime="20241128 20:17:10.995"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.992" endtime="20241128 20:17:10.995"/>
</if>
<status status="PASS" starttime="20241128 20:17:10.992" endtime="20241128 20:17:10.995"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.992" endtime="20241128 20:17:10.995"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:10.995" endtime="20241128 20:17:10.995"/>
</return>
<msg timestamp="20241128 20:17:10.996" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:10.989" endtime="20241128 20:17:10.996"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:10.997" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241128 20:17:10.996" endtime="20241128 20:17:10.997"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.996" endtime="20241128 20:17:10.997"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:10.997" endtime="20241128 20:17:10.997"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:10.997" endtime="20241128 20:17:10.998"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.996" endtime="20241128 20:17:10.998"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:10.999" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '15', 'status': 'COMPLETED', 'actionName': 'Set Password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', 'a...</msg>
<status status="PASS" starttime="20241128 20:17:10.998" endtime="20241128 20:17:10.999"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:11.001" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "15", "status": "COMPLETED", "actionName": "Set Password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "a...</msg>
<status status="PASS" starttime="20241128 20:17:11.001" endtime="20241128 20:17:11.001"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:11.009" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:11.009" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:11.002" endtime="20241128 20:17:11.010"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:11.010" endtime="20241128 20:17:11.011"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:11.011" endtime="20241128 20:17:11.011"/>
</return>
<status status="PASS" starttime="20241128 20:17:11.000" endtime="20241128 20:17:11.012"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.982" endtime="20241128 20:17:11.012"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 20:17:11.012" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 20:17:11.012" endtime="20241128 20:17:11.012"/>
</kw>
<status status="PASS" starttime="20241128 20:17:10.674" endtime="20241128 20:17:11.012"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:11.014" endtime="20241128 20:17:11.014"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:11.014" endtime="20241128 20:17:11.014"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:11.015" endtime="20241128 20:17:11.015"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:11.014" endtime="20241128 20:17:11.015"/>
</branch>
<status status="PASS" starttime="20241128 20:17:10.674" endtime="20241128 20:17:11.015"/>
</try>
<status status="PASS" starttime="20241128 20:17:10.673" endtime="20241128 20:17:11.015"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:11.017" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:57:48.296Z', 'updatedAt': '2024-11-28T06:57:4...</msg>
<status status="PASS" starttime="20241128 20:17:11.016" endtime="20241128 20:17:11.017"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:11.017" endtime="20241128 20:17:11.018"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 20:17:11.020" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:57:48.432Z', 'updatedAt': '2024-11-28T06:57:48.432Z'}</msg>
<status status="PASS" starttime="20241128 20:17:11.019" endtime="20241128 20:17:11.020"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:11.021" endtime="20241128 20:17:11.021"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:11.022" endtime="20241128 20:17:11.022"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:11.021" endtime="20241128 20:17:11.022"/>
</branch>
<status status="PASS" starttime="20241128 20:17:11.020" endtime="20241128 20:17:11.022"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:11.024" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 20:17:11.023" endtime="20241128 20:17:11.024"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:11.025" endtime="20241128 20:17:11.025"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:11.025" endtime="20241128 20:17:11.026"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:11.027" endtime="20241128 20:17:11.027"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:11.026" endtime="20241128 20:17:11.027"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:23.609" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241128 20:17:23.609" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241128 20:17:23.610" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//button[@tupe="submit" and text()="Login"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241128 20:17:11.049" endtime="20241128 20:17:23.611"/>
</kw>
<msg timestamp="20241128 20:17:23.611" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 20:17:11.048" endtime="20241128 20:17:23.611"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:23.611" endtime="20241128 20:17:23.611"/>
</return>
<status status="PASS" starttime="20241128 20:17:11.048" endtime="20241128 20:17:23.611"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.612" endtime="20241128 20:17:23.612"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.612" endtime="20241128 20:17:23.612"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.611" endtime="20241128 20:17:23.612"/>
</branch>
<status status="PASS" starttime="20241128 20:17:11.048" endtime="20241128 20:17:23.612"/>
</try>
<msg timestamp="20241128 20:17:23.612" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 20:17:11.047" endtime="20241128 20:17:23.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:23.612" endtime="20241128 20:17:23.614"/>
</return>
<status status="PASS" starttime="20241128 20:17:11.045" endtime="20241128 20:17:23.614"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:23.614" endtime="20241128 20:17:23.614"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:23.614" endtime="20241128 20:17:23.614"/>
</branch>
<status status="PASS" starttime="20241128 20:17:11.045" endtime="20241128 20:17:23.614"/>
</try>
<msg timestamp="20241128 20:17:23.614" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241128 20:17:11.045" endtime="20241128 20:17:23.614"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.616" endtime="20241128 20:17:23.617"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.617" endtime="20241128 20:17:23.618"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 20:17:23.618" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 20:17:23.618" endtime="20241128 20:17:23.619"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:23.617" endtime="20241128 20:17:23.620"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:23.616" endtime="20241128 20:17:23.620"/>
</branch>
<status status="FAIL" starttime="20241128 20:17:23.616" endtime="20241128 20:17:23.620"/>
</if>
<status status="FAIL" starttime="20241128 20:17:23.615" endtime="20241128 20:17:23.621"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:11.043" endtime="20241128 20:17:23.622"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.625" endtime="20241128 20:17:23.625"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.627" endtime="20241128 20:17:23.627"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:11.038" endtime="20241128 20:17:23.628"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.628" endtime="20241128 20:17:23.628"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.629" endtime="20241128 20:17:23.629"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.628" endtime="20241128 20:17:23.629"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.629" endtime="20241128 20:17:23.629"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.629" endtime="20241128 20:17:23.629"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:23.628" endtime="20241128 20:17:23.629"/>
</try>
<status status="FAIL" starttime="20241128 20:17:11.032" endtime="20241128 20:17:23.630"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:11.027" endtime="20241128 20:17:23.630"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.633" endtime="20241128 20:17:23.633"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.634" endtime="20241128 20:17:23.634"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.630" endtime="20241128 20:17:23.634"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.635" endtime="20241128 20:17:23.635"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.634" endtime="20241128 20:17:23.635"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.638" endtime="20241128 20:17:23.638"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.635" endtime="20241128 20:17:23.638"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.640" endtime="20241128 20:17:23.641"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.641" endtime="20241128 20:17:23.641"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.641" endtime="20241128 20:17:23.641"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:23.641" endtime="20241128 20:17:23.641"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:23.638" endtime="20241128 20:17:23.641"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.642" endtime="20241128 20:17:23.642"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.641" endtime="20241128 20:17:23.642"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.644" endtime="20241128 20:17:23.644"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.644" endtime="20241128 20:17:23.644"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.644" endtime="20241128 20:17:23.644"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.644" endtime="20241128 20:17:23.644"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.644" endtime="20241128 20:17:23.645"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:23.644" endtime="20241128 20:17:23.645"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:23.642" endtime="20241128 20:17:23.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:23.649" endtime="20241128 20:17:23.650"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.652" endtime="20241128 20:17:23.652"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.645" endtime="20241128 20:17:23.652"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.653" endtime="20241128 20:17:23.653"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.654" endtime="20241128 20:17:23.654"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.654" endtime="20241128 20:17:23.654"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.655" endtime="20241128 20:17:23.655"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.654" endtime="20241128 20:17:23.655"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:23.654" endtime="20241128 20:17:23.655"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:23.652" endtime="20241128 20:17:23.655"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:23.659" endtime="20241128 20:17:23.659"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.662" endtime="20241128 20:17:23.662"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.655" endtime="20241128 20:17:23.662"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.663" endtime="20241128 20:17:23.663"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.663" endtime="20241128 20:17:23.663"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.663" endtime="20241128 20:17:23.663"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.664" endtime="20241128 20:17:23.664"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.664" endtime="20241128 20:17:23.664"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:23.663" endtime="20241128 20:17:23.664"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:23.662" endtime="20241128 20:17:23.664"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.666" endtime="20241128 20:17:23.666"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.664" endtime="20241128 20:17:23.666"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 20:17:23.672" endtime="20241128 20:17:23.672"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.672" endtime="20241128 20:17:23.672"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.666" endtime="20241128 20:17:23.672"/>
</branch>
<status status="FAIL" starttime="20241128 20:17:11.024" endtime="20241128 20:17:23.672"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.672" endtime="20241128 20:17:23.672"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241128 20:17:23.672" endtime="20241128 20:17:23.672"/>
</return>
<status status="FAIL" starttime="20241128 20:17:11.023" endtime="20241128 20:17:23.674"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241128 20:17:23.674" endtime="20241128 20:17:23.674"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.675" endtime="20241128 20:17:23.675"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:23.675" endtime="20241128 20:17:23.675"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.675" endtime="20241128 20:17:23.675"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:11.016" endtime="20241128 20:17:23.675"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.676" endtime="20241128 20:17:23.676"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:23.680" endtime="20241128 20:17:23.680"/>
</kw>
<msg timestamp="20241128 20:17:23.680" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:23.680" endtime="20241128 20:17:23.680"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:23.682" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@tupe="submit" and text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-28T06:57:46.898Z', 'updatedAt': '2024-11-28T14:10:15.574Z'}</msg>
<status status="PASS" starttime="20241128 20:17:23.681" endtime="20241128 20:17:23.682"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:23.683" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:23.682" endtime="20241128 20:17:23.683"/>
</kw>
<status status="PASS" starttime="20241128 20:17:23.682" endtime="20241128 20:17:23.683"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.683" endtime="20241128 20:17:23.683"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.683" endtime="20241128 20:17:23.683"/>
</branch>
<status status="PASS" starttime="20241128 20:17:23.682" endtime="20241128 20:17:23.683"/>
</if>
<status status="PASS" starttime="20241128 20:17:23.681" endtime="20241128 20:17:23.683"/>
</branch>
<status status="PASS" starttime="20241128 20:17:23.680" endtime="20241128 20:17:23.683"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:23.684" endtime="20241128 20:17:23.684"/>
</return>
<msg timestamp="20241128 20:17:23.684" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:23.679" endtime="20241128 20:17:23.684"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:23.684" level="INFO">${xpath} = //button[@tupe="submit" and text()="Login"]</msg>
<status status="PASS" starttime="20241128 20:17:23.684" endtime="20241128 20:17:23.684"/>
</kw>
<status status="PASS" starttime="20241128 20:17:23.684" endtime="20241128 20:17:23.684"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.685" endtime="20241128 20:17:23.685"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.685" endtime="20241128 20:17:23.685"/>
</branch>
<status status="PASS" starttime="20241128 20:17:23.684" endtime="20241128 20:17:23.685"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:23.686" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '16', 'status': 'FAILED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@tupe="submit" and text()="Login"]', 'inputValue': '', 'er...</msg>
<status status="PASS" starttime="20241128 20:17:23.685" endtime="20241128 20:17:23.686"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:23.687" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "16", "status": "FAILED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@tupe=\"submit\" and text()=\"Login\"]", "inputValue": "",...</msg>
<status status="PASS" starttime="20241128 20:17:23.686" endtime="20241128 20:17:23.687"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:23.692" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:23.692" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:23.687" endtime="20241128 20:17:23.692"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.692" endtime="20241128 20:17:23.693"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:23.693" endtime="20241128 20:17:23.693"/>
</return>
<status status="PASS" starttime="20241128 20:17:23.686" endtime="20241128 20:17:23.693"/>
</kw>
<status status="PASS" starttime="20241128 20:17:23.676" endtime="20241128 20:17:23.694"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.694" endtime="20241128 20:17:23.695"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 20:17:23.695" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 20:17:23.695" endtime="20241128 20:17:23.695"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:23.694" endtime="20241128 20:17:23.696"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:23.675" endtime="20241128 20:17:23.696"/>
</branch>
<status status="FAIL" starttime="20241128 20:17:11.016" endtime="20241128 20:17:23.696"/>
</try>
<status status="FAIL" starttime="20241128 20:17:11.016" endtime="20241128 20:17:23.697"/>
</iter>
<status status="FAIL" starttime="20241128 20:17:06.916" endtime="20241128 20:17:23.697"/>
</for>
<status status="FAIL" starttime="20241128 20:17:06.916" endtime="20241128 20:17:23.697"/>
</branch>
<status status="FAIL" starttime="20241128 20:17:06.915" endtime="20241128 20:17:23.697"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241128 20:17:23.697" endtime="20241128 20:17:23.698"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:06.907" endtime="20241128 20:17:23.698"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.698" endtime="20241128 20:17:23.699"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:23.701" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '4', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 20:17:23.700" endtime="20241128 20:17:23.701"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:23.702" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "4", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 20:17:23.701" endtime="20241128 20:17:23.702"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:23.707" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:23.707" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:23.702" endtime="20241128 20:17:23.707"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.707" endtime="20241128 20:17:23.708"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:23.708" endtime="20241128 20:17:23.708"/>
</return>
<status status="PASS" starttime="20241128 20:17:23.701" endtime="20241128 20:17:23.708"/>
</kw>
<status status="PASS" starttime="20241128 20:17:23.699" endtime="20241128 20:17:23.709"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.710" endtime="20241128 20:17:23.710"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 20:17:23.711" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 20:17:23.710" endtime="20241128 20:17:23.711"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:23.709" endtime="20241128 20:17:23.712"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:23.698" endtime="20241128 20:17:23.712"/>
</branch>
<status status="FAIL" starttime="20241128 20:17:06.907" endtime="20241128 20:17:23.714"/>
</try>
<status status="FAIL" starttime="20241128 20:17:06.907" endtime="20241128 20:17:23.714"/>
</iter>
<status status="FAIL" starttime="20241128 20:17:06.906" endtime="20241128 20:17:23.715"/>
</for>
<status status="FAIL" starttime="20241128 20:17:06.906" endtime="20241128 20:17:23.716"/>
</branch>
<status status="FAIL" starttime="20241128 20:17:06.905" endtime="20241128 20:17:23.717"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241128 20:17:23.717" endtime="20241128 20:17:23.717"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:06.877" endtime="20241128 20:17:23.717"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.717" endtime="20241128 20:17:23.718"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:23.719" level="INFO">${response_message} = {'testCaseRunId': '3', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 20:17:23.719" endtime="20241128 20:17:23.719"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:23.720" level="INFO">${json_response} = {"testCaseRunId": "3", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 20:17:23.720" endtime="20241128 20:17:23.720"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:23.734" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:23.734" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:23.720" endtime="20241128 20:17:23.734"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.735" endtime="20241128 20:17:23.735"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:23.735" endtime="20241128 20:17:23.735"/>
</return>
<status status="PASS" starttime="20241128 20:17:23.719" endtime="20241128 20:17:23.736"/>
</kw>
<status status="PASS" starttime="20241128 20:17:23.718" endtime="20241128 20:17:23.736"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.737" endtime="20241128 20:17:23.737"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 20:17:23.738" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 20:17:23.737" endtime="20241128 20:17:23.738"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:23.736" endtime="20241128 20:17:23.739"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:23.717" endtime="20241128 20:17:23.739"/>
</branch>
<status status="FAIL" starttime="20241128 20:17:06.876" endtime="20241128 20:17:23.739"/>
</try>
<status status="FAIL" starttime="20241128 20:17:06.855" endtime="20241128 20:17:23.739"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.740" endtime="20241128 20:17:23.740"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.739" endtime="20241128 20:17:23.740"/>
</branch>
<status status="FAIL" starttime="20241128 20:17:06.855" endtime="20241128 20:17:23.740"/>
</if>
<status status="FAIL" starttime="20241128 20:17:06.840" endtime="20241128 20:17:23.741"/>
</kw>
<status status="FAIL" starttime="20241128 20:17:06.839" endtime="20241128 20:17:23.741"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.742" endtime="20241128 20:17:23.743"/>
</kw>
<status status="PASS" starttime="20241128 20:17:23.742" endtime="20241128 20:17:23.743"/>
</branch>
<status status="PASS" starttime="20241128 20:17:06.839" endtime="20241128 20:17:23.743"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 20:17:23.991" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 20:17:23.744" endtime="20241128 20:17:23.992"/>
</kw>
<status status="PASS" starttime="20241128 20:17:23.743" endtime="20241128 20:17:23.992"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:23.992" endtime="20241128 20:17:23.992"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:23.992" endtime="20241128 20:17:23.992"/>
</branch>
<status status="PASS" starttime="20241128 20:17:23.743" endtime="20241128 20:17:23.992"/>
</try>
<status status="PASS" starttime="20241128 20:17:23.743" endtime="20241128 20:17:23.992"/>
</kw>
<status status="PASS" starttime="20241128 19:40:03.982" endtime="20241128 20:17:23.993"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:23.993" endtime="20241128 20:17:23.994"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 20:17:47.318" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '4', 'testCaseId': '1', 'testSuiteRunId': None, 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:47:47.176Z', 'createdAt': '2024-11-28T14...</msg>
<status status="PASS" starttime="20241128 20:17:23.994" endtime="20241128 20:17:47.319"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 20:17:47.323" endtime="20241128 20:17:47.323"/>
</break>
<status status="NOT RUN" starttime="20241128 20:17:47.322" endtime="20241128 20:17:47.324"/>
</branch>
<status status="PASS" starttime="20241128 20:17:47.321" endtime="20241128 20:17:47.324"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 20:17:47.327" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\66ce3bc1-6fc8-4eac-acac-3e009095ae64"}</msg>
<msg timestamp="20241128 20:17:48.061" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\66ce3bc1-6fc8-4eac-acac-3e009095ae64"}</msg>
<status status="PASS" starttime="20241128 20:17:47.325" endtime="20241128 20:17:48.061"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 20:17:48.062" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 20:17:48.088" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 20:17:48.088" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 20:17:48.061" endtime="20241128 20:17:48.088"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 20:17:48.089" endtime="20241128 20:17:48.090"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 20:17:49.708" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 20:17:49.708" level="INFO">${page_id} = {'page_id': 'page=b708bd5f-8985-4fd4-abe2-23691a7b39e4', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 20:17:48.091" endtime="20241128 20:17:49.708"/>
</kw>
<status status="PASS" starttime="20241128 20:17:47.324" endtime="20241128 20:17:49.709"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:49.710" endtime="20241128 20:17:49.713"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:49.717" endtime="20241128 20:17:49.718"/>
</kw>
<msg timestamp="20241128 20:17:49.718" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.716" endtime="20241128 20:17:49.718"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.720" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 20:17:49.719" endtime="20241128 20:17:49.720"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.721" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.720" endtime="20241128 20:17:49.721"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.720" endtime="20241128 20:17:49.721"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.721" endtime="20241128 20:17:49.721"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:49.721" endtime="20241128 20:17:49.722"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.720" endtime="20241128 20:17:49.722"/>
</if>
<status status="PASS" starttime="20241128 20:17:49.719" endtime="20241128 20:17:49.722"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.718" endtime="20241128 20:17:49.722"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:49.722" endtime="20241128 20:17:49.722"/>
</return>
<msg timestamp="20241128 20:17:49.722" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.715" endtime="20241128 20:17:49.722"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.722" endtime="20241128 20:17:49.722"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 20:17:49.722" endtime="20241128 20:17:49.722"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:49.722" endtime="20241128 20:17:49.722"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.722" endtime="20241128 20:17:49.724"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:49.726" endtime="20241128 20:17:49.727"/>
</kw>
<msg timestamp="20241128 20:17:49.727" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.726" endtime="20241128 20:17:49.727"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.728" level="INFO">${values} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 20:17:49.727" endtime="20241128 20:17:49.728"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.729" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.728" endtime="20241128 20:17:49.729"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.728" endtime="20241128 20:17:49.729"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.729" endtime="20241128 20:17:49.729"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:49.729" endtime="20241128 20:17:49.729"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.728" endtime="20241128 20:17:49.730"/>
</if>
<status status="PASS" starttime="20241128 20:17:49.727" endtime="20241128 20:17:49.730"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.727" endtime="20241128 20:17:49.730"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:49.730" endtime="20241128 20:17:49.730"/>
</return>
<msg timestamp="20241128 20:17:49.730" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.726" endtime="20241128 20:17:49.730"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:49.737" endtime="20241128 20:17:49.738"/>
</kw>
<msg timestamp="20241128 20:17:49.738" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.736" endtime="20241128 20:17:49.738"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.739" level="INFO">${values} = {'id': '4', 'testCaseId': '1', 'testSuiteRunId': None, 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:47:47.176Z', 'createdAt': '2024-11-28T14:47:47.176Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 20:17:49.739" endtime="20241128 20:17:49.739"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.741" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.740" endtime="20241128 20:17:49.741"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.740" endtime="20241128 20:17:49.741"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.741" endtime="20241128 20:17:49.741"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:49.741" endtime="20241128 20:17:49.741"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.740" endtime="20241128 20:17:49.741"/>
</if>
<status status="PASS" starttime="20241128 20:17:49.738" endtime="20241128 20:17:49.742"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.738" endtime="20241128 20:17:49.742"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:49.742" endtime="20241128 20:17:49.742"/>
</return>
<msg timestamp="20241128 20:17:49.743" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.734" endtime="20241128 20:17:49.743"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.743" endtime="20241128 20:17:49.744"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:49.743" endtime="20241128 20:17:49.744"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.743" endtime="20241128 20:17:49.744"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.744" level="INFO">${testCase} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 20:17:49.744" endtime="20241128 20:17:49.744"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.745" level="INFO">${testCaseRun} = {'id': '4', 'testCaseId': '1', 'testSuiteRunId': None, 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T14:47:47.176Z', 'createdAt': '2024-11-28T14:47:47.176Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 20:17:49.745" endtime="20241128 20:17:49.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.746" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 20:17:49.745" endtime="20241128 20:17:49.746"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:49.746" endtime="20241128 20:17:49.746"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:49.751" endtime="20241128 20:17:49.751"/>
</kw>
<msg timestamp="20241128 20:17:49.752" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.750" endtime="20241128 20:17:49.752"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.754" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241128 20:17:49.752" endtime="20241128 20:17:49.754"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.755" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.755" endtime="20241128 20:17:49.755"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.754" endtime="20241128 20:17:49.755"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.756" endtime="20241128 20:17:49.756"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:49.755" endtime="20241128 20:17:49.756"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.754" endtime="20241128 20:17:49.756"/>
</if>
<status status="PASS" starttime="20241128 20:17:49.752" endtime="20241128 20:17:49.756"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.752" endtime="20241128 20:17:49.756"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:49.757" endtime="20241128 20:17:49.757"/>
</return>
<msg timestamp="20241128 20:17:49.757" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.749" endtime="20241128 20:17:49.757"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:49.758" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '4', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 20:17:49.758" endtime="20241128 20:17:49.758"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:49.760" level="INFO">${json_response} = {"testCaseRunId": "4", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 20:17:49.760" endtime="20241128 20:17:49.760"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:49.767" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:49.767" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:49.761" endtime="20241128 20:17:49.767"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:49.767" endtime="20241128 20:17:49.768"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:49.768" endtime="20241128 20:17:49.768"/>
</return>
<status status="PASS" starttime="20241128 20:17:49.759" endtime="20241128 20:17:49.769"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:49.770" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 20:17:49.770" endtime="20241128 20:17:49.770"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.771" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 20:17:49.771" endtime="20241128 20:17:49.771"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:49.772" endtime="20241128 20:17:49.772"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:49.781" endtime="20241128 20:17:49.787"/>
</kw>
<msg timestamp="20241128 20:17:49.790" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.779" endtime="20241128 20:17:49.790"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.794" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 20:17:49.792" endtime="20241128 20:17:49.795"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.797" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.797" endtime="20241128 20:17:49.797"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.796" endtime="20241128 20:17:49.798"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.802" endtime="20241128 20:17:49.803"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:49.799" endtime="20241128 20:17:49.803"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.795" endtime="20241128 20:17:49.803"/>
</if>
<status status="PASS" starttime="20241128 20:17:49.792" endtime="20241128 20:17:49.804"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.790" endtime="20241128 20:17:49.804"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:49.804" endtime="20241128 20:17:49.805"/>
</return>
<msg timestamp="20241128 20:17:49.808" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:49.778" endtime="20241128 20:17:49.808"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.816" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 20:17:49.814" endtime="20241128 20:17:49.817"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:49.818" endtime="20241128 20:17:49.819"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 20:17:49.823" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 20:17:49.820" endtime="20241128 20:17:49.823"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.826" endtime="20241128 20:17:49.826"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:49.826" endtime="20241128 20:17:49.826"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:49.825" endtime="20241128 20:17:49.826"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.824" endtime="20241128 20:17:49.827"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:49.827" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 20:17:49.827" endtime="20241128 20:17:49.828"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 20:17:52.696" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 20:17:52.697" level="INFO">${page_id} = {'page_id': 'page=b972767f-7a49-4a92-b80e-0703dbc5f617', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 20:17:49.830" endtime="20241128 20:17:52.697"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 20:17:52.698" level="INFO">Switching to page {'page_id': 'page=b972767f-7a49-4a92-b80e-0703dbc5f617', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 20:17:52.794" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=be72a22c-1026-407c-b7e5-f4f305303bdb",
    "contexts": [
      {
        "type": "context",
        "id": "context=99a8d910-2bcd-4cef-9c0c-cc321dbd45ec",
        "activePage": "page=b972767f-7a49-4a92-b80e-0703dbc5f617",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=b708bd5f-8985-4fd4-abe2-23691a7b39e4",
            "timestamp": 1732805268.344
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=b972767f-7a49-4a92-b80e-0703dbc5f617",
            "timestamp": 1732805269.874
          }
        ]
      }
    ],
    "activeContext": "context=99a8d910-2bcd-4cef-9c0c-cc321dbd45ec",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 20:17:52.799" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 20:17:52.697" endtime="20241128 20:17:52.800"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.828" endtime="20241128 20:17:52.800"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.828" endtime="20241128 20:17:52.800"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:52.801" endtime="20241128 20:17:52.801"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.800" endtime="20241128 20:17:52.801"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.804" endtime="20241128 20:17:52.805"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.801" endtime="20241128 20:17:52.805"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.809" endtime="20241128 20:17:52.809"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.813" endtime="20241128 20:17:52.814"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.805" endtime="20241128 20:17:52.814"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.815" endtime="20241128 20:17:52.815"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.814" endtime="20241128 20:17:52.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.822" endtime="20241128 20:17:52.823"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.815" endtime="20241128 20:17:52.823"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.827" endtime="20241128 20:17:52.827"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.827" endtime="20241128 20:17:52.828"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.827" endtime="20241128 20:17:52.828"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.827" endtime="20241128 20:17:52.828"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:52.823" endtime="20241128 20:17:52.828"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.829" endtime="20241128 20:17:52.830"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.828" endtime="20241128 20:17:52.830"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.833" endtime="20241128 20:17:52.833"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.834" endtime="20241128 20:17:52.834"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.833" endtime="20241128 20:17:52.834"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.835" endtime="20241128 20:17:52.835"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.834" endtime="20241128 20:17:52.835"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.833" endtime="20241128 20:17:52.835"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:52.830" endtime="20241128 20:17:52.835"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:52.845" endtime="20241128 20:17:52.845"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.851" endtime="20241128 20:17:52.852"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.835" endtime="20241128 20:17:52.852"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.854" endtime="20241128 20:17:52.854"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.854" endtime="20241128 20:17:52.855"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.854" endtime="20241128 20:17:52.855"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.855" endtime="20241128 20:17:52.856"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.855" endtime="20241128 20:17:52.856"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.854" endtime="20241128 20:17:52.856"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:52.852" endtime="20241128 20:17:52.856"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:52.868" endtime="20241128 20:17:52.869"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.872" endtime="20241128 20:17:52.872"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.856" endtime="20241128 20:17:52.872"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.874" endtime="20241128 20:17:52.874"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.874" endtime="20241128 20:17:52.874"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.874" endtime="20241128 20:17:52.874"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.875" endtime="20241128 20:17:52.875"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.874" endtime="20241128 20:17:52.875"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.874" endtime="20241128 20:17:52.875"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:52.873" endtime="20241128 20:17:52.875"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.877" endtime="20241128 20:17:52.878"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.875" endtime="20241128 20:17:52.878"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 20:17:52.891" endtime="20241128 20:17:52.891"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.892" endtime="20241128 20:17:52.892"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.878" endtime="20241128 20:17:52.892"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.828" endtime="20241128 20:17:52.892"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:52.892" endtime="20241128 20:17:52.893"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 20:17:52.893" endtime="20241128 20:17:52.893"/>
</return>
<msg timestamp="20241128 20:17:52.893" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 20:17:49.827" endtime="20241128 20:17:52.893"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:52.895" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 20:17:52.895" endtime="20241128 20:17:52.895"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.896" endtime="20241128 20:17:52.896"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.896" endtime="20241128 20:17:52.896"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.896" endtime="20241128 20:17:52.896"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.897" endtime="20241128 20:17:52.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.898" endtime="20241128 20:17:52.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.898" endtime="20241128 20:17:52.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.898" endtime="20241128 20:17:52.898"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.898" endtime="20241128 20:17:52.899"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.900" endtime="20241128 20:17:52.900"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.902" endtime="20241128 20:17:52.902"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:52.902" endtime="20241128 20:17:52.902"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:52.902" endtime="20241128 20:17:52.902"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.902" endtime="20241128 20:17:52.902"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.903" endtime="20241128 20:17:52.903"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:52.903" endtime="20241128 20:17:52.903"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:52.903" endtime="20241128 20:17:52.903"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.903" endtime="20241128 20:17:52.903"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.903" endtime="20241128 20:17:52.903"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:52.903" endtime="20241128 20:17:52.903"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:52.903" endtime="20241128 20:17:52.903"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.903" endtime="20241128 20:17:52.904"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:52.902" endtime="20241128 20:17:52.904"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.902" endtime="20241128 20:17:52.904"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:52.904" endtime="20241128 20:17:52.904"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:52.904" endtime="20241128 20:17:52.904"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.904" endtime="20241128 20:17:52.904"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.905" endtime="20241128 20:17:52.905"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.904" endtime="20241128 20:17:52.905"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.904" endtime="20241128 20:17:52.905"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.905" endtime="20241128 20:17:52.905"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:52.905" endtime="20241128 20:17:52.905"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:52.905" endtime="20241128 20:17:52.905"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.905" endtime="20241128 20:17:52.905"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:52.904" endtime="20241128 20:17:52.905"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.904" endtime="20241128 20:17:52.906"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:52.895" endtime="20241128 20:17:52.906"/>
</iter>
<status status="NOT RUN" starttime="20241128 20:17:52.895" endtime="20241128 20:17:52.906"/>
</for>
<msg timestamp="20241128 20:17:52.906" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 20:17:52.893" endtime="20241128 20:17:52.906"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:52.906" endtime="20241128 20:17:52.907"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 20:17:52.912" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 20:17:52.912" endtime="20241128 20:17:52.912"/>
</kw>
<msg timestamp="20241128 20:17:52.912" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 20:17:52.911" endtime="20241128 20:17:52.914"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.914" endtime="20241128 20:17:52.914"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.915" endtime="20241128 20:17:52.915"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.915" endtime="20241128 20:17:52.915"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.915" endtime="20241128 20:17:52.915"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.915" endtime="20241128 20:17:52.915"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:52.914" endtime="20241128 20:17:52.915"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:52.914" endtime="20241128 20:17:52.915"/>
</branch>
<status status="PASS" starttime="20241128 20:17:52.914" endtime="20241128 20:17:52.915"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:52.916" endtime="20241128 20:17:52.916"/>
</return>
<msg timestamp="20241128 20:17:52.917" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 20:17:52.911" endtime="20241128 20:17:52.917"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.917" endtime="20241128 20:17:52.918"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.917" endtime="20241128 20:17:52.918"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:52.919" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 20:17:52.918" endtime="20241128 20:17:52.919"/>
</kw>
<status status="PASS" starttime="20241128 20:17:52.918" endtime="20241128 20:17:52.920"/>
</branch>
<status status="PASS" starttime="20241128 20:17:52.917" endtime="20241128 20:17:52.920"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:52.921" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '17', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241128 20:17:52.920" endtime="20241128 20:17:52.921"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:52.922" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "17", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241128 20:17:52.922" endtime="20241128 20:17:52.922"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:52.929" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:52.929" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:52.922" endtime="20241128 20:17:52.929"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:52.930" endtime="20241128 20:17:52.931"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:52.931" endtime="20241128 20:17:52.932"/>
</return>
<status status="PASS" starttime="20241128 20:17:52.921" endtime="20241128 20:17:52.933"/>
</kw>
<status status="PASS" starttime="20241128 20:17:52.907" endtime="20241128 20:17:52.935"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 20:17:52.936" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 20:17:52.935" endtime="20241128 20:17:52.936"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.812" endtime="20241128 20:17:52.936"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.937" endtime="20241128 20:17:52.937"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:52.937" endtime="20241128 20:17:52.938"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.938" endtime="20241128 20:17:52.938"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.936" endtime="20241128 20:17:52.939"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.812" endtime="20241128 20:17:52.939"/>
</try>
<status status="PASS" starttime="20241128 20:17:49.812" endtime="20241128 20:17:52.939"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:52.940" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 20:17:52.940" endtime="20241128 20:17:52.940"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:52.940" endtime="20241128 20:17:52.941"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 20:17:52.943" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 20:17:52.942" endtime="20241128 20:17:52.943"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.944" endtime="20241128 20:17:52.944"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.945" endtime="20241128 20:17:52.945"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.944" endtime="20241128 20:17:52.945"/>
</branch>
<status status="PASS" starttime="20241128 20:17:52.943" endtime="20241128 20:17:52.945"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:52.948" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 20:17:52.947" endtime="20241128 20:17:52.948"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:52.951" endtime="20241128 20:17:52.952"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.951" endtime="20241128 20:17:52.952"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:52.954" endtime="20241128 20:17:52.954"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.952" endtime="20241128 20:17:52.959"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.975" endtime="20241128 20:17:52.975"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.962" endtime="20241128 20:17:52.975"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.982" endtime="20241128 20:17:52.982"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.990" endtime="20241128 20:17:52.990"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.975" endtime="20241128 20:17:52.990"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 20:17:52.993" endtime="20241128 20:17:52.993"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.991" endtime="20241128 20:17:52.993"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.002" endtime="20241128 20:17:53.002"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:52.993" endtime="20241128 20:17:53.002"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.050" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 20:17:53.011" endtime="20241128 20:17:53.051"/>
</kw>
<msg timestamp="20241128 20:17:53.051" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.011" endtime="20241128 20:17:53.051"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.051" endtime="20241128 20:17:53.051"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.011" endtime="20241128 20:17:53.051"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.052" endtime="20241128 20:17:53.052"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.052" endtime="20241128 20:17:53.052"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.051" endtime="20241128 20:17:53.052"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.011" endtime="20241128 20:17:53.052"/>
</try>
<msg timestamp="20241128 20:17:53.053" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.010" endtime="20241128 20:17:53.053"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.053" endtime="20241128 20:17:53.053"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.009" endtime="20241128 20:17:53.053"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.053" endtime="20241128 20:17:53.053"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.053" endtime="20241128 20:17:53.053"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.009" endtime="20241128 20:17:53.054"/>
</try>
<msg timestamp="20241128 20:17:53.054" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.008" endtime="20241128 20:17:53.054"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.058" endtime="20241128 20:17:53.059"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.059" endtime="20241128 20:17:53.059"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.058" endtime="20241128 20:17:53.059"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.058" endtime="20241128 20:17:53.059"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.056" endtime="20241128 20:17:53.060"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.008" endtime="20241128 20:17:53.060"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.079" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 20:17:53.074" endtime="20241128 20:17:53.079"/>
</kw>
<msg timestamp="20241128 20:17:53.079" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.073" endtime="20241128 20:17:53.079"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.080" endtime="20241128 20:17:53.080"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.073" endtime="20241128 20:17:53.080"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.080" endtime="20241128 20:17:53.080"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.080" endtime="20241128 20:17:53.081"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.080" endtime="20241128 20:17:53.081"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.073" endtime="20241128 20:17:53.081"/>
</try>
<msg timestamp="20241128 20:17:53.081" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.072" endtime="20241128 20:17:53.081"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.081" endtime="20241128 20:17:53.081"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.070" endtime="20241128 20:17:53.081"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.082" endtime="20241128 20:17:53.082"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.082" endtime="20241128 20:17:53.082"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.070" endtime="20241128 20:17:53.082"/>
</try>
<msg timestamp="20241128 20:17:53.082" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.069" endtime="20241128 20:17:53.082"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.087" endtime="20241128 20:17:53.087"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.087" endtime="20241128 20:17:53.087"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.086" endtime="20241128 20:17:53.087"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.086" endtime="20241128 20:17:53.087"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.085" endtime="20241128 20:17:53.087"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.069" endtime="20241128 20:17:53.088"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 20:17:53.108" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 20:17:53.108" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 20:17:53.088" endtime="20241128 20:17:53.108"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 20:17:53.109" endtime="20241128 20:17:53.109"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.088" endtime="20241128 20:17:53.109"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.109" endtime="20241128 20:17:53.109"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.109" endtime="20241128 20:17:53.110"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.109" endtime="20241128 20:17:53.110"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.088" endtime="20241128 20:17:53.110"/>
</try>
<msg timestamp="20241128 20:17:53.110" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 20:17:53.066" endtime="20241128 20:17:53.110"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.114" endtime="20241128 20:17:53.114"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.114" endtime="20241128 20:17:53.115"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.114" endtime="20241128 20:17:53.115"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.114" endtime="20241128 20:17:53.115"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.112" endtime="20241128 20:17:53.115"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.065" endtime="20241128 20:17:53.115"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.115" endtime="20241128 20:17:53.116"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.115" endtime="20241128 20:17:53.116"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.065" endtime="20241128 20:17:53.116"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.064" endtime="20241128 20:17:53.116"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.129" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241128 20:17:53.122" endtime="20241128 20:17:53.129"/>
</kw>
<msg timestamp="20241128 20:17:53.130" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.122" endtime="20241128 20:17:53.130"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.130" endtime="20241128 20:17:53.130"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.121" endtime="20241128 20:17:53.130"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.131" endtime="20241128 20:17:53.131"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.132" endtime="20241128 20:17:53.132"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.130" endtime="20241128 20:17:53.132"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.121" endtime="20241128 20:17:53.132"/>
</try>
<msg timestamp="20241128 20:17:53.133" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.121" endtime="20241128 20:17:53.133"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.133" endtime="20241128 20:17:53.133"/>
</return>
<msg timestamp="20241128 20:17:53.134" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.119" endtime="20241128 20:17:53.134"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.139" endtime="20241128 20:17:53.140"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.140" endtime="20241128 20:17:53.140"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.139" endtime="20241128 20:17:53.140"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.138" endtime="20241128 20:17:53.140"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.137" endtime="20241128 20:17:53.141"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.118" endtime="20241128 20:17:53.141"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.005" endtime="20241128 20:17:53.142"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.172" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241128 20:17:53.150" endtime="20241128 20:17:53.172"/>
</kw>
<msg timestamp="20241128 20:17:53.172" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.150" endtime="20241128 20:17:53.173"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.173" endtime="20241128 20:17:53.173"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.149" endtime="20241128 20:17:53.173"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.173" endtime="20241128 20:17:53.173"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.174" endtime="20241128 20:17:53.174"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.173" endtime="20241128 20:17:53.174"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.149" endtime="20241128 20:17:53.174"/>
</try>
<msg timestamp="20241128 20:17:53.174" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.149" endtime="20241128 20:17:53.174"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.174" endtime="20241128 20:17:53.174"/>
</return>
<msg timestamp="20241128 20:17:53.174" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.147" endtime="20241128 20:17:53.174"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.178" endtime="20241128 20:17:53.178"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.178" endtime="20241128 20:17:53.179"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.177" endtime="20241128 20:17:53.179"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.177" endtime="20241128 20:17:53.179"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.176" endtime="20241128 20:17:53.180"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.145" endtime="20241128 20:17:53.180"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:53.181" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 20:17:53.181" endtime="20241128 20:17:53.181"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.185" endtime="20241128 20:17:53.186"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.188" endtime="20241128 20:17:53.188"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.185" endtime="20241128 20:17:53.188"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:53.188" endtime="20241128 20:17:53.189"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.188" endtime="20241128 20:17:53.189"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.185" endtime="20241128 20:17:53.189"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 20:17:53.190" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 20:17:53.190" endtime="20241128 20:17:53.224"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.189" endtime="20241128 20:17:53.224"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.224" endtime="20241128 20:17:53.224"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.225" endtime="20241128 20:17:53.225"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.224" endtime="20241128 20:17:53.225"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.189" endtime="20241128 20:17:53.225"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.184" endtime="20241128 20:17:53.225"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.182" endtime="20241128 20:17:53.225"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.182" endtime="20241128 20:17:53.226"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.226" endtime="20241128 20:17:53.226"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.226" endtime="20241128 20:17:53.226"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.182" endtime="20241128 20:17:53.226"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.005" endtime="20241128 20:17:53.227"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.228" endtime="20241128 20:17:53.228"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.227" endtime="20241128 20:17:53.228"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.227" endtime="20241128 20:17:53.228"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.003" endtime="20241128 20:17:53.228"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.230" endtime="20241128 20:17:53.231"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.228" endtime="20241128 20:17:53.231"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.234" endtime="20241128 20:17:53.234"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.235" endtime="20241128 20:17:53.235"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.234" endtime="20241128 20:17:53.235"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.235" endtime="20241128 20:17:53.235"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.235" endtime="20241128 20:17:53.235"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.234" endtime="20241128 20:17:53.236"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.231" endtime="20241128 20:17:53.236"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:53.242" endtime="20241128 20:17:53.242"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.247" endtime="20241128 20:17:53.247"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.236" endtime="20241128 20:17:53.247"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.249" endtime="20241128 20:17:53.249"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.249" endtime="20241128 20:17:53.250"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.249" endtime="20241128 20:17:53.250"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.250" endtime="20241128 20:17:53.250"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.250" endtime="20241128 20:17:53.250"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.249" endtime="20241128 20:17:53.250"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.247" endtime="20241128 20:17:53.250"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:53.257" endtime="20241128 20:17:53.257"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.260" endtime="20241128 20:17:53.260"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.250" endtime="20241128 20:17:53.260"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.262" endtime="20241128 20:17:53.262"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.262" endtime="20241128 20:17:53.264"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.262" endtime="20241128 20:17:53.264"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.264" endtime="20241128 20:17:53.264"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.264" endtime="20241128 20:17:53.264"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.262" endtime="20241128 20:17:53.264"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.261" endtime="20241128 20:17:53.264"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.267" endtime="20241128 20:17:53.267"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.264" endtime="20241128 20:17:53.267"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.274" endtime="20241128 20:17:53.274"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.274" endtime="20241128 20:17:53.274"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.267" endtime="20241128 20:17:53.274"/>
</branch>
<status status="PASS" starttime="20241128 20:17:52.949" endtime="20241128 20:17:53.275"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.275" endtime="20241128 20:17:53.275"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 20:17:53.276" endtime="20241128 20:17:53.276"/>
</return>
<msg timestamp="20241128 20:17:53.276" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 20:17:52.946" endtime="20241128 20:17:53.276"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.278" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 20:17:53.277" endtime="20241128 20:17:53.278"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.280" endtime="20241128 20:17:53.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.281" endtime="20241128 20:17:53.281"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.281" endtime="20241128 20:17:53.282"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.282" endtime="20241128 20:17:53.282"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.282" endtime="20241128 20:17:53.282"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.284" endtime="20241128 20:17:53.285"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.285" endtime="20241128 20:17:53.285"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.286" endtime="20241128 20:17:53.286"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.288" endtime="20241128 20:17:53.288"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.290" endtime="20241128 20:17:53.290"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:53.290" endtime="20241128 20:17:53.290"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.290" endtime="20241128 20:17:53.290"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.290" endtime="20241128 20:17:53.291"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.291" endtime="20241128 20:17:53.291"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.291" endtime="20241128 20:17:53.291"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.291" endtime="20241128 20:17:53.291"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.291" endtime="20241128 20:17:53.291"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.292" endtime="20241128 20:17:53.292"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.292" endtime="20241128 20:17:53.292"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.292" endtime="20241128 20:17:53.292"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.291" endtime="20241128 20:17:53.292"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.290" endtime="20241128 20:17:53.292"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.290" endtime="20241128 20:17:53.292"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:53.292" endtime="20241128 20:17:53.292"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.292" endtime="20241128 20:17:53.292"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.292" endtime="20241128 20:17:53.294"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.294" endtime="20241128 20:17:53.294"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.294" endtime="20241128 20:17:53.294"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.294" endtime="20241128 20:17:53.294"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.295" endtime="20241128 20:17:53.295"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.295" endtime="20241128 20:17:53.295"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.295" endtime="20241128 20:17:53.295"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.294" endtime="20241128 20:17:53.295"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.292" endtime="20241128 20:17:53.295"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.292" endtime="20241128 20:17:53.295"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.279" endtime="20241128 20:17:53.295"/>
</iter>
<status status="NOT RUN" starttime="20241128 20:17:53.279" endtime="20241128 20:17:53.296"/>
</for>
<msg timestamp="20241128 20:17:53.296" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 20:17:53.276" endtime="20241128 20:17:53.296"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.296" endtime="20241128 20:17:53.297"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:53.305" endtime="20241128 20:17:53.305"/>
</kw>
<msg timestamp="20241128 20:17:53.305" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.304" endtime="20241128 20:17:53.305"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.307" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 20:17:53.306" endtime="20241128 20:17:53.307"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.308" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.308" endtime="20241128 20:17:53.308"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.307" endtime="20241128 20:17:53.308"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.309" endtime="20241128 20:17:53.309"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.309" endtime="20241128 20:17:53.309"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.307" endtime="20241128 20:17:53.309"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.306" endtime="20241128 20:17:53.309"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.306" endtime="20241128 20:17:53.309"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:53.309" endtime="20241128 20:17:53.309"/>
</return>
<msg timestamp="20241128 20:17:53.310" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.304" endtime="20241128 20:17:53.310"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.311" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 20:17:53.310" endtime="20241128 20:17:53.311"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.310" endtime="20241128 20:17:53.311"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.311" endtime="20241128 20:17:53.311"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.311" endtime="20241128 20:17:53.312"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.310" endtime="20241128 20:17:53.312"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:53.314" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '18', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage'...</msg>
<status status="PASS" starttime="20241128 20:17:53.312" endtime="20241128 20:17:53.314"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:53.316" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "18", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage"...</msg>
<status status="PASS" starttime="20241128 20:17:53.316" endtime="20241128 20:17:53.316"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:53.323" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:53.323" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:53.317" endtime="20241128 20:17:53.323"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.324" endtime="20241128 20:17:53.324"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:53.324" endtime="20241128 20:17:53.324"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.315" endtime="20241128 20:17:53.325"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.297" endtime="20241128 20:17:53.325"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 20:17:53.326" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 20:17:53.325" endtime="20241128 20:17:53.326"/>
</kw>
<status status="PASS" starttime="20241128 20:17:52.939" endtime="20241128 20:17:53.326"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.327" endtime="20241128 20:17:53.327"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.327" endtime="20241128 20:17:53.328"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.328" endtime="20241128 20:17:53.328"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.326" endtime="20241128 20:17:53.328"/>
</branch>
<status status="PASS" starttime="20241128 20:17:52.939" endtime="20241128 20:17:53.329"/>
</try>
<status status="PASS" starttime="20241128 20:17:52.939" endtime="20241128 20:17:53.329"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.333" level="INFO">${action} = {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:58.626Z', 'updatedAt': '2024-11-28T06:56:58....</msg>
<status status="PASS" starttime="20241128 20:17:53.332" endtime="20241128 20:17:53.334"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.334" endtime="20241128 20:17:53.335"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 20:17:53.336" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:58.757Z', 'updatedAt': '2024-11-28T06:57:07.363Z'}</msg>
<status status="PASS" starttime="20241128 20:17:53.336" endtime="20241128 20:17:53.336"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.337" endtime="20241128 20:17:53.337"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.337" endtime="20241128 20:17:53.337"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.337" endtime="20241128 20:17:53.337"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.336" endtime="20241128 20:17:53.338"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.339" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 20:17:53.339" endtime="20241128 20:17:53.339"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.340" endtime="20241128 20:17:53.340"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.340" endtime="20241128 20:17:53.340"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.341" endtime="20241128 20:17:53.341"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.341" endtime="20241128 20:17:53.341"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.344" endtime="20241128 20:17:53.344"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.341" endtime="20241128 20:17:53.345"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.349" endtime="20241128 20:17:53.349"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.352" endtime="20241128 20:17:53.352"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.345" endtime="20241128 20:17:53.352"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.354" endtime="20241128 20:17:53.354"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.352" endtime="20241128 20:17:53.354"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.358" endtime="20241128 20:17:53.358"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.355" endtime="20241128 20:17:53.358"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.375" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 20:17:53.369" endtime="20241128 20:17:53.375"/>
</kw>
<msg timestamp="20241128 20:17:53.376" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.369" endtime="20241128 20:17:53.376"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.376" endtime="20241128 20:17:53.376"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.368" endtime="20241128 20:17:53.376"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.376" endtime="20241128 20:17:53.377"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.377" endtime="20241128 20:17:53.377"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.376" endtime="20241128 20:17:53.377"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.368" endtime="20241128 20:17:53.377"/>
</try>
<msg timestamp="20241128 20:17:53.377" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.368" endtime="20241128 20:17:53.378"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.378" endtime="20241128 20:17:53.378"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.366" endtime="20241128 20:17:53.378"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.378" endtime="20241128 20:17:53.378"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.378" endtime="20241128 20:17:53.378"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.366" endtime="20241128 20:17:53.378"/>
</try>
<msg timestamp="20241128 20:17:53.379" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.366" endtime="20241128 20:17:53.379"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.384" endtime="20241128 20:17:53.384"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.384" endtime="20241128 20:17:53.384"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.384" endtime="20241128 20:17:53.384"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.382" endtime="20241128 20:17:53.384"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.381" endtime="20241128 20:17:53.385"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.365" endtime="20241128 20:17:53.385"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.402" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 20:17:53.396" endtime="20241128 20:17:53.402"/>
</kw>
<msg timestamp="20241128 20:17:53.402" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.395" endtime="20241128 20:17:53.402"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.402" endtime="20241128 20:17:53.402"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.395" endtime="20241128 20:17:53.402"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.404" endtime="20241128 20:17:53.404"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.404" endtime="20241128 20:17:53.404"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.402" endtime="20241128 20:17:53.404"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.395" endtime="20241128 20:17:53.404"/>
</try>
<msg timestamp="20241128 20:17:53.405" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.394" endtime="20241128 20:17:53.405"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.405" endtime="20241128 20:17:53.405"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.393" endtime="20241128 20:17:53.405"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.405" endtime="20241128 20:17:53.405"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.405" endtime="20241128 20:17:53.405"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.393" endtime="20241128 20:17:53.405"/>
</try>
<msg timestamp="20241128 20:17:53.406" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.393" endtime="20241128 20:17:53.406"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.409" endtime="20241128 20:17:53.409"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.409" endtime="20241128 20:17:53.409"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.409" endtime="20241128 20:17:53.410"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.409" endtime="20241128 20:17:53.410"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.407" endtime="20241128 20:17:53.410"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.392" endtime="20241128 20:17:53.410"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 20:17:53.421" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 20:17:53.422" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 20:17:53.411" endtime="20241128 20:17:53.422"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 20:17:53.422" endtime="20241128 20:17:53.422"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.410" endtime="20241128 20:17:53.422"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.422" endtime="20241128 20:17:53.422"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.422" endtime="20241128 20:17:53.422"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.422" endtime="20241128 20:17:53.422"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.410" endtime="20241128 20:17:53.424"/>
</try>
<msg timestamp="20241128 20:17:53.424" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 20:17:53.389" endtime="20241128 20:17:53.424"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.427" endtime="20241128 20:17:53.427"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.427" endtime="20241128 20:17:53.427"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.427" endtime="20241128 20:17:53.428"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.426" endtime="20241128 20:17:53.428"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.426" endtime="20241128 20:17:53.428"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.388" endtime="20241128 20:17:53.429"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.429" endtime="20241128 20:17:53.429"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.429" endtime="20241128 20:17:53.429"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.388" endtime="20241128 20:17:53.430"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.387" endtime="20241128 20:17:53.430"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.446" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241128 20:17:53.440" endtime="20241128 20:17:53.446"/>
</kw>
<msg timestamp="20241128 20:17:53.446" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.440" endtime="20241128 20:17:53.446"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.446" endtime="20241128 20:17:53.446"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.439" endtime="20241128 20:17:53.446"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.447" endtime="20241128 20:17:53.447"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.447" endtime="20241128 20:17:53.447"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.447" endtime="20241128 20:17:53.447"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.439" endtime="20241128 20:17:53.448"/>
</try>
<msg timestamp="20241128 20:17:53.448" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.437" endtime="20241128 20:17:53.448"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.448" endtime="20241128 20:17:53.448"/>
</return>
<msg timestamp="20241128 20:17:53.448" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.434" endtime="20241128 20:17:53.448"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.452" endtime="20241128 20:17:53.452"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.452" endtime="20241128 20:17:53.452"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.452" endtime="20241128 20:17:53.452"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.451" endtime="20241128 20:17:53.452"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.450" endtime="20241128 20:17:53.452"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.432" endtime="20241128 20:17:53.452"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.362" endtime="20241128 20:17:53.454"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.474" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241128 20:17:53.460" endtime="20241128 20:17:53.474"/>
</kw>
<msg timestamp="20241128 20:17:53.475" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.459" endtime="20241128 20:17:53.475"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.475" endtime="20241128 20:17:53.475"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.459" endtime="20241128 20:17:53.475"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.475" endtime="20241128 20:17:53.476"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.476" endtime="20241128 20:17:53.476"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.475" endtime="20241128 20:17:53.476"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.459" endtime="20241128 20:17:53.476"/>
</try>
<msg timestamp="20241128 20:17:53.476" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.458" endtime="20241128 20:17:53.476"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.477" endtime="20241128 20:17:53.477"/>
</return>
<msg timestamp="20241128 20:17:53.477" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.457" endtime="20241128 20:17:53.477"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.481" endtime="20241128 20:17:53.481"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.481" endtime="20241128 20:17:53.482"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.480" endtime="20241128 20:17:53.482"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.480" endtime="20241128 20:17:53.482"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.479" endtime="20241128 20:17:53.482"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.456" endtime="20241128 20:17:53.483"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:53.483" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 20:17:53.483" endtime="20241128 20:17:53.483"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.485" endtime="20241128 20:17:53.485"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.488" endtime="20241128 20:17:53.488"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.485" endtime="20241128 20:17:53.488"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:53.488" endtime="20241128 20:17:53.489"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.488" endtime="20241128 20:17:53.489"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.485" endtime="20241128 20:17:53.489"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 20:17:53.490" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 20:17:53.489" endtime="20241128 20:17:53.516"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.489" endtime="20241128 20:17:53.516"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.517" endtime="20241128 20:17:53.517"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.517" endtime="20241128 20:17:53.517"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.516" endtime="20241128 20:17:53.517"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.489" endtime="20241128 20:17:53.517"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.484" endtime="20241128 20:17:53.518"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.484" endtime="20241128 20:17:53.518"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.484" endtime="20241128 20:17:53.518"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.518" endtime="20241128 20:17:53.518"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.518" endtime="20241128 20:17:53.518"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.484" endtime="20241128 20:17:53.518"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.361" endtime="20241128 20:17:53.519"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.519" endtime="20241128 20:17:53.519"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.519" endtime="20241128 20:17:53.520"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.519" endtime="20241128 20:17:53.520"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.359" endtime="20241128 20:17:53.520"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.521" endtime="20241128 20:17:53.521"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.520" endtime="20241128 20:17:53.521"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.523" endtime="20241128 20:17:53.523"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.523" endtime="20241128 20:17:53.523"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.523" endtime="20241128 20:17:53.524"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.524" endtime="20241128 20:17:53.524"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.524" endtime="20241128 20:17:53.524"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.523" endtime="20241128 20:17:53.524"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.522" endtime="20241128 20:17:53.524"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:53.531" endtime="20241128 20:17:53.531"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.536" endtime="20241128 20:17:53.536"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.524" endtime="20241128 20:17:53.536"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.537" endtime="20241128 20:17:53.538"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.538" endtime="20241128 20:17:53.538"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.538" endtime="20241128 20:17:53.538"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.539" endtime="20241128 20:17:53.539"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.538" endtime="20241128 20:17:53.539"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.538" endtime="20241128 20:17:53.539"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.536" endtime="20241128 20:17:53.539"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:53.546" endtime="20241128 20:17:53.546"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.550" endtime="20241128 20:17:53.550"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.539" endtime="20241128 20:17:53.550"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.552" endtime="20241128 20:17:53.552"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.552" endtime="20241128 20:17:53.553"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.552" endtime="20241128 20:17:53.553"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.553" endtime="20241128 20:17:53.553"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.553" endtime="20241128 20:17:53.553"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.552" endtime="20241128 20:17:53.553"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.550" endtime="20241128 20:17:53.553"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.556" endtime="20241128 20:17:53.556"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.553" endtime="20241128 20:17:53.557"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.562" endtime="20241128 20:17:53.562"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.564" endtime="20241128 20:17:53.564"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.557" endtime="20241128 20:17:53.564"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.340" endtime="20241128 20:17:53.564"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.564" endtime="20241128 20:17:53.565"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 20:17:53.565" endtime="20241128 20:17:53.565"/>
</return>
<msg timestamp="20241128 20:17:53.565" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 20:17:53.338" endtime="20241128 20:17:53.565"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.567" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 20:17:53.566" endtime="20241128 20:17:53.567"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.567" endtime="20241128 20:17:53.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.568" endtime="20241128 20:17:53.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.568" endtime="20241128 20:17:53.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.568" endtime="20241128 20:17:53.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.569" endtime="20241128 20:17:53.569"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.569" endtime="20241128 20:17:53.569"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.569" endtime="20241128 20:17:53.569"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.570" endtime="20241128 20:17:53.570"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.571" endtime="20241128 20:17:53.571"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.574" endtime="20241128 20:17:53.574"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:53.575" endtime="20241128 20:17:53.575"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.575" endtime="20241128 20:17:53.575"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.575" endtime="20241128 20:17:53.575"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.575" endtime="20241128 20:17:53.575"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.576" endtime="20241128 20:17:53.576"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.575" endtime="20241128 20:17:53.576"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.575" endtime="20241128 20:17:53.576"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.576" endtime="20241128 20:17:53.576"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.576" endtime="20241128 20:17:53.576"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.576" endtime="20241128 20:17:53.577"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.576" endtime="20241128 20:17:53.577"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.574" endtime="20241128 20:17:53.577"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.574" endtime="20241128 20:17:53.577"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:53.577" endtime="20241128 20:17:53.577"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.577" endtime="20241128 20:17:53.578"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.577" endtime="20241128 20:17:53.578"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.578" endtime="20241128 20:17:53.578"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.578" endtime="20241128 20:17:53.578"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.578" endtime="20241128 20:17:53.578"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.579" endtime="20241128 20:17:53.579"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.580" endtime="20241128 20:17:53.580"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.579" endtime="20241128 20:17:53.580"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.579" endtime="20241128 20:17:53.580"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.577" endtime="20241128 20:17:53.580"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.577" endtime="20241128 20:17:53.580"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.567" endtime="20241128 20:17:53.580"/>
</iter>
<status status="NOT RUN" starttime="20241128 20:17:53.567" endtime="20241128 20:17:53.580"/>
</for>
<msg timestamp="20241128 20:17:53.580" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 20:17:53.565" endtime="20241128 20:17:53.581"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.581" endtime="20241128 20:17:53.581"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:53.587" endtime="20241128 20:17:53.588"/>
</kw>
<msg timestamp="20241128 20:17:53.588" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.586" endtime="20241128 20:17:53.588"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.589" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:57.275Z', 'updatedAt': '2024-11-28T06:56:57.275Z'}</msg>
<status status="PASS" starttime="20241128 20:17:53.589" endtime="20241128 20:17:53.589"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.590" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.590" endtime="20241128 20:17:53.590"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.589" endtime="20241128 20:17:53.590"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.590" endtime="20241128 20:17:53.591"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.590" endtime="20241128 20:17:53.591"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.589" endtime="20241128 20:17:53.591"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.588" endtime="20241128 20:17:53.591"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.588" endtime="20241128 20:17:53.591"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:53.591" endtime="20241128 20:17:53.591"/>
</return>
<msg timestamp="20241128 20:17:53.591" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.585" endtime="20241128 20:17:53.591"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.592" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241128 20:17:53.592" endtime="20241128 20:17:53.592"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.592" endtime="20241128 20:17:53.592"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.593" endtime="20241128 20:17:53.593"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.593" endtime="20241128 20:17:53.593"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.592" endtime="20241128 20:17:53.593"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:53.595" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '19', 'status': 'COMPLETED', 'actionName': 'Set Password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', 'a...</msg>
<status status="PASS" starttime="20241128 20:17:53.593" endtime="20241128 20:17:53.595"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:53.597" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "19", "status": "COMPLETED", "actionName": "Set Password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "a...</msg>
<status status="PASS" starttime="20241128 20:17:53.596" endtime="20241128 20:17:53.597"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:53.603" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:53.603" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:53.598" endtime="20241128 20:17:53.603"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.604" endtime="20241128 20:17:53.604"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:53.604" endtime="20241128 20:17:53.605"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.595" endtime="20241128 20:17:53.605"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.582" endtime="20241128 20:17:53.605"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 20:17:53.606" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 20:17:53.605" endtime="20241128 20:17:53.606"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.331" endtime="20241128 20:17:53.606"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.606" endtime="20241128 20:17:53.606"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.607" endtime="20241128 20:17:53.607"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.607" endtime="20241128 20:17:53.607"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.606" endtime="20241128 20:17:53.607"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.331" endtime="20241128 20:17:53.607"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.330" endtime="20241128 20:17:53.607"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.608" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:57:48.296Z', 'updatedAt': '2024-11-28T06:57:4...</msg>
<status status="PASS" starttime="20241128 20:17:53.608" endtime="20241128 20:17:53.609"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.609" endtime="20241128 20:17:53.610"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 20:17:53.611" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:57:48.432Z', 'updatedAt': '2024-11-28T06:57:48.432Z'}</msg>
<status status="PASS" starttime="20241128 20:17:53.610" endtime="20241128 20:17:53.611"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.611" endtime="20241128 20:17:53.612"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.612" endtime="20241128 20:17:53.613"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.611" endtime="20241128 20:17:53.613"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.611" endtime="20241128 20:17:53.613"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.616" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 20:17:53.615" endtime="20241128 20:17:53.616"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.618" endtime="20241128 20:17:53.618"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.617" endtime="20241128 20:17:53.618"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.619" endtime="20241128 20:17:53.619"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.618" endtime="20241128 20:17:53.619"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.644" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241128 20:17:53.637" endtime="20241128 20:17:53.644"/>
</kw>
<msg timestamp="20241128 20:17:53.644" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.636" endtime="20241128 20:17:53.644"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.644" endtime="20241128 20:17:53.645"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.636" endtime="20241128 20:17:53.645"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.646" endtime="20241128 20:17:53.646"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.647" endtime="20241128 20:17:53.647"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.645" endtime="20241128 20:17:53.647"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.636" endtime="20241128 20:17:53.647"/>
</try>
<msg timestamp="20241128 20:17:53.648" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.635" endtime="20241128 20:17:53.648"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.648" endtime="20241128 20:17:53.648"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.633" endtime="20241128 20:17:53.648"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.649" endtime="20241128 20:17:53.649"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.649" endtime="20241128 20:17:53.649"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.633" endtime="20241128 20:17:53.649"/>
</try>
<msg timestamp="20241128 20:17:53.650" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.632" endtime="20241128 20:17:53.650"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.656" endtime="20241128 20:17:53.656"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.656" endtime="20241128 20:17:53.656"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.655" endtime="20241128 20:17:53.656"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.655" endtime="20241128 20:17:53.657"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.652" endtime="20241128 20:17:53.657"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.631" endtime="20241128 20:17:53.657"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.669" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241128 20:17:53.664" endtime="20241128 20:17:53.670"/>
</kw>
<msg timestamp="20241128 20:17:53.670" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.663" endtime="20241128 20:17:53.670"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.670" endtime="20241128 20:17:53.670"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.663" endtime="20241128 20:17:53.670"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.671" endtime="20241128 20:17:53.671"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.671" endtime="20241128 20:17:53.671"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.670" endtime="20241128 20:17:53.671"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.663" endtime="20241128 20:17:53.671"/>
</try>
<msg timestamp="20241128 20:17:53.672" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.662" endtime="20241128 20:17:53.672"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.672" endtime="20241128 20:17:53.672"/>
</return>
<msg timestamp="20241128 20:17:53.672" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.660" endtime="20241128 20:17:53.672"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.676" endtime="20241128 20:17:53.676"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.676" endtime="20241128 20:17:53.676"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.676" endtime="20241128 20:17:53.677"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.675" endtime="20241128 20:17:53.677"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.674" endtime="20241128 20:17:53.677"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.659" endtime="20241128 20:17:53.677"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 20:17:53.699" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241128 20:17:53.684" endtime="20241128 20:17:53.700"/>
</kw>
<msg timestamp="20241128 20:17:53.700" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.683" endtime="20241128 20:17:53.700"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.700" endtime="20241128 20:17:53.700"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.683" endtime="20241128 20:17:53.700"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.701" endtime="20241128 20:17:53.701"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.701" endtime="20241128 20:17:53.701"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.700" endtime="20241128 20:17:53.701"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.683" endtime="20241128 20:17:53.701"/>
</try>
<msg timestamp="20241128 20:17:53.702" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.682" endtime="20241128 20:17:53.702"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 20:17:53.702" endtime="20241128 20:17:53.702"/>
</return>
<msg timestamp="20241128 20:17:53.702" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.681" endtime="20241128 20:17:53.702"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.706" endtime="20241128 20:17:53.706"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.706" endtime="20241128 20:17:53.706"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.706" endtime="20241128 20:17:53.706"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.706" endtime="20241128 20:17:53.707"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.704" endtime="20241128 20:17:53.707"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.680" endtime="20241128 20:17:53.707"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.626" endtime="20241128 20:17:53.707"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:53.708" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 20:17:53.707" endtime="20241128 20:17:53.708"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.710" endtime="20241128 20:17:53.710"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.710" endtime="20241128 20:17:53.710"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:53.711" endtime="20241128 20:17:53.711"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.710" endtime="20241128 20:17:53.711"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.709" endtime="20241128 20:17:53.711"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 20:17:53.712" endtime="20241128 20:17:53.762"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.711" endtime="20241128 20:17:53.763"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.763" endtime="20241128 20:17:53.763"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.764" endtime="20241128 20:17:53.764"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.763" endtime="20241128 20:17:53.764"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.711" endtime="20241128 20:17:53.764"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.709" endtime="20241128 20:17:53.765"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.708" endtime="20241128 20:17:53.765"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.708" endtime="20241128 20:17:53.765"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.765" endtime="20241128 20:17:53.765"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.765" endtime="20241128 20:17:53.765"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.708" endtime="20241128 20:17:53.766"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.624" endtime="20241128 20:17:53.766"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.620" endtime="20241128 20:17:53.766"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.769" endtime="20241128 20:17:53.769"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.771" endtime="20241128 20:17:53.771"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.766" endtime="20241128 20:17:53.771"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.773" endtime="20241128 20:17:53.773"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.771" endtime="20241128 20:17:53.773"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.776" endtime="20241128 20:17:53.776"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.773" endtime="20241128 20:17:53.776"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.779" endtime="20241128 20:17:53.779"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.780" endtime="20241128 20:17:53.780"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.780" endtime="20241128 20:17:53.780"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.780" endtime="20241128 20:17:53.781"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.776" endtime="20241128 20:17:53.781"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.782" endtime="20241128 20:17:53.784"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.781" endtime="20241128 20:17:53.784"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.785" endtime="20241128 20:17:53.785"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.786" endtime="20241128 20:17:53.786"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.785" endtime="20241128 20:17:53.786"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.786" endtime="20241128 20:17:53.786"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.786" endtime="20241128 20:17:53.786"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.785" endtime="20241128 20:17:53.786"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.784" endtime="20241128 20:17:53.786"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:53.793" endtime="20241128 20:17:53.793"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.797" endtime="20241128 20:17:53.797"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.787" endtime="20241128 20:17:53.797"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.799" endtime="20241128 20:17:53.799"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.799" endtime="20241128 20:17:53.799"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.799" endtime="20241128 20:17:53.800"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.800" endtime="20241128 20:17:53.800"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.800" endtime="20241128 20:17:53.800"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.799" endtime="20241128 20:17:53.800"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.797" endtime="20241128 20:17:53.800"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 20:17:53.806" endtime="20241128 20:17:53.807"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.810" endtime="20241128 20:17:53.810"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.800" endtime="20241128 20:17:53.810"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.812" endtime="20241128 20:17:53.812"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.812" endtime="20241128 20:17:53.812"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.812" endtime="20241128 20:17:53.812"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.814" endtime="20241128 20:17:53.814"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.814" endtime="20241128 20:17:53.814"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.812" endtime="20241128 20:17:53.814"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.811" endtime="20241128 20:17:53.814"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.817" endtime="20241128 20:17:53.817"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.814" endtime="20241128 20:17:53.817"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.824" endtime="20241128 20:17:53.825"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.825" endtime="20241128 20:17:53.825"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.817" endtime="20241128 20:17:53.825"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.616" endtime="20241128 20:17:53.825"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.826" endtime="20241128 20:17:53.827"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 20:17:53.827" endtime="20241128 20:17:53.827"/>
</return>
<msg timestamp="20241128 20:17:53.827" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 20:17:53.613" endtime="20241128 20:17:53.827"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.828" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241128 20:17:53.828" endtime="20241128 20:17:53.828"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.829" endtime="20241128 20:17:53.829"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.829" endtime="20241128 20:17:53.829"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.830" endtime="20241128 20:17:53.830"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.830" endtime="20241128 20:17:53.830"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.830" endtime="20241128 20:17:53.830"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.831" endtime="20241128 20:17:53.831"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.831" endtime="20241128 20:17:53.831"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.831" endtime="20241128 20:17:53.832"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.834" endtime="20241128 20:17:53.834"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.835" endtime="20241128 20:17:53.836"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:53.836" endtime="20241128 20:17:53.836"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.836" endtime="20241128 20:17:53.836"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.836" endtime="20241128 20:17:53.836"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.837" endtime="20241128 20:17:53.837"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.837" endtime="20241128 20:17:53.837"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.836" endtime="20241128 20:17:53.837"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.836" endtime="20241128 20:17:53.837"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.838" endtime="20241128 20:17:53.838"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.838" endtime="20241128 20:17:53.838"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.837" endtime="20241128 20:17:53.838"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.837" endtime="20241128 20:17:53.838"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.836" endtime="20241128 20:17:53.838"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.836" endtime="20241128 20:17:53.838"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 20:17:53.839" endtime="20241128 20:17:53.839"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.839" endtime="20241128 20:17:53.839"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.838" endtime="20241128 20:17:53.839"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.839" endtime="20241128 20:17:53.839"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.839" endtime="20241128 20:17:53.840"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.839" endtime="20241128 20:17:53.840"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.840" endtime="20241128 20:17:53.840"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 20:17:53.840" endtime="20241128 20:17:53.840"/>
</return>
<status status="NOT RUN" starttime="20241128 20:17:53.840" endtime="20241128 20:17:53.840"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.840" endtime="20241128 20:17:53.840"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.838" endtime="20241128 20:17:53.841"/>
</branch>
<status status="NOT RUN" starttime="20241128 20:17:53.838" endtime="20241128 20:17:53.841"/>
</if>
<status status="NOT RUN" starttime="20241128 20:17:53.829" endtime="20241128 20:17:53.841"/>
</iter>
<status status="NOT RUN" starttime="20241128 20:17:53.828" endtime="20241128 20:17:53.841"/>
</for>
<msg timestamp="20241128 20:17:53.841" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 20:17:53.827" endtime="20241128 20:17:53.841"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.841" endtime="20241128 20:17:53.842"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 20:17:53.847" endtime="20241128 20:17:53.848"/>
</kw>
<msg timestamp="20241128 20:17:53.848" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.847" endtime="20241128 20:17:53.848"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.849" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@type="submit" and text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-28T06:57:46.898Z', 'updatedAt': '2024-11-28T14:47:44.548Z'}</msg>
<status status="PASS" starttime="20241128 20:17:53.849" endtime="20241128 20:17:53.849"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.850" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.850" endtime="20241128 20:17:53.850"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.850" endtime="20241128 20:17:53.850"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.851" endtime="20241128 20:17:53.851"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.851" endtime="20241128 20:17:53.851"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.850" endtime="20241128 20:17:53.851"/>
</if>
<status status="PASS" starttime="20241128 20:17:53.849" endtime="20241128 20:17:53.851"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.848" endtime="20241128 20:17:53.851"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 20:17:53.851" endtime="20241128 20:17:53.851"/>
</return>
<msg timestamp="20241128 20:17:53.852" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 20:17:53.846" endtime="20241128 20:17:53.852"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 20:17:53.854" level="INFO">${xpath} = //button[@type="submit" and text()="Login"]</msg>
<status status="PASS" starttime="20241128 20:17:53.852" endtime="20241128 20:17:53.854"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.852" endtime="20241128 20:17:53.854"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.854" endtime="20241128 20:17:53.854"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.854" endtime="20241128 20:17:53.854"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.852" endtime="20241128 20:17:53.854"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:53.855" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '20', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '', ...</msg>
<status status="PASS" starttime="20241128 20:17:53.855" endtime="20241128 20:17:53.855"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:53.857" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "20", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue": ...</msg>
<status status="PASS" starttime="20241128 20:17:53.856" endtime="20241128 20:17:53.857"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:53.864" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:53.864" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:53.857" endtime="20241128 20:17:53.864"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.865" endtime="20241128 20:17:53.866"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:53.866" endtime="20241128 20:17:53.866"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.856" endtime="20241128 20:17:53.867"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.842" endtime="20241128 20:17:53.867"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 20:17:53.868" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 20:17:53.867" endtime="20241128 20:17:53.868"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.608" endtime="20241128 20:17:53.868"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.868" endtime="20241128 20:17:53.868"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.868" endtime="20241128 20:17:53.869"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.869" endtime="20241128 20:17:53.869"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.868" endtime="20241128 20:17:53.869"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.608" endtime="20241128 20:17:53.869"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.608" endtime="20241128 20:17:53.870"/>
</iter>
<status status="PASS" starttime="20241128 20:17:49.812" endtime="20241128 20:17:53.870"/>
</for>
<status status="PASS" starttime="20241128 20:17:49.811" endtime="20241128 20:17:53.870"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.810" endtime="20241128 20:17:53.870"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:53.873" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '5', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 20:17:53.871" endtime="20241128 20:17:53.873"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:53.874" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "5", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 20:17:53.874" endtime="20241128 20:17:53.874"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:53.891" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:53.891" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:53.874" endtime="20241128 20:17:53.891"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.891" endtime="20241128 20:17:53.892"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:53.892" endtime="20241128 20:17:53.892"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.873" endtime="20241128 20:17:53.893"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.870" endtime="20241128 20:17:53.893"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.771" endtime="20241128 20:17:53.893"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.894" endtime="20241128 20:17:53.894"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.894" endtime="20241128 20:17:53.894"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.894" endtime="20241128 20:17:53.894"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.893" endtime="20241128 20:17:53.894"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.771" endtime="20241128 20:17:53.894"/>
</try>
<status status="PASS" starttime="20241128 20:17:49.770" endtime="20241128 20:17:53.895"/>
</iter>
<status status="PASS" starttime="20241128 20:17:49.770" endtime="20241128 20:17:53.895"/>
</for>
<status status="PASS" starttime="20241128 20:17:49.769" endtime="20241128 20:17:53.895"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.769" endtime="20241128 20:17:53.895"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 20:17:53.901" level="INFO">${response_message} = {'testCaseRunId': '4', 'status': 'PASS', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 20:17:53.899" endtime="20241128 20:17:53.901"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 20:17:53.902" level="INFO">${json_response} = {"testCaseRunId": "4", "status": "PASS", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 20:17:53.902" endtime="20241128 20:17:53.902"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 20:17:53.909" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 20:17:53.909" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 20:17:53.902" endtime="20241128 20:17:53.909"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:53.910" endtime="20241128 20:17:53.910"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 20:17:53.911" endtime="20241128 20:17:53.911"/>
</return>
<status status="PASS" starttime="20241128 20:17:53.901" endtime="20241128 20:17:53.911"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.896" endtime="20241128 20:17:53.912"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.747" endtime="20241128 20:17:53.912"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.912" endtime="20241128 20:17:53.912"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<status status="NOT RUN" starttime="20241128 20:17:53.914" endtime="20241128 20:17:53.914"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.914" endtime="20241128 20:17:53.915"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.912" endtime="20241128 20:17:53.915"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.747" endtime="20241128 20:17:53.915"/>
</try>
<status status="PASS" starttime="20241128 20:17:49.724" endtime="20241128 20:17:53.915"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.916" endtime="20241128 20:17:53.916"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.915" endtime="20241128 20:17:53.916"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.724" endtime="20241128 20:17:53.917"/>
</if>
<status status="PASS" starttime="20241128 20:17:49.709" endtime="20241128 20:17:53.917"/>
</kw>
<status status="PASS" starttime="20241128 20:17:49.709" endtime="20241128 20:17:53.917"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:53.918" endtime="20241128 20:17:53.918"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:53.917" endtime="20241128 20:17:53.918"/>
</branch>
<status status="PASS" starttime="20241128 20:17:49.709" endtime="20241128 20:17:53.918"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 20:17:54.211" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 20:17:53.919" endtime="20241128 20:17:54.211"/>
</kw>
<status status="PASS" starttime="20241128 20:17:53.919" endtime="20241128 20:17:54.211"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 20:17:54.212" endtime="20241128 20:17:54.212"/>
</kw>
<status status="NOT RUN" starttime="20241128 20:17:54.211" endtime="20241128 20:17:54.212"/>
</branch>
<status status="PASS" starttime="20241128 20:17:53.919" endtime="20241128 20:17:54.212"/>
</try>
<status status="PASS" starttime="20241128 20:17:53.918" endtime="20241128 20:17:54.212"/>
</kw>
<status status="PASS" starttime="20241128 20:17:23.993" endtime="20241128 20:17:54.213"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 20:17:54.213" endtime="20241128 20:17:54.214"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 23:25:28.479" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '6', 'testCaseId': '2', 'testSuiteRunId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T17:55:27.714Z', 'createdAt': '2024-11-28T17:...</msg>
<status status="PASS" starttime="20241128 20:17:54.214" endtime="20241128 23:25:28.481"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 23:25:28.497" endtime="20241128 23:25:28.497"/>
</break>
<status status="NOT RUN" starttime="20241128 23:25:28.495" endtime="20241128 23:25:28.497"/>
</branch>
<status status="PASS" starttime="20241128 23:25:28.487" endtime="20241128 23:25:28.497"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 23:25:28.511" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\87d85caa-ecaf-4a08-b7e1-aca9ff37790e"}</msg>
<msg timestamp="20241128 23:25:30.371" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\87d85caa-ecaf-4a08-b7e1-aca9ff37790e"}</msg>
<status status="PASS" starttime="20241128 23:25:28.503" endtime="20241128 23:25:30.373"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 23:25:30.374" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 23:25:30.389" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 23:25:30.389" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 23:25:30.373" endtime="20241128 23:25:30.389"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 23:25:30.389" endtime="20241128 23:25:30.389"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:25:33.343" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 23:25:33.351" level="INFO">${page_id} = {'page_id': 'page=88fa32a5-8881-4ef3-988c-5ec2c92fd810', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:25:30.394" endtime="20241128 23:25:33.351"/>
</kw>
<status status="PASS" starttime="20241128 23:25:28.497" endtime="20241128 23:25:33.352"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:33.354" endtime="20241128 23:25:33.378"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:33.394" endtime="20241128 23:25:33.401"/>
</kw>
<msg timestamp="20241128 23:25:33.401" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.394" endtime="20241128 23:25:33.401"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.401" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 23:25:33.401" endtime="20241128 23:25:33.401"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.409" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.409" endtime="20241128 23:25:33.409"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.409" endtime="20241128 23:25:33.409"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.409" endtime="20241128 23:25:33.409"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:33.409" endtime="20241128 23:25:33.409"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.401" endtime="20241128 23:25:33.409"/>
</if>
<status status="PASS" starttime="20241128 23:25:33.401" endtime="20241128 23:25:33.409"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.401" endtime="20241128 23:25:33.409"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:33.409" endtime="20241128 23:25:33.409"/>
</return>
<msg timestamp="20241128 23:25:33.417" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.394" endtime="20241128 23:25:33.417"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.417" endtime="20241128 23:25:33.417"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 23:25:33.417" endtime="20241128 23:25:33.417"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:33.417" endtime="20241128 23:25:33.417"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.417" endtime="20241128 23:25:33.417"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:33.425" endtime="20241128 23:25:33.425"/>
</kw>
<msg timestamp="20241128 23:25:33.427" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.417" endtime="20241128 23:25:33.427"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.427" level="INFO">${values} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241128 23:25:33.427" endtime="20241128 23:25:33.427"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.431" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.429" endtime="20241128 23:25:33.431"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.429" endtime="20241128 23:25:33.431"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.431" endtime="20241128 23:25:33.431"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:33.431" endtime="20241128 23:25:33.431"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.427" endtime="20241128 23:25:33.431"/>
</if>
<status status="PASS" starttime="20241128 23:25:33.427" endtime="20241128 23:25:33.431"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.427" endtime="20241128 23:25:33.431"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:33.431" endtime="20241128 23:25:33.431"/>
</return>
<msg timestamp="20241128 23:25:33.433" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.417" endtime="20241128 23:25:33.433"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:33.433" endtime="20241128 23:25:33.433"/>
</kw>
<msg timestamp="20241128 23:25:33.433" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.433" endtime="20241128 23:25:33.433"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.442" level="INFO">${values} = {'id': '6', 'testCaseId': '2', 'testSuiteRunId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T17:55:27.714Z', 'createdAt': '2024-11-28T17:55:27.714Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 23:25:33.433" endtime="20241128 23:25:33.442"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.442" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.442" endtime="20241128 23:25:33.442"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.442" endtime="20241128 23:25:33.442"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.444" endtime="20241128 23:25:33.444"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:33.444" endtime="20241128 23:25:33.444"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.442" endtime="20241128 23:25:33.444"/>
</if>
<status status="PASS" starttime="20241128 23:25:33.433" endtime="20241128 23:25:33.444"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.433" endtime="20241128 23:25:33.445"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:33.445" endtime="20241128 23:25:33.445"/>
</return>
<msg timestamp="20241128 23:25:33.446" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.433" endtime="20241128 23:25:33.446"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.448" endtime="20241128 23:25:33.448"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:33.446" endtime="20241128 23:25:33.448"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.446" endtime="20241128 23:25:33.448"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.450" level="INFO">${testCase} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241128 23:25:33.448" endtime="20241128 23:25:33.450"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.451" level="INFO">${testCaseRun} = {'id': '6', 'testCaseId': '2', 'testSuiteRunId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T17:55:27.714Z', 'createdAt': '2024-11-28T17:55:27.714Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 23:25:33.451" endtime="20241128 23:25:33.451"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.451" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 23:25:33.451" endtime="20241128 23:25:33.451"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:33.451" endtime="20241128 23:25:33.451"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.458"/>
</kw>
<msg timestamp="20241128 23:25:33.458" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.458"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.458" level="INFO">${values} = [{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.458"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.465" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.465"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.466"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.467" endtime="20241128 23:25:33.467"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:33.466" endtime="20241128 23:25:33.467"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.467"/>
</if>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.467"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.467"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:33.467" endtime="20241128 23:25:33.467"/>
</return>
<msg timestamp="20241128 23:25:33.467" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.458" endtime="20241128 23:25:33.467"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:33.467" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '6', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 23:25:33.467" endtime="20241128 23:25:33.467"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:25:33.467" level="INFO">${json_response} = {"testCaseRunId": "6", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 23:25:33.467" endtime="20241128 23:25:33.467"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:25:33.500" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:25:33.500" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:25:33.467" endtime="20241128 23:25:33.500"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:33.503" endtime="20241128 23:25:33.503"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:25:33.503" endtime="20241128 23:25:33.503"/>
</return>
<status status="PASS" starttime="20241128 23:25:33.467" endtime="20241128 23:25:33.507"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:33.507" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 23:25:33.507" endtime="20241128 23:25:33.507"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.507" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 23:25:33.507" endtime="20241128 23:25:33.507"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:33.515" endtime="20241128 23:25:33.515"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:33.532" endtime="20241128 23:25:33.533"/>
</kw>
<msg timestamp="20241128 23:25:33.533" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.528" endtime="20241128 23:25:33.533"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.536" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 23:25:33.536" endtime="20241128 23:25:33.536"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.540" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.536" endtime="20241128 23:25:33.540"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.536" endtime="20241128 23:25:33.540"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.543" endtime="20241128 23:25:33.543"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:33.540" endtime="20241128 23:25:33.543"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.536" endtime="20241128 23:25:33.543"/>
</if>
<status status="PASS" starttime="20241128 23:25:33.536" endtime="20241128 23:25:33.543"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.533" endtime="20241128 23:25:33.543"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:33.543" endtime="20241128 23:25:33.543"/>
</return>
<msg timestamp="20241128 23:25:33.548" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:33.524" endtime="20241128 23:25:33.548"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.558" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:25:33.548" endtime="20241128 23:25:33.558"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:33.558" endtime="20241128 23:25:33.558"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:25:33.566" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:25:33.562" endtime="20241128 23:25:33.566"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.567" endtime="20241128 23:25:33.569"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:33.569" endtime="20241128 23:25:33.569"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:33.567" endtime="20241128 23:25:33.569"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.566" endtime="20241128 23:25:33.569"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:33.573" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:25:33.569" endtime="20241128 23:25:33.573"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:25:40.286" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 23:25:40.286" level="INFO">${page_id} = {'page_id': 'page=b43e6e41-e5c0-4a9a-83ac-d6a1c834b6d7', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:25:33.573" endtime="20241128 23:25:40.286"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 23:25:40.292" level="INFO">Switching to page {'page_id': 'page=b43e6e41-e5c0-4a9a-83ac-d6a1c834b6d7', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 23:25:40.366" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=e53a56c5-b2e4-404d-8a3d-534ad177f55d",
    "contexts": [
      {
        "type": "context",
        "id": "context=a1f22b6e-8d42-4693-adec-3fd64ee0e9dc",
        "activePage": "page=b43e6e41-e5c0-4a9a-83ac-d6a1c834b6d7",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=88fa32a5-8881-4ef3-988c-5ec2c92fd810",
            "timestamp": 1732816530.595
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=b43e6e41-e5c0-4a9a-83ac-d6a1c834b6d7",
            "timestamp": 1732816533.654
          }
        ]
      }
    ],
    "activeContext": "context=a1f22b6e-8d42-4693-adec-3fd64ee0e9dc",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 23:25:40.374" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 23:25:40.286" endtime="20241128 23:25:40.374"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.573" endtime="20241128 23:25:40.374"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.573" endtime="20241128 23:25:40.374"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.374" endtime="20241128 23:25:40.374"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.374" endtime="20241128 23:25:40.374"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.382" endtime="20241128 23:25:40.382"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.374" endtime="20241128 23:25:40.382"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.382" endtime="20241128 23:25:40.382"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.392" endtime="20241128 23:25:40.393"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.382" endtime="20241128 23:25:40.393"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.393" endtime="20241128 23:25:40.393"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.393" endtime="20241128 23:25:40.393"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.393" endtime="20241128 23:25:40.399"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.393" endtime="20241128 23:25:40.399"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.399"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:40.417" endtime="20241128 23:25:40.417"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.419" endtime="20241128 23:25:40.419"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.399" endtime="20241128 23:25:40.419"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.423" endtime="20241128 23:25:40.423"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.423" endtime="20241128 23:25:40.423"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.423" endtime="20241128 23:25:40.423"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.423" endtime="20241128 23:25:40.423"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.423" endtime="20241128 23:25:40.423"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.423" endtime="20241128 23:25:40.423"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.419" endtime="20241128 23:25:40.423"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:40.425" endtime="20241128 23:25:40.425"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.434"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.423" endtime="20241128 23:25:40.434"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.434"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.434"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.434"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.434"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.434"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.434"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.434"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.439" endtime="20241128 23:25:40.439"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.434" endtime="20241128 23:25:40.439"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.448" endtime="20241128 23:25:40.454"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.454" endtime="20241128 23:25:40.454"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.439" endtime="20241128 23:25:40.454"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.573" endtime="20241128 23:25:40.454"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:40.454" endtime="20241128 23:25:40.456"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:25:40.456" endtime="20241128 23:25:40.456"/>
</return>
<msg timestamp="20241128 23:25:40.456" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:25:33.569" endtime="20241128 23:25:40.456"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.458" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 23:25:40.458" endtime="20241128 23:25:40.458"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.459"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.459"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.465" endtime="20241128 23:25:40.465"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.465" endtime="20241128 23:25:40.465"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.467"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.467"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:25:40.459" endtime="20241128 23:25:40.467"/>
</for>
<msg timestamp="20241128 23:25:40.467" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:25:40.456" endtime="20241128 23:25:40.467"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:40.467" endtime="20241128 23:25:40.472"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 23:25:40.480" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</kw>
<msg timestamp="20241128 23:25:40.480" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.480"/>
</return>
<msg timestamp="20241128 23:25:40.480" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 23:25:40.476" endtime="20241128 23:25:40.480"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.488" endtime="20241128 23:25:40.488"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.490"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.490" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 23:25:40.490" endtime="20241128 23:25:40.490"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.490" endtime="20241128 23:25:40.493"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.480" endtime="20241128 23:25:40.493"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:40.497" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '21', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241128 23:25:40.493" endtime="20241128 23:25:40.497"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:25:40.497" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "21", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241128 23:25:40.497" endtime="20241128 23:25:40.497"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:25:40.524" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:25:40.524" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:25:40.497" endtime="20241128 23:25:40.524"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:40.524" endtime="20241128 23:25:40.530"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:25:40.530" endtime="20241128 23:25:40.530"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.497" endtime="20241128 23:25:40.531"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.473" endtime="20241128 23:25:40.531"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:25:40.532" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:25:40.532" endtime="20241128 23:25:40.532"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.548" endtime="20241128 23:25:40.532"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.532" endtime="20241128 23:25:40.532"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.532" endtime="20241128 23:25:40.532"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.532" endtime="20241128 23:25:40.532"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.532" endtime="20241128 23:25:40.532"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.548" endtime="20241128 23:25:40.532"/>
</try>
<status status="PASS" starttime="20241128 23:25:33.548" endtime="20241128 23:25:40.532"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.539" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 23:25:40.538" endtime="20241128 23:25:40.539"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:40.539" endtime="20241128 23:25:40.541"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:25:40.542" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 23:25:40.541" endtime="20241128 23:25:40.542"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.542" endtime="20241128 23:25:40.542"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.542" endtime="20241128 23:25:40.542"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.542" endtime="20241128 23:25:40.542"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.542" endtime="20241128 23:25:40.542"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.548" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 23:25:40.546" endtime="20241128 23:25:40.548"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.548" endtime="20241128 23:25:40.548"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.548" endtime="20241128 23:25:40.548"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.548" endtime="20241128 23:25:40.548"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.548" endtime="20241128 23:25:40.548"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.553" endtime="20241128 23:25:40.553"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.550" endtime="20241128 23:25:40.555"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.557" endtime="20241128 23:25:40.557"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.560" endtime="20241128 23:25:40.560"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.555" endtime="20241128 23:25:40.560"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.564" endtime="20241128 23:25:40.564"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.560" endtime="20241128 23:25:40.564"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.568" endtime="20241128 23:25:40.568"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.564" endtime="20241128 23:25:40.568"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:40.610" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 23:25:40.580" endtime="20241128 23:25:40.610"/>
</kw>
<msg timestamp="20241128 23:25:40.610" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.580" endtime="20241128 23:25:40.610"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.610" endtime="20241128 23:25:40.610"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.580" endtime="20241128 23:25:40.610"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.610" endtime="20241128 23:25:40.612"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.612" endtime="20241128 23:25:40.612"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.610" endtime="20241128 23:25:40.612"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.580" endtime="20241128 23:25:40.612"/>
</try>
<msg timestamp="20241128 23:25:40.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.579" endtime="20241128 23:25:40.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.612" endtime="20241128 23:25:40.613"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.578" endtime="20241128 23:25:40.613"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.613" endtime="20241128 23:25:40.613"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.613" endtime="20241128 23:25:40.613"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.578" endtime="20241128 23:25:40.613"/>
</try>
<msg timestamp="20241128 23:25:40.614" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.577" endtime="20241128 23:25:40.614"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.616" endtime="20241128 23:25:40.616"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.616" endtime="20241128 23:25:40.616"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.616" endtime="20241128 23:25:40.616"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.616" endtime="20241128 23:25:40.618"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.614" endtime="20241128 23:25:40.618"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.573" endtime="20241128 23:25:40.618"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:40.648" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 23:25:40.629" endtime="20241128 23:25:40.648"/>
</kw>
<msg timestamp="20241128 23:25:40.648" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.629" endtime="20241128 23:25:40.648"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.648" endtime="20241128 23:25:40.648"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.629" endtime="20241128 23:25:40.648"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.648" endtime="20241128 23:25:40.648"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.648" endtime="20241128 23:25:40.648"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.648" endtime="20241128 23:25:40.648"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.629" endtime="20241128 23:25:40.648"/>
</try>
<msg timestamp="20241128 23:25:40.648" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.628" endtime="20241128 23:25:40.648"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.648" endtime="20241128 23:25:40.648"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.627" endtime="20241128 23:25:40.653"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.653"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.653"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.627" endtime="20241128 23:25:40.653"/>
</try>
<msg timestamp="20241128 23:25:40.653" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.626" endtime="20241128 23:25:40.653"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.653"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.653"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.653"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.653"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.653"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.626" endtime="20241128 23:25:40.653"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 23:25:40.733" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 23:25:40.733" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.733"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 23:25:40.733" endtime="20241128 23:25:40.733"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.733"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.733" endtime="20241128 23:25:40.734"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.653" endtime="20241128 23:25:40.734"/>
</try>
<msg timestamp="20241128 23:25:40.734" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 23:25:40.621" endtime="20241128 23:25:40.734"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.621" endtime="20241128 23:25:40.734"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.734"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.621" endtime="20241128 23:25:40.734"/>
</try>
<status status="PASS" starttime="20241128 23:25:40.620" endtime="20241128 23:25:40.734"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:40.749" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241128 23:25:40.742" endtime="20241128 23:25:40.749"/>
</kw>
<msg timestamp="20241128 23:25:40.749" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.742" endtime="20241128 23:25:40.749"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.749" endtime="20241128 23:25:40.749"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.742" endtime="20241128 23:25:40.749"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.749" endtime="20241128 23:25:40.749"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.750" endtime="20241128 23:25:40.750"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.749" endtime="20241128 23:25:40.750"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.742" endtime="20241128 23:25:40.750"/>
</try>
<msg timestamp="20241128 23:25:40.751" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.742" endtime="20241128 23:25:40.751"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.751" endtime="20241128 23:25:40.751"/>
</return>
<msg timestamp="20241128 23:25:40.751" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.751"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.751" endtime="20241128 23:25:40.751"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.751" endtime="20241128 23:25:40.751"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.751" endtime="20241128 23:25:40.751"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.751" endtime="20241128 23:25:40.751"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.751" endtime="20241128 23:25:40.751"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.734" endtime="20241128 23:25:40.751"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.571" endtime="20241128 23:25:40.751"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:40.776" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241128 23:25:40.758" endtime="20241128 23:25:40.776"/>
</kw>
<msg timestamp="20241128 23:25:40.776" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.758" endtime="20241128 23:25:40.776"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.758" endtime="20241128 23:25:40.776"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.758" endtime="20241128 23:25:40.776"/>
</try>
<msg timestamp="20241128 23:25:40.776" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.758" endtime="20241128 23:25:40.776"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</return>
<msg timestamp="20241128 23:25:40.776" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.751" endtime="20241128 23:25:40.776"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.751" endtime="20241128 23:25:40.776"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:40.776" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.776"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.783" endtime="20241128 23:25:40.783"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.784" endtime="20241128 23:25:40.784"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.783" endtime="20241128 23:25:40.784"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:40.784" endtime="20241128 23:25:40.784"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.784" endtime="20241128 23:25:40.784"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.783" endtime="20241128 23:25:40.784"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 23:25:40.784" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 23:25:40.784" endtime="20241128 23:25:40.818"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.784" endtime="20241128 23:25:40.818"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.818" endtime="20241128 23:25:40.818"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.818" endtime="20241128 23:25:40.818"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.818" endtime="20241128 23:25:40.818"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.784" endtime="20241128 23:25:40.818"/>
</try>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.818"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.818"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.818"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.821" endtime="20241128 23:25:40.821"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.821" endtime="20241128 23:25:40.821"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.776" endtime="20241128 23:25:40.821"/>
</try>
<status status="PASS" starttime="20241128 23:25:40.571" endtime="20241128 23:25:40.821"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.821" endtime="20241128 23:25:40.821"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.821" endtime="20241128 23:25:40.821"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.821" endtime="20241128 23:25:40.821"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.569" endtime="20241128 23:25:40.821"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.821" endtime="20241128 23:25:40.821"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.821" endtime="20241128 23:25:40.821"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.825" endtime="20241128 23:25:40.825"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.825" endtime="20241128 23:25:40.825"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.825" endtime="20241128 23:25:40.825"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.825" endtime="20241128 23:25:40.825"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.825" endtime="20241128 23:25:40.825"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.825" endtime="20241128 23:25:40.825"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.821" endtime="20241128 23:25:40.825"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:40.833" endtime="20241128 23:25:40.833"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.833" endtime="20241128 23:25:40.833"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.825" endtime="20241128 23:25:40.833"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.833" endtime="20241128 23:25:40.833"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.833" endtime="20241128 23:25:40.833"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.833" endtime="20241128 23:25:40.838"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.838" endtime="20241128 23:25:40.838"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.838" endtime="20241128 23:25:40.838"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.833" endtime="20241128 23:25:40.838"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.833" endtime="20241128 23:25:40.838"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:40.844" endtime="20241128 23:25:40.844"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.844" endtime="20241128 23:25:40.844"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.838" endtime="20241128 23:25:40.844"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.844" endtime="20241128 23:25:40.844"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.849" endtime="20241128 23:25:40.849"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.844" endtime="20241128 23:25:40.849"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.849" endtime="20241128 23:25:40.849"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.849" endtime="20241128 23:25:40.849"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.844" endtime="20241128 23:25:40.849"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.844" endtime="20241128 23:25:40.849"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.849" endtime="20241128 23:25:40.849"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.849" endtime="20241128 23:25:40.849"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.849" endtime="20241128 23:25:40.857"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.548" endtime="20241128 23:25:40.857"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</return>
<msg timestamp="20241128 23:25:40.857" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 23:25:40.542" endtime="20241128 23:25:40.857"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.857" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.862" endtime="20241128 23:25:40.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.862" endtime="20241128 23:25:40.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.862" endtime="20241128 23:25:40.862"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.862" endtime="20241128 23:25:40.862"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.862" endtime="20241128 23:25:40.862"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.865"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.865"/>
</for>
<msg timestamp="20241128 23:25:40.865" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:25:40.857" endtime="20241128 23:25:40.865"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.865"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:40.874" endtime="20241128 23:25:40.874"/>
</kw>
<msg timestamp="20241128 23:25:40.874" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.874" endtime="20241128 23:25:40.874"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.874" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 23:25:40.874" endtime="20241128 23:25:40.874"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.877" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.877"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.877"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.877"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.877"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.874" endtime="20241128 23:25:40.877"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.874" endtime="20241128 23:25:40.877"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.874" endtime="20241128 23:25:40.877"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.877"/>
</return>
<msg timestamp="20241128 23:25:40.877" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.874" endtime="20241128 23:25:40.877"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.877" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.877"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.877"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.881"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.881"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.877" endtime="20241128 23:25:40.881"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:40.884" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '22', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage'...</msg>
<status status="PASS" starttime="20241128 23:25:40.881" endtime="20241128 23:25:40.884"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:25:40.885" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "22", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage"...</msg>
<status status="PASS" starttime="20241128 23:25:40.885" endtime="20241128 23:25:40.885"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:25:40.891" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:25:40.891" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:25:40.885" endtime="20241128 23:25:40.891"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:40.891" endtime="20241128 23:25:40.891"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:25:40.891" endtime="20241128 23:25:40.891"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.884" endtime="20241128 23:25:40.896"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.865" endtime="20241128 23:25:40.896"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:25:40.898" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:25:40.898" endtime="20241128 23:25:40.898"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.532" endtime="20241128 23:25:40.898"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.899" endtime="20241128 23:25:40.899"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.899" endtime="20241128 23:25:40.899"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.899" endtime="20241128 23:25:40.899"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.899" endtime="20241128 23:25:40.899"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.532" endtime="20241128 23:25:40.899"/>
</try>
<status status="PASS" starttime="20241128 23:25:40.532" endtime="20241128 23:25:40.899"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.901" level="INFO">${action} = {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:58.626Z', 'updatedAt': '2024-11-28T06:56:58....</msg>
<status status="PASS" starttime="20241128 23:25:40.901" endtime="20241128 23:25:40.901"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:40.901" endtime="20241128 23:25:40.901"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:25:40.901" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:58.757Z', 'updatedAt': '2024-11-28T06:57:07.363Z'}</msg>
<status status="PASS" starttime="20241128 23:25:40.901" endtime="20241128 23:25:40.901"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.905" endtime="20241128 23:25:40.905"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.905" endtime="20241128 23:25:40.905"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.905" endtime="20241128 23:25:40.905"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.901" endtime="20241128 23:25:40.905"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:40.906" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 23:25:40.906" endtime="20241128 23:25:40.906"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.906" endtime="20241128 23:25:40.906"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.906" endtime="20241128 23:25:40.906"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:40.906" endtime="20241128 23:25:40.906"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.906" endtime="20241128 23:25:40.906"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.911" endtime="20241128 23:25:40.911"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.906" endtime="20241128 23:25:40.911"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.914" endtime="20241128 23:25:40.914"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.914" endtime="20241128 23:25:40.914"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.911" endtime="20241128 23:25:40.914"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.914" endtime="20241128 23:25:40.914"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.914" endtime="20241128 23:25:40.914"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.914" endtime="20241128 23:25:40.914"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.914" endtime="20241128 23:25:40.914"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:40.932" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 23:25:40.932" endtime="20241128 23:25:40.932"/>
</kw>
<msg timestamp="20241128 23:25:40.932" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.930" endtime="20241128 23:25:40.932"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.932" endtime="20241128 23:25:40.932"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.930" endtime="20241128 23:25:40.932"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.932" endtime="20241128 23:25:40.938"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.938" endtime="20241128 23:25:40.938"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.932" endtime="20241128 23:25:40.938"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.930" endtime="20241128 23:25:40.938"/>
</try>
<msg timestamp="20241128 23:25:40.938" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.930" endtime="20241128 23:25:40.938"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.938" endtime="20241128 23:25:40.939"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.927" endtime="20241128 23:25:40.939"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.939" endtime="20241128 23:25:40.939"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.939" endtime="20241128 23:25:40.939"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.927" endtime="20241128 23:25:40.939"/>
</try>
<msg timestamp="20241128 23:25:40.941" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.927" endtime="20241128 23:25:40.941"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.942" endtime="20241128 23:25:40.942"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.942" endtime="20241128 23:25:40.942"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.942" endtime="20241128 23:25:40.946"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.942" endtime="20241128 23:25:40.946"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.942" endtime="20241128 23:25:40.946"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.927" endtime="20241128 23:25:40.946"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:40.962" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 23:25:40.956" endtime="20241128 23:25:40.962"/>
</kw>
<msg timestamp="20241128 23:25:40.962" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.956" endtime="20241128 23:25:40.962"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.954" endtime="20241128 23:25:40.962"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.954" endtime="20241128 23:25:40.962"/>
</try>
<msg timestamp="20241128 23:25:40.962" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.954" endtime="20241128 23:25:40.962"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.954" endtime="20241128 23:25:40.962"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.954" endtime="20241128 23:25:40.962"/>
</try>
<msg timestamp="20241128 23:25:40.962" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.954" endtime="20241128 23:25:40.962"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.962"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.952" endtime="20241128 23:25:40.962"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 23:25:40.981" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 23:25:40.981" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.981"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.981"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.962" endtime="20241128 23:25:40.981"/>
</try>
<msg timestamp="20241128 23:25:40.981" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 23:25:40.948" endtime="20241128 23:25:40.981"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.981" endtime="20241128 23:25:40.981"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.948" endtime="20241128 23:25:40.981"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.987" endtime="20241128 23:25:40.987"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.987" endtime="20241128 23:25:40.987"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.948" endtime="20241128 23:25:40.987"/>
</try>
<status status="PASS" starttime="20241128 23:25:40.948" endtime="20241128 23:25:40.987"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:40.996" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241128 23:25:40.991" endtime="20241128 23:25:40.999"/>
</kw>
<msg timestamp="20241128 23:25:40.999" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.991" endtime="20241128 23:25:40.999"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.999" endtime="20241128 23:25:40.999"/>
</return>
<status status="PASS" starttime="20241128 23:25:40.991" endtime="20241128 23:25:40.999"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.999" endtime="20241128 23:25:40.999"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:40.999" endtime="20241128 23:25:40.999"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:40.999" endtime="20241128 23:25:40.999"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.991" endtime="20241128 23:25:40.999"/>
</try>
<msg timestamp="20241128 23:25:40.999" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.991" endtime="20241128 23:25:40.999"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:40.999" endtime="20241128 23:25:40.999"/>
</return>
<msg timestamp="20241128 23:25:40.999" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:25:40.989" endtime="20241128 23:25:40.999"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.003" endtime="20241128 23:25:41.003"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.005" endtime="20241128 23:25:41.005"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.003" endtime="20241128 23:25:41.005"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.003" endtime="20241128 23:25:41.005"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.999" endtime="20241128 23:25:41.005"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.989" endtime="20241128 23:25:41.005"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.925" endtime="20241128 23:25:41.005"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:41.050" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241128 23:25:41.014" endtime="20241128 23:25:41.050"/>
</kw>
<msg timestamp="20241128 23:25:41.050" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.014" endtime="20241128 23:25:41.050"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:41.050" endtime="20241128 23:25:41.050"/>
</return>
<status status="PASS" starttime="20241128 23:25:41.014" endtime="20241128 23:25:41.050"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.050" endtime="20241128 23:25:41.053"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.053" endtime="20241128 23:25:41.053"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.050" endtime="20241128 23:25:41.053"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.014" endtime="20241128 23:25:41.053"/>
</try>
<msg timestamp="20241128 23:25:41.053" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.014" endtime="20241128 23:25:41.053"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:41.053" endtime="20241128 23:25:41.053"/>
</return>
<msg timestamp="20241128 23:25:41.053" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.012" endtime="20241128 23:25:41.053"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.061" endtime="20241128 23:25:41.061"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.061" endtime="20241128 23:25:41.063"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.061" endtime="20241128 23:25:41.063"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.060" endtime="20241128 23:25:41.063"/>
</if>
<status status="PASS" starttime="20241128 23:25:41.058" endtime="20241128 23:25:41.063"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.008" endtime="20241128 23:25:41.063"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:41.063" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:25:41.063" endtime="20241128 23:25:41.063"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.063" endtime="20241128 23:25:41.063"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.070" endtime="20241128 23:25:41.070"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.063" endtime="20241128 23:25:41.070"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:41.074" endtime="20241128 23:25:41.074"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.070" endtime="20241128 23:25:41.074"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.063" endtime="20241128 23:25:41.074"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 23:25:41.074" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 23:25:41.074" endtime="20241128 23:25:41.115"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.074" endtime="20241128 23:25:41.115"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.118" endtime="20241128 23:25:41.118"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.118" endtime="20241128 23:25:41.118"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.115" endtime="20241128 23:25:41.118"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.074" endtime="20241128 23:25:41.119"/>
</try>
<status status="PASS" starttime="20241128 23:25:41.063" endtime="20241128 23:25:41.119"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.063" endtime="20241128 23:25:41.119"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.063" endtime="20241128 23:25:41.119"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.119" endtime="20241128 23:25:41.119"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.119" endtime="20241128 23:25:41.119"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.063" endtime="20241128 23:25:41.119"/>
</try>
<status status="PASS" starttime="20241128 23:25:40.923" endtime="20241128 23:25:41.119"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.119" endtime="20241128 23:25:41.119"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.119" endtime="20241128 23:25:41.119"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.119" endtime="20241128 23:25:41.119"/>
</if>
<status status="PASS" starttime="20241128 23:25:40.914" endtime="20241128 23:25:41.119"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.119" endtime="20241128 23:25:41.119"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.119" endtime="20241128 23:25:41.119"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.128" endtime="20241128 23:25:41.128"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.128" endtime="20241128 23:25:41.128"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.128" endtime="20241128 23:25:41.128"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.128" endtime="20241128 23:25:41.128"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.128" endtime="20241128 23:25:41.128"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.128" endtime="20241128 23:25:41.128"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.119" endtime="20241128 23:25:41.128"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:41.141" endtime="20241128 23:25:41.141"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.144" endtime="20241128 23:25:41.144"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.128" endtime="20241128 23:25:41.144"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.144" endtime="20241128 23:25:41.144"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.152" endtime="20241128 23:25:41.152"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.144" endtime="20241128 23:25:41.152"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.152" endtime="20241128 23:25:41.152"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.152" endtime="20241128 23:25:41.152"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.144" endtime="20241128 23:25:41.152"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.144" endtime="20241128 23:25:41.152"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:41.160" endtime="20241128 23:25:41.160"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.160" endtime="20241128 23:25:41.160"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.152" endtime="20241128 23:25:41.160"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.168"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:25:41.178" endtime="20241128 23:25:41.178"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.178" endtime="20241128 23:25:41.178"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.168" endtime="20241128 23:25:41.178"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.906" endtime="20241128 23:25:41.178"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.178" endtime="20241128 23:25:41.180"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:25:41.180" endtime="20241128 23:25:41.180"/>
</return>
<msg timestamp="20241128 23:25:41.180" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 23:25:40.905" endtime="20241128 23:25:41.180"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.182" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.182"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.184"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.184" endtime="20241128 23:25:41.184"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.184" endtime="20241128 23:25:41.184"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.186"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:25:41.182" endtime="20241128 23:25:41.186"/>
</for>
<msg timestamp="20241128 23:25:41.186" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:25:41.180" endtime="20241128 23:25:41.186"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.186"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</kw>
<msg timestamp="20241128 23:25:41.197" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.195" endtime="20241128 23:25:41.197"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.197" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:57.275Z', 'updatedAt': '2024-11-28T06:56:57.275Z'}</msg>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.197" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</if>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.197"/>
</return>
<msg timestamp="20241128 23:25:41.197" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.195" endtime="20241128 23:25:41.197"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.201" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.201"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.201"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.201" endtime="20241128 23:25:41.201"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.201" endtime="20241128 23:25:41.201"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.197" endtime="20241128 23:25:41.201"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:41.203" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '23', 'status': 'COMPLETED', 'actionName': 'Set Password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', 'a...</msg>
<status status="PASS" starttime="20241128 23:25:41.201" endtime="20241128 23:25:41.203"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:25:41.203" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "23", "status": "COMPLETED", "actionName": "Set Password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "a...</msg>
<status status="PASS" starttime="20241128 23:25:41.203" endtime="20241128 23:25:41.203"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:25:41.242" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:25:41.246" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:25:41.203" endtime="20241128 23:25:41.246"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.247" endtime="20241128 23:25:41.249"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:25:41.249" endtime="20241128 23:25:41.249"/>
</return>
<status status="PASS" starttime="20241128 23:25:41.203" endtime="20241128 23:25:41.251"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.186" endtime="20241128 23:25:41.251"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:25:41.254" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:25:41.252" endtime="20241128 23:25:41.255"/>
</kw>
<status status="PASS" starttime="20241128 23:25:40.901" endtime="20241128 23:25:41.255"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.256" endtime="20241128 23:25:41.257"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:25:41.258" endtime="20241128 23:25:41.258"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.258" endtime="20241128 23:25:41.260"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.255" endtime="20241128 23:25:41.261"/>
</branch>
<status status="PASS" starttime="20241128 23:25:40.901" endtime="20241128 23:25:41.261"/>
</try>
<status status="PASS" starttime="20241128 23:25:40.901" endtime="20241128 23:25:41.261"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.265" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:57:48.296Z', 'updatedAt': '2024-11-28T06:57:4...</msg>
<status status="PASS" starttime="20241128 23:25:41.265" endtime="20241128 23:25:41.265"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.269" endtime="20241128 23:25:41.270"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:25:41.272" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:57:48.432Z', 'updatedAt': '2024-11-28T06:57:48.432Z'}</msg>
<status status="PASS" starttime="20241128 23:25:41.270" endtime="20241128 23:25:41.272"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.274" endtime="20241128 23:25:41.274"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.275" endtime="20241128 23:25:41.275"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.272" endtime="20241128 23:25:41.275"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.272" endtime="20241128 23:25:41.275"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.279" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 23:25:41.279" endtime="20241128 23:25:41.279"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:41.279" endtime="20241128 23:25:41.279"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.279" endtime="20241128 23:25:41.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:41.282" endtime="20241128 23:25:41.282"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.282" endtime="20241128 23:25:41.283"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:41.302" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241128 23:25:41.296" endtime="20241128 23:25:41.304"/>
</kw>
<msg timestamp="20241128 23:25:41.304" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.296" endtime="20241128 23:25:41.304"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:41.304" endtime="20241128 23:25:41.304"/>
</return>
<status status="PASS" starttime="20241128 23:25:41.296" endtime="20241128 23:25:41.304"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.304" endtime="20241128 23:25:41.304"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.304" endtime="20241128 23:25:41.304"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.304" endtime="20241128 23:25:41.304"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.296" endtime="20241128 23:25:41.304"/>
</try>
<msg timestamp="20241128 23:25:41.304" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.296" endtime="20241128 23:25:41.304"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:41.304" endtime="20241128 23:25:41.304"/>
</return>
<status status="PASS" starttime="20241128 23:25:41.294" endtime="20241128 23:25:41.304"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:25:41.304" endtime="20241128 23:25:41.304"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.304" endtime="20241128 23:25:41.304"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.294" endtime="20241128 23:25:41.304"/>
</try>
<msg timestamp="20241128 23:25:41.307" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.290" endtime="20241128 23:25:41.307"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.308" endtime="20241128 23:25:41.308"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.308" endtime="20241128 23:25:41.308"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.308" endtime="20241128 23:25:41.308"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.308" endtime="20241128 23:25:41.308"/>
</if>
<status status="PASS" starttime="20241128 23:25:41.308" endtime="20241128 23:25:41.308"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.290" endtime="20241128 23:25:41.308"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:41.322" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241128 23:25:41.315" endtime="20241128 23:25:41.322"/>
</kw>
<msg timestamp="20241128 23:25:41.322" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.315" endtime="20241128 23:25:41.322"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:41.322" endtime="20241128 23:25:41.322"/>
</return>
<status status="PASS" starttime="20241128 23:25:41.315" endtime="20241128 23:25:41.322"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.322" endtime="20241128 23:25:41.323"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.323"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.322" endtime="20241128 23:25:41.323"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.315" endtime="20241128 23:25:41.323"/>
</try>
<msg timestamp="20241128 23:25:41.323" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.315" endtime="20241128 23:25:41.323"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.323"/>
</return>
<msg timestamp="20241128 23:25:41.323" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.308" endtime="20241128 23:25:41.323"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.323"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.323"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.323"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.323"/>
</if>
<status status="PASS" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.323"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.308" endtime="20241128 23:25:41.323"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:25:41.367" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241128 23:25:41.331" endtime="20241128 23:25:41.367"/>
</kw>
<msg timestamp="20241128 23:25:41.367" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.331" endtime="20241128 23:25:41.367"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:41.367" endtime="20241128 23:25:41.367"/>
</return>
<status status="PASS" starttime="20241128 23:25:41.331" endtime="20241128 23:25:41.367"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.367" endtime="20241128 23:25:41.367"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.367" endtime="20241128 23:25:41.367"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.367" endtime="20241128 23:25:41.367"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.331" endtime="20241128 23:25:41.367"/>
</try>
<msg timestamp="20241128 23:25:41.367" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.331" endtime="20241128 23:25:41.367"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:25:41.372" endtime="20241128 23:25:41.372"/>
</return>
<msg timestamp="20241128 23:25:41.372" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.372"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.372" endtime="20241128 23:25:41.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.380" endtime="20241128 23:25:41.380"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.372" endtime="20241128 23:25:41.380"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.372" endtime="20241128 23:25:41.380"/>
</if>
<status status="PASS" starttime="20241128 23:25:41.372" endtime="20241128 23:25:41.380"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.323" endtime="20241128 23:25:41.380"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.283" endtime="20241128 23:25:41.380"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:41.380" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:25:41.380" endtime="20241128 23:25:41.380"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.388" endtime="20241128 23:25:41.388"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.388" endtime="20241128 23:25:41.388"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:41.388" endtime="20241128 23:25:41.388"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.388" endtime="20241128 23:25:41.388"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.380" endtime="20241128 23:25:41.388"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 23:25:41.388" endtime="20241128 23:25:41.478"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.388" endtime="20241128 23:25:41.478"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.478" endtime="20241128 23:25:41.478"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.478" endtime="20241128 23:25:41.478"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.478" endtime="20241128 23:25:41.478"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.388" endtime="20241128 23:25:41.478"/>
</try>
<status status="PASS" starttime="20241128 23:25:41.380" endtime="20241128 23:25:41.478"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.380" endtime="20241128 23:25:41.478"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.380" endtime="20241128 23:25:41.478"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.478" endtime="20241128 23:25:41.486"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.478" endtime="20241128 23:25:41.486"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.380" endtime="20241128 23:25:41.486"/>
</try>
<status status="PASS" starttime="20241128 23:25:41.283" endtime="20241128 23:25:41.487"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.283" endtime="20241128 23:25:41.488"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.494" endtime="20241128 23:25:41.494"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.502" endtime="20241128 23:25:41.502"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.488" endtime="20241128 23:25:41.502"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.510" endtime="20241128 23:25:41.510"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.502" endtime="20241128 23:25:41.510"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.518" endtime="20241128 23:25:41.518"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.510" endtime="20241128 23:25:41.518"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.527" endtime="20241128 23:25:41.527"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.528" endtime="20241128 23:25:41.528"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.527" endtime="20241128 23:25:41.528"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.527" endtime="20241128 23:25:41.528"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.518" endtime="20241128 23:25:41.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.528" endtime="20241128 23:25:41.528"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.528" endtime="20241128 23:25:41.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.528" endtime="20241128 23:25:41.528"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.535" endtime="20241128 23:25:41.535"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.535" endtime="20241128 23:25:41.535"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.535" endtime="20241128 23:25:41.535"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.535" endtime="20241128 23:25:41.535"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.535" endtime="20241128 23:25:41.535"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.528" endtime="20241128 23:25:41.535"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:41.545" endtime="20241128 23:25:41.545"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.551"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.535" endtime="20241128 23:25:41.551"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.551"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.551"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.551"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.551"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.551"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.551"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.551"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:41.561" endtime="20241128 23:25:41.561"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.561" endtime="20241128 23:25:41.561"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.551" endtime="20241128 23:25:41.561"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.561" endtime="20241128 23:25:41.561"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.561" endtime="20241128 23:25:41.568"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.561" endtime="20241128 23:25:41.568"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.568" endtime="20241128 23:25:41.568"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.568" endtime="20241128 23:25:41.568"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.561" endtime="20241128 23:25:41.568"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.561" endtime="20241128 23:25:41.568"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.568" endtime="20241128 23:25:41.568"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.568" endtime="20241128 23:25:41.568"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:25:41.576" endtime="20241128 23:25:41.577"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.577" endtime="20241128 23:25:41.577"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.568" endtime="20241128 23:25:41.577"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.279" endtime="20241128 23:25:41.578"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.578" endtime="20241128 23:25:41.578"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:25:41.578" endtime="20241128 23:25:41.578"/>
</return>
<msg timestamp="20241128 23:25:41.578" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 23:25:41.275" endtime="20241128 23:25:41.578"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.580" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.580"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.584"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:41.592" endtime="20241128 23:25:41.592"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.592"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.592"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.592"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:41.584" endtime="20241128 23:25:41.592"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.592"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:25:41.580" endtime="20241128 23:25:41.592"/>
</for>
<msg timestamp="20241128 23:25:41.592" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:25:41.578" endtime="20241128 23:25:41.592"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.593" endtime="20241128 23:25:41.594"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</kw>
<msg timestamp="20241128 23:25:41.600" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.594" endtime="20241128 23:25:41.600"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.600" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@type="submit" and text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-28T06:57:46.898Z', 'updatedAt': '2024-11-28T14:47:44.548Z'}</msg>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.600" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</if>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.600"/>
</return>
<msg timestamp="20241128 23:25:41.600" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.594" endtime="20241128 23:25:41.600"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.600" level="INFO">${xpath} = //button[@type="submit" and text()="Login"]</msg>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.608"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.608"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.608" endtime="20241128 23:25:41.608"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.608" endtime="20241128 23:25:41.608"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.600" endtime="20241128 23:25:41.608"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:41.608" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '24', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '', ...</msg>
<status status="PASS" starttime="20241128 23:25:41.608" endtime="20241128 23:25:41.608"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:25:41.616" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "24", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue": ...</msg>
<status status="PASS" starttime="20241128 23:25:41.616" endtime="20241128 23:25:41.616"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:25:41.641" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:25:41.646" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:25:41.616" endtime="20241128 23:25:41.646"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.646" endtime="20241128 23:25:41.646"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:25:41.649" endtime="20241128 23:25:41.649"/>
</return>
<status status="PASS" starttime="20241128 23:25:41.608" endtime="20241128 23:25:41.649"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.594" endtime="20241128 23:25:41.649"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:25:41.649" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:25:41.649" endtime="20241128 23:25:41.649"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.263" endtime="20241128 23:25:41.649"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.649" endtime="20241128 23:25:41.649"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:25:41.657" endtime="20241128 23:25:41.657"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.659" endtime="20241128 23:25:41.659"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.649" endtime="20241128 23:25:41.660"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.263" endtime="20241128 23:25:41.660"/>
</try>
<status status="PASS" starttime="20241128 23:25:41.261" endtime="20241128 23:25:41.660"/>
</iter>
<status status="PASS" starttime="20241128 23:25:33.548" endtime="20241128 23:25:41.661"/>
</for>
<status status="PASS" starttime="20241128 23:25:33.548" endtime="20241128 23:25:41.661"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.548" endtime="20241128 23:25:41.661"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:41.668" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '6', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 23:25:41.666" endtime="20241128 23:25:41.668"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:25:41.670" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "6", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 23:25:41.670" endtime="20241128 23:25:41.673"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:25:41.692" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:25:41.692" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:25:41.674" endtime="20241128 23:25:41.692"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.693" endtime="20241128 23:25:41.697"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:25:41.697" endtime="20241128 23:25:41.697"/>
</return>
<status status="PASS" starttime="20241128 23:25:41.669" endtime="20241128 23:25:41.697"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.662" endtime="20241128 23:25:41.697"/>
</kw>
<status status="PASS" starttime="20241128 23:25:33.507" endtime="20241128 23:25:41.697"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.697" endtime="20241128 23:25:41.697"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:25:41.697" endtime="20241128 23:25:41.697"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.697" endtime="20241128 23:25:41.705"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.697" endtime="20241128 23:25:41.705"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.507" endtime="20241128 23:25:41.708"/>
</try>
<status status="PASS" starttime="20241128 23:25:33.507" endtime="20241128 23:25:41.708"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '4', 'testCaseId': '2', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.691Z', 'flow': {'id': '2', 'name': 'Login 2', 'projectId': '1', 'cr...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.713" level="INFO">${flow} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:02:57.539Z', 'updatedAt': '2024-11-28T07:03:35.605Z', 'flowActionSequences': [{'id': '5', 'actionId': '1', 'flowId': '2', '...</msg>
<status status="PASS" starttime="20241128 23:25:41.708" endtime="20241128 23:25:41.713"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.715" endtime="20241128 23:25:41.717"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:25:41.732" endtime="20241128 23:25:41.732"/>
</kw>
<msg timestamp="20241128 23:25:41.732" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.732" endtime="20241128 23:25:41.732"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.738" level="INFO">${values} = [{'id': '5', 'actionId': '1', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-28T07:03:35.503Z', 'updatedAt': '2024-11-28T07:03:35.503Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 23:25:41.732" endtime="20241128 23:25:41.738"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.738" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.738" endtime="20241128 23:25:41.738"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.738" endtime="20241128 23:25:41.738"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.744" endtime="20241128 23:25:41.744"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.738" endtime="20241128 23:25:41.744"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.738" endtime="20241128 23:25:41.745"/>
</if>
<status status="PASS" starttime="20241128 23:25:41.732" endtime="20241128 23:25:41.745"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.732" endtime="20241128 23:25:41.745"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:41.745" endtime="20241128 23:25:41.745"/>
</return>
<msg timestamp="20241128 23:25:41.748" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:25:41.722" endtime="20241128 23:25:41.748"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '1', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-28T07:03:35.503Z', 'updatedAt': '2024-11-28T07:03:35.503Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.748" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:25:41.748" endtime="20241128 23:25:41.748"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:41.748" endtime="20241128 23:25:41.755"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:25:41.759" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:25:41.757" endtime="20241128 23:25:41.759"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.759" endtime="20241128 23:25:41.759"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:41.759" endtime="20241128 23:25:41.759"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:41.759" endtime="20241128 23:25:41.759"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.759" endtime="20241128 23:25:41.759"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:41.765" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:25:41.765" endtime="20241128 23:25:41.765"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:25:50.497" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 23:25:50.501" level="INFO">${page_id} = {'page_id': 'page=409e9a3e-3e6c-4d14-8df5-82ae53b88d3a', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:25:41.765" endtime="20241128 23:25:50.501"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 23:25:50.502" level="INFO">Switching to page {'page_id': 'page=409e9a3e-3e6c-4d14-8df5-82ae53b88d3a', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 23:25:50.532" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=e53a56c5-b2e4-404d-8a3d-534ad177f55d",
    "contexts": [
      {
        "type": "context",
        "id": "context=a1f22b6e-8d42-4693-adec-3fd64ee0e9dc",
        "activePage": "page=409e9a3e-3e6c-4d14-8df5-82ae53b88d3a",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=88fa32a5-8881-4ef3-988c-5ec2c92fd810",
            "timestamp": 1732816530.595
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/",
            "id": "page=b43e6e41-e5c0-4a9a-83ac-d6a1c834b6d7",
            "timestamp": 1732816533.654
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/",
            "id": "page=409e9a3e-3e6c-4d14-8df5-82ae53b88d3a",
            "timestamp": 1732816541.865
          }
        ]
      }
    ],
    "activeContext": "context=a1f22b6e-8d42-4693-adec-3fd64ee0e9dc",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 23:25:50.539" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 23:25:50.501" endtime="20241128 23:25:50.539"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.765" endtime="20241128 23:25:50.539"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.765" endtime="20241128 23:25:50.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:50.541" endtime="20241128 23:25:50.541"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.541" endtime="20241128 23:25:50.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.546" endtime="20241128 23:25:50.546"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.541" endtime="20241128 23:25:50.547"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.551" endtime="20241128 23:25:50.551"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.554" endtime="20241128 23:25:50.554"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.547" endtime="20241128 23:25:50.554"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.557" endtime="20241128 23:25:50.557"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.554" endtime="20241128 23:25:50.557"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.562" endtime="20241128 23:25:50.564"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.557" endtime="20241128 23:25:50.564"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.565" endtime="20241128 23:25:50.565"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.565" endtime="20241128 23:25:50.565"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.565" endtime="20241128 23:25:50.565"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.565" endtime="20241128 23:25:50.565"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:50.564" endtime="20241128 23:25:50.565"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.571" endtime="20241128 23:25:50.571"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.565" endtime="20241128 23:25:50.571"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.573" endtime="20241128 23:25:50.573"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.573" endtime="20241128 23:25:50.573"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.573" endtime="20241128 23:25:50.573"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.573" endtime="20241128 23:25:50.573"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.573" endtime="20241128 23:25:50.573"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.573" endtime="20241128 23:25:50.573"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:50.571" endtime="20241128 23:25:50.573"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:50.580" endtime="20241128 23:25:50.580"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.582"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.573" endtime="20241128 23:25:50.582"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.582"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.582"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.582"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.582"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.582"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.582"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.582"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:25:50.590" endtime="20241128 23:25:50.590"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.596" endtime="20241128 23:25:50.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.582" endtime="20241128 23:25:50.596"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.596" endtime="20241128 23:25:50.596"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.596" endtime="20241128 23:25:50.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.596" endtime="20241128 23:25:50.596"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.596" endtime="20241128 23:25:50.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.596" endtime="20241128 23:25:50.596"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.596" endtime="20241128 23:25:50.596"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:50.596" endtime="20241128 23:25:50.596"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.599" endtime="20241128 23:25:50.599"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.598" endtime="20241128 23:25:50.599"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.599" endtime="20241128 23:25:50.604"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.765" endtime="20241128 23:25:50.604"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</return>
<msg timestamp="20241128 23:25:50.604" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:25:41.763" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:50.604" level="INFO">${key} = testCaseFlowSequenceId:4::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.604"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.612" endtime="20241128 23:25:50.612"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.613"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.613"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.613"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.613"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.613"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.615"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.615"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.615"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.615"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.613" endtime="20241128 23:25:50.615"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</return>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.615"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.615"/>
</for>
<msg timestamp="20241128 23:25:50.615" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:25:50.604" endtime="20241128 23:25:50.615"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.615"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 23:25:50.620" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</kw>
<msg timestamp="20241128 23:25:50.620" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</if>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</branch>
<status status="PASS" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</return>
<msg timestamp="20241128 23:25:50.620" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:50.620" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</kw>
<status status="PASS" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</branch>
<status status="PASS" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.620"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:25:50.628" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '29', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241128 23:25:50.620" endtime="20241128 23:25:50.628"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:25:50.630" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "29", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241128 23:25:50.629" endtime="20241128 23:25:50.630"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:25:50.634" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:25:50.634" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:25:50.630" endtime="20241128 23:25:50.634"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:50.635" endtime="20241128 23:25:50.635"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:25:50.635" endtime="20241128 23:25:50.636"/>
</return>
<status status="PASS" starttime="20241128 23:25:50.628" endtime="20241128 23:25:50.636"/>
</kw>
<status status="PASS" starttime="20241128 23:25:50.615" endtime="20241128 23:25:50.636"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:25:50.637" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:25:50.637" endtime="20241128 23:25:50.637"/>
</kw>
<status status="PASS" starttime="20241128 23:25:41.748" endtime="20241128 23:25:50.637"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.639" endtime="20241128 23:25:50.639"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:25:50.639" endtime="20241128 23:25:50.639"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.640" endtime="20241128 23:25:50.640"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.639" endtime="20241128 23:25:50.640"/>
</branch>
<status status="PASS" starttime="20241128 23:25:41.748" endtime="20241128 23:25:50.640"/>
</try>
<status status="PASS" starttime="20241128 23:25:41.748" endtime="20241128 23:25:50.640"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '2', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-28T07:03:35.504Z', 'updatedAt': '2024-11-28T07:03:35.504Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:50.641" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 23:25:50.641" endtime="20241128 23:25:50.641"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:25:50.641" endtime="20241128 23:25:50.642"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:25:50.642" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 23:25:50.642" endtime="20241128 23:25:50.642"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.643" endtime="20241128 23:25:50.643"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.643" endtime="20241128 23:25:50.643"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.643" endtime="20241128 23:25:50.643"/>
</branch>
<status status="PASS" starttime="20241128 23:25:50.642" endtime="20241128 23:25:50.643"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:25:50.644" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 23:25:50.644" endtime="20241128 23:25:50.644"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:50.645" endtime="20241128 23:25:50.645"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.645" endtime="20241128 23:25:50.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:25:50.645" endtime="20241128 23:25:50.645"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.645" endtime="20241128 23:25:50.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.647" endtime="20241128 23:25:50.647"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.646" endtime="20241128 23:25:50.647"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.647" endtime="20241128 23:25:50.647"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.652" endtime="20241128 23:25:50.652"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.647" endtime="20241128 23:25:50.652"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.656" endtime="20241128 23:25:50.656"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.654" endtime="20241128 23:25:50.656"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:25:50.656" endtime="20241128 23:25:50.656"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:25:50.656" endtime="20241128 23:25:50.656"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:03.036" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241128 23:26:03.036" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241128 23:26:03.036" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('id=username')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241128 23:25:50.666" endtime="20241128 23:26:03.036"/>
</kw>
<msg timestamp="20241128 23:26:03.036" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 23:25:50.666" endtime="20241128 23:26:03.036"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:03.036" endtime="20241128 23:26:03.036"/>
</return>
<status status="PASS" starttime="20241128 23:25:50.666" endtime="20241128 23:26:03.036"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.036" endtime="20241128 23:26:03.036"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.042" endtime="20241128 23:26:03.042"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.036" endtime="20241128 23:26:03.042"/>
</branch>
<status status="PASS" starttime="20241128 23:25:50.666" endtime="20241128 23:26:03.042"/>
</try>
<msg timestamp="20241128 23:26:03.042" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 23:25:50.666" endtime="20241128 23:26:03.042"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:03.042" endtime="20241128 23:26:03.042"/>
</return>
<status status="PASS" starttime="20241128 23:25:50.665" endtime="20241128 23:26:03.042"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:26:03.044" endtime="20241128 23:26:03.044"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:03.042" endtime="20241128 23:26:03.044"/>
</branch>
<status status="PASS" starttime="20241128 23:25:50.665" endtime="20241128 23:26:03.044"/>
</try>
<msg timestamp="20241128 23:26:03.044" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241128 23:25:50.665" endtime="20241128 23:26:03.044"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.044" endtime="20241128 23:26:03.044"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.044" endtime="20241128 23:26:03.044"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 23:26:03.044" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 23:26:03.044" endtime="20241128 23:26:03.044"/>
</kw>
<status status="FAIL" starttime="20241128 23:26:03.044" endtime="20241128 23:26:03.052"/>
</kw>
<status status="FAIL" starttime="20241128 23:26:03.044" endtime="20241128 23:26:03.052"/>
</branch>
<status status="FAIL" starttime="20241128 23:26:03.044" endtime="20241128 23:26:03.052"/>
</if>
<status status="FAIL" starttime="20241128 23:26:03.044" endtime="20241128 23:26:03.054"/>
</kw>
<status status="FAIL" starttime="20241128 23:25:50.663" endtime="20241128 23:26:03.054"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.054" endtime="20241128 23:26:03.054"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</kw>
<status status="FAIL" starttime="20241128 23:25:50.662" endtime="20241128 23:26:03.060"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</try>
<status status="FAIL" starttime="20241128 23:25:50.660" endtime="20241128 23:26:03.060"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</if>
<status status="FAIL" starttime="20241128 23:25:50.656" endtime="20241128 23:26:03.060"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.060"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.068" endtime="20241128 23:26:03.068"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.068" endtime="20241128 23:26:03.068"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.068" endtime="20241128 23:26:03.068"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.068" endtime="20241128 23:26:03.068"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.068" endtime="20241128 23:26:03.068"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:03.068" endtime="20241128 23:26:03.068"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:03.060" endtime="20241128 23:26:03.068"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.068" endtime="20241128 23:26:03.076"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.076"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:03.084" endtime="20241128 23:26:03.084"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.090" endtime="20241128 23:26:03.090"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.076" endtime="20241128 23:26:03.090"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.090" endtime="20241128 23:26:03.090"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.090" endtime="20241128 23:26:03.092"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.090" endtime="20241128 23:26:03.092"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.092" endtime="20241128 23:26:03.092"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.092" endtime="20241128 23:26:03.092"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:03.090" endtime="20241128 23:26:03.092"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:03.090" endtime="20241128 23:26:03.092"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.096" endtime="20241128 23:26:03.096"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.092" endtime="20241128 23:26:03.096"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.096" endtime="20241128 23:26:03.102"/>
</branch>
<status status="FAIL" starttime="20241128 23:25:50.644" endtime="20241128 23:26:03.102"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</return>
<status status="FAIL" starttime="20241128 23:25:50.643" endtime="20241128 23:26:03.102"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</kw>
<status status="FAIL" starttime="20241128 23:25:50.640" endtime="20241128 23:26:03.102"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.102"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<msg timestamp="20241128 23:26:03.109" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:03.109" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:03.109" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</branch>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</if>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</branch>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</return>
<msg timestamp="20241128 23:26:03.109" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:03.109" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</branch>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:03.109" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '30', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage': '...</msg>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.109"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:03.117" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "30", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage": "...</msg>
<status status="PASS" starttime="20241128 23:26:03.117" endtime="20241128 23:26:03.117"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:03.154" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:03.154" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:03.118" endtime="20241128 23:26:03.154"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.154" endtime="20241128 23:26:03.155"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:03.155" endtime="20241128 23:26:03.155"/>
</return>
<status status="PASS" starttime="20241128 23:26:03.109" endtime="20241128 23:26:03.156"/>
</kw>
<status status="PASS" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.156"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.158" endtime="20241128 23:26:03.159"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 23:26:03.161" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 23:26:03.160" endtime="20241128 23:26:03.161"/>
</kw>
<status status="FAIL" starttime="20241128 23:26:03.158" endtime="20241128 23:26:03.163"/>
</kw>
<status status="FAIL" starttime="20241128 23:26:03.102" endtime="20241128 23:26:03.163"/>
</branch>
<status status="FAIL" starttime="20241128 23:25:50.640" endtime="20241128 23:26:03.163"/>
</try>
<status status="FAIL" starttime="20241128 23:25:50.640" endtime="20241128 23:26:03.163"/>
</iter>
<status status="FAIL" starttime="20241128 23:25:41.748" endtime="20241128 23:26:03.163"/>
</for>
<status status="FAIL" starttime="20241128 23:25:41.748" endtime="20241128 23:26:03.163"/>
</branch>
<status status="FAIL" starttime="20241128 23:25:41.748" endtime="20241128 23:26:03.163"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241128 23:26:03.169" endtime="20241128 23:26:03.169"/>
</kw>
<status status="FAIL" starttime="20241128 23:25:41.708" endtime="20241128 23:26:03.169"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.169" endtime="20241128 23:26:03.169"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:03.175" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '7', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 23:26:03.175" endtime="20241128 23:26:03.175"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:03.180" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "7", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 23:26:03.178" endtime="20241128 23:26:03.180"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:03.191" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:03.191" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:03.181" endtime="20241128 23:26:03.191"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.191" endtime="20241128 23:26:03.191"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:03.191" endtime="20241128 23:26:03.191"/>
</return>
<status status="PASS" starttime="20241128 23:26:03.175" endtime="20241128 23:26:03.191"/>
</kw>
<status status="PASS" starttime="20241128 23:26:03.169" endtime="20241128 23:26:03.191"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.191" endtime="20241128 23:26:03.191"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 23:26:03.199" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 23:26:03.199" endtime="20241128 23:26:03.199"/>
</kw>
<status status="FAIL" starttime="20241128 23:26:03.191" endtime="20241128 23:26:03.199"/>
</kw>
<status status="FAIL" starttime="20241128 23:26:03.169" endtime="20241128 23:26:03.204"/>
</branch>
<status status="FAIL" starttime="20241128 23:25:41.708" endtime="20241128 23:26:03.204"/>
</try>
<status status="FAIL" starttime="20241128 23:25:41.708" endtime="20241128 23:26:03.204"/>
</iter>
<status status="FAIL" starttime="20241128 23:25:33.507" endtime="20241128 23:26:03.204"/>
</for>
<status status="FAIL" starttime="20241128 23:25:33.507" endtime="20241128 23:26:03.207"/>
</branch>
<status status="FAIL" starttime="20241128 23:25:33.507" endtime="20241128 23:26:03.207"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241128 23:26:03.207" endtime="20241128 23:26:03.207"/>
</kw>
<status status="FAIL" starttime="20241128 23:25:33.451" endtime="20241128 23:26:03.207"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.207" endtime="20241128 23:26:03.207"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:03.213" level="INFO">${response_message} = {'testCaseRunId': '6', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 23:26:03.212" endtime="20241128 23:26:03.213"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:03.216" level="INFO">${json_response} = {"testCaseRunId": "6", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 23:26:03.213" endtime="20241128 23:26:03.216"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:03.224" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:03.224" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:03.217" endtime="20241128 23:26:03.224"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.227" endtime="20241128 23:26:03.227"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:03.227" endtime="20241128 23:26:03.227"/>
</return>
<status status="PASS" starttime="20241128 23:26:03.213" endtime="20241128 23:26:03.227"/>
</kw>
<status status="PASS" starttime="20241128 23:26:03.207" endtime="20241128 23:26:03.229"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.230" endtime="20241128 23:26:03.232"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 23:26:03.232" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 23:26:03.232" endtime="20241128 23:26:03.232"/>
</kw>
<status status="FAIL" starttime="20241128 23:26:03.230" endtime="20241128 23:26:03.232"/>
</kw>
<status status="FAIL" starttime="20241128 23:26:03.207" endtime="20241128 23:26:03.232"/>
</branch>
<status status="FAIL" starttime="20241128 23:25:33.451" endtime="20241128 23:26:03.237"/>
</try>
<status status="FAIL" starttime="20241128 23:25:33.417" endtime="20241128 23:26:03.237"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:03.237" endtime="20241128 23:26:03.237"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:03.237" endtime="20241128 23:26:03.237"/>
</branch>
<status status="FAIL" starttime="20241128 23:25:33.417" endtime="20241128 23:26:03.237"/>
</if>
<status status="FAIL" starttime="20241128 23:25:33.354" endtime="20241128 23:26:03.240"/>
</kw>
<status status="FAIL" starttime="20241128 23:25:33.352" endtime="20241128 23:26:03.240"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:03.240" endtime="20241128 23:26:03.240"/>
</kw>
<status status="PASS" starttime="20241128 23:26:03.240" endtime="20241128 23:26:03.240"/>
</branch>
<status status="PASS" starttime="20241128 23:25:33.352" endtime="20241128 23:26:03.240"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 23:26:04.358" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 23:26:03.245" endtime="20241128 23:26:04.358"/>
</kw>
<status status="PASS" starttime="20241128 23:26:03.245" endtime="20241128 23:26:04.358"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:04.360" endtime="20241128 23:26:04.361"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:04.360" endtime="20241128 23:26:04.361"/>
</branch>
<status status="PASS" starttime="20241128 23:26:03.245" endtime="20241128 23:26:04.361"/>
</try>
<status status="PASS" starttime="20241128 23:26:03.240" endtime="20241128 23:26:04.361"/>
</kw>
<status status="PASS" starttime="20241128 20:17:54.213" endtime="20241128 23:26:04.361"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:04.361" endtime="20241128 23:26:04.361"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 23:26:04.410" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '5', 'testCaseId': '1', 'testSuiteRunId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T17:55:27.714Z', 'createdAt': '2024-11-28T17:...</msg>
<status status="PASS" starttime="20241128 23:26:04.361" endtime="20241128 23:26:04.410"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 23:26:04.412" endtime="20241128 23:26:04.412"/>
</break>
<status status="NOT RUN" starttime="20241128 23:26:04.410" endtime="20241128 23:26:04.412"/>
</branch>
<status status="PASS" starttime="20241128 23:26:04.410" endtime="20241128 23:26:04.412"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 23:26:04.412" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\0d809528-1336-45cf-86ce-762859a816e6"}</msg>
<msg timestamp="20241128 23:26:05.359" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\0d809528-1336-45cf-86ce-762859a816e6"}</msg>
<status status="PASS" starttime="20241128 23:26:04.412" endtime="20241128 23:26:05.359"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 23:26:05.361" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 23:26:05.372" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 23:26:05.372" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 23:26:05.361" endtime="20241128 23:26:05.372"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 23:26:05.372" endtime="20241128 23:26:05.379"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:26:08.501" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 23:26:08.504" level="INFO">${page_id} = {'page_id': 'page=375b62f2-6caf-4909-b9e2-7e7db708238f', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:26:05.379" endtime="20241128 23:26:08.504"/>
</kw>
<status status="PASS" starttime="20241128 23:26:04.412" endtime="20241128 23:26:08.504"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:08.506" endtime="20241128 23:26:08.516"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:08.522" endtime="20241128 23:26:08.529"/>
</kw>
<msg timestamp="20241128 23:26:08.529" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.522" endtime="20241128 23:26:08.529"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.532" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 23:26:08.529" endtime="20241128 23:26:08.532"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.534" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.534" endtime="20241128 23:26:08.534"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.534" endtime="20241128 23:26:08.534"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.534" endtime="20241128 23:26:08.534"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:08.534" endtime="20241128 23:26:08.534"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.533" endtime="20241128 23:26:08.534"/>
</if>
<status status="PASS" starttime="20241128 23:26:08.529" endtime="20241128 23:26:08.537"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.529" endtime="20241128 23:26:08.537"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:08.537" endtime="20241128 23:26:08.537"/>
</return>
<msg timestamp="20241128 23:26:08.537" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.522" endtime="20241128 23:26:08.537"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.537" endtime="20241128 23:26:08.537"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 23:26:08.537" endtime="20241128 23:26:08.537"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:08.537" endtime="20241128 23:26:08.537"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.537" endtime="20241128 23:26:08.537"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:08.549" endtime="20241128 23:26:08.549"/>
</kw>
<msg timestamp="20241128 23:26:08.549" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.549" endtime="20241128 23:26:08.549"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.553" level="INFO">${values} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 23:26:08.553" endtime="20241128 23:26:08.553"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.553" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.553" endtime="20241128 23:26:08.553"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.553" endtime="20241128 23:26:08.553"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.558" endtime="20241128 23:26:08.558"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:08.558" endtime="20241128 23:26:08.558"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.553" endtime="20241128 23:26:08.558"/>
</if>
<status status="PASS" starttime="20241128 23:26:08.549" endtime="20241128 23:26:08.558"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.549" endtime="20241128 23:26:08.558"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:08.558" endtime="20241128 23:26:08.558"/>
</return>
<msg timestamp="20241128 23:26:08.561" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.547" endtime="20241128 23:26:08.561"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.570"/>
</kw>
<msg timestamp="20241128 23:26:08.570" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.566" endtime="20241128 23:26:08.570"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.570" level="INFO">${values} = {'id': '5', 'testCaseId': '1', 'testSuiteRunId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T17:55:27.714Z', 'createdAt': '2024-11-28T17:55:27.714Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.570"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.570" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.570"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.570"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.570"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.570"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.570"/>
</if>
<status status="PASS" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.578"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.570" endtime="20241128 23:26:08.578"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:08.578" endtime="20241128 23:26:08.578"/>
</return>
<msg timestamp="20241128 23:26:08.578" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.566" endtime="20241128 23:26:08.578"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.578" endtime="20241128 23:26:08.578"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:08.578" endtime="20241128 23:26:08.578"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.578" endtime="20241128 23:26:08.578"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.578" level="INFO">${testCase} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 23:26:08.578" endtime="20241128 23:26:08.578"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.578" level="INFO">${testCaseRun} = {'id': '5', 'testCaseId': '1', 'testSuiteRunId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T17:55:27.714Z', 'createdAt': '2024-11-28T17:55:27.714Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 23:26:08.578" endtime="20241128 23:26:08.578"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.586" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 23:26:08.578" endtime="20241128 23:26:08.586"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:08.586" endtime="20241128 23:26:08.588"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:08.594" endtime="20241128 23:26:08.594"/>
</kw>
<msg timestamp="20241128 23:26:08.594" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.594" endtime="20241128 23:26:08.594"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.599" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241128 23:26:08.599" endtime="20241128 23:26:08.599"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.604" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.604" endtime="20241128 23:26:08.604"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.602" endtime="20241128 23:26:08.604"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.604" endtime="20241128 23:26:08.604"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:08.604" endtime="20241128 23:26:08.604"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.599" endtime="20241128 23:26:08.604"/>
</if>
<status status="PASS" starttime="20241128 23:26:08.599" endtime="20241128 23:26:08.604"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.594" endtime="20241128 23:26:08.604"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:08.604" endtime="20241128 23:26:08.604"/>
</return>
<msg timestamp="20241128 23:26:08.604" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.588" endtime="20241128 23:26:08.604"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:08.604" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '5', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 23:26:08.604" endtime="20241128 23:26:08.604"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:08.611" level="INFO">${json_response} = {"testCaseRunId": "5", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 23:26:08.611" endtime="20241128 23:26:08.611"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:08.657" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:08.657" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:08.611" endtime="20241128 23:26:08.657"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:08.657" endtime="20241128 23:26:08.664"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:08.664" endtime="20241128 23:26:08.665"/>
</return>
<status status="PASS" starttime="20241128 23:26:08.604" endtime="20241128 23:26:08.667"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:08.667" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 23:26:08.667" endtime="20241128 23:26:08.667"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.676" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 23:26:08.676" endtime="20241128 23:26:08.676"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:08.676" endtime="20241128 23:26:08.684"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:08.702" endtime="20241128 23:26:08.702"/>
</kw>
<msg timestamp="20241128 23:26:08.702" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.702" endtime="20241128 23:26:08.702"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.706" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.706" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</if>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:08.706"/>
</return>
<msg timestamp="20241128 23:26:08.706" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:08.702" endtime="20241128 23:26:08.706"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.715" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:26:08.715" endtime="20241128 23:26:08.715"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:08.715" endtime="20241128 23:26:08.722"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:26:08.722" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:26:08.722" endtime="20241128 23:26:08.722"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.722" endtime="20241128 23:26:08.722"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:08.722" endtime="20241128 23:26:08.722"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:08.722" endtime="20241128 23:26:08.722"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.722" endtime="20241128 23:26:08.722"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:08.722" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:26:08.722" endtime="20241128 23:26:08.722"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:26:16.344" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 23:26:16.345" level="INFO">${page_id} = {'page_id': 'page=0471f561-cf46-411d-8457-46127f71ee87', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:26:08.733" endtime="20241128 23:26:16.345"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 23:26:16.345" level="INFO">Switching to page {'page_id': 'page=0471f561-cf46-411d-8457-46127f71ee87', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 23:26:16.434" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=6288c668-6031-417b-ba0b-ccaf33a486b2",
    "contexts": [
      {
        "type": "context",
        "id": "context=029dbc46-832e-4f1f-ba2d-6f373a479b33",
        "activePage": "page=0471f561-cf46-411d-8457-46127f71ee87",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=375b62f2-6caf-4909-b9e2-7e7db708238f",
            "timestamp": 1732816565.623
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=0471f561-cf46-411d-8457-46127f71ee87",
            "timestamp": 1732816568.821
          }
        ]
      }
    ],
    "activeContext": "context=029dbc46-832e-4f1f-ba2d-6f373a479b33",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 23:26:16.440" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 23:26:16.345" endtime="20241128 23:26:16.440"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.722" endtime="20241128 23:26:16.440"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.722" endtime="20241128 23:26:16.440"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:26:16.442" endtime="20241128 23:26:16.442"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.440" endtime="20241128 23:26:16.442"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.442" endtime="20241128 23:26:16.442"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.442" endtime="20241128 23:26:16.442"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.450" endtime="20241128 23:26:16.450"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.450" endtime="20241128 23:26:16.450"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.442" endtime="20241128 23:26:16.450"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.458" endtime="20241128 23:26:16.458"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.450" endtime="20241128 23:26:16.458"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.458" endtime="20241128 23:26:16.458"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.458" endtime="20241128 23:26:16.458"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.466" endtime="20241128 23:26:16.466"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.466" endtime="20241128 23:26:16.466"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.466" endtime="20241128 23:26:16.466"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.466" endtime="20241128 23:26:16.466"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.458" endtime="20241128 23:26:16.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.466" endtime="20241128 23:26:16.466"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.466" endtime="20241128 23:26:16.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.473" endtime="20241128 23:26:16.473"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.474" endtime="20241128 23:26:16.474"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.473" endtime="20241128 23:26:16.474"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.474" endtime="20241128 23:26:16.474"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.474" endtime="20241128 23:26:16.474"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.473" endtime="20241128 23:26:16.474"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.466" endtime="20241128 23:26:16.474"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:16.482" endtime="20241128 23:26:16.482"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.485"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.474" endtime="20241128 23:26:16.485"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.485"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.485"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.485"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.485"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.485"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.485"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.485"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:16.493" endtime="20241128 23:26:16.493"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.493" endtime="20241128 23:26:16.499"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.485" endtime="20241128 23:26:16.499"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.501" endtime="20241128 23:26:16.501"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.501" endtime="20241128 23:26:16.501"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.501" endtime="20241128 23:26:16.501"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.501" endtime="20241128 23:26:16.502"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.501" endtime="20241128 23:26:16.502"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.501" endtime="20241128 23:26:16.502"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.499" endtime="20241128 23:26:16.502"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.503" endtime="20241128 23:26:16.503"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.502" endtime="20241128 23:26:16.503"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:26:16.511" endtime="20241128 23:26:16.511"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.511" endtime="20241128 23:26:16.511"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.503" endtime="20241128 23:26:16.511"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.722" endtime="20241128 23:26:16.511"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:16.511" endtime="20241128 23:26:16.511"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:26:16.511" endtime="20241128 23:26:16.511"/>
</return>
<msg timestamp="20241128 23:26:16.515" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:26:08.722" endtime="20241128 23:26:16.515"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:16.516" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 23:26:16.515" endtime="20241128 23:26:16.516"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.517"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.517"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.520"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.522" endtime="20241128 23:26:16.522"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:26:16.522" endtime="20241128 23:26:16.524"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.522" endtime="20241128 23:26:16.524"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.522" endtime="20241128 23:26:16.524"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.524" endtime="20241128 23:26:16.524"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:16.524" endtime="20241128 23:26:16.524"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.524" endtime="20241128 23:26:16.524"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.524" endtime="20241128 23:26:16.524"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.526"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.526"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.526"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.526"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.522" endtime="20241128 23:26:16.526"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.522" endtime="20241128 23:26:16.526"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.526"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.526"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.526"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.527" endtime="20241128 23:26:16.527"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.527"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.527"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.528" endtime="20241128 23:26:16.528"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:16.528" endtime="20241128 23:26:16.528"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.528" endtime="20241128 23:26:16.528"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.527" endtime="20241128 23:26:16.528"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.528"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.526" endtime="20241128 23:26:16.528"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.517" endtime="20241128 23:26:16.528"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:26:16.516" endtime="20241128 23:26:16.528"/>
</for>
<msg timestamp="20241128 23:26:16.528" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:26:16.515" endtime="20241128 23:26:16.528"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:16.528" endtime="20241128 23:26:16.528"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 23:26:16.533" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 23:26:16.533" endtime="20241128 23:26:16.533"/>
</kw>
<msg timestamp="20241128 23:26:16.533" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 23:26:16.533" endtime="20241128 23:26:16.533"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.537" endtime="20241128 23:26:16.537"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.537" endtime="20241128 23:26:16.537"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.537" endtime="20241128 23:26:16.537"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.537" endtime="20241128 23:26:16.537"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.537" endtime="20241128 23:26:16.537"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.537" endtime="20241128 23:26:16.537"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.537" endtime="20241128 23:26:16.537"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.533" endtime="20241128 23:26:16.539"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:16.539" endtime="20241128 23:26:16.539"/>
</return>
<msg timestamp="20241128 23:26:16.539" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 23:26:16.533" endtime="20241128 23:26:16.539"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.541" endtime="20241128 23:26:16.541"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.541" endtime="20241128 23:26:16.541"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:16.541" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 23:26:16.541" endtime="20241128 23:26:16.541"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.541" endtime="20241128 23:26:16.541"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.539" endtime="20241128 23:26:16.541"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:16.541" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '25', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241128 23:26:16.541" endtime="20241128 23:26:16.541"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:16.541" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "25", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241128 23:26:16.541" endtime="20241128 23:26:16.541"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:16.550" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:16.552" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:16.541" endtime="20241128 23:26:16.552"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:16.552" endtime="20241128 23:26:16.555"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:16.556" endtime="20241128 23:26:16.556"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.541" endtime="20241128 23:26:16.558"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.528" endtime="20241128 23:26:16.558"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:26:16.559" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:26:16.558" endtime="20241128 23:26:16.559"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.715" endtime="20241128 23:26:16.559"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.559" endtime="20241128 23:26:16.559"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:26:16.559" endtime="20241128 23:26:16.559"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.560" endtime="20241128 23:26:16.560"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.559" endtime="20241128 23:26:16.560"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.715" endtime="20241128 23:26:16.560"/>
</try>
<status status="PASS" starttime="20241128 23:26:08.715" endtime="20241128 23:26:16.560"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:16.561" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 23:26:16.560" endtime="20241128 23:26:16.561"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:16.561" endtime="20241128 23:26:16.562"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:26:16.562" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 23:26:16.562" endtime="20241128 23:26:16.562"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.563" endtime="20241128 23:26:16.563"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.563" endtime="20241128 23:26:16.563"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.563" endtime="20241128 23:26:16.563"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.562" endtime="20241128 23:26:16.564"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:16.564" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 23:26:16.564" endtime="20241128 23:26:16.564"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:26:16.565" endtime="20241128 23:26:16.565"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.565" endtime="20241128 23:26:16.565"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:26:16.565" endtime="20241128 23:26:16.565"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.565" endtime="20241128 23:26:16.566"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.568" endtime="20241128 23:26:16.568"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.566" endtime="20241128 23:26:16.569"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.573" endtime="20241128 23:26:16.573"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.576" endtime="20241128 23:26:16.576"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.569" endtime="20241128 23:26:16.576"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.578" endtime="20241128 23:26:16.578"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.576" endtime="20241128 23:26:16.578"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.581" endtime="20241128 23:26:16.581"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.579" endtime="20241128 23:26:16.581"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:16.613" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 23:26:16.591" endtime="20241128 23:26:16.613"/>
</kw>
<msg timestamp="20241128 23:26:16.613" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.588" endtime="20241128 23:26:16.613"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:16.613" endtime="20241128 23:26:16.613"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.588" endtime="20241128 23:26:16.613"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.616" endtime="20241128 23:26:16.616"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.616" endtime="20241128 23:26:16.616"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.613" endtime="20241128 23:26:16.616"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.588" endtime="20241128 23:26:16.616"/>
</try>
<msg timestamp="20241128 23:26:16.616" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.588" endtime="20241128 23:26:16.616"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:16.616" endtime="20241128 23:26:16.616"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.587" endtime="20241128 23:26:16.616"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:26:16.616" endtime="20241128 23:26:16.616"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.616" endtime="20241128 23:26:16.616"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.587" endtime="20241128 23:26:16.616"/>
</try>
<msg timestamp="20241128 23:26:16.616" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.587" endtime="20241128 23:26:16.616"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.620" endtime="20241128 23:26:16.620"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.620" endtime="20241128 23:26:16.620"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.620" endtime="20241128 23:26:16.620"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.616" endtime="20241128 23:26:16.620"/>
</if>
<status status="PASS" starttime="20241128 23:26:16.616" endtime="20241128 23:26:16.620"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.581" endtime="20241128 23:26:16.620"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:16.636" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 23:26:16.628" endtime="20241128 23:26:16.636"/>
</kw>
<msg timestamp="20241128 23:26:16.636" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.628" endtime="20241128 23:26:16.636"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:16.636" endtime="20241128 23:26:16.636"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.628" endtime="20241128 23:26:16.636"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.636" endtime="20241128 23:26:16.636"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.637" endtime="20241128 23:26:16.637"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.636" endtime="20241128 23:26:16.637"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.628" endtime="20241128 23:26:16.637"/>
</try>
<msg timestamp="20241128 23:26:16.638" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.628" endtime="20241128 23:26:16.638"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:16.638" endtime="20241128 23:26:16.638"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.628" endtime="20241128 23:26:16.638"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:26:16.638" endtime="20241128 23:26:16.638"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.638" endtime="20241128 23:26:16.638"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.628" endtime="20241128 23:26:16.638"/>
</try>
<msg timestamp="20241128 23:26:16.638" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.624" endtime="20241128 23:26:16.638"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.642" endtime="20241128 23:26:16.642"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.642" endtime="20241128 23:26:16.642"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.642" endtime="20241128 23:26:16.642"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.642" endtime="20241128 23:26:16.642"/>
</if>
<status status="PASS" starttime="20241128 23:26:16.641" endtime="20241128 23:26:16.642"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.624" endtime="20241128 23:26:16.642"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 23:26:16.688" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 23:26:16.689" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 23:26:16.642" endtime="20241128 23:26:16.689"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 23:26:16.689" endtime="20241128 23:26:16.691"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.642" endtime="20241128 23:26:16.691"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.691" endtime="20241128 23:26:16.692"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.692" endtime="20241128 23:26:16.692"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.691" endtime="20241128 23:26:16.692"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.642" endtime="20241128 23:26:16.694"/>
</try>
<msg timestamp="20241128 23:26:16.694" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 23:26:16.624" endtime="20241128 23:26:16.694"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.702" endtime="20241128 23:26:16.706"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.706" endtime="20241128 23:26:16.707"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.702" endtime="20241128 23:26:16.707"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.702" endtime="20241128 23:26:16.707"/>
</if>
<status status="PASS" starttime="20241128 23:26:16.697" endtime="20241128 23:26:16.707"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.624" endtime="20241128 23:26:16.707"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.707" endtime="20241128 23:26:16.710"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.707" endtime="20241128 23:26:16.710"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.624" endtime="20241128 23:26:16.710"/>
</try>
<status status="PASS" starttime="20241128 23:26:16.621" endtime="20241128 23:26:16.711"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:16.775" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241128 23:26:16.718" endtime="20241128 23:26:16.775"/>
</kw>
<msg timestamp="20241128 23:26:16.776" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.718" endtime="20241128 23:26:16.776"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:16.776" endtime="20241128 23:26:16.776"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.718" endtime="20241128 23:26:16.776"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.776" endtime="20241128 23:26:16.776"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.776" endtime="20241128 23:26:16.776"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.776" endtime="20241128 23:26:16.776"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.718" endtime="20241128 23:26:16.776"/>
</try>
<msg timestamp="20241128 23:26:16.776" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.718" endtime="20241128 23:26:16.776"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:16.776" endtime="20241128 23:26:16.776"/>
</return>
<msg timestamp="20241128 23:26:16.776" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.712" endtime="20241128 23:26:16.776"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.783" endtime="20241128 23:26:16.783"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.786" endtime="20241128 23:26:16.786"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.783" endtime="20241128 23:26:16.786"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.783" endtime="20241128 23:26:16.787"/>
</if>
<status status="PASS" starttime="20241128 23:26:16.783" endtime="20241128 23:26:16.787"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.712" endtime="20241128 23:26:16.787"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.581" endtime="20241128 23:26:16.787"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:16.840" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241128 23:26:16.799" endtime="20241128 23:26:16.840"/>
</kw>
<msg timestamp="20241128 23:26:16.840" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.799" endtime="20241128 23:26:16.840"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:16.840" endtime="20241128 23:26:16.840"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.799" endtime="20241128 23:26:16.840"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.840" endtime="20241128 23:26:16.840"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.840" endtime="20241128 23:26:16.840"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.840" endtime="20241128 23:26:16.840"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.799" endtime="20241128 23:26:16.840"/>
</try>
<msg timestamp="20241128 23:26:16.840" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.797" endtime="20241128 23:26:16.840"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:16.840" endtime="20241128 23:26:16.840"/>
</return>
<msg timestamp="20241128 23:26:16.840" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.793" endtime="20241128 23:26:16.840"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.847" endtime="20241128 23:26:16.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.848" endtime="20241128 23:26:16.848"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.847" endtime="20241128 23:26:16.848"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.840" endtime="20241128 23:26:16.848"/>
</if>
<status status="PASS" starttime="20241128 23:26:16.840" endtime="20241128 23:26:16.848"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.793" endtime="20241128 23:26:16.848"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:16.849" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.849"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.849"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.849"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.849"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.849"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.849"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.849"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 23:26:16.849" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.893"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.893"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.893"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.893"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.893"/>
</try>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.893"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.893"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.893"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.893"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.893"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.849" endtime="20241128 23:26:16.893"/>
</try>
<status status="PASS" starttime="20241128 23:26:16.581" endtime="20241128 23:26:16.893"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.893"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.893"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.893"/>
</if>
<status status="PASS" starttime="20241128 23:26:16.581" endtime="20241128 23:26:16.893"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.893" endtime="20241128 23:26:16.898"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.898"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.906"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.898" endtime="20241128 23:26:16.906"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.906"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.906"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.906"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.906"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.906"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.906"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.906"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:16.914" endtime="20241128 23:26:16.914"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.914" endtime="20241128 23:26:16.914"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.906" endtime="20241128 23:26:16.914"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.914" endtime="20241128 23:26:16.914"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.914" endtime="20241128 23:26:16.914"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.914" endtime="20241128 23:26:16.914"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.922" endtime="20241128 23:26:16.922"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.914" endtime="20241128 23:26:16.922"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.914" endtime="20241128 23:26:16.922"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.914" endtime="20241128 23:26:16.922"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.922" endtime="20241128 23:26:16.922"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.922" endtime="20241128 23:26:16.922"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.922" endtime="20241128 23:26:16.930"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.564" endtime="20241128 23:26:16.930"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</return>
<msg timestamp="20241128 23:26:16.930" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 23:26:16.564" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:16.930" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.930"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.939" endtime="20241128 23:26:16.939"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.940" endtime="20241128 23:26:16.940"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.941"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.941"/>
</for>
<msg timestamp="20241128 23:26:16.941" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:26:16.930" endtime="20241128 23:26:16.941"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.941"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:16.954" endtime="20241128 23:26:16.954"/>
</kw>
<msg timestamp="20241128 23:26:16.954" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.952" endtime="20241128 23:26:16.954"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:16.956" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.956"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:16.956" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.956"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.956"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.956"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.956"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.956"/>
</if>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.956"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.954" endtime="20241128 23:26:16.956"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.956"/>
</return>
<msg timestamp="20241128 23:26:16.956" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:16.952" endtime="20241128 23:26:16.956"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:16.963" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.963"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.963"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.963" endtime="20241128 23:26:16.963"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.963" endtime="20241128 23:26:16.963"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.956" endtime="20241128 23:26:16.963"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:16.967" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '26', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage'...</msg>
<status status="PASS" starttime="20241128 23:26:16.963" endtime="20241128 23:26:16.967"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:16.967" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "26", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage"...</msg>
<status status="PASS" starttime="20241128 23:26:16.967" endtime="20241128 23:26:16.967"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:16.990" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:16.990" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:16.967" endtime="20241128 23:26:16.990"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:16.992" endtime="20241128 23:26:16.993"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:16.993" endtime="20241128 23:26:16.993"/>
</return>
<status status="PASS" starttime="20241128 23:26:16.967" endtime="20241128 23:26:16.994"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.941" endtime="20241128 23:26:16.994"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:26:16.994" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:26:16.994" endtime="20241128 23:26:16.996"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.560" endtime="20241128 23:26:16.996"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.996" endtime="20241128 23:26:16.997"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:26:16.997" endtime="20241128 23:26:16.997"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:16.998" endtime="20241128 23:26:16.998"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:16.996" endtime="20241128 23:26:16.998"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.560" endtime="20241128 23:26:16.998"/>
</try>
<status status="PASS" starttime="20241128 23:26:16.560" endtime="20241128 23:26:16.998"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.001" level="INFO">${action} = {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:58.626Z', 'updatedAt': '2024-11-28T06:56:58....</msg>
<status status="PASS" starttime="20241128 23:26:17.000" endtime="20241128 23:26:17.001"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:17.001" endtime="20241128 23:26:17.001"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:26:17.001" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:58.757Z', 'updatedAt': '2024-11-28T06:57:07.363Z'}</msg>
<status status="PASS" starttime="20241128 23:26:17.001" endtime="20241128 23:26:17.001"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.005" endtime="20241128 23:26:17.005"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.006" endtime="20241128 23:26:17.006"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.005" endtime="20241128 23:26:17.006"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.001" endtime="20241128 23:26:17.006"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.010" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 23:26:17.010" endtime="20241128 23:26:17.010"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:26:17.013" endtime="20241128 23:26:17.013"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.013" endtime="20241128 23:26:17.015"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:26:17.015" endtime="20241128 23:26:17.015"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.015" endtime="20241128 23:26:17.015"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.025" endtime="20241128 23:26:17.026"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.015" endtime="20241128 23:26:17.026"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.031" endtime="20241128 23:26:17.031"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.041" endtime="20241128 23:26:17.041"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.031" endtime="20241128 23:26:17.041"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.046" endtime="20241128 23:26:17.046"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.043" endtime="20241128 23:26:17.046"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.053" endtime="20241128 23:26:17.053"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.047" endtime="20241128 23:26:17.055"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:17.079" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 23:26:17.071" endtime="20241128 23:26:17.079"/>
</kw>
<msg timestamp="20241128 23:26:17.079" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.071" endtime="20241128 23:26:17.079"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.079" endtime="20241128 23:26:17.079"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.071" endtime="20241128 23:26:17.079"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.079" endtime="20241128 23:26:17.079"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.079" endtime="20241128 23:26:17.079"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.079" endtime="20241128 23:26:17.079"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.065" endtime="20241128 23:26:17.079"/>
</try>
<msg timestamp="20241128 23:26:17.079" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.065" endtime="20241128 23:26:17.079"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.079" endtime="20241128 23:26:17.079"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.065" endtime="20241128 23:26:17.079"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.079" endtime="20241128 23:26:17.079"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.079" endtime="20241128 23:26:17.079"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.065" endtime="20241128 23:26:17.079"/>
</try>
<msg timestamp="20241128 23:26:17.087" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.065" endtime="20241128 23:26:17.087"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.092" endtime="20241128 23:26:17.093"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.093" endtime="20241128 23:26:17.093"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.092" endtime="20241128 23:26:17.093"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.092" endtime="20241128 23:26:17.093"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.089" endtime="20241128 23:26:17.093"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.065" endtime="20241128 23:26:17.093"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:17.124" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 23:26:17.111" endtime="20241128 23:26:17.124"/>
</kw>
<msg timestamp="20241128 23:26:17.124" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.111" endtime="20241128 23:26:17.124"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.124" endtime="20241128 23:26:17.124"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.111" endtime="20241128 23:26:17.124"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.126" endtime="20241128 23:26:17.127"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.127" endtime="20241128 23:26:17.127"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.126" endtime="20241128 23:26:17.127"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.111" endtime="20241128 23:26:17.127"/>
</try>
<msg timestamp="20241128 23:26:17.127" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.111" endtime="20241128 23:26:17.127"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.128" endtime="20241128 23:26:17.128"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.107" endtime="20241128 23:26:17.128"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.128" endtime="20241128 23:26:17.128"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.128" endtime="20241128 23:26:17.128"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.107" endtime="20241128 23:26:17.128"/>
</try>
<msg timestamp="20241128 23:26:17.128" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.107" endtime="20241128 23:26:17.128"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.132" endtime="20241128 23:26:17.132"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.132" endtime="20241128 23:26:17.132"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.132" endtime="20241128 23:26:17.132"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.132" endtime="20241128 23:26:17.132"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.128" endtime="20241128 23:26:17.132"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.103" endtime="20241128 23:26:17.132"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 23:26:17.154" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 23:26:17.156" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 23:26:17.136" endtime="20241128 23:26:17.156"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 23:26:17.156" endtime="20241128 23:26:17.156"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.136" endtime="20241128 23:26:17.156"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.156" endtime="20241128 23:26:17.156"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.156" endtime="20241128 23:26:17.158"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.156" endtime="20241128 23:26:17.158"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.132" endtime="20241128 23:26:17.158"/>
</try>
<msg timestamp="20241128 23:26:17.158" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 23:26:17.096" endtime="20241128 23:26:17.158"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.161" endtime="20241128 23:26:17.161"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.161" endtime="20241128 23:26:17.161"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.161" endtime="20241128 23:26:17.161"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.161" endtime="20241128 23:26:17.161"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.161" endtime="20241128 23:26:17.161"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.096" endtime="20241128 23:26:17.161"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.161" endtime="20241128 23:26:17.161"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.161" endtime="20241128 23:26:17.161"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.096" endtime="20241128 23:26:17.161"/>
</try>
<status status="PASS" starttime="20241128 23:26:17.096" endtime="20241128 23:26:17.161"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:17.188" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241128 23:26:17.178" endtime="20241128 23:26:17.189"/>
</kw>
<msg timestamp="20241128 23:26:17.189" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.171" endtime="20241128 23:26:17.189"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.189" endtime="20241128 23:26:17.189"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.171" endtime="20241128 23:26:17.189"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.190" endtime="20241128 23:26:17.190"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.190" endtime="20241128 23:26:17.190"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.189" endtime="20241128 23:26:17.190"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.171" endtime="20241128 23:26:17.190"/>
</try>
<msg timestamp="20241128 23:26:17.190" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.171" endtime="20241128 23:26:17.190"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.190" endtime="20241128 23:26:17.190"/>
</return>
<msg timestamp="20241128 23:26:17.194" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.171" endtime="20241128 23:26:17.194"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.198" endtime="20241128 23:26:17.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.198" endtime="20241128 23:26:17.198"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.198" endtime="20241128 23:26:17.198"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.198" endtime="20241128 23:26:17.198"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.196" endtime="20241128 23:26:17.198"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.169" endtime="20241128 23:26:17.198"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.061" endtime="20241128 23:26:17.198"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:17.238" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241128 23:26:17.210" endtime="20241128 23:26:17.238"/>
</kw>
<msg timestamp="20241128 23:26:17.238" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.210" endtime="20241128 23:26:17.238"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.238" endtime="20241128 23:26:17.238"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.210" endtime="20241128 23:26:17.238"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.239" endtime="20241128 23:26:17.239"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.239" endtime="20241128 23:26:17.239"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.238" endtime="20241128 23:26:17.239"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.210" endtime="20241128 23:26:17.239"/>
</try>
<msg timestamp="20241128 23:26:17.239" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.209" endtime="20241128 23:26:17.243"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.243" endtime="20241128 23:26:17.243"/>
</return>
<msg timestamp="20241128 23:26:17.243" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.206" endtime="20241128 23:26:17.243"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.245" endtime="20241128 23:26:17.245"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.245" endtime="20241128 23:26:17.245"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.245" endtime="20241128 23:26:17.245"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.245" endtime="20241128 23:26:17.245"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.245" endtime="20241128 23:26:17.245"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.205" endtime="20241128 23:26:17.245"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:17.251" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:26:17.245" endtime="20241128 23:26:17.251"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.251" endtime="20241128 23:26:17.251"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.257" endtime="20241128 23:26:17.257"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.251" endtime="20241128 23:26:17.257"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:17.257" endtime="20241128 23:26:17.260"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.257" endtime="20241128 23:26:17.260"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.251" endtime="20241128 23:26:17.260"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 23:26:17.260" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 23:26:17.260" endtime="20241128 23:26:17.291"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.260" endtime="20241128 23:26:17.292"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.292" endtime="20241128 23:26:17.292"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.292" endtime="20241128 23:26:17.292"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.292" endtime="20241128 23:26:17.292"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.260" endtime="20241128 23:26:17.293"/>
</try>
<status status="PASS" starttime="20241128 23:26:17.251" endtime="20241128 23:26:17.293"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.251" endtime="20241128 23:26:17.293"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.251" endtime="20241128 23:26:17.293"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.251" endtime="20241128 23:26:17.293"/>
</try>
<status status="PASS" starttime="20241128 23:26:17.060" endtime="20241128 23:26:17.293"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.055" endtime="20241128 23:26:17.293"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.293"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:17.299" endtime="20241128 23:26:17.299"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.299" endtime="20241128 23:26:17.299"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.293" endtime="20241128 23:26:17.299"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.307" endtime="20241128 23:26:17.307"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.307" endtime="20241128 23:26:17.307"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.307" endtime="20241128 23:26:17.307"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.309" endtime="20241128 23:26:17.309"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.309" endtime="20241128 23:26:17.309"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.307" endtime="20241128 23:26:17.309"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.307" endtime="20241128 23:26:17.309"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:17.309" endtime="20241128 23:26:17.309"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.309" endtime="20241128 23:26:17.316"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.316"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:26:17.328" endtime="20241128 23:26:17.328"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.328" endtime="20241128 23:26:17.328"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.316" endtime="20241128 23:26:17.328"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.010" endtime="20241128 23:26:17.328"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:17.328" endtime="20241128 23:26:17.328"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:26:17.328" endtime="20241128 23:26:17.328"/>
</return>
<msg timestamp="20241128 23:26:17.328" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 23:26:17.006" endtime="20241128 23:26:17.328"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.328" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 23:26:17.328" endtime="20241128 23:26:17.332"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.332"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:26:17.340" endtime="20241128 23:26:17.340"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.340"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.340"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.340" endtime="20241128 23:26:17.340"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.340" endtime="20241128 23:26:17.340"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.340" endtime="20241128 23:26:17.340"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.340" endtime="20241128 23:26:17.340"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.340" endtime="20241128 23:26:17.341"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.341"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.341"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.341"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.344"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.344" endtime="20241128 23:26:17.344"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.344"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.345"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.345"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.341" endtime="20241128 23:26:17.345"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.345"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:26:17.332" endtime="20241128 23:26:17.345"/>
</for>
<msg timestamp="20241128 23:26:17.345" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:26:17.328" endtime="20241128 23:26:17.345"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:17.345" endtime="20241128 23:26:17.347"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</kw>
<msg timestamp="20241128 23:26:17.349" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.349" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:57.275Z', 'updatedAt': '2024-11-28T06:56:57.275Z'}</msg>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.349" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</return>
<msg timestamp="20241128 23:26:17.349" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.349" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.349"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.357"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.357" endtime="20241128 23:26:17.357"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.357" endtime="20241128 23:26:17.357"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.349" endtime="20241128 23:26:17.357"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:17.357" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '27', 'status': 'COMPLETED', 'actionName': 'Set Password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', 'a...</msg>
<status status="PASS" starttime="20241128 23:26:17.357" endtime="20241128 23:26:17.357"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:17.357" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "27", "status": "COMPLETED", "actionName": "Set Password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "a...</msg>
<status status="PASS" starttime="20241128 23:26:17.357" endtime="20241128 23:26:17.357"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:17.403" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:17.403" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:17.357" endtime="20241128 23:26:17.403"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:17.403" endtime="20241128 23:26:17.405"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:17.405" endtime="20241128 23:26:17.407"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.357" endtime="20241128 23:26:17.407"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.347" endtime="20241128 23:26:17.407"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:26:17.407" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:26:17.407" endtime="20241128 23:26:17.407"/>
</kw>
<status status="PASS" starttime="20241128 23:26:16.998" endtime="20241128 23:26:17.407"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.407" endtime="20241128 23:26:17.413"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:26:17.414" endtime="20241128 23:26:17.414"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.415" endtime="20241128 23:26:17.416"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.407" endtime="20241128 23:26:17.416"/>
</branch>
<status status="PASS" starttime="20241128 23:26:16.998" endtime="20241128 23:26:17.416"/>
</try>
<status status="PASS" starttime="20241128 23:26:16.998" endtime="20241128 23:26:17.417"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.421" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:57:48.296Z', 'updatedAt': '2024-11-28T06:57:4...</msg>
<status status="PASS" starttime="20241128 23:26:17.419" endtime="20241128 23:26:17.421"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:17.421" endtime="20241128 23:26:17.424"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:26:17.425" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:57:48.432Z', 'updatedAt': '2024-11-28T06:57:48.432Z'}</msg>
<status status="PASS" starttime="20241128 23:26:17.425" endtime="20241128 23:26:17.425"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.430" endtime="20241128 23:26:17.430"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.431" endtime="20241128 23:26:17.431"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.425" endtime="20241128 23:26:17.431"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.425" endtime="20241128 23:26:17.431"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.431" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 23:26:17.431" endtime="20241128 23:26:17.431"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:26:17.438" endtime="20241128 23:26:17.438"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.431" endtime="20241128 23:26:17.438"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:26:17.438" endtime="20241128 23:26:17.438"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.438" endtime="20241128 23:26:17.438"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:17.480" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241128 23:26:17.464" endtime="20241128 23:26:17.482"/>
</kw>
<msg timestamp="20241128 23:26:17.482" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.464" endtime="20241128 23:26:17.482"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.482" endtime="20241128 23:26:17.482"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.464" endtime="20241128 23:26:17.482"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.482" endtime="20241128 23:26:17.482"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.482" endtime="20241128 23:26:17.482"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.482" endtime="20241128 23:26:17.482"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.464" endtime="20241128 23:26:17.482"/>
</try>
<msg timestamp="20241128 23:26:17.482" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.464" endtime="20241128 23:26:17.482"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.482" endtime="20241128 23:26:17.482"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.464" endtime="20241128 23:26:17.482"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.482" endtime="20241128 23:26:17.482"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.482" endtime="20241128 23:26:17.482"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.464" endtime="20241128 23:26:17.482"/>
</try>
<msg timestamp="20241128 23:26:17.488" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.464" endtime="20241128 23:26:17.488"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.494" endtime="20241128 23:26:17.494"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.494" endtime="20241128 23:26:17.494"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.494" endtime="20241128 23:26:17.494"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.492" endtime="20241128 23:26:17.494"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.491" endtime="20241128 23:26:17.494"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.460" endtime="20241128 23:26:17.494"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:17.518" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241128 23:26:17.507" endtime="20241128 23:26:17.518"/>
</kw>
<msg timestamp="20241128 23:26:17.518" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.504" endtime="20241128 23:26:17.518"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.518" endtime="20241128 23:26:17.518"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.504" endtime="20241128 23:26:17.518"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.521" endtime="20241128 23:26:17.521"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.523" endtime="20241128 23:26:17.523"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.518" endtime="20241128 23:26:17.523"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.504" endtime="20241128 23:26:17.523"/>
</try>
<msg timestamp="20241128 23:26:17.523" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.504" endtime="20241128 23:26:17.523"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.523" endtime="20241128 23:26:17.523"/>
</return>
<msg timestamp="20241128 23:26:17.523" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.496" endtime="20241128 23:26:17.523"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.530" endtime="20241128 23:26:17.530"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.530" endtime="20241128 23:26:17.530"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.530" endtime="20241128 23:26:17.530"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.530" endtime="20241128 23:26:17.530"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.530" endtime="20241128 23:26:17.538"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.496" endtime="20241128 23:26:17.538"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:26:17.594" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241128 23:26:17.554" endtime="20241128 23:26:17.596"/>
</kw>
<msg timestamp="20241128 23:26:17.596" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.546" endtime="20241128 23:26:17.596"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.596" endtime="20241128 23:26:17.596"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.546" endtime="20241128 23:26:17.596"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.596" endtime="20241128 23:26:17.596"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.596" endtime="20241128 23:26:17.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.596" endtime="20241128 23:26:17.596"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.546" endtime="20241128 23:26:17.596"/>
</try>
<msg timestamp="20241128 23:26:17.596" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.546" endtime="20241128 23:26:17.596"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:26:17.596" endtime="20241128 23:26:17.596"/>
</return>
<msg timestamp="20241128 23:26:17.596" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.546" endtime="20241128 23:26:17.596"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.608" endtime="20241128 23:26:17.608"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.612" endtime="20241128 23:26:17.612"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.608" endtime="20241128 23:26:17.612"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.608" endtime="20241128 23:26:17.612"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.606" endtime="20241128 23:26:17.612"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.542" endtime="20241128 23:26:17.612"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.455" endtime="20241128 23:26:17.612"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:17.612" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:26:17.612" endtime="20241128 23:26:17.612"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.620" endtime="20241128 23:26:17.620"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.620" endtime="20241128 23:26:17.620"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:17.620" endtime="20241128 23:26:17.624"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.620" endtime="20241128 23:26:17.624"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.620" endtime="20241128 23:26:17.624"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 23:26:17.624" endtime="20241128 23:26:17.731"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.624" endtime="20241128 23:26:17.734"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.734" endtime="20241128 23:26:17.734"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.735" endtime="20241128 23:26:17.735"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.734" endtime="20241128 23:26:17.735"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.624" endtime="20241128 23:26:17.735"/>
</try>
<status status="PASS" starttime="20241128 23:26:17.612" endtime="20241128 23:26:17.735"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.612" endtime="20241128 23:26:17.735"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.612" endtime="20241128 23:26:17.735"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.735" endtime="20241128 23:26:17.735"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.735" endtime="20241128 23:26:17.735"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.612" endtime="20241128 23:26:17.735"/>
</try>
<status status="PASS" starttime="20241128 23:26:17.447" endtime="20241128 23:26:17.735"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.438" endtime="20241128 23:26:17.735"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.735" endtime="20241128 23:26:17.743"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.743" endtime="20241128 23:26:17.743"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.735" endtime="20241128 23:26:17.743"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.743" endtime="20241128 23:26:17.743"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.743" endtime="20241128 23:26:17.743"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.751" endtime="20241128 23:26:17.751"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.743" endtime="20241128 23:26:17.751"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.759" endtime="20241128 23:26:17.759"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.759" endtime="20241128 23:26:17.759"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.759" endtime="20241128 23:26:17.759"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.759" endtime="20241128 23:26:17.759"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.751" endtime="20241128 23:26:17.767"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.767" endtime="20241128 23:26:17.767"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.767" endtime="20241128 23:26:17.767"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.776" endtime="20241128 23:26:17.776"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.777" endtime="20241128 23:26:17.777"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.776" endtime="20241128 23:26:17.777"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.777" endtime="20241128 23:26:17.777"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.777" endtime="20241128 23:26:17.777"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.776" endtime="20241128 23:26:17.777"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.767" endtime="20241128 23:26:17.777"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:17.794" endtime="20241128 23:26:17.794"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.806" endtime="20241128 23:26:17.806"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.777" endtime="20241128 23:26:17.806"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.809" endtime="20241128 23:26:17.809"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.809" endtime="20241128 23:26:17.809"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.809" endtime="20241128 23:26:17.809"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.809" endtime="20241128 23:26:17.809"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.809" endtime="20241128 23:26:17.809"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.809" endtime="20241128 23:26:17.809"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.806" endtime="20241128 23:26:17.809"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:26:17.825" endtime="20241128 23:26:17.825"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.825" endtime="20241128 23:26:17.825"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.809" endtime="20241128 23:26:17.825"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.833" endtime="20241128 23:26:17.833"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.834" endtime="20241128 23:26:17.834"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.834" endtime="20241128 23:26:17.835"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.835" endtime="20241128 23:26:17.835"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.835" endtime="20241128 23:26:17.835"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.833" endtime="20241128 23:26:17.835"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.825" endtime="20241128 23:26:17.835"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.835" endtime="20241128 23:26:17.835"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.835" endtime="20241128 23:26:17.835"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:26:17.849" endtime="20241128 23:26:17.849"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.849" endtime="20241128 23:26:17.849"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.840" endtime="20241128 23:26:17.849"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.431" endtime="20241128 23:26:17.849"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:17.849" endtime="20241128 23:26:17.849"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:26:17.849" endtime="20241128 23:26:17.849"/>
</return>
<msg timestamp="20241128 23:26:17.849" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 23:26:17.431" endtime="20241128 23:26:17.849"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.857" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241128 23:26:17.857" endtime="20241128 23:26:17.857"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.857" endtime="20241128 23:26:17.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.857" endtime="20241128 23:26:17.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.857" endtime="20241128 23:26:17.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.857" endtime="20241128 23:26:17.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.857" endtime="20241128 23:26:17.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.865" endtime="20241128 23:26:17.865"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.865" endtime="20241128 23:26:17.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.865" endtime="20241128 23:26:17.865"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.865" endtime="20241128 23:26:17.865"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.873" endtime="20241128 23:26:17.873"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:26:17.881" endtime="20241128 23:26:17.881"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.881" endtime="20241128 23:26:17.881"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.881" endtime="20241128 23:26:17.883"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.883" endtime="20241128 23:26:17.884"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.883" endtime="20241128 23:26:17.884"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.883" endtime="20241128 23:26:17.884"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.885" endtime="20241128 23:26:17.885"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:26:17.886" endtime="20241128 23:26:17.886"/>
</return>
<status status="NOT RUN" starttime="20241128 23:26:17.885" endtime="20241128 23:26:17.886"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.885" endtime="20241128 23:26:17.886"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.881" endtime="20241128 23:26:17.886"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:26:17.881" endtime="20241128 23:26:17.886"/>
</if>
<status status="NOT RUN" starttime="20241128 23:26:17.857" endtime="20241128 23:26:17.886"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:26:17.857" endtime="20241128 23:26:17.886"/>
</for>
<msg timestamp="20241128 23:26:17.886" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:26:17.849" endtime="20241128 23:26:17.886"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:17.886" endtime="20241128 23:26:17.889"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:26:17.898" endtime="20241128 23:26:17.898"/>
</kw>
<msg timestamp="20241128 23:26:17.906" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.898" endtime="20241128 23:26:17.906"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.908" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@type="submit" and text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-28T06:57:46.898Z', 'updatedAt': '2024-11-28T14:47:44.548Z'}</msg>
<status status="PASS" starttime="20241128 23:26:17.908" endtime="20241128 23:26:17.908"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.908" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.908" endtime="20241128 23:26:17.908"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.908" endtime="20241128 23:26:17.908"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.908" endtime="20241128 23:26:17.908"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.908" endtime="20241128 23:26:17.914"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.908" endtime="20241128 23:26:17.914"/>
</if>
<status status="PASS" starttime="20241128 23:26:17.906" endtime="20241128 23:26:17.914"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.906" endtime="20241128 23:26:17.916"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:26:17.916" endtime="20241128 23:26:17.916"/>
</return>
<msg timestamp="20241128 23:26:17.916" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:26:17.898" endtime="20241128 23:26:17.916"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:26:17.916" level="INFO">${xpath} = //button[@type="submit" and text()="Login"]</msg>
<status status="PASS" starttime="20241128 23:26:17.916" endtime="20241128 23:26:17.916"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.916" endtime="20241128 23:26:17.916"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.916" endtime="20241128 23:26:17.916"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.916" endtime="20241128 23:26:17.916"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.916" endtime="20241128 23:26:17.916"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:17.926" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '28', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '', ...</msg>
<status status="PASS" starttime="20241128 23:26:17.922" endtime="20241128 23:26:17.926"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:17.926" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "28", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue": ...</msg>
<status status="PASS" starttime="20241128 23:26:17.926" endtime="20241128 23:26:17.930"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:17.966" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:17.966" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:17.930" endtime="20241128 23:26:17.966"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:17.973" endtime="20241128 23:26:17.975"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:17.976" endtime="20241128 23:26:17.976"/>
</return>
<status status="PASS" starttime="20241128 23:26:17.926" endtime="20241128 23:26:17.978"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.892" endtime="20241128 23:26:17.979"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:26:17.983" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:26:17.981" endtime="20241128 23:26:17.983"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.418" endtime="20241128 23:26:17.983"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.986" endtime="20241128 23:26:17.986"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:26:17.986" endtime="20241128 23:26:17.988"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:17.990" endtime="20241128 23:26:17.990"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:17.985" endtime="20241128 23:26:17.990"/>
</branch>
<status status="PASS" starttime="20241128 23:26:17.418" endtime="20241128 23:26:17.990"/>
</try>
<status status="PASS" starttime="20241128 23:26:17.417" endtime="20241128 23:26:17.990"/>
</iter>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:17.990"/>
</for>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:17.990"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.706" endtime="20241128 23:26:17.990"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:18.000" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '8', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 23:26:17.999" endtime="20241128 23:26:18.000"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:18.007" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "8", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 23:26:18.000" endtime="20241128 23:26:18.007"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:18.026" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:18.026" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:18.007" endtime="20241128 23:26:18.026"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:18.026" endtime="20241128 23:26:18.030"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:18.031" endtime="20241128 23:26:18.031"/>
</return>
<status status="PASS" starttime="20241128 23:26:18.000" endtime="20241128 23:26:18.031"/>
</kw>
<status status="PASS" starttime="20241128 23:26:17.990" endtime="20241128 23:26:18.034"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.676" endtime="20241128 23:26:18.035"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:18.035" endtime="20241128 23:26:18.035"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:26:18.035" endtime="20241128 23:26:18.035"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:18.035" endtime="20241128 23:26:18.038"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:18.035" endtime="20241128 23:26:18.038"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.674" endtime="20241128 23:26:18.038"/>
</try>
<status status="PASS" starttime="20241128 23:26:08.674" endtime="20241128 23:26:18.038"/>
</iter>
<status status="PASS" starttime="20241128 23:26:08.667" endtime="20241128 23:26:18.038"/>
</for>
<status status="PASS" starttime="20241128 23:26:08.667" endtime="20241128 23:26:18.038"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.667" endtime="20241128 23:26:18.038"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:26:18.046" level="INFO">${response_message} = {'testCaseRunId': '5', 'status': 'PASS', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 23:26:18.046" endtime="20241128 23:26:18.046"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:26:18.054" level="INFO">${json_response} = {"testCaseRunId": "5", "status": "PASS", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 23:26:18.054" endtime="20241128 23:26:18.054"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:26:18.075" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:26:18.076" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:26:18.054" endtime="20241128 23:26:18.076"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:18.078" endtime="20241128 23:26:18.079"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:26:18.079" endtime="20241128 23:26:18.079"/>
</return>
<status status="PASS" starttime="20241128 23:26:18.046" endtime="20241128 23:26:18.079"/>
</kw>
<status status="PASS" starttime="20241128 23:26:18.045" endtime="20241128 23:26:18.079"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.588" endtime="20241128 23:26:18.079"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:18.079" endtime="20241128 23:26:18.079"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:26:18.086" endtime="20241128 23:26:18.086"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:26:18.089" endtime="20241128 23:26:18.089"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:18.079" endtime="20241128 23:26:18.089"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.588" endtime="20241128 23:26:18.089"/>
</try>
<status status="PASS" starttime="20241128 23:26:08.537" endtime="20241128 23:26:18.089"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:18.093" endtime="20241128 23:26:18.093"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:18.089" endtime="20241128 23:26:18.094"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.537" endtime="20241128 23:26:18.094"/>
</if>
<status status="PASS" starttime="20241128 23:26:08.506" endtime="20241128 23:26:18.094"/>
</kw>
<status status="PASS" starttime="20241128 23:26:08.506" endtime="20241128 23:26:18.094"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:18.094" endtime="20241128 23:26:18.094"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:18.094" endtime="20241128 23:26:18.094"/>
</branch>
<status status="PASS" starttime="20241128 23:26:08.506" endtime="20241128 23:26:18.094"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 23:26:18.435" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 23:26:18.103" endtime="20241128 23:26:18.435"/>
</kw>
<status status="PASS" starttime="20241128 23:26:18.103" endtime="20241128 23:26:18.435"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:26:18.435" endtime="20241128 23:26:18.435"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:26:18.435" endtime="20241128 23:26:18.435"/>
</branch>
<status status="PASS" starttime="20241128 23:26:18.103" endtime="20241128 23:26:18.435"/>
</try>
<status status="PASS" starttime="20241128 23:26:18.094" endtime="20241128 23:26:18.435"/>
</kw>
<status status="PASS" starttime="20241128 23:26:04.361" endtime="20241128 23:26:18.435"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:26:18.435" endtime="20241128 23:26:18.437"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 23:59:21.324" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '8', 'testCaseId': '2', 'testSuiteRunId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T18:29:21.005Z', 'createdAt': '2024-11-28T18:...</msg>
<status status="PASS" starttime="20241128 23:26:18.437" endtime="20241128 23:59:21.324"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 23:59:21.327" endtime="20241128 23:59:21.327"/>
</break>
<status status="NOT RUN" starttime="20241128 23:59:21.326" endtime="20241128 23:59:21.327"/>
</branch>
<status status="PASS" starttime="20241128 23:59:21.325" endtime="20241128 23:59:21.327"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 23:59:21.329" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\ee0eee0f-4bcf-4afe-b570-90f9b89fdead"}</msg>
<msg timestamp="20241128 23:59:22.290" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\ee0eee0f-4bcf-4afe-b570-90f9b89fdead"}</msg>
<status status="PASS" starttime="20241128 23:59:21.328" endtime="20241128 23:59:22.291"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 23:59:22.293" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 23:59:22.327" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 23:59:22.327" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 23:59:22.291" endtime="20241128 23:59:22.327"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 23:59:22.328" endtime="20241128 23:59:22.329"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:59:25.100" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 23:59:25.100" level="INFO">${page_id} = {'page_id': 'page=b63fd81f-848a-4cfc-a25a-15c18754d9ae', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:59:22.330" endtime="20241128 23:59:25.100"/>
</kw>
<status status="PASS" starttime="20241128 23:59:21.327" endtime="20241128 23:59:25.101"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:25.102" endtime="20241128 23:59:25.123"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:25.126" endtime="20241128 23:59:25.127"/>
</kw>
<msg timestamp="20241128 23:59:25.127" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.126" endtime="20241128 23:59:25.127"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.128" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 23:59:25.128" endtime="20241128 23:59:25.128"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.129" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.129" endtime="20241128 23:59:25.129"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.129" endtime="20241128 23:59:25.129"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.130" endtime="20241128 23:59:25.130"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:25.129" endtime="20241128 23:59:25.130"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.128" endtime="20241128 23:59:25.130"/>
</if>
<status status="PASS" starttime="20241128 23:59:25.128" endtime="20241128 23:59:25.130"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.127" endtime="20241128 23:59:25.130"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:25.130" endtime="20241128 23:59:25.131"/>
</return>
<msg timestamp="20241128 23:59:25.131" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.125" endtime="20241128 23:59:25.131"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.132" endtime="20241128 23:59:25.132"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 23:59:25.132" endtime="20241128 23:59:25.132"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:25.132" endtime="20241128 23:59:25.132"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.131" endtime="20241128 23:59:25.132"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:25.136" endtime="20241128 23:59:25.137"/>
</kw>
<msg timestamp="20241128 23:59:25.137" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.136" endtime="20241128 23:59:25.137"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.138" level="INFO">${values} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241128 23:59:25.137" endtime="20241128 23:59:25.138"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.140" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.139" endtime="20241128 23:59:25.140"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.139" endtime="20241128 23:59:25.140"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.140" endtime="20241128 23:59:25.140"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:25.140" endtime="20241128 23:59:25.140"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.138" endtime="20241128 23:59:25.140"/>
</if>
<status status="PASS" starttime="20241128 23:59:25.137" endtime="20241128 23:59:25.141"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.137" endtime="20241128 23:59:25.141"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:25.141" endtime="20241128 23:59:25.141"/>
</return>
<msg timestamp="20241128 23:59:25.141" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.135" endtime="20241128 23:59:25.141"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:25.145" endtime="20241128 23:59:25.145"/>
</kw>
<msg timestamp="20241128 23:59:25.145" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.145" endtime="20241128 23:59:25.146"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.147" level="INFO">${values} = {'id': '8', 'testCaseId': '2', 'testSuiteRunId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T18:29:21.005Z', 'createdAt': '2024-11-28T18:29:21.005Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 23:59:25.146" endtime="20241128 23:59:25.147"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.149" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.148" endtime="20241128 23:59:25.149"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.148" endtime="20241128 23:59:25.149"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.149" endtime="20241128 23:59:25.149"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:25.149" endtime="20241128 23:59:25.149"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.148" endtime="20241128 23:59:25.150"/>
</if>
<status status="PASS" starttime="20241128 23:59:25.146" endtime="20241128 23:59:25.150"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.146" endtime="20241128 23:59:25.150"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:25.150" endtime="20241128 23:59:25.150"/>
</return>
<msg timestamp="20241128 23:59:25.150" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.144" endtime="20241128 23:59:25.150"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.151" endtime="20241128 23:59:25.151"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:25.151" endtime="20241128 23:59:25.151"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.150" endtime="20241128 23:59:25.151"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.152" level="INFO">${testCase} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241128 23:59:25.151" endtime="20241128 23:59:25.152"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.153" level="INFO">${testCaseRun} = {'id': '8', 'testCaseId': '2', 'testSuiteRunId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T18:29:21.005Z', 'createdAt': '2024-11-28T18:29:21.005Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 23:59:25.152" endtime="20241128 23:59:25.153"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.153" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 23:59:25.153" endtime="20241128 23:59:25.153"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:25.154" endtime="20241128 23:59:25.154"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:25.158" endtime="20241128 23:59:25.159"/>
</kw>
<msg timestamp="20241128 23:59:25.159" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.158" endtime="20241128 23:59:25.159"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.160" level="INFO">${values} = [{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241128 23:59:25.160" endtime="20241128 23:59:25.160"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.161" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.161" endtime="20241128 23:59:25.161"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.161" endtime="20241128 23:59:25.161"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.162" endtime="20241128 23:59:25.162"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:25.161" endtime="20241128 23:59:25.162"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.160" endtime="20241128 23:59:25.162"/>
</if>
<status status="PASS" starttime="20241128 23:59:25.159" endtime="20241128 23:59:25.162"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.159" endtime="20241128 23:59:25.162"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:25.162" endtime="20241128 23:59:25.162"/>
</return>
<msg timestamp="20241128 23:59:25.163" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.157" endtime="20241128 23:59:25.163"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:25.163" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '8', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 23:59:25.163" endtime="20241128 23:59:25.163"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:25.165" level="INFO">${json_response} = {"testCaseRunId": "8", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 23:59:25.164" endtime="20241128 23:59:25.165"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:25.188" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:25.188" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:25.165" endtime="20241128 23:59:25.189"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:25.189" endtime="20241128 23:59:25.191"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:25.191" endtime="20241128 23:59:25.191"/>
</return>
<status status="PASS" starttime="20241128 23:59:25.164" endtime="20241128 23:59:25.191"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:25.191" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 23:59:25.191" endtime="20241128 23:59:25.192"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.194" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 23:59:25.192" endtime="20241128 23:59:25.194"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:25.194" endtime="20241128 23:59:25.195"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:25.199" endtime="20241128 23:59:25.199"/>
</kw>
<msg timestamp="20241128 23:59:25.200" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.198" endtime="20241128 23:59:25.200"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.201" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 23:59:25.201" endtime="20241128 23:59:25.201"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.202" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.202" endtime="20241128 23:59:25.203"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.202" endtime="20241128 23:59:25.203"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.204" endtime="20241128 23:59:25.204"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:25.204" endtime="20241128 23:59:25.205"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.201" endtime="20241128 23:59:25.205"/>
</if>
<status status="PASS" starttime="20241128 23:59:25.200" endtime="20241128 23:59:25.205"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.200" endtime="20241128 23:59:25.205"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:25.206" endtime="20241128 23:59:25.206"/>
</return>
<msg timestamp="20241128 23:59:25.206" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:25.197" endtime="20241128 23:59:25.206"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.209" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:59:25.208" endtime="20241128 23:59:25.209"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:25.209" endtime="20241128 23:59:25.210"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:59:25.211" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:59:25.211" endtime="20241128 23:59:25.211"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.212" endtime="20241128 23:59:25.212"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:25.213" endtime="20241128 23:59:25.213"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:25.212" endtime="20241128 23:59:25.213"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.212" endtime="20241128 23:59:25.213"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:25.216" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:59:25.215" endtime="20241128 23:59:25.216"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:59:31.149" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 23:59:31.149" level="INFO">${page_id} = {'page_id': 'page=5625abe9-0efa-4bf7-82c9-4ece6efccb63', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:59:25.220" endtime="20241128 23:59:31.149"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 23:59:31.151" level="INFO">Switching to page {'page_id': 'page=5625abe9-0efa-4bf7-82c9-4ece6efccb63', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 23:59:31.251" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=1e3007de-1431-4a86-b213-a845e350b7b0",
    "contexts": [
      {
        "type": "context",
        "id": "context=01f73240-e9ef-4f56-82c7-2dbb789b7f22",
        "activePage": "page=5625abe9-0efa-4bf7-82c9-4ece6efccb63",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=b63fd81f-848a-4cfc-a25a-15c18754d9ae",
            "timestamp": 1732818562.711
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=5625abe9-0efa-4bf7-82c9-4ece6efccb63",
            "timestamp": 1732818565.27
          }
        ]
      }
    ],
    "activeContext": "context=01f73240-e9ef-4f56-82c7-2dbb789b7f22",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 23:59:31.256" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 23:59:31.150" endtime="20241128 23:59:31.256"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.218" endtime="20241128 23:59:31.257"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.217" endtime="20241128 23:59:31.257"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.257" endtime="20241128 23:59:31.258"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.257" endtime="20241128 23:59:31.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.261" endtime="20241128 23:59:31.261"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.258" endtime="20241128 23:59:31.262"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.265" endtime="20241128 23:59:31.265"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.268" endtime="20241128 23:59:31.268"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.262" endtime="20241128 23:59:31.268"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.271" endtime="20241128 23:59:31.271"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.269" endtime="20241128 23:59:31.271"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.276" endtime="20241128 23:59:31.276"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.271" endtime="20241128 23:59:31.276"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.279" endtime="20241128 23:59:31.280"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.280" endtime="20241128 23:59:31.281"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.280" endtime="20241128 23:59:31.281"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.280" endtime="20241128 23:59:31.281"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.276" endtime="20241128 23:59:31.281"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.284" endtime="20241128 23:59:31.284"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.281" endtime="20241128 23:59:31.285"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.288" endtime="20241128 23:59:31.288"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.289" endtime="20241128 23:59:31.290"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.289" endtime="20241128 23:59:31.290"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.291" endtime="20241128 23:59:31.291"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.290" endtime="20241128 23:59:31.291"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.288" endtime="20241128 23:59:31.292"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.285" endtime="20241128 23:59:31.292"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:31.305" endtime="20241128 23:59:31.305"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.311" endtime="20241128 23:59:31.312"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.292" endtime="20241128 23:59:31.312"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.314" endtime="20241128 23:59:31.315"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.315" endtime="20241128 23:59:31.316"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.315" endtime="20241128 23:59:31.316"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.317" endtime="20241128 23:59:31.317"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.316" endtime="20241128 23:59:31.317"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.315" endtime="20241128 23:59:31.317"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.312" endtime="20241128 23:59:31.317"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:31.331" endtime="20241128 23:59:31.331"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.340" endtime="20241128 23:59:31.340"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.318" endtime="20241128 23:59:31.340"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.342" endtime="20241128 23:59:31.342"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.343" endtime="20241128 23:59:31.343"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.343" endtime="20241128 23:59:31.343"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.344" endtime="20241128 23:59:31.344"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.343" endtime="20241128 23:59:31.344"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.343" endtime="20241128 23:59:31.345"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.340" endtime="20241128 23:59:31.345"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.348" endtime="20241128 23:59:31.348"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.345" endtime="20241128 23:59:31.348"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.359" endtime="20241128 23:59:31.359"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.360" endtime="20241128 23:59:31.360"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.348" endtime="20241128 23:59:31.360"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.216" endtime="20241128 23:59:31.360"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:31.360" endtime="20241128 23:59:31.361"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:59:31.361" endtime="20241128 23:59:31.361"/>
</return>
<msg timestamp="20241128 23:59:31.362" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:59:25.214" endtime="20241128 23:59:31.362"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.364" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 23:59:31.363" endtime="20241128 23:59:31.364"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.365" endtime="20241128 23:59:31.366"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.366" endtime="20241128 23:59:31.366"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.366" endtime="20241128 23:59:31.366"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.367" endtime="20241128 23:59:31.367"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.367" endtime="20241128 23:59:31.367"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.368" endtime="20241128 23:59:31.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.368" endtime="20241128 23:59:31.368"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.368" endtime="20241128 23:59:31.368"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.371" endtime="20241128 23:59:31.371"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.373" endtime="20241128 23:59:31.373"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:31.374" endtime="20241128 23:59:31.374"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.374" endtime="20241128 23:59:31.374"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.374" endtime="20241128 23:59:31.374"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.375" endtime="20241128 23:59:31.375"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.376" endtime="20241128 23:59:31.376"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.375" endtime="20241128 23:59:31.376"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.375" endtime="20241128 23:59:31.376"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.377" endtime="20241128 23:59:31.377"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.377" endtime="20241128 23:59:31.377"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.377" endtime="20241128 23:59:31.377"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.377" endtime="20241128 23:59:31.378"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.373" endtime="20241128 23:59:31.378"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.373" endtime="20241128 23:59:31.378"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:31.378" endtime="20241128 23:59:31.379"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.378" endtime="20241128 23:59:31.379"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.378" endtime="20241128 23:59:31.379"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.379" endtime="20241128 23:59:31.380"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.379" endtime="20241128 23:59:31.380"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.379" endtime="20241128 23:59:31.380"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.380" endtime="20241128 23:59:31.380"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.380" endtime="20241128 23:59:31.381"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.380" endtime="20241128 23:59:31.381"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.380" endtime="20241128 23:59:31.381"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.378" endtime="20241128 23:59:31.381"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.378" endtime="20241128 23:59:31.381"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.365" endtime="20241128 23:59:31.381"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:59:31.365" endtime="20241128 23:59:31.381"/>
</for>
<msg timestamp="20241128 23:59:31.382" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:59:31.362" endtime="20241128 23:59:31.382"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:31.382" endtime="20241128 23:59:31.383"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 23:59:31.394" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 23:59:31.393" endtime="20241128 23:59:31.394"/>
</kw>
<msg timestamp="20241128 23:59:31.395" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 23:59:31.392" endtime="20241128 23:59:31.395"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.396" endtime="20241128 23:59:31.396"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.396" endtime="20241128 23:59:31.396"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.396" endtime="20241128 23:59:31.397"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.397" endtime="20241128 23:59:31.397"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.397" endtime="20241128 23:59:31.397"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.396" endtime="20241128 23:59:31.397"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.395" endtime="20241128 23:59:31.397"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.395" endtime="20241128 23:59:31.398"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:31.398" endtime="20241128 23:59:31.398"/>
</return>
<msg timestamp="20241128 23:59:31.398" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 23:59:31.390" endtime="20241128 23:59:31.398"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.399" endtime="20241128 23:59:31.399"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.399" endtime="20241128 23:59:31.399"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.401" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 23:59:31.400" endtime="20241128 23:59:31.401"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.399" endtime="20241128 23:59:31.401"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.398" endtime="20241128 23:59:31.401"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:31.403" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '37', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241128 23:59:31.401" endtime="20241128 23:59:31.403"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:31.405" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "37", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241128 23:59:31.404" endtime="20241128 23:59:31.405"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:31.430" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:31.430" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:31.405" endtime="20241128 23:59:31.430"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:31.430" endtime="20241128 23:59:31.431"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:31.431" endtime="20241128 23:59:31.432"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.403" endtime="20241128 23:59:31.432"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.383" endtime="20241128 23:59:31.432"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:59:31.433" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:59:31.433" endtime="20241128 23:59:31.434"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.208" endtime="20241128 23:59:31.434"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.434" endtime="20241128 23:59:31.434"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.435" endtime="20241128 23:59:31.435"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.435" endtime="20241128 23:59:31.435"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.434" endtime="20241128 23:59:31.435"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.208" endtime="20241128 23:59:31.436"/>
</try>
<status status="PASS" starttime="20241128 23:59:25.208" endtime="20241128 23:59:31.436"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.437" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 23:59:31.437" endtime="20241128 23:59:31.438"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:31.439" endtime="20241128 23:59:31.440"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:59:31.442" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 23:59:31.441" endtime="20241128 23:59:31.442"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.444" endtime="20241128 23:59:31.444"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.444" endtime="20241128 23:59:31.445"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.443" endtime="20241128 23:59:31.445"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.442" endtime="20241128 23:59:31.445"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.447" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 23:59:31.446" endtime="20241128 23:59:31.447"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.448" endtime="20241128 23:59:31.448"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.447" endtime="20241128 23:59:31.448"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.449" endtime="20241128 23:59:31.449"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.449" endtime="20241128 23:59:31.449"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.452" endtime="20241128 23:59:31.452"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.450" endtime="20241128 23:59:31.452"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.456" endtime="20241128 23:59:31.456"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.461" endtime="20241128 23:59:31.462"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.453" endtime="20241128 23:59:31.462"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.464" endtime="20241128 23:59:31.464"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.462" endtime="20241128 23:59:31.464"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.470" endtime="20241128 23:59:31.470"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.465" endtime="20241128 23:59:31.470"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:31.568" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 23:59:31.510" endtime="20241128 23:59:31.569"/>
</kw>
<msg timestamp="20241128 23:59:31.569" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.508" endtime="20241128 23:59:31.569"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.569" endtime="20241128 23:59:31.569"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.508" endtime="20241128 23:59:31.569"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.570" endtime="20241128 23:59:31.570"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.570" endtime="20241128 23:59:31.570"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.569" endtime="20241128 23:59:31.571"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.507" endtime="20241128 23:59:31.571"/>
</try>
<msg timestamp="20241128 23:59:31.571" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.505" endtime="20241128 23:59:31.571"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.572" endtime="20241128 23:59:31.572"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.501" endtime="20241128 23:59:31.572"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.572" endtime="20241128 23:59:31.572"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.572" endtime="20241128 23:59:31.572"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.500" endtime="20241128 23:59:31.573"/>
</try>
<msg timestamp="20241128 23:59:31.573" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.499" endtime="20241128 23:59:31.573"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.579" endtime="20241128 23:59:31.579"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.579" endtime="20241128 23:59:31.580"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.578" endtime="20241128 23:59:31.580"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.578" endtime="20241128 23:59:31.580"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.575" endtime="20241128 23:59:31.581"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.496" endtime="20241128 23:59:31.581"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:31.612" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241128 23:59:31.603" endtime="20241128 23:59:31.612"/>
</kw>
<msg timestamp="20241128 23:59:31.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.603" endtime="20241128 23:59:31.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.612" endtime="20241128 23:59:31.613"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.602" endtime="20241128 23:59:31.613"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.613" endtime="20241128 23:59:31.613"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.614" endtime="20241128 23:59:31.614"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.613" endtime="20241128 23:59:31.614"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.602" endtime="20241128 23:59:31.614"/>
</try>
<msg timestamp="20241128 23:59:31.614" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.601" endtime="20241128 23:59:31.614"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.614" endtime="20241128 23:59:31.615"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.600" endtime="20241128 23:59:31.615"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.615" endtime="20241128 23:59:31.615"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.615" endtime="20241128 23:59:31.615"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.599" endtime="20241128 23:59:31.615"/>
</try>
<msg timestamp="20241128 23:59:31.616" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.599" endtime="20241128 23:59:31.616"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.619" endtime="20241128 23:59:31.620"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.620" endtime="20241128 23:59:31.620"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.619" endtime="20241128 23:59:31.620"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.619" endtime="20241128 23:59:31.620"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.617" endtime="20241128 23:59:31.621"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.598" endtime="20241128 23:59:31.621"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 23:59:31.651" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 23:59:31.652" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 23:59:31.622" endtime="20241128 23:59:31.652"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 23:59:31.652" endtime="20241128 23:59:31.652"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.621" endtime="20241128 23:59:31.652"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.653" endtime="20241128 23:59:31.653"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.653" endtime="20241128 23:59:31.653"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.652" endtime="20241128 23:59:31.654"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.621" endtime="20241128 23:59:31.654"/>
</try>
<msg timestamp="20241128 23:59:31.654" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 23:59:31.591" endtime="20241128 23:59:31.654"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.658" endtime="20241128 23:59:31.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.659" endtime="20241128 23:59:31.659"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.658" endtime="20241128 23:59:31.659"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.658" endtime="20241128 23:59:31.659"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.656" endtime="20241128 23:59:31.660"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.587" endtime="20241128 23:59:31.660"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.660" endtime="20241128 23:59:31.660"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.660" endtime="20241128 23:59:31.661"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.587" endtime="20241128 23:59:31.661"/>
</try>
<status status="PASS" starttime="20241128 23:59:31.586" endtime="20241128 23:59:31.661"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:31.678" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241128 23:59:31.669" endtime="20241128 23:59:31.679"/>
</kw>
<msg timestamp="20241128 23:59:31.679" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.668" endtime="20241128 23:59:31.679"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.679" endtime="20241128 23:59:31.679"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.668" endtime="20241128 23:59:31.679"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.680" endtime="20241128 23:59:31.680"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.680" endtime="20241128 23:59:31.681"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.680" endtime="20241128 23:59:31.681"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.668" endtime="20241128 23:59:31.681"/>
</try>
<msg timestamp="20241128 23:59:31.681" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.667" endtime="20241128 23:59:31.681"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.681" endtime="20241128 23:59:31.682"/>
</return>
<msg timestamp="20241128 23:59:31.682" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.665" endtime="20241128 23:59:31.682"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.687" endtime="20241128 23:59:31.687"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.687" endtime="20241128 23:59:31.687"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.686" endtime="20241128 23:59:31.687"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.686" endtime="20241128 23:59:31.688"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.684" endtime="20241128 23:59:31.688"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.664" endtime="20241128 23:59:31.689"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.481" endtime="20241128 23:59:31.689"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:31.723" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241128 23:59:31.699" endtime="20241128 23:59:31.723"/>
</kw>
<msg timestamp="20241128 23:59:31.723" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.698" endtime="20241128 23:59:31.723"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.723" endtime="20241128 23:59:31.724"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.698" endtime="20241128 23:59:31.724"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.724" endtime="20241128 23:59:31.724"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.725" endtime="20241128 23:59:31.725"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.724" endtime="20241128 23:59:31.725"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.698" endtime="20241128 23:59:31.725"/>
</try>
<msg timestamp="20241128 23:59:31.725" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.697" endtime="20241128 23:59:31.725"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.726" endtime="20241128 23:59:31.726"/>
</return>
<msg timestamp="20241128 23:59:31.726" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.694" endtime="20241128 23:59:31.726"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.729" endtime="20241128 23:59:31.729"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.730" endtime="20241128 23:59:31.730"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.729" endtime="20241128 23:59:31.730"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.729" endtime="20241128 23:59:31.730"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.728" endtime="20241128 23:59:31.730"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.692" endtime="20241128 23:59:31.731"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:31.731" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:59:31.731" endtime="20241128 23:59:31.731"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.734" endtime="20241128 23:59:31.734"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.737" endtime="20241128 23:59:31.737"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.733" endtime="20241128 23:59:31.737"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:31.737" endtime="20241128 23:59:31.738"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.737" endtime="20241128 23:59:31.738"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.733" endtime="20241128 23:59:31.738"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 23:59:31.739" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 23:59:31.739" endtime="20241128 23:59:31.780"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.738" endtime="20241128 23:59:31.780"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.781" endtime="20241128 23:59:31.781"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.781" endtime="20241128 23:59:31.781"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.781" endtime="20241128 23:59:31.782"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.738" endtime="20241128 23:59:31.782"/>
</try>
<status status="PASS" starttime="20241128 23:59:31.732" endtime="20241128 23:59:31.782"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.732" endtime="20241128 23:59:31.782"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.732" endtime="20241128 23:59:31.782"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.783" endtime="20241128 23:59:31.783"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.782" endtime="20241128 23:59:31.783"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.731" endtime="20241128 23:59:31.783"/>
</try>
<status status="PASS" starttime="20241128 23:59:31.476" endtime="20241128 23:59:31.783"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.784" endtime="20241128 23:59:31.784"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.784" endtime="20241128 23:59:31.784"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.783" endtime="20241128 23:59:31.784"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.471" endtime="20241128 23:59:31.784"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.786" endtime="20241128 23:59:31.786"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.785" endtime="20241128 23:59:31.786"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.788" endtime="20241128 23:59:31.788"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.789" endtime="20241128 23:59:31.789"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.788" endtime="20241128 23:59:31.789"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.789" endtime="20241128 23:59:31.789"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.789" endtime="20241128 23:59:31.789"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.788" endtime="20241128 23:59:31.790"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.786" endtime="20241128 23:59:31.790"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:31.798" endtime="20241128 23:59:31.798"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.803" endtime="20241128 23:59:31.803"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.790" endtime="20241128 23:59:31.803"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.804" endtime="20241128 23:59:31.805"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.805" endtime="20241128 23:59:31.805"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.805" endtime="20241128 23:59:31.805"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.806" endtime="20241128 23:59:31.806"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.805" endtime="20241128 23:59:31.806"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.805" endtime="20241128 23:59:31.806"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.803" endtime="20241128 23:59:31.806"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:31.816" endtime="20241128 23:59:31.816"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.820" endtime="20241128 23:59:31.820"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.806" endtime="20241128 23:59:31.820"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.822" endtime="20241128 23:59:31.822"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.822" endtime="20241128 23:59:31.822"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.822" endtime="20241128 23:59:31.822"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.822" endtime="20241128 23:59:31.823"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.822" endtime="20241128 23:59:31.823"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.822" endtime="20241128 23:59:31.823"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.820" endtime="20241128 23:59:31.823"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.827" endtime="20241128 23:59:31.827"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.823" endtime="20241128 23:59:31.827"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.835" endtime="20241128 23:59:31.835"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.836" endtime="20241128 23:59:31.836"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.828" endtime="20241128 23:59:31.836"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.447" endtime="20241128 23:59:31.836"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:31.836" endtime="20241128 23:59:31.837"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:59:31.837" endtime="20241128 23:59:31.837"/>
</return>
<msg timestamp="20241128 23:59:31.838" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 23:59:31.445" endtime="20241128 23:59:31.838"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.840" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 23:59:31.839" endtime="20241128 23:59:31.840"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.841" endtime="20241128 23:59:31.841"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.841" endtime="20241128 23:59:31.841"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.841" endtime="20241128 23:59:31.842"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.842" endtime="20241128 23:59:31.842"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.843" endtime="20241128 23:59:31.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.843" endtime="20241128 23:59:31.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.844" endtime="20241128 23:59:31.844"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.844" endtime="20241128 23:59:31.844"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.846" endtime="20241128 23:59:31.847"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.848" endtime="20241128 23:59:31.848"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:31.849" endtime="20241128 23:59:31.849"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.849" endtime="20241128 23:59:31.849"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.849" endtime="20241128 23:59:31.849"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.849" endtime="20241128 23:59:31.850"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.850" endtime="20241128 23:59:31.850"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.849" endtime="20241128 23:59:31.850"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.849" endtime="20241128 23:59:31.850"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.850" endtime="20241128 23:59:31.850"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.851" endtime="20241128 23:59:31.851"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.850" endtime="20241128 23:59:31.851"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.850" endtime="20241128 23:59:31.851"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.848" endtime="20241128 23:59:31.851"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.848" endtime="20241128 23:59:31.851"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:31.852" endtime="20241128 23:59:31.852"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.851" endtime="20241128 23:59:31.852"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.851" endtime="20241128 23:59:31.852"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.852" endtime="20241128 23:59:31.852"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.852" endtime="20241128 23:59:31.852"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.852" endtime="20241128 23:59:31.853"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.853" endtime="20241128 23:59:31.853"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.853" endtime="20241128 23:59:31.853"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.853" endtime="20241128 23:59:31.853"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.853" endtime="20241128 23:59:31.854"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.851" endtime="20241128 23:59:31.854"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:31.851" endtime="20241128 23:59:31.854"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:31.840" endtime="20241128 23:59:31.854"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:59:31.840" endtime="20241128 23:59:31.854"/>
</for>
<msg timestamp="20241128 23:59:31.854" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:59:31.838" endtime="20241128 23:59:31.854"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:31.855" endtime="20241128 23:59:31.855"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:31.863" endtime="20241128 23:59:31.863"/>
</kw>
<msg timestamp="20241128 23:59:31.863" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.862" endtime="20241128 23:59:31.863"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.864" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 23:59:31.864" endtime="20241128 23:59:31.865"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.866" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.865" endtime="20241128 23:59:31.866"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.865" endtime="20241128 23:59:31.866"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.866" endtime="20241128 23:59:31.866"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.866" endtime="20241128 23:59:31.866"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.865" endtime="20241128 23:59:31.866"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.864" endtime="20241128 23:59:31.866"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.863" endtime="20241128 23:59:31.867"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:31.867" endtime="20241128 23:59:31.867"/>
</return>
<msg timestamp="20241128 23:59:31.867" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.861" endtime="20241128 23:59:31.867"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.868" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 23:59:31.868" endtime="20241128 23:59:31.868"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.868" endtime="20241128 23:59:31.868"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.869" endtime="20241128 23:59:31.869"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.868" endtime="20241128 23:59:31.869"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.867" endtime="20241128 23:59:31.869"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:31.871" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '38', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage'...</msg>
<status status="PASS" starttime="20241128 23:59:31.869" endtime="20241128 23:59:31.871"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:31.873" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "38", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage"...</msg>
<status status="PASS" starttime="20241128 23:59:31.872" endtime="20241128 23:59:31.873"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:31.906" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:31.906" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:31.873" endtime="20241128 23:59:31.906"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:31.907" endtime="20241128 23:59:31.909"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:31.909" endtime="20241128 23:59:31.910"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.871" endtime="20241128 23:59:31.910"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.856" endtime="20241128 23:59:31.910"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:59:31.911" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:59:31.910" endtime="20241128 23:59:31.911"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.437" endtime="20241128 23:59:31.911"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.912" endtime="20241128 23:59:31.912"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.912" endtime="20241128 23:59:31.912"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.912" endtime="20241128 23:59:31.912"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.911" endtime="20241128 23:59:31.913"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.436" endtime="20241128 23:59:31.913"/>
</try>
<status status="PASS" starttime="20241128 23:59:31.436" endtime="20241128 23:59:31.913"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.914" level="INFO">${action} = {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:58.626Z', 'updatedAt': '2024-11-28T06:56:58....</msg>
<status status="PASS" starttime="20241128 23:59:31.914" endtime="20241128 23:59:31.914"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:31.915" endtime="20241128 23:59:31.915"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:59:31.916" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:58.757Z', 'updatedAt': '2024-11-28T06:57:07.363Z'}</msg>
<status status="PASS" starttime="20241128 23:59:31.916" endtime="20241128 23:59:31.916"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.917" endtime="20241128 23:59:31.918"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.918" endtime="20241128 23:59:31.918"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.917" endtime="20241128 23:59:31.918"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.916" endtime="20241128 23:59:31.919"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:31.921" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 23:59:31.920" endtime="20241128 23:59:31.921"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.921" endtime="20241128 23:59:31.921"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.921" endtime="20241128 23:59:31.922"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:31.922" endtime="20241128 23:59:31.922"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.922" endtime="20241128 23:59:31.922"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.925" endtime="20241128 23:59:31.926"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.923" endtime="20241128 23:59:31.926"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.929" endtime="20241128 23:59:31.929"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.932" endtime="20241128 23:59:31.932"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.926" endtime="20241128 23:59:31.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.934" endtime="20241128 23:59:31.934"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.932" endtime="20241128 23:59:31.935"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.939" endtime="20241128 23:59:31.939"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.935" endtime="20241128 23:59:31.939"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:31.959" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 23:59:31.952" endtime="20241128 23:59:31.959"/>
</kw>
<msg timestamp="20241128 23:59:31.960" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.952" endtime="20241128 23:59:31.960"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.960" endtime="20241128 23:59:31.960"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.951" endtime="20241128 23:59:31.960"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.961" endtime="20241128 23:59:31.961"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.961" endtime="20241128 23:59:31.961"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.960" endtime="20241128 23:59:31.961"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.951" endtime="20241128 23:59:31.961"/>
</try>
<msg timestamp="20241128 23:59:31.962" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.951" endtime="20241128 23:59:31.962"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.962" endtime="20241128 23:59:31.962"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.949" endtime="20241128 23:59:31.962"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.962" endtime="20241128 23:59:31.962"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.962" endtime="20241128 23:59:31.963"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.949" endtime="20241128 23:59:31.963"/>
</try>
<msg timestamp="20241128 23:59:31.963" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.948" endtime="20241128 23:59:31.963"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.967" endtime="20241128 23:59:31.967"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.967" endtime="20241128 23:59:31.967"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.966" endtime="20241128 23:59:31.967"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.966" endtime="20241128 23:59:31.967"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.965" endtime="20241128 23:59:31.968"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.948" endtime="20241128 23:59:31.968"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:31.989" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241128 23:59:31.983" endtime="20241128 23:59:31.990"/>
</kw>
<msg timestamp="20241128 23:59:31.990" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.982" endtime="20241128 23:59:31.990"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.990" endtime="20241128 23:59:31.990"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.982" endtime="20241128 23:59:31.990"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.991" endtime="20241128 23:59:31.991"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.992" endtime="20241128 23:59:31.992"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.990" endtime="20241128 23:59:31.992"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.982" endtime="20241128 23:59:31.992"/>
</try>
<msg timestamp="20241128 23:59:31.992" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.981" endtime="20241128 23:59:31.992"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:31.993" endtime="20241128 23:59:31.993"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.979" endtime="20241128 23:59:31.993"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:59:31.993" endtime="20241128 23:59:31.993"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:31.993" endtime="20241128 23:59:31.993"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.979" endtime="20241128 23:59:31.993"/>
</try>
<msg timestamp="20241128 23:59:31.994" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:59:31.978" endtime="20241128 23:59:31.994"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.997" endtime="20241128 23:59:31.997"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:31.998" endtime="20241128 23:59:31.998"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:31.997" endtime="20241128 23:59:31.998"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.997" endtime="20241128 23:59:31.998"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.995" endtime="20241128 23:59:31.998"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.977" endtime="20241128 23:59:31.999"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 23:59:32.013" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 23:59:32.013" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 23:59:31.999" endtime="20241128 23:59:32.013"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 23:59:32.013" endtime="20241128 23:59:32.013"/>
</return>
<status status="PASS" starttime="20241128 23:59:31.999" endtime="20241128 23:59:32.013"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.014" endtime="20241128 23:59:32.014"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.014" endtime="20241128 23:59:32.014"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.014" endtime="20241128 23:59:32.014"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.999" endtime="20241128 23:59:32.015"/>
</try>
<msg timestamp="20241128 23:59:32.015" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 23:59:31.972" endtime="20241128 23:59:32.015"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.018" endtime="20241128 23:59:32.019"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.019" endtime="20241128 23:59:32.019"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.018" endtime="20241128 23:59:32.019"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.018" endtime="20241128 23:59:32.019"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.017" endtime="20241128 23:59:32.019"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.971" endtime="20241128 23:59:32.019"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.020" endtime="20241128 23:59:32.020"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.020" endtime="20241128 23:59:32.020"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.971" endtime="20241128 23:59:32.020"/>
</try>
<status status="PASS" starttime="20241128 23:59:31.970" endtime="20241128 23:59:32.020"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:32.037" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241128 23:59:32.030" endtime="20241128 23:59:32.037"/>
</kw>
<msg timestamp="20241128 23:59:32.037" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.029" endtime="20241128 23:59:32.037"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.037" endtime="20241128 23:59:32.037"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.029" endtime="20241128 23:59:32.038"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.038" endtime="20241128 23:59:32.038"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.038" endtime="20241128 23:59:32.038"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.038" endtime="20241128 23:59:32.038"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.029" endtime="20241128 23:59:32.039"/>
</try>
<msg timestamp="20241128 23:59:32.039" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.028" endtime="20241128 23:59:32.039"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.039" endtime="20241128 23:59:32.039"/>
</return>
<msg timestamp="20241128 23:59:32.039" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.024" endtime="20241128 23:59:32.039"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.042" endtime="20241128 23:59:32.042"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.042" endtime="20241128 23:59:32.042"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.042" endtime="20241128 23:59:32.042"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.042" endtime="20241128 23:59:32.043"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.041" endtime="20241128 23:59:32.043"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.023" endtime="20241128 23:59:32.043"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.943" endtime="20241128 23:59:32.043"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:32.063" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241128 23:59:32.048" endtime="20241128 23:59:32.063"/>
</kw>
<msg timestamp="20241128 23:59:32.063" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.048" endtime="20241128 23:59:32.063"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.063" endtime="20241128 23:59:32.063"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.047" endtime="20241128 23:59:32.063"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.064" endtime="20241128 23:59:32.064"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.064" endtime="20241128 23:59:32.064"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.063" endtime="20241128 23:59:32.064"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.047" endtime="20241128 23:59:32.064"/>
</try>
<msg timestamp="20241128 23:59:32.065" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.047" endtime="20241128 23:59:32.065"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.065" endtime="20241128 23:59:32.065"/>
</return>
<msg timestamp="20241128 23:59:32.065" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.046" endtime="20241128 23:59:32.065"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.067" endtime="20241128 23:59:32.067"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.067" endtime="20241128 23:59:32.067"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.067" endtime="20241128 23:59:32.067"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.067" endtime="20241128 23:59:32.067"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.066" endtime="20241128 23:59:32.068"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.045" endtime="20241128 23:59:32.068"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:32.068" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:59:32.068" endtime="20241128 23:59:32.068"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.070" endtime="20241128 23:59:32.071"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.073" endtime="20241128 23:59:32.073"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.070" endtime="20241128 23:59:32.073"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:32.073" endtime="20241128 23:59:32.074"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.073" endtime="20241128 23:59:32.074"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.070" endtime="20241128 23:59:32.074"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 23:59:32.075" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 23:59:32.074" endtime="20241128 23:59:32.095"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.074" endtime="20241128 23:59:32.095"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.096" endtime="20241128 23:59:32.096"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.096" endtime="20241128 23:59:32.096"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.095" endtime="20241128 23:59:32.096"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.074" endtime="20241128 23:59:32.096"/>
</try>
<status status="PASS" starttime="20241128 23:59:32.069" endtime="20241128 23:59:32.097"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.069" endtime="20241128 23:59:32.097"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.069" endtime="20241128 23:59:32.097"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.097" endtime="20241128 23:59:32.097"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.097" endtime="20241128 23:59:32.097"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.068" endtime="20241128 23:59:32.097"/>
</try>
<status status="PASS" starttime="20241128 23:59:31.942" endtime="20241128 23:59:32.097"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.098" endtime="20241128 23:59:32.098"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.098" endtime="20241128 23:59:32.098"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.097" endtime="20241128 23:59:32.098"/>
</if>
<status status="PASS" starttime="20241128 23:59:31.939" endtime="20241128 23:59:32.098"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.099" endtime="20241128 23:59:32.099"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.098" endtime="20241128 23:59:32.099"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.101" endtime="20241128 23:59:32.101"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.101" endtime="20241128 23:59:32.101"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.101" endtime="20241128 23:59:32.101"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.101" endtime="20241128 23:59:32.101"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.101" endtime="20241128 23:59:32.102"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.101" endtime="20241128 23:59:32.102"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.100" endtime="20241128 23:59:32.102"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:32.108" endtime="20241128 23:59:32.108"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.111" endtime="20241128 23:59:32.112"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.102" endtime="20241128 23:59:32.112"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.113" endtime="20241128 23:59:32.113"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.113" endtime="20241128 23:59:32.113"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.113" endtime="20241128 23:59:32.113"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.114" endtime="20241128 23:59:32.114"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.114" endtime="20241128 23:59:32.114"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.113" endtime="20241128 23:59:32.114"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.112" endtime="20241128 23:59:32.114"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:32.120" endtime="20241128 23:59:32.120"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.124" endtime="20241128 23:59:32.124"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.114" endtime="20241128 23:59:32.125"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.126" endtime="20241128 23:59:32.126"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.127" endtime="20241128 23:59:32.127"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.126" endtime="20241128 23:59:32.127"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.127" endtime="20241128 23:59:32.127"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.127" endtime="20241128 23:59:32.127"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.126" endtime="20241128 23:59:32.127"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.125" endtime="20241128 23:59:32.127"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.130" endtime="20241128 23:59:32.130"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.127" endtime="20241128 23:59:32.130"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:59:32.138" endtime="20241128 23:59:32.138"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.138" endtime="20241128 23:59:32.138"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.130" endtime="20241128 23:59:32.139"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.921" endtime="20241128 23:59:32.139"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.139" endtime="20241128 23:59:32.140"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:59:32.140" endtime="20241128 23:59:32.140"/>
</return>
<msg timestamp="20241128 23:59:32.140" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 23:59:31.919" endtime="20241128 23:59:32.141"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.142" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 23:59:32.142" endtime="20241128 23:59:32.142"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.143" endtime="20241128 23:59:32.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.143" endtime="20241128 23:59:32.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.144" endtime="20241128 23:59:32.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.144" endtime="20241128 23:59:32.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.144" endtime="20241128 23:59:32.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.145" endtime="20241128 23:59:32.145"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.145" endtime="20241128 23:59:32.145"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.145" endtime="20241128 23:59:32.145"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.147" endtime="20241128 23:59:32.147"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.148" endtime="20241128 23:59:32.148"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:32.149" endtime="20241128 23:59:32.149"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.149" endtime="20241128 23:59:32.149"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.149" endtime="20241128 23:59:32.149"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.150" endtime="20241128 23:59:32.150"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:32.150" endtime="20241128 23:59:32.150"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.149" endtime="20241128 23:59:32.150"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.149" endtime="20241128 23:59:32.150"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.150" endtime="20241128 23:59:32.151"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:32.151" endtime="20241128 23:59:32.151"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.150" endtime="20241128 23:59:32.151"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.150" endtime="20241128 23:59:32.151"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.149" endtime="20241128 23:59:32.151"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.149" endtime="20241128 23:59:32.151"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:32.152" endtime="20241128 23:59:32.152"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.151" endtime="20241128 23:59:32.152"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.151" endtime="20241128 23:59:32.152"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.152" endtime="20241128 23:59:32.152"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.152" endtime="20241128 23:59:32.152"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.152" endtime="20241128 23:59:32.152"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.153" endtime="20241128 23:59:32.153"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:32.153" endtime="20241128 23:59:32.153"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.153" endtime="20241128 23:59:32.153"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.153" endtime="20241128 23:59:32.153"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.151" endtime="20241128 23:59:32.153"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.151" endtime="20241128 23:59:32.153"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.143" endtime="20241128 23:59:32.153"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:59:32.143" endtime="20241128 23:59:32.154"/>
</for>
<msg timestamp="20241128 23:59:32.154" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:59:32.141" endtime="20241128 23:59:32.154"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.154" endtime="20241128 23:59:32.155"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:32.160" endtime="20241128 23:59:32.161"/>
</kw>
<msg timestamp="20241128 23:59:32.161" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.160" endtime="20241128 23:59:32.161"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.162" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:57.275Z', 'updatedAt': '2024-11-28T06:56:57.275Z'}</msg>
<status status="PASS" starttime="20241128 23:59:32.161" endtime="20241128 23:59:32.162"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.163" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.162" endtime="20241128 23:59:32.163"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.162" endtime="20241128 23:59:32.163"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.163" endtime="20241128 23:59:32.163"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.163" endtime="20241128 23:59:32.163"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.162" endtime="20241128 23:59:32.163"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.161" endtime="20241128 23:59:32.164"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.161" endtime="20241128 23:59:32.164"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:32.164" endtime="20241128 23:59:32.164"/>
</return>
<msg timestamp="20241128 23:59:32.164" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.159" endtime="20241128 23:59:32.164"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.165" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241128 23:59:32.165" endtime="20241128 23:59:32.165"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.165" endtime="20241128 23:59:32.165"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.166" endtime="20241128 23:59:32.166"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.166" endtime="20241128 23:59:32.166"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.164" endtime="20241128 23:59:32.166"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:32.167" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '39', 'status': 'COMPLETED', 'actionName': 'Set Password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', 'a...</msg>
<status status="PASS" starttime="20241128 23:59:32.166" endtime="20241128 23:59:32.168"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:32.169" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "39", "status": "COMPLETED", "actionName": "Set Password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "a...</msg>
<status status="PASS" starttime="20241128 23:59:32.169" endtime="20241128 23:59:32.169"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:32.177" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:32.177" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:32.169" endtime="20241128 23:59:32.177"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.178" endtime="20241128 23:59:32.178"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:32.179" endtime="20241128 23:59:32.179"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.168" endtime="20241128 23:59:32.179"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.155" endtime="20241128 23:59:32.179"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:59:32.180" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:59:32.179" endtime="20241128 23:59:32.180"/>
</kw>
<status status="PASS" starttime="20241128 23:59:31.913" endtime="20241128 23:59:32.180"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.180" endtime="20241128 23:59:32.180"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:59:32.180" endtime="20241128 23:59:32.181"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.181" endtime="20241128 23:59:32.181"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.180" endtime="20241128 23:59:32.181"/>
</branch>
<status status="PASS" starttime="20241128 23:59:31.913" endtime="20241128 23:59:32.182"/>
</try>
<status status="PASS" starttime="20241128 23:59:31.913" endtime="20241128 23:59:32.182"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.184" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:57:48.296Z', 'updatedAt': '2024-11-28T06:57:4...</msg>
<status status="PASS" starttime="20241128 23:59:32.183" endtime="20241128 23:59:32.184"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.184" endtime="20241128 23:59:32.185"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:59:32.188" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:57:48.432Z', 'updatedAt': '2024-11-28T06:57:48.432Z'}</msg>
<status status="PASS" starttime="20241128 23:59:32.186" endtime="20241128 23:59:32.188"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.189" endtime="20241128 23:59:32.189"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.190" endtime="20241128 23:59:32.190"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.189" endtime="20241128 23:59:32.190"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.188" endtime="20241128 23:59:32.190"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.193" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 23:59:32.192" endtime="20241128 23:59:32.193"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:32.193" endtime="20241128 23:59:32.193"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.193" endtime="20241128 23:59:32.194"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:32.194" endtime="20241128 23:59:32.194"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.194" endtime="20241128 23:59:32.194"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:32.212" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241128 23:59:32.205" endtime="20241128 23:59:32.212"/>
</kw>
<msg timestamp="20241128 23:59:32.213" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.204" endtime="20241128 23:59:32.213"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.213" endtime="20241128 23:59:32.213"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.204" endtime="20241128 23:59:32.213"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.213" endtime="20241128 23:59:32.213"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.214" endtime="20241128 23:59:32.214"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.213" endtime="20241128 23:59:32.214"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.204" endtime="20241128 23:59:32.214"/>
</try>
<msg timestamp="20241128 23:59:32.214" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.203" endtime="20241128 23:59:32.214"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.214" endtime="20241128 23:59:32.214"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.202" endtime="20241128 23:59:32.215"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:59:32.215" endtime="20241128 23:59:32.215"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.215" endtime="20241128 23:59:32.215"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.202" endtime="20241128 23:59:32.215"/>
</try>
<msg timestamp="20241128 23:59:32.215" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.201" endtime="20241128 23:59:32.215"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.219" endtime="20241128 23:59:32.219"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.219" endtime="20241128 23:59:32.219"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.219" endtime="20241128 23:59:32.219"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.218" endtime="20241128 23:59:32.219"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.217" endtime="20241128 23:59:32.220"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.201" endtime="20241128 23:59:32.220"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:32.233" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241128 23:59:32.226" endtime="20241128 23:59:32.233"/>
</kw>
<msg timestamp="20241128 23:59:32.234" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.226" endtime="20241128 23:59:32.234"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.234" endtime="20241128 23:59:32.234"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.225" endtime="20241128 23:59:32.234"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.235" endtime="20241128 23:59:32.235"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.236" endtime="20241128 23:59:32.236"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.234" endtime="20241128 23:59:32.236"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.225" endtime="20241128 23:59:32.236"/>
</try>
<msg timestamp="20241128 23:59:32.237" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.225" endtime="20241128 23:59:32.237"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.237" endtime="20241128 23:59:32.237"/>
</return>
<msg timestamp="20241128 23:59:32.238" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.223" endtime="20241128 23:59:32.238"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.244" endtime="20241128 23:59:32.244"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.244" endtime="20241128 23:59:32.244"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.243" endtime="20241128 23:59:32.245"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.243" endtime="20241128 23:59:32.245"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.240" endtime="20241128 23:59:32.245"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.222" endtime="20241128 23:59:32.246"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:32.282" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241128 23:59:32.257" endtime="20241128 23:59:32.282"/>
</kw>
<msg timestamp="20241128 23:59:32.283" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.256" endtime="20241128 23:59:32.283"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.283" endtime="20241128 23:59:32.283"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.256" endtime="20241128 23:59:32.283"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.284" endtime="20241128 23:59:32.284"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.285" endtime="20241128 23:59:32.285"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.284" endtime="20241128 23:59:32.285"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.256" endtime="20241128 23:59:32.286"/>
</try>
<msg timestamp="20241128 23:59:32.286" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.255" endtime="20241128 23:59:32.286"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:32.287" endtime="20241128 23:59:32.287"/>
</return>
<msg timestamp="20241128 23:59:32.287" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.251" endtime="20241128 23:59:32.288"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.294" endtime="20241128 23:59:32.295"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.295" endtime="20241128 23:59:32.295"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.294" endtime="20241128 23:59:32.295"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.293" endtime="20241128 23:59:32.295"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.291" endtime="20241128 23:59:32.296"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.250" endtime="20241128 23:59:32.296"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.198" endtime="20241128 23:59:32.296"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:32.297" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 23:59:32.297" endtime="20241128 23:59:32.297"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.300" endtime="20241128 23:59:32.300"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.300" endtime="20241128 23:59:32.301"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:32.301" endtime="20241128 23:59:32.302"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.301" endtime="20241128 23:59:32.302"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.299" endtime="20241128 23:59:32.302"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 23:59:32.303" endtime="20241128 23:59:32.371"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.302" endtime="20241128 23:59:32.371"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.372" endtime="20241128 23:59:32.372"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.373" endtime="20241128 23:59:32.373"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.372" endtime="20241128 23:59:32.373"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.302" endtime="20241128 23:59:32.374"/>
</try>
<status status="PASS" starttime="20241128 23:59:32.299" endtime="20241128 23:59:32.374"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.298" endtime="20241128 23:59:32.374"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.298" endtime="20241128 23:59:32.374"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.375" endtime="20241128 23:59:32.375"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.375" endtime="20241128 23:59:32.375"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.297" endtime="20241128 23:59:32.375"/>
</try>
<status status="PASS" starttime="20241128 23:59:32.197" endtime="20241128 23:59:32.376"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.194" endtime="20241128 23:59:32.376"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.379" endtime="20241128 23:59:32.379"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.382" endtime="20241128 23:59:32.383"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.376" endtime="20241128 23:59:32.383"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.385" endtime="20241128 23:59:32.386"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.383" endtime="20241128 23:59:32.386"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.394" endtime="20241128 23:59:32.394"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.386" endtime="20241128 23:59:32.394"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.399" endtime="20241128 23:59:32.399"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.400" endtime="20241128 23:59:32.400"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.399" endtime="20241128 23:59:32.400"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.399" endtime="20241128 23:59:32.401"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.394" endtime="20241128 23:59:32.401"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.403" endtime="20241128 23:59:32.403"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.401" endtime="20241128 23:59:32.404"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.406" endtime="20241128 23:59:32.407"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.408" endtime="20241128 23:59:32.408"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.407" endtime="20241128 23:59:32.408"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.408" endtime="20241128 23:59:32.408"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.408" endtime="20241128 23:59:32.409"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.407" endtime="20241128 23:59:32.409"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.404" endtime="20241128 23:59:32.409"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:32.422" endtime="20241128 23:59:32.422"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.431" endtime="20241128 23:59:32.431"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.409" endtime="20241128 23:59:32.431"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.435" endtime="20241128 23:59:32.435"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.437" endtime="20241128 23:59:32.437"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.436" endtime="20241128 23:59:32.437"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.438" endtime="20241128 23:59:32.438"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.437" endtime="20241128 23:59:32.439"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.435" endtime="20241128 23:59:32.439"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.432" endtime="20241128 23:59:32.439"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:32.457" endtime="20241128 23:59:32.457"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.466" endtime="20241128 23:59:32.467"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.439" endtime="20241128 23:59:32.467"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.471" endtime="20241128 23:59:32.471"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.472" endtime="20241128 23:59:32.472"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.471" endtime="20241128 23:59:32.472"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.473" endtime="20241128 23:59:32.473"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.473" endtime="20241128 23:59:32.474"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.471" endtime="20241128 23:59:32.474"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.467" endtime="20241128 23:59:32.474"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.480" endtime="20241128 23:59:32.481"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.474" endtime="20241128 23:59:32.481"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:59:32.496" endtime="20241128 23:59:32.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.498" endtime="20241128 23:59:32.498"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.481" endtime="20241128 23:59:32.498"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.193" endtime="20241128 23:59:32.499"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.499" endtime="20241128 23:59:32.500"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:59:32.501" endtime="20241128 23:59:32.501"/>
</return>
<msg timestamp="20241128 23:59:32.502" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 23:59:32.191" endtime="20241128 23:59:32.502"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.505" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241128 23:59:32.504" endtime="20241128 23:59:32.505"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.506" endtime="20241128 23:59:32.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.506" endtime="20241128 23:59:32.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.507" endtime="20241128 23:59:32.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.507" endtime="20241128 23:59:32.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.507" endtime="20241128 23:59:32.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.508" endtime="20241128 23:59:32.508"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.508" endtime="20241128 23:59:32.508"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.509" endtime="20241128 23:59:32.509"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.511" endtime="20241128 23:59:32.511"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.513" endtime="20241128 23:59:32.513"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:32.514" endtime="20241128 23:59:32.514"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.514" endtime="20241128 23:59:32.514"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.514" endtime="20241128 23:59:32.515"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.515" endtime="20241128 23:59:32.515"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:32.515" endtime="20241128 23:59:32.516"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.515" endtime="20241128 23:59:32.516"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.515" endtime="20241128 23:59:32.516"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.516" endtime="20241128 23:59:32.517"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:32.517" endtime="20241128 23:59:32.517"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.516" endtime="20241128 23:59:32.517"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.516" endtime="20241128 23:59:32.517"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.514" endtime="20241128 23:59:32.518"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.514" endtime="20241128 23:59:32.518"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:32.518" endtime="20241128 23:59:32.518"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.518" endtime="20241128 23:59:32.519"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.518" endtime="20241128 23:59:32.519"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.520" endtime="20241128 23:59:32.520"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.519" endtime="20241128 23:59:32.520"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.519" endtime="20241128 23:59:32.520"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.521" endtime="20241128 23:59:32.521"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:32.521" endtime="20241128 23:59:32.521"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:32.520" endtime="20241128 23:59:32.521"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.520" endtime="20241128 23:59:32.521"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.518" endtime="20241128 23:59:32.521"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:32.518" endtime="20241128 23:59:32.522"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:32.505" endtime="20241128 23:59:32.522"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:59:32.505" endtime="20241128 23:59:32.522"/>
</for>
<msg timestamp="20241128 23:59:32.522" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:59:32.502" endtime="20241128 23:59:32.522"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.523" endtime="20241128 23:59:32.524"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:32.532" endtime="20241128 23:59:32.532"/>
</kw>
<msg timestamp="20241128 23:59:32.532" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.531" endtime="20241128 23:59:32.532"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.534" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@type="submit" and text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-28T06:57:46.898Z', 'updatedAt': '2024-11-28T14:47:44.548Z'}</msg>
<status status="PASS" starttime="20241128 23:59:32.533" endtime="20241128 23:59:32.534"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.535" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.534" endtime="20241128 23:59:32.535"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.534" endtime="20241128 23:59:32.535"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.535" endtime="20241128 23:59:32.535"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.535" endtime="20241128 23:59:32.536"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.534" endtime="20241128 23:59:32.536"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.533" endtime="20241128 23:59:32.536"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.532" endtime="20241128 23:59:32.536"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:32.536" endtime="20241128 23:59:32.536"/>
</return>
<msg timestamp="20241128 23:59:32.537" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.530" endtime="20241128 23:59:32.537"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.538" level="INFO">${xpath} = //button[@type="submit" and text()="Login"]</msg>
<status status="PASS" starttime="20241128 23:59:32.538" endtime="20241128 23:59:32.538"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.537" endtime="20241128 23:59:32.538"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.539" endtime="20241128 23:59:32.539"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.538" endtime="20241128 23:59:32.539"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.537" endtime="20241128 23:59:32.539"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:32.541" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '40', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '', ...</msg>
<status status="PASS" starttime="20241128 23:59:32.539" endtime="20241128 23:59:32.541"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:32.543" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "40", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue": ...</msg>
<status status="PASS" starttime="20241128 23:59:32.543" endtime="20241128 23:59:32.543"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:32.551" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:32.551" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:32.544" endtime="20241128 23:59:32.551"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.552" endtime="20241128 23:59:32.553"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:32.553" endtime="20241128 23:59:32.553"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.542" endtime="20241128 23:59:32.553"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.524" endtime="20241128 23:59:32.553"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:59:32.554" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:59:32.554" endtime="20241128 23:59:32.554"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.183" endtime="20241128 23:59:32.554"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.555" endtime="20241128 23:59:32.555"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:59:32.555" endtime="20241128 23:59:32.555"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.555" endtime="20241128 23:59:32.555"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.554" endtime="20241128 23:59:32.556"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.182" endtime="20241128 23:59:32.556"/>
</try>
<status status="PASS" starttime="20241128 23:59:32.182" endtime="20241128 23:59:32.556"/>
</iter>
<status status="PASS" starttime="20241128 23:59:25.207" endtime="20241128 23:59:32.556"/>
</for>
<status status="PASS" starttime="20241128 23:59:25.207" endtime="20241128 23:59:32.556"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.207" endtime="20241128 23:59:32.557"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:32.561" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '10', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 23:59:32.560" endtime="20241128 23:59:32.561"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:32.563" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "10", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 23:59:32.563" endtime="20241128 23:59:32.563"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:32.569" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:32.570" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:32.563" endtime="20241128 23:59:32.570"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.570" endtime="20241128 23:59:32.571"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:32.571" endtime="20241128 23:59:32.571"/>
</return>
<status status="PASS" starttime="20241128 23:59:32.562" endtime="20241128 23:59:32.571"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.557" endtime="20241128 23:59:32.572"/>
</kw>
<status status="PASS" starttime="20241128 23:59:25.192" endtime="20241128 23:59:32.572"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.572" endtime="20241128 23:59:32.572"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:59:32.573" endtime="20241128 23:59:32.573"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.573" endtime="20241128 23:59:32.573"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.572" endtime="20241128 23:59:32.574"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.192" endtime="20241128 23:59:32.574"/>
</try>
<status status="PASS" starttime="20241128 23:59:25.192" endtime="20241128 23:59:32.574"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '4', 'testCaseId': '2', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.691Z', 'flow': {'id': '2', 'name': 'Login 2', 'projectId': '1', 'cr...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.578" level="INFO">${flow} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:02:57.539Z', 'updatedAt': '2024-11-28T07:03:35.605Z', 'flowActionSequences': [{'id': '5', 'actionId': '1', 'flowId': '2', '...</msg>
<status status="PASS" starttime="20241128 23:59:32.577" endtime="20241128 23:59:32.578"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.578" endtime="20241128 23:59:32.579"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:32.583" endtime="20241128 23:59:32.583"/>
</kw>
<msg timestamp="20241128 23:59:32.584" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.583" endtime="20241128 23:59:32.584"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.585" level="INFO">${values} = [{'id': '5', 'actionId': '1', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-28T07:03:35.503Z', 'updatedAt': '2024-11-28T07:03:35.503Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 23:59:32.584" endtime="20241128 23:59:32.585"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.586" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.585" endtime="20241128 23:59:32.586"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.585" endtime="20241128 23:59:32.586"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.586" endtime="20241128 23:59:32.586"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.586" endtime="20241128 23:59:32.586"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.585" endtime="20241128 23:59:32.587"/>
</if>
<status status="PASS" starttime="20241128 23:59:32.584" endtime="20241128 23:59:32.587"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.584" endtime="20241128 23:59:32.587"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:32.587" endtime="20241128 23:59:32.587"/>
</return>
<msg timestamp="20241128 23:59:32.587" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:32.582" endtime="20241128 23:59:32.587"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '1', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-28T07:03:35.503Z', 'updatedAt': '2024-11-28T07:03:35.503Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.589" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:59:32.589" endtime="20241128 23:59:32.589"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:32.589" endtime="20241128 23:59:32.590"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:59:32.592" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:59:32.591" endtime="20241128 23:59:32.592"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.594" endtime="20241128 23:59:32.594"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:32.595" endtime="20241128 23:59:32.595"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:32.593" endtime="20241128 23:59:32.595"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.593" endtime="20241128 23:59:32.595"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:32.597" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:59:32.596" endtime="20241128 23:59:32.597"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:59:40.530" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241128 23:59:40.531" level="INFO">${page_id} = {'page_id': 'page=ad42a796-2c9d-4795-a2a2-7b64fe522301', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:59:32.599" endtime="20241128 23:59:40.531"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 23:59:40.532" level="INFO">Switching to page {'page_id': 'page=ad42a796-2c9d-4795-a2a2-7b64fe522301', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 23:59:40.542" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=1e3007de-1431-4a86-b213-a845e350b7b0",
    "contexts": [
      {
        "type": "context",
        "id": "context=01f73240-e9ef-4f56-82c7-2dbb789b7f22",
        "activePage": "page=ad42a796-2c9d-4795-a2a2-7b64fe522301",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=b63fd81f-848a-4cfc-a25a-15c18754d9ae",
            "timestamp": 1732818562.711
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/",
            "id": "page=5625abe9-0efa-4bf7-82c9-4ece6efccb63",
            "timestamp": 1732818565.27
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/",
            "id": "page=ad42a796-2c9d-4795-a2a2-7b64fe522301",
            "timestamp": 1732818572.646
          }
        ]
      }
    ],
    "activeContext": "context=01f73240-e9ef-4f56-82c7-2dbb789b7f22",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 23:59:40.547" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 23:59:40.531" endtime="20241128 23:59:40.548"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.598" endtime="20241128 23:59:40.548"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.597" endtime="20241128 23:59:40.548"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:40.549" endtime="20241128 23:59:40.549"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.548" endtime="20241128 23:59:40.549"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.552" endtime="20241128 23:59:40.553"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.549" endtime="20241128 23:59:40.553"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.556" endtime="20241128 23:59:40.556"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.559" endtime="20241128 23:59:40.559"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.553" endtime="20241128 23:59:40.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.561" endtime="20241128 23:59:40.561"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.559" endtime="20241128 23:59:40.561"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.565" endtime="20241128 23:59:40.565"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.561" endtime="20241128 23:59:40.566"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.570" endtime="20241128 23:59:40.570"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.571" endtime="20241128 23:59:40.571"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.570" endtime="20241128 23:59:40.571"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.570" endtime="20241128 23:59:40.571"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:40.566" endtime="20241128 23:59:40.571"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.573" endtime="20241128 23:59:40.573"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.572" endtime="20241128 23:59:40.573"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.575" endtime="20241128 23:59:40.576"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.576" endtime="20241128 23:59:40.576"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.576" endtime="20241128 23:59:40.576"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.577" endtime="20241128 23:59:40.577"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.577" endtime="20241128 23:59:40.577"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.576" endtime="20241128 23:59:40.577"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:40.574" endtime="20241128 23:59:40.577"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:40.590" endtime="20241128 23:59:40.590"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.595" endtime="20241128 23:59:40.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.578" endtime="20241128 23:59:40.596"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.601" endtime="20241128 23:59:40.601"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.604" endtime="20241128 23:59:40.605"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.602" endtime="20241128 23:59:40.605"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.606" endtime="20241128 23:59:40.606"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.606" endtime="20241128 23:59:40.607"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.602" endtime="20241128 23:59:40.607"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:40.597" endtime="20241128 23:59:40.607"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:40.621" endtime="20241128 23:59:40.621"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.629" endtime="20241128 23:59:40.630"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.607" endtime="20241128 23:59:40.630"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.634" endtime="20241128 23:59:40.634"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.636" endtime="20241128 23:59:40.636"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.636" endtime="20241128 23:59:40.636"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.638" endtime="20241128 23:59:40.638"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.638" endtime="20241128 23:59:40.639"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.634" endtime="20241128 23:59:40.639"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:40.630" endtime="20241128 23:59:40.639"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.645" endtime="20241128 23:59:40.646"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.639" endtime="20241128 23:59:40.646"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:59:40.663" endtime="20241128 23:59:40.663"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.664" endtime="20241128 23:59:40.664"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.647" endtime="20241128 23:59:40.664"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.597" endtime="20241128 23:59:40.664"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:40.665" endtime="20241128 23:59:40.666"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 23:59:40.667" endtime="20241128 23:59:40.667"/>
</return>
<msg timestamp="20241128 23:59:40.668" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:59:32.596" endtime="20241128 23:59:40.668"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:40.672" level="INFO">${key} = testCaseFlowSequenceId:4::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241128 23:59:40.671" endtime="20241128 23:59:40.672"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.673" endtime="20241128 23:59:40.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.674" endtime="20241128 23:59:40.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.675" endtime="20241128 23:59:40.675"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.676" endtime="20241128 23:59:40.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.676" endtime="20241128 23:59:40.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.677" endtime="20241128 23:59:40.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.678" endtime="20241128 23:59:40.679"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.679" endtime="20241128 23:59:40.680"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.687" endtime="20241128 23:59:40.688"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.694" endtime="20241128 23:59:40.694"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:40.696" endtime="20241128 23:59:40.696"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:40.695" endtime="20241128 23:59:40.696"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.695" endtime="20241128 23:59:40.696"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.697" endtime="20241128 23:59:40.697"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:40.698" endtime="20241128 23:59:40.698"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:40.696" endtime="20241128 23:59:40.698"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.696" endtime="20241128 23:59:40.699"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.699" endtime="20241128 23:59:40.700"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:40.700" endtime="20241128 23:59:40.700"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:40.699" endtime="20241128 23:59:40.700"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.699" endtime="20241128 23:59:40.700"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:40.695" endtime="20241128 23:59:40.700"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.695" endtime="20241128 23:59:40.700"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 23:59:40.701" endtime="20241128 23:59:40.701"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:40.701" endtime="20241128 23:59:40.701"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.701" endtime="20241128 23:59:40.702"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.702" endtime="20241128 23:59:40.702"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.702" endtime="20241128 23:59:40.702"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.702" endtime="20241128 23:59:40.703"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.703" endtime="20241128 23:59:40.703"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 23:59:40.703" endtime="20241128 23:59:40.703"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:40.703" endtime="20241128 23:59:40.704"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.703" endtime="20241128 23:59:40.704"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:40.701" endtime="20241128 23:59:40.704"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.701" endtime="20241128 23:59:40.704"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:40.673" endtime="20241128 23:59:40.704"/>
</iter>
<status status="NOT RUN" starttime="20241128 23:59:40.672" endtime="20241128 23:59:40.704"/>
</for>
<msg timestamp="20241128 23:59:40.705" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 23:59:40.668" endtime="20241128 23:59:40.705"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:40.705" endtime="20241128 23:59:40.707"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 23:59:40.720" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 23:59:40.718" endtime="20241128 23:59:40.720"/>
</kw>
<msg timestamp="20241128 23:59:40.721" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 23:59:40.716" endtime="20241128 23:59:40.721"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.722" endtime="20241128 23:59:40.722"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.723" endtime="20241128 23:59:40.724"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.723" endtime="20241128 23:59:40.724"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.725" endtime="20241128 23:59:40.725"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.724" endtime="20241128 23:59:40.725"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:40.723" endtime="20241128 23:59:40.725"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:40.722" endtime="20241128 23:59:40.725"/>
</branch>
<status status="PASS" starttime="20241128 23:59:40.721" endtime="20241128 23:59:40.726"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:40.726" endtime="20241128 23:59:40.726"/>
</return>
<msg timestamp="20241128 23:59:40.727" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 23:59:40.715" endtime="20241128 23:59:40.728"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.729" endtime="20241128 23:59:40.729"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.728" endtime="20241128 23:59:40.729"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:40.732" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 23:59:40.729" endtime="20241128 23:59:40.732"/>
</kw>
<status status="PASS" starttime="20241128 23:59:40.729" endtime="20241128 23:59:40.732"/>
</branch>
<status status="PASS" starttime="20241128 23:59:40.728" endtime="20241128 23:59:40.733"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:40.735" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '41', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241128 23:59:40.733" endtime="20241128 23:59:40.735"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:40.738" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "41", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241128 23:59:40.737" endtime="20241128 23:59:40.738"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:40.746" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:40.748" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:40.738" endtime="20241128 23:59:40.748"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:40.748" endtime="20241128 23:59:40.750"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:40.750" endtime="20241128 23:59:40.750"/>
</return>
<status status="PASS" starttime="20241128 23:59:40.736" endtime="20241128 23:59:40.751"/>
</kw>
<status status="PASS" starttime="20241128 23:59:40.707" endtime="20241128 23:59:40.752"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 23:59:40.753" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 23:59:40.753" endtime="20241128 23:59:40.753"/>
</kw>
<status status="PASS" starttime="20241128 23:59:32.588" endtime="20241128 23:59:40.753"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.754" endtime="20241128 23:59:40.754"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 23:59:40.754" endtime="20241128 23:59:40.754"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.755" endtime="20241128 23:59:40.755"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.754" endtime="20241128 23:59:40.756"/>
</branch>
<status status="PASS" starttime="20241128 23:59:32.588" endtime="20241128 23:59:40.756"/>
</try>
<status status="PASS" starttime="20241128 23:59:32.588" endtime="20241128 23:59:40.756"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '2', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-28T07:03:35.504Z', 'updatedAt': '2024-11-28T07:03:35.504Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:40.758" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241128 23:59:40.757" endtime="20241128 23:59:40.758"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:40.759" endtime="20241128 23:59:40.760"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:59:40.762" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241128 23:59:40.760" endtime="20241128 23:59:40.762"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.764" endtime="20241128 23:59:40.764"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.764" endtime="20241128 23:59:40.764"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.763" endtime="20241128 23:59:40.764"/>
</branch>
<status status="PASS" starttime="20241128 23:59:40.763" endtime="20241128 23:59:40.765"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:40.767" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 23:59:40.766" endtime="20241128 23:59:40.767"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:40.770" endtime="20241128 23:59:40.770"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.769" endtime="20241128 23:59:40.770"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 23:59:40.772" endtime="20241128 23:59:40.772"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.771" endtime="20241128 23:59:40.772"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.776" endtime="20241128 23:59:40.776"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.772" endtime="20241128 23:59:40.776"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.780" endtime="20241128 23:59:40.780"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.784" endtime="20241128 23:59:40.785"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.776" endtime="20241128 23:59:40.785"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.788" endtime="20241128 23:59:40.789"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.786" endtime="20241128 23:59:40.789"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 23:59:40.797" endtime="20241128 23:59:40.797"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:40.789" endtime="20241128 23:59:40.797"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 23:59:53.104" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241128 23:59:53.105" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241128 23:59:53.107" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('id=username')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241128 23:59:40.821" endtime="20241128 23:59:53.108"/>
</kw>
<msg timestamp="20241128 23:59:53.109" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 23:59:40.820" endtime="20241128 23:59:53.109"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:53.109" endtime="20241128 23:59:53.109"/>
</return>
<status status="PASS" starttime="20241128 23:59:40.819" endtime="20241128 23:59:53.109"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.109" endtime="20241128 23:59:53.109"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.110" endtime="20241128 23:59:53.112"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.109" endtime="20241128 23:59:53.112"/>
</branch>
<status status="PASS" starttime="20241128 23:59:40.819" endtime="20241128 23:59:53.112"/>
</try>
<msg timestamp="20241128 23:59:53.113" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241128 23:59:40.817" endtime="20241128 23:59:53.114"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 23:59:53.114" endtime="20241128 23:59:53.114"/>
</return>
<status status="PASS" starttime="20241128 23:59:40.814" endtime="20241128 23:59:53.114"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 23:59:53.115" endtime="20241128 23:59:53.115"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:53.115" endtime="20241128 23:59:53.115"/>
</branch>
<status status="PASS" starttime="20241128 23:59:40.813" endtime="20241128 23:59:53.115"/>
</try>
<msg timestamp="20241128 23:59:53.116" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241128 23:59:40.813" endtime="20241128 23:59:53.116"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.124" endtime="20241128 23:59:53.125"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.127" endtime="20241128 23:59:53.129"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 23:59:53.132" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 23:59:53.130" endtime="20241128 23:59:53.133"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:53.126" endtime="20241128 23:59:53.139"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:53.123" endtime="20241128 23:59:53.141"/>
</branch>
<status status="FAIL" starttime="20241128 23:59:53.123" endtime="20241128 23:59:53.141"/>
</if>
<status status="FAIL" starttime="20241128 23:59:53.119" endtime="20241128 23:59:53.148"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:40.812" endtime="20241128 23:59:53.152"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.160" endtime="20241128 23:59:53.160"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.166" endtime="20241128 23:59:53.166"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:40.807" endtime="20241128 23:59:53.169"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.175" endtime="20241128 23:59:53.175"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.176" endtime="20241128 23:59:53.176"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.177" endtime="20241128 23:59:53.177"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.176" endtime="20241128 23:59:53.177"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.178" endtime="20241128 23:59:53.178"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.177" endtime="20241128 23:59:53.179"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:53.176" endtime="20241128 23:59:53.179"/>
</try>
<status status="FAIL" starttime="20241128 23:59:40.805" endtime="20241128 23:59:53.180"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.181" endtime="20241128 23:59:53.181"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.181" endtime="20241128 23:59:53.182"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:53.181" endtime="20241128 23:59:53.182"/>
</if>
<status status="FAIL" starttime="20241128 23:59:40.798" endtime="20241128 23:59:53.182"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.184" endtime="20241128 23:59:53.184"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.182" endtime="20241128 23:59:53.184"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.186" endtime="20241128 23:59:53.187"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.188" endtime="20241128 23:59:53.188"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.187" endtime="20241128 23:59:53.188"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.189" endtime="20241128 23:59:53.189"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.188" endtime="20241128 23:59:53.189"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:53.187" endtime="20241128 23:59:53.190"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:53.184" endtime="20241128 23:59:53.190"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:53.201" endtime="20241128 23:59:53.201"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.210" endtime="20241128 23:59:53.210"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.190" endtime="20241128 23:59:53.210"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.213" endtime="20241128 23:59:53.213"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.214" endtime="20241128 23:59:53.214"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.214" endtime="20241128 23:59:53.214"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.215" endtime="20241128 23:59:53.215"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.214" endtime="20241128 23:59:53.215"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:53.213" endtime="20241128 23:59:53.215"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:53.211" endtime="20241128 23:59:53.215"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 23:59:53.230" endtime="20241128 23:59:53.231"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.240" endtime="20241128 23:59:53.240"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.215" endtime="20241128 23:59:53.240"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.244" endtime="20241128 23:59:53.244"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.246" endtime="20241128 23:59:53.246"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.245" endtime="20241128 23:59:53.246"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.247" endtime="20241128 23:59:53.247"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.246" endtime="20241128 23:59:53.247"/>
</branch>
<status status="NOT RUN" starttime="20241128 23:59:53.245" endtime="20241128 23:59:53.248"/>
</if>
<status status="NOT RUN" starttime="20241128 23:59:53.241" endtime="20241128 23:59:53.248"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.254" endtime="20241128 23:59:53.255"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.248" endtime="20241128 23:59:53.255"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 23:59:53.275" endtime="20241128 23:59:53.275"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.276" endtime="20241128 23:59:53.276"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.256" endtime="20241128 23:59:53.276"/>
</branch>
<status status="FAIL" starttime="20241128 23:59:40.768" endtime="20241128 23:59:53.277"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.278" endtime="20241128 23:59:53.278"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241128 23:59:53.278" endtime="20241128 23:59:53.279"/>
</return>
<status status="FAIL" starttime="20241128 23:59:40.765" endtime="20241128 23:59:53.281"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241128 23:59:53.282" endtime="20241128 23:59:53.282"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.283" endtime="20241128 23:59:53.283"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241128 23:59:53.283" endtime="20241128 23:59:53.283"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.284" endtime="20241128 23:59:53.284"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:40.757" endtime="20241128 23:59:53.285"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.286" endtime="20241128 23:59:53.287"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:53.300" endtime="20241128 23:59:53.301"/>
</kw>
<msg timestamp="20241128 23:59:53.301" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:53.299" endtime="20241128 23:59:53.301"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:53.304" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241128 23:59:53.303" endtime="20241128 23:59:53.304"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:53.306" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:53.305" endtime="20241128 23:59:53.306"/>
</kw>
<status status="PASS" starttime="20241128 23:59:53.305" endtime="20241128 23:59:53.306"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.308" endtime="20241128 23:59:53.308"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.307" endtime="20241128 23:59:53.308"/>
</branch>
<status status="PASS" starttime="20241128 23:59:53.304" endtime="20241128 23:59:53.308"/>
</if>
<status status="PASS" starttime="20241128 23:59:53.302" endtime="20241128 23:59:53.309"/>
</branch>
<status status="PASS" starttime="20241128 23:59:53.302" endtime="20241128 23:59:53.309"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:53.309" endtime="20241128 23:59:53.309"/>
</return>
<msg timestamp="20241128 23:59:53.310" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:53.298" endtime="20241128 23:59:53.310"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:53.312" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241128 23:59:53.312" endtime="20241128 23:59:53.312"/>
</kw>
<status status="PASS" starttime="20241128 23:59:53.311" endtime="20241128 23:59:53.313"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.314" endtime="20241128 23:59:53.314"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.313" endtime="20241128 23:59:53.314"/>
</branch>
<status status="PASS" starttime="20241128 23:59:53.311" endtime="20241128 23:59:53.314"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:53.318" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '42', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage': '...</msg>
<status status="PASS" starttime="20241128 23:59:53.315" endtime="20241128 23:59:53.318"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:53.321" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "42", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage": "...</msg>
<status status="PASS" starttime="20241128 23:59:53.320" endtime="20241128 23:59:53.321"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:53.334" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:53.334" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:53.322" endtime="20241128 23:59:53.334"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.335" endtime="20241128 23:59:53.336"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:53.336" endtime="20241128 23:59:53.337"/>
</return>
<status status="PASS" starttime="20241128 23:59:53.319" endtime="20241128 23:59:53.338"/>
</kw>
<status status="PASS" starttime="20241128 23:59:53.287" endtime="20241128 23:59:53.338"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.340" endtime="20241128 23:59:53.342"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 23:59:53.344" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 23:59:53.342" endtime="20241128 23:59:53.344"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:53.339" endtime="20241128 23:59:53.347"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:53.285" endtime="20241128 23:59:53.348"/>
</branch>
<status status="FAIL" starttime="20241128 23:59:40.756" endtime="20241128 23:59:53.348"/>
</try>
<status status="FAIL" starttime="20241128 23:59:40.756" endtime="20241128 23:59:53.349"/>
</iter>
<status status="FAIL" starttime="20241128 23:59:32.588" endtime="20241128 23:59:53.350"/>
</for>
<status status="FAIL" starttime="20241128 23:59:32.588" endtime="20241128 23:59:53.350"/>
</branch>
<status status="FAIL" starttime="20241128 23:59:32.587" endtime="20241128 23:59:53.350"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241128 23:59:53.351" endtime="20241128 23:59:53.352"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:32.577" endtime="20241128 23:59:53.352"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.353" endtime="20241128 23:59:53.354"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:53.360" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '11', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 23:59:53.357" endtime="20241128 23:59:53.360"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:53.362" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "11", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 23:59:53.361" endtime="20241128 23:59:53.362"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:53.374" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:53.375" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:53.362" endtime="20241128 23:59:53.375"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.376" endtime="20241128 23:59:53.378"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:53.378" endtime="20241128 23:59:53.378"/>
</return>
<status status="PASS" starttime="20241128 23:59:53.360" endtime="20241128 23:59:53.379"/>
</kw>
<status status="PASS" starttime="20241128 23:59:53.355" endtime="20241128 23:59:53.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.382" endtime="20241128 23:59:53.383"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 23:59:53.385" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 23:59:53.384" endtime="20241128 23:59:53.385"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:53.380" endtime="20241128 23:59:53.388"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:53.352" endtime="20241128 23:59:53.389"/>
</branch>
<status status="FAIL" starttime="20241128 23:59:32.576" endtime="20241128 23:59:53.389"/>
</try>
<status status="FAIL" starttime="20241128 23:59:32.575" endtime="20241128 23:59:53.390"/>
</iter>
<status status="FAIL" starttime="20241128 23:59:25.192" endtime="20241128 23:59:53.392"/>
</for>
<status status="FAIL" starttime="20241128 23:59:25.191" endtime="20241128 23:59:53.393"/>
</branch>
<status status="FAIL" starttime="20241128 23:59:25.191" endtime="20241128 23:59:53.393"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241128 23:59:53.394" endtime="20241128 23:59:53.395"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:25.155" endtime="20241128 23:59:53.395"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.396" endtime="20241128 23:59:53.397"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:53.401" level="INFO">${response_message} = {'testCaseRunId': '8', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241128 23:59:53.400" endtime="20241128 23:59:53.401"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:53.406" level="INFO">${json_response} = {"testCaseRunId": "8", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241128 23:59:53.404" endtime="20241128 23:59:53.406"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:53.415" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:53.415" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:53.407" endtime="20241128 23:59:53.415"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.416" endtime="20241128 23:59:53.417"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:53.417" endtime="20241128 23:59:53.417"/>
</return>
<status status="PASS" starttime="20241128 23:59:53.402" endtime="20241128 23:59:53.418"/>
</kw>
<status status="PASS" starttime="20241128 23:59:53.398" endtime="20241128 23:59:53.418"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.420" endtime="20241128 23:59:53.422"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 23:59:53.425" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241128 23:59:53.423" endtime="20241128 23:59:53.425"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:53.419" endtime="20241128 23:59:53.428"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:53.396" endtime="20241128 23:59:53.429"/>
</branch>
<status status="FAIL" starttime="20241128 23:59:25.155" endtime="20241128 23:59:53.429"/>
</try>
<status status="FAIL" starttime="20241128 23:59:25.133" endtime="20241128 23:59:53.429"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.430" endtime="20241128 23:59:53.430"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.430" endtime="20241128 23:59:53.430"/>
</branch>
<status status="FAIL" starttime="20241128 23:59:25.132" endtime="20241128 23:59:53.430"/>
</if>
<status status="FAIL" starttime="20241128 23:59:25.102" endtime="20241128 23:59:53.432"/>
</kw>
<status status="FAIL" starttime="20241128 23:59:25.101" endtime="20241128 23:59:53.432"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.433" endtime="20241128 23:59:53.434"/>
</kw>
<status status="PASS" starttime="20241128 23:59:53.432" endtime="20241128 23:59:53.434"/>
</branch>
<status status="PASS" starttime="20241128 23:59:25.101" endtime="20241128 23:59:53.435"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 23:59:53.850" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 23:59:53.438" endtime="20241128 23:59:53.850"/>
</kw>
<status status="PASS" starttime="20241128 23:59:53.436" endtime="20241128 23:59:53.850"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:53.851" endtime="20241128 23:59:53.851"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:53.851" endtime="20241128 23:59:53.851"/>
</branch>
<status status="PASS" starttime="20241128 23:59:53.436" endtime="20241128 23:59:53.851"/>
</try>
<status status="PASS" starttime="20241128 23:59:53.435" endtime="20241128 23:59:53.851"/>
</kw>
<status status="PASS" starttime="20241128 23:26:18.435" endtime="20241128 23:59:53.852"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:53.852" endtime="20241128 23:59:53.853"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 23:59:53.877" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '7', 'testCaseId': '1', 'testSuiteRunId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T18:29:21.005Z', 'createdAt': '2024-11-28T18:...</msg>
<status status="PASS" starttime="20241128 23:59:53.853" endtime="20241128 23:59:53.877"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 23:59:53.877" endtime="20241128 23:59:53.877"/>
</break>
<status status="NOT RUN" starttime="20241128 23:59:53.877" endtime="20241128 23:59:53.878"/>
</branch>
<status status="PASS" starttime="20241128 23:59:53.877" endtime="20241128 23:59:53.878"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 23:59:53.880" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\78bcf96d-a011-4dce-bc1f-4cb18d8e3bf5"}</msg>
<msg timestamp="20241128 23:59:54.775" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\78bcf96d-a011-4dce-bc1f-4cb18d8e3bf5"}</msg>
<status status="PASS" starttime="20241128 23:59:53.879" endtime="20241128 23:59:54.776"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 23:59:54.794" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 23:59:54.819" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 23:59:54.819" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 23:59:54.793" endtime="20241128 23:59:54.819"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 23:59:54.820" endtime="20241128 23:59:54.821"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 23:59:58.038" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 23:59:58.038" level="INFO">${page_id} = {'page_id': 'page=3a363c65-0af0-496d-bd7c-a157e2fee9f5', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:59:54.822" endtime="20241128 23:59:58.038"/>
</kw>
<status status="PASS" starttime="20241128 23:59:53.878" endtime="20241128 23:59:58.039"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:58.040" endtime="20241128 23:59:58.044"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:58.048" endtime="20241128 23:59:58.048"/>
</kw>
<msg timestamp="20241128 23:59:58.048" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.047" endtime="20241128 23:59:58.048"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.049" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 23:59:58.049" endtime="20241128 23:59:58.049"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.050" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.050" endtime="20241128 23:59:58.050"/>
</kw>
<status status="PASS" starttime="20241128 23:59:58.049" endtime="20241128 23:59:58.050"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.051" endtime="20241128 23:59:58.051"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:58.051" endtime="20241128 23:59:58.051"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.049" endtime="20241128 23:59:58.051"/>
</if>
<status status="PASS" starttime="20241128 23:59:58.048" endtime="20241128 23:59:58.051"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.048" endtime="20241128 23:59:58.052"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:58.052" endtime="20241128 23:59:58.052"/>
</return>
<msg timestamp="20241128 23:59:58.052" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.047" endtime="20241128 23:59:58.052"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.053" endtime="20241128 23:59:58.053"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 23:59:58.053" endtime="20241128 23:59:58.053"/>
</return>
<status status="NOT RUN" starttime="20241128 23:59:58.053" endtime="20241128 23:59:58.054"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.052" endtime="20241128 23:59:58.054"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:58.057" endtime="20241128 23:59:58.058"/>
</kw>
<msg timestamp="20241128 23:59:58.058" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.057" endtime="20241128 23:59:58.058"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.059" level="INFO">${values} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 23:59:58.058" endtime="20241128 23:59:58.059"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.059" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.059" endtime="20241128 23:59:58.059"/>
</kw>
<status status="PASS" starttime="20241128 23:59:58.059" endtime="20241128 23:59:58.059"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.060" endtime="20241128 23:59:58.060"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:58.060" endtime="20241128 23:59:58.060"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.059" endtime="20241128 23:59:58.060"/>
</if>
<status status="PASS" starttime="20241128 23:59:58.058" endtime="20241128 23:59:58.060"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.058" endtime="20241128 23:59:58.060"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:58.060" endtime="20241128 23:59:58.060"/>
</return>
<msg timestamp="20241128 23:59:58.061" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.056" endtime="20241128 23:59:58.061"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:58.063" endtime="20241128 23:59:58.063"/>
</kw>
<msg timestamp="20241128 23:59:58.064" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.063" endtime="20241128 23:59:58.064"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.064" level="INFO">${values} = {'id': '7', 'testCaseId': '1', 'testSuiteRunId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T18:29:21.005Z', 'createdAt': '2024-11-28T18:29:21.005Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 23:59:58.064" endtime="20241128 23:59:58.064"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.065" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.065" endtime="20241128 23:59:58.065"/>
</kw>
<status status="PASS" starttime="20241128 23:59:58.065" endtime="20241128 23:59:58.065"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.065" endtime="20241128 23:59:58.066"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:58.065" endtime="20241128 23:59:58.066"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.064" endtime="20241128 23:59:58.066"/>
</if>
<status status="PASS" starttime="20241128 23:59:58.064" endtime="20241128 23:59:58.066"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.064" endtime="20241128 23:59:58.066"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:58.066" endtime="20241128 23:59:58.066"/>
</return>
<msg timestamp="20241128 23:59:58.067" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.062" endtime="20241128 23:59:58.067"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.067" endtime="20241128 23:59:58.068"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:58.067" endtime="20241128 23:59:58.068"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.067" endtime="20241128 23:59:58.068"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.068" level="INFO">${testCase} = {'id': '1', 'name': 'Login positive 1', 'projectId': '1', 'createdAt': '2024-11-28T07:05:11.592Z', 'updatedAt': '2024-11-28T11:41:23.106Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241128 23:59:58.068" endtime="20241128 23:59:58.068"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.069" level="INFO">${testCaseRun} = {'id': '7', 'testCaseId': '1', 'testSuiteRunId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T18:29:21.005Z', 'createdAt': '2024-11-28T18:29:21.005Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241128 23:59:58.069" endtime="20241128 23:59:58.069"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.069" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 23:59:58.069" endtime="20241128 23:59:58.069"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:58.069" endtime="20241128 23:59:58.070"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:58.073" endtime="20241128 23:59:58.074"/>
</kw>
<msg timestamp="20241128 23:59:58.074" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.073" endtime="20241128 23:59:58.074"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.075" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241128 23:59:58.074" endtime="20241128 23:59:58.075"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.075" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.075" endtime="20241128 23:59:58.075"/>
</kw>
<status status="PASS" starttime="20241128 23:59:58.075" endtime="20241128 23:59:58.075"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.076" endtime="20241128 23:59:58.076"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:58.075" endtime="20241128 23:59:58.076"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.075" endtime="20241128 23:59:58.076"/>
</if>
<status status="PASS" starttime="20241128 23:59:58.074" endtime="20241128 23:59:58.076"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.074" endtime="20241128 23:59:58.076"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:58.076" endtime="20241128 23:59:58.076"/>
</return>
<msg timestamp="20241128 23:59:58.076" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.072" endtime="20241128 23:59:58.076"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:58.077" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '7', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 23:59:58.077" endtime="20241128 23:59:58.077"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 23:59:58.078" level="INFO">${json_response} = {"testCaseRunId": "7", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 23:59:58.078" endtime="20241128 23:59:58.078"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 23:59:58.122" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 23:59:58.122" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241128 23:59:58.078" endtime="20241128 23:59:58.122"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:58.123" endtime="20241128 23:59:58.123"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 23:59:58.124" endtime="20241128 23:59:58.124"/>
</return>
<status status="PASS" starttime="20241128 23:59:58.077" endtime="20241128 23:59:58.124"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 23:59:58.125" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 23:59:58.125" endtime="20241128 23:59:58.125"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:05:11.676Z', 'updatedAt': '2024-11-28T11:41:23.138Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.127" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 23:59:58.126" endtime="20241128 23:59:58.127"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:58.127" endtime="20241128 23:59:58.128"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 23:59:58.132" endtime="20241128 23:59:58.132"/>
</kw>
<msg timestamp="20241128 23:59:58.132" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.131" endtime="20241128 23:59:58.132"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.133" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 23:59:58.133" endtime="20241128 23:59:58.134"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.135" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.135" endtime="20241128 23:59:58.135"/>
</kw>
<status status="PASS" starttime="20241128 23:59:58.134" endtime="20241128 23:59:58.136"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.136" endtime="20241128 23:59:58.136"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:58.136" endtime="20241128 23:59:58.136"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.134" endtime="20241128 23:59:58.137"/>
</if>
<status status="PASS" starttime="20241128 23:59:58.133" endtime="20241128 23:59:58.137"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.132" endtime="20241128 23:59:58.137"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 23:59:58.137" endtime="20241128 23:59:58.137"/>
</return>
<msg timestamp="20241128 23:59:58.137" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 23:59:58.131" endtime="20241128 23:59:58.137"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.139" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:59:58.139" endtime="20241128 23:59:58.139"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 23:59:58.139" endtime="20241128 23:59:58.140"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 23:59:58.140" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241128 23:59:58.140" endtime="20241128 23:59:58.140"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.140" endtime="20241128 23:59:58.141"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 23:59:58.141" endtime="20241128 23:59:58.141"/>
</kw>
<status status="NOT RUN" starttime="20241128 23:59:58.140" endtime="20241128 23:59:58.141"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.140" endtime="20241128 23:59:58.141"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 23:59:58.142" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:59:58.142" endtime="20241128 23:59:58.142"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 00:00:04.044" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241129 00:00:04.044" level="INFO">${page_id} = {'page_id': 'page=c5ac9d0f-038f-4883-8dc5-25fb454b49cb', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 23:59:58.144" endtime="20241129 00:00:04.044"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241129 00:00:04.045" level="INFO">Switching to page {'page_id': 'page=c5ac9d0f-038f-4883-8dc5-25fb454b49cb', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241129 00:00:04.177" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=181c8e56-26d1-433e-9e56-35d05738adcc",
    "contexts": [
      {
        "type": "context",
        "id": "context=37e4e0a0-8e1a-40c6-9a00-d0bb094b602e",
        "activePage": "page=c5ac9d0f-038f-4883-8dc5-25fb454b49cb",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=3a363c65-0af0-496d-bd7c-a157e2fee9f5",
            "timestamp": 1732818595.489
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=c5ac9d0f-038f-4883-8dc5-25fb454b49cb",
            "timestamp": 1732818598.19
          }
        ]
      }
    ],
    "activeContext": "context=37e4e0a0-8e1a-40c6-9a00-d0bb094b602e",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241129 00:00:04.185" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241129 00:00:04.045" endtime="20241129 00:00:04.185"/>
</kw>
<status status="PASS" starttime="20241128 23:59:58.143" endtime="20241129 00:00:04.186"/>
</kw>
<status status="PASS" starttime="20241128 23:59:58.143" endtime="20241129 00:00:04.186"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.186" endtime="20241129 00:00:04.186"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.186" endtime="20241129 00:00:04.186"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.190" endtime="20241129 00:00:04.190"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.187" endtime="20241129 00:00:04.190"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.195" endtime="20241129 00:00:04.196"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.200" endtime="20241129 00:00:04.200"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.190" endtime="20241129 00:00:04.200"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.202" endtime="20241129 00:00:04.203"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.200" endtime="20241129 00:00:04.203"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.211" endtime="20241129 00:00:04.211"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.203" endtime="20241129 00:00:04.211"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.217" endtime="20241129 00:00:04.218"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.219" endtime="20241129 00:00:04.219"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.218" endtime="20241129 00:00:04.220"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.218" endtime="20241129 00:00:04.220"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.212" endtime="20241129 00:00:04.220"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.225" endtime="20241129 00:00:04.225"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.221" endtime="20241129 00:00:04.226"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.230" endtime="20241129 00:00:04.230"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.231" endtime="20241129 00:00:04.231"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.231" endtime="20241129 00:00:04.232"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.232" endtime="20241129 00:00:04.233"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.232" endtime="20241129 00:00:04.233"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.231" endtime="20241129 00:00:04.233"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.226" endtime="20241129 00:00:04.233"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 00:00:04.244" endtime="20241129 00:00:04.244"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.253" endtime="20241129 00:00:04.253"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.234" endtime="20241129 00:00:04.253"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.256" endtime="20241129 00:00:04.256"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.257" endtime="20241129 00:00:04.257"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.257" endtime="20241129 00:00:04.257"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.258" endtime="20241129 00:00:04.258"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.258" endtime="20241129 00:00:04.258"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.256" endtime="20241129 00:00:04.258"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.253" endtime="20241129 00:00:04.259"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 00:00:04.280" endtime="20241129 00:00:04.282"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.297" endtime="20241129 00:00:04.302"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.259" endtime="20241129 00:00:04.302"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.307" endtime="20241129 00:00:04.307"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.308" endtime="20241129 00:00:04.308"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.308" endtime="20241129 00:00:04.309"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.309" endtime="20241129 00:00:04.309"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.309" endtime="20241129 00:00:04.309"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.308" endtime="20241129 00:00:04.309"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.303" endtime="20241129 00:00:04.310"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.316" endtime="20241129 00:00:04.317"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.311" endtime="20241129 00:00:04.317"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.332" endtime="20241129 00:00:04.333"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.333" endtime="20241129 00:00:04.334"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.317" endtime="20241129 00:00:04.334"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.143" endtime="20241129 00:00:04.334"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:04.335" endtime="20241129 00:00:04.336"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241129 00:00:04.336" endtime="20241129 00:00:04.336"/>
</return>
<msg timestamp="20241129 00:00:04.337" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241128 23:59:58.141" endtime="20241129 00:00:04.337"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.340" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241129 00:00:04.339" endtime="20241129 00:00:04.341"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.342" endtime="20241129 00:00:04.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.342" endtime="20241129 00:00:04.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.343" endtime="20241129 00:00:04.344"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.345" endtime="20241129 00:00:04.345"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.345" endtime="20241129 00:00:04.345"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.345" endtime="20241129 00:00:04.346"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.346" endtime="20241129 00:00:04.346"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.346" endtime="20241129 00:00:04.346"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.348" endtime="20241129 00:00:04.349"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.351" endtime="20241129 00:00:04.351"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 00:00:04.352" endtime="20241129 00:00:04.352"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.352" endtime="20241129 00:00:04.352"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.352" endtime="20241129 00:00:04.353"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.353" endtime="20241129 00:00:04.353"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.353" endtime="20241129 00:00:04.354"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.353" endtime="20241129 00:00:04.354"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.353" endtime="20241129 00:00:04.354"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.354" endtime="20241129 00:00:04.354"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.355" endtime="20241129 00:00:04.355"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.354" endtime="20241129 00:00:04.355"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.354" endtime="20241129 00:00:04.355"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.352" endtime="20241129 00:00:04.355"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.352" endtime="20241129 00:00:04.355"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 00:00:04.356" endtime="20241129 00:00:04.356"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.356" endtime="20241129 00:00:04.356"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.356" endtime="20241129 00:00:04.356"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.357" endtime="20241129 00:00:04.357"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.356" endtime="20241129 00:00:04.357"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.356" endtime="20241129 00:00:04.357"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.358" endtime="20241129 00:00:04.358"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.359" endtime="20241129 00:00:04.359"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.357" endtime="20241129 00:00:04.359"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.357" endtime="20241129 00:00:04.359"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.355" endtime="20241129 00:00:04.359"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.355" endtime="20241129 00:00:04.359"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.341" endtime="20241129 00:00:04.360"/>
</iter>
<status status="NOT RUN" starttime="20241129 00:00:04.341" endtime="20241129 00:00:04.360"/>
</for>
<msg timestamp="20241129 00:00:04.361" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241129 00:00:04.337" endtime="20241129 00:00:04.361"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:04.361" endtime="20241129 00:00:04.362"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241129 00:00:04.373" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241129 00:00:04.371" endtime="20241129 00:00:04.376"/>
</kw>
<msg timestamp="20241129 00:00:04.379" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241129 00:00:04.370" endtime="20241129 00:00:04.379"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.381" endtime="20241129 00:00:04.382"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.384" endtime="20241129 00:00:04.384"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.383" endtime="20241129 00:00:04.385"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.386" endtime="20241129 00:00:04.386"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.385" endtime="20241129 00:00:04.386"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.383" endtime="20241129 00:00:04.387"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.380" endtime="20241129 00:00:04.387"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.379" endtime="20241129 00:00:04.387"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 00:00:04.387" endtime="20241129 00:00:04.388"/>
</return>
<msg timestamp="20241129 00:00:04.389" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241129 00:00:04.369" endtime="20241129 00:00:04.389"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.392" endtime="20241129 00:00:04.392"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.390" endtime="20241129 00:00:04.392"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.398" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241129 00:00:04.393" endtime="20241129 00:00:04.398"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.392" endtime="20241129 00:00:04.398"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.389" endtime="20241129 00:00:04.398"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 00:00:04.401" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '33', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241129 00:00:04.398" endtime="20241129 00:00:04.401"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 00:00:04.404" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "33", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241129 00:00:04.403" endtime="20241129 00:00:04.404"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 00:00:04.414" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 00:00:04.414" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241129 00:00:04.405" endtime="20241129 00:00:04.415"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:04.415" endtime="20241129 00:00:04.416"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 00:00:04.416" endtime="20241129 00:00:04.417"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.402" endtime="20241129 00:00:04.417"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.363" endtime="20241129 00:00:04.418"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 00:00:04.419" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241129 00:00:04.418" endtime="20241129 00:00:04.420"/>
</kw>
<status status="PASS" starttime="20241128 23:59:58.138" endtime="20241129 00:00:04.420"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.421" endtime="20241129 00:00:04.421"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.421" endtime="20241129 00:00:04.422"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.423" endtime="20241129 00:00:04.424"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.420" endtime="20241129 00:00:04.424"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.138" endtime="20241129 00:00:04.425"/>
</try>
<status status="PASS" starttime="20241128 23:59:58.138" endtime="20241129 00:00:04.425"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.428" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241129 00:00:04.427" endtime="20241129 00:00:04.428"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:04.430" endtime="20241129 00:00:04.432"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 00:00:04.433" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241129 00:00:04.433" endtime="20241129 00:00:04.433"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.434" endtime="20241129 00:00:04.435"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.435" endtime="20241129 00:00:04.435"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.434" endtime="20241129 00:00:04.435"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.434" endtime="20241129 00:00:04.435"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.437" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241129 00:00:04.437" endtime="20241129 00:00:04.437"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.442" endtime="20241129 00:00:04.443"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.442" endtime="20241129 00:00:04.443"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.444" endtime="20241129 00:00:04.444"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.443" endtime="20241129 00:00:04.445"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.455" endtime="20241129 00:00:04.455"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.445" endtime="20241129 00:00:04.456"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.463" endtime="20241129 00:00:04.463"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.468" endtime="20241129 00:00:04.468"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.457" endtime="20241129 00:00:04.469"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.472" endtime="20241129 00:00:04.472"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.469" endtime="20241129 00:00:04.472"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.483" endtime="20241129 00:00:04.484"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.472" endtime="20241129 00:00:04.484"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:04.550" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241129 00:00:04.509" endtime="20241129 00:00:04.551"/>
</kw>
<msg timestamp="20241129 00:00:04.551" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.508" endtime="20241129 00:00:04.551"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.551" endtime="20241129 00:00:04.551"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.508" endtime="20241129 00:00:04.552"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.552" endtime="20241129 00:00:04.552"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.552" endtime="20241129 00:00:04.553"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.552" endtime="20241129 00:00:04.553"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.507" endtime="20241129 00:00:04.553"/>
</try>
<msg timestamp="20241129 00:00:04.553" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.507" endtime="20241129 00:00:04.553"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.554" endtime="20241129 00:00:04.554"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.505" endtime="20241129 00:00:04.554"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.554" endtime="20241129 00:00:04.554"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.554" endtime="20241129 00:00:04.554"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.504" endtime="20241129 00:00:04.554"/>
</try>
<msg timestamp="20241129 00:00:04.555" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.503" endtime="20241129 00:00:04.555"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.559" endtime="20241129 00:00:04.559"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.559" endtime="20241129 00:00:04.559"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.558" endtime="20241129 00:00:04.559"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.558" endtime="20241129 00:00:04.559"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.557" endtime="20241129 00:00:04.560"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.501" endtime="20241129 00:00:04.560"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:04.583" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241129 00:00:04.574" endtime="20241129 00:00:04.584"/>
</kw>
<msg timestamp="20241129 00:00:04.584" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.573" endtime="20241129 00:00:04.584"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.584" endtime="20241129 00:00:04.584"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.573" endtime="20241129 00:00:04.585"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.585" endtime="20241129 00:00:04.585"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.586" endtime="20241129 00:00:04.586"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.585" endtime="20241129 00:00:04.586"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.573" endtime="20241129 00:00:04.586"/>
</try>
<msg timestamp="20241129 00:00:04.586" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.572" endtime="20241129 00:00:04.586"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.587" endtime="20241129 00:00:04.587"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.570" endtime="20241129 00:00:04.587"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.587" endtime="20241129 00:00:04.587"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.587" endtime="20241129 00:00:04.587"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.570" endtime="20241129 00:00:04.587"/>
</try>
<msg timestamp="20241129 00:00:04.588" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.570" endtime="20241129 00:00:04.588"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.592" endtime="20241129 00:00:04.592"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.592" endtime="20241129 00:00:04.593"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.591" endtime="20241129 00:00:04.593"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.591" endtime="20241129 00:00:04.593"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.590" endtime="20241129 00:00:04.593"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.569" endtime="20241129 00:00:04.593"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241129 00:00:04.623" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241129 00:00:04.624" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241129 00:00:04.594" endtime="20241129 00:00:04.624"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241129 00:00:04.624" endtime="20241129 00:00:04.624"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.594" endtime="20241129 00:00:04.624"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.625" endtime="20241129 00:00:04.625"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.625" endtime="20241129 00:00:04.626"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.624" endtime="20241129 00:00:04.626"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.593" endtime="20241129 00:00:04.626"/>
</try>
<msg timestamp="20241129 00:00:04.627" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241129 00:00:04.565" endtime="20241129 00:00:04.627"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.634" endtime="20241129 00:00:04.634"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.634" endtime="20241129 00:00:04.634"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.633" endtime="20241129 00:00:04.634"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.633" endtime="20241129 00:00:04.635"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.630" endtime="20241129 00:00:04.635"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.564" endtime="20241129 00:00:04.635"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.636" endtime="20241129 00:00:04.636"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.635" endtime="20241129 00:00:04.636"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.564" endtime="20241129 00:00:04.636"/>
</try>
<status status="PASS" starttime="20241129 00:00:04.563" endtime="20241129 00:00:04.637"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:04.660" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241129 00:00:04.650" endtime="20241129 00:00:04.660"/>
</kw>
<msg timestamp="20241129 00:00:04.661" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.649" endtime="20241129 00:00:04.661"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.661" endtime="20241129 00:00:04.661"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.648" endtime="20241129 00:00:04.662"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.663" endtime="20241129 00:00:04.663"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.663" endtime="20241129 00:00:04.663"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.662" endtime="20241129 00:00:04.664"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.648" endtime="20241129 00:00:04.664"/>
</try>
<msg timestamp="20241129 00:00:04.664" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.647" endtime="20241129 00:00:04.664"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.664" endtime="20241129 00:00:04.665"/>
</return>
<msg timestamp="20241129 00:00:04.665" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.643" endtime="20241129 00:00:04.665"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.670" endtime="20241129 00:00:04.670"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.670" endtime="20241129 00:00:04.670"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.669" endtime="20241129 00:00:04.670"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.669" endtime="20241129 00:00:04.671"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.667" endtime="20241129 00:00:04.671"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.642" endtime="20241129 00:00:04.672"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.495" endtime="20241129 00:00:04.672"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:04.709" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241129 00:00:04.682" endtime="20241129 00:00:04.710"/>
</kw>
<msg timestamp="20241129 00:00:04.710" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.681" endtime="20241129 00:00:04.710"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.710" endtime="20241129 00:00:04.711"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.681" endtime="20241129 00:00:04.711"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.711" endtime="20241129 00:00:04.711"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.712" endtime="20241129 00:00:04.712"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.711" endtime="20241129 00:00:04.712"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.681" endtime="20241129 00:00:04.712"/>
</try>
<msg timestamp="20241129 00:00:04.713" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.680" endtime="20241129 00:00:04.713"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.713" endtime="20241129 00:00:04.713"/>
</return>
<msg timestamp="20241129 00:00:04.713" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.678" endtime="20241129 00:00:04.713"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.717" endtime="20241129 00:00:04.717"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.718" endtime="20241129 00:00:04.718"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.717" endtime="20241129 00:00:04.718"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.717" endtime="20241129 00:00:04.718"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.715" endtime="20241129 00:00:04.718"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.676" endtime="20241129 00:00:04.718"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 00:00:04.719" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241129 00:00:04.719" endtime="20241129 00:00:04.719"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.722" endtime="20241129 00:00:04.722"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.725" endtime="20241129 00:00:04.726"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.722" endtime="20241129 00:00:04.726"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241129 00:00:04.726" endtime="20241129 00:00:04.727"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.726" endtime="20241129 00:00:04.727"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.721" endtime="20241129 00:00:04.727"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241129 00:00:04.728" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241129 00:00:04.728" endtime="20241129 00:00:04.771"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.727" endtime="20241129 00:00:04.771"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.772" endtime="20241129 00:00:04.772"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.772" endtime="20241129 00:00:04.772"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.771" endtime="20241129 00:00:04.772"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.727" endtime="20241129 00:00:04.773"/>
</try>
<status status="PASS" starttime="20241129 00:00:04.721" endtime="20241129 00:00:04.773"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.720" endtime="20241129 00:00:04.773"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.720" endtime="20241129 00:00:04.773"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.774" endtime="20241129 00:00:04.774"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.773" endtime="20241129 00:00:04.774"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.720" endtime="20241129 00:00:04.774"/>
</try>
<status status="PASS" starttime="20241129 00:00:04.491" endtime="20241129 00:00:04.774"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.775" endtime="20241129 00:00:04.775"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.775" endtime="20241129 00:00:04.775"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.774" endtime="20241129 00:00:04.775"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.485" endtime="20241129 00:00:04.776"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.778" endtime="20241129 00:00:04.778"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.776" endtime="20241129 00:00:04.778"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.780" endtime="20241129 00:00:04.780"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.781" endtime="20241129 00:00:04.781"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.781" endtime="20241129 00:00:04.781"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.782" endtime="20241129 00:00:04.782"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.781" endtime="20241129 00:00:04.782"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.781" endtime="20241129 00:00:04.782"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.779" endtime="20241129 00:00:04.782"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 00:00:04.791" endtime="20241129 00:00:04.791"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.795" endtime="20241129 00:00:04.796"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.782" endtime="20241129 00:00:04.796"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.798" endtime="20241129 00:00:04.798"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.798" endtime="20241129 00:00:04.799"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.798" endtime="20241129 00:00:04.799"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.799" endtime="20241129 00:00:04.799"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.799" endtime="20241129 00:00:04.799"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.798" endtime="20241129 00:00:04.799"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.796" endtime="20241129 00:00:04.799"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 00:00:04.808" endtime="20241129 00:00:04.808"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.813" endtime="20241129 00:00:04.813"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.800" endtime="20241129 00:00:04.813"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.815" endtime="20241129 00:00:04.816"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.816" endtime="20241129 00:00:04.816"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.816" endtime="20241129 00:00:04.816"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.817" endtime="20241129 00:00:04.817"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.816" endtime="20241129 00:00:04.817"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.816" endtime="20241129 00:00:04.817"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.814" endtime="20241129 00:00:04.817"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.820" endtime="20241129 00:00:04.820"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.817" endtime="20241129 00:00:04.821"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.830" endtime="20241129 00:00:04.830"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.831" endtime="20241129 00:00:04.831"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.821" endtime="20241129 00:00:04.831"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.438" endtime="20241129 00:00:04.831"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:04.832" endtime="20241129 00:00:04.833"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241129 00:00:04.833" endtime="20241129 00:00:04.833"/>
</return>
<msg timestamp="20241129 00:00:04.834" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241129 00:00:04.436" endtime="20241129 00:00:04.834"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.836" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241129 00:00:04.835" endtime="20241129 00:00:04.836"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.837" endtime="20241129 00:00:04.837"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.837" endtime="20241129 00:00:04.837"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.837" endtime="20241129 00:00:04.837"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.838" endtime="20241129 00:00:04.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.838" endtime="20241129 00:00:04.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.838" endtime="20241129 00:00:04.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.839" endtime="20241129 00:00:04.839"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.839" endtime="20241129 00:00:04.839"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.841" endtime="20241129 00:00:04.841"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.843" endtime="20241129 00:00:04.843"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 00:00:04.844" endtime="20241129 00:00:04.845"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.844" endtime="20241129 00:00:04.845"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.844" endtime="20241129 00:00:04.845"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.846" endtime="20241129 00:00:04.846"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.846" endtime="20241129 00:00:04.846"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.845" endtime="20241129 00:00:04.846"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.845" endtime="20241129 00:00:04.846"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.847" endtime="20241129 00:00:04.847"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.847" endtime="20241129 00:00:04.847"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.846" endtime="20241129 00:00:04.847"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.846" endtime="20241129 00:00:04.847"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.844" endtime="20241129 00:00:04.847"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.844" endtime="20241129 00:00:04.847"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 00:00:04.848" endtime="20241129 00:00:04.848"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.848" endtime="20241129 00:00:04.848"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.848" endtime="20241129 00:00:04.848"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.849" endtime="20241129 00:00:04.849"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.849" endtime="20241129 00:00:04.849"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.849" endtime="20241129 00:00:04.849"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.850" endtime="20241129 00:00:04.850"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.850" endtime="20241129 00:00:04.850"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.850" endtime="20241129 00:00:04.850"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.849" endtime="20241129 00:00:04.850"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.848" endtime="20241129 00:00:04.850"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:04.848" endtime="20241129 00:00:04.851"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:04.836" endtime="20241129 00:00:04.851"/>
</iter>
<status status="NOT RUN" starttime="20241129 00:00:04.836" endtime="20241129 00:00:04.851"/>
</for>
<msg timestamp="20241129 00:00:04.851" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241129 00:00:04.834" endtime="20241129 00:00:04.851"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:04.851" endtime="20241129 00:00:04.852"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 00:00:04.858" endtime="20241129 00:00:04.859"/>
</kw>
<msg timestamp="20241129 00:00:04.859" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.858" endtime="20241129 00:00:04.859"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.861" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-28T06:56:16.519Z'}</msg>
<status status="PASS" starttime="20241129 00:00:04.860" endtime="20241129 00:00:04.861"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.862" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.862" endtime="20241129 00:00:04.862"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.862" endtime="20241129 00:00:04.863"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.863" endtime="20241129 00:00:04.863"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.863" endtime="20241129 00:00:04.863"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.861" endtime="20241129 00:00:04.864"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.860" endtime="20241129 00:00:04.864"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.859" endtime="20241129 00:00:04.864"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 00:00:04.864" endtime="20241129 00:00:04.864"/>
</return>
<msg timestamp="20241129 00:00:04.864" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.857" endtime="20241129 00:00:04.864"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.866" level="INFO">${xpath} = id=username</msg>
<status status="PASS" starttime="20241129 00:00:04.865" endtime="20241129 00:00:04.866"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.865" endtime="20241129 00:00:04.866"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.866" endtime="20241129 00:00:04.866"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.866" endtime="20241129 00:00:04.866"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.865" endtime="20241129 00:00:04.866"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 00:00:04.868" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '34', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorMessage'...</msg>
<status status="PASS" starttime="20241129 00:00:04.867" endtime="20241129 00:00:04.868"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 00:00:04.870" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "34", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorMessage"...</msg>
<status status="PASS" starttime="20241129 00:00:04.870" endtime="20241129 00:00:04.870"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 00:00:04.882" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 00:00:04.883" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241129 00:00:04.871" endtime="20241129 00:00:04.883"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:04.883" endtime="20241129 00:00:04.884"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 00:00:04.884" endtime="20241129 00:00:04.884"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.869" endtime="20241129 00:00:04.885"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.853" endtime="20241129 00:00:04.885"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 00:00:04.886" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241129 00:00:04.886" endtime="20241129 00:00:04.886"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.426" endtime="20241129 00:00:04.886"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.887" endtime="20241129 00:00:04.887"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.887" endtime="20241129 00:00:04.887"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.888" endtime="20241129 00:00:04.888"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.886" endtime="20241129 00:00:04.888"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.426" endtime="20241129 00:00:04.888"/>
</try>
<status status="PASS" starttime="20241129 00:00:04.425" endtime="20241129 00:00:04.888"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.890" level="INFO">${action} = {'id': '3', 'name': 'Set Password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:58.626Z', 'updatedAt': '2024-11-28T06:56:58....</msg>
<status status="PASS" starttime="20241129 00:00:04.889" endtime="20241129 00:00:04.890"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:04.890" endtime="20241129 00:00:04.891"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 00:00:04.892" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:58.757Z', 'updatedAt': '2024-11-28T06:57:07.363Z'}</msg>
<status status="PASS" starttime="20241129 00:00:04.892" endtime="20241129 00:00:04.892"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.893" endtime="20241129 00:00:04.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.894" endtime="20241129 00:00:04.894"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.893" endtime="20241129 00:00:04.895"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.892" endtime="20241129 00:00:04.895"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:04.898" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241129 00:00:04.897" endtime="20241129 00:00:04.898"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.899" endtime="20241129 00:00:04.899"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.898" endtime="20241129 00:00:04.899"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 00:00:04.899" endtime="20241129 00:00:04.900"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.899" endtime="20241129 00:00:04.900"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.903" endtime="20241129 00:00:04.903"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.900" endtime="20241129 00:00:04.904"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.907" endtime="20241129 00:00:04.907"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.911" endtime="20241129 00:00:04.911"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.904" endtime="20241129 00:00:04.911"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.913" endtime="20241129 00:00:04.913"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.911" endtime="20241129 00:00:04.913"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.918" endtime="20241129 00:00:04.918"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.913" endtime="20241129 00:00:04.918"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:04.944" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241129 00:00:04.932" endtime="20241129 00:00:04.945"/>
</kw>
<msg timestamp="20241129 00:00:04.945" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.932" endtime="20241129 00:00:04.945"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.945" endtime="20241129 00:00:04.945"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.931" endtime="20241129 00:00:04.945"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.946" endtime="20241129 00:00:04.946"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.947" endtime="20241129 00:00:04.947"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.946" endtime="20241129 00:00:04.947"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.931" endtime="20241129 00:00:04.947"/>
</try>
<msg timestamp="20241129 00:00:04.947" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.931" endtime="20241129 00:00:04.948"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.948" endtime="20241129 00:00:04.948"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.929" endtime="20241129 00:00:04.948"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.948" endtime="20241129 00:00:04.948"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.948" endtime="20241129 00:00:04.948"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.929" endtime="20241129 00:00:04.949"/>
</try>
<msg timestamp="20241129 00:00:04.949" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.928" endtime="20241129 00:00:04.949"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.953" endtime="20241129 00:00:04.953"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.953" endtime="20241129 00:00:04.953"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.953" endtime="20241129 00:00:04.953"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.952" endtime="20241129 00:00:04.953"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.951" endtime="20241129 00:00:04.953"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.927" endtime="20241129 00:00:04.954"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:04.979" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241129 00:00:04.970" endtime="20241129 00:00:04.980"/>
</kw>
<msg timestamp="20241129 00:00:04.980" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.970" endtime="20241129 00:00:04.980"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.980" endtime="20241129 00:00:04.980"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.969" endtime="20241129 00:00:04.980"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.981" endtime="20241129 00:00:04.981"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.981" endtime="20241129 00:00:04.982"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.981" endtime="20241129 00:00:04.982"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.969" endtime="20241129 00:00:04.982"/>
</try>
<msg timestamp="20241129 00:00:04.982" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.968" endtime="20241129 00:00:04.982"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:04.982" endtime="20241129 00:00:04.983"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.967" endtime="20241129 00:00:04.983"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241129 00:00:04.983" endtime="20241129 00:00:04.983"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:04.983" endtime="20241129 00:00:04.983"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.967" endtime="20241129 00:00:04.983"/>
</try>
<msg timestamp="20241129 00:00:04.984" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241129 00:00:04.966" endtime="20241129 00:00:04.984"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.988" endtime="20241129 00:00:04.988"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:04.988" endtime="20241129 00:00:04.988"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:04.987" endtime="20241129 00:00:04.988"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.987" endtime="20241129 00:00:04.988"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.985" endtime="20241129 00:00:04.989"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.965" endtime="20241129 00:00:04.989"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241129 00:00:05.005" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241129 00:00:05.005" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241129 00:00:04.990" endtime="20241129 00:00:05.006"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241129 00:00:05.006" endtime="20241129 00:00:05.006"/>
</return>
<status status="PASS" starttime="20241129 00:00:04.989" endtime="20241129 00:00:05.006"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.007" endtime="20241129 00:00:05.007"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.007" endtime="20241129 00:00:05.007"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.006" endtime="20241129 00:00:05.007"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.989" endtime="20241129 00:00:05.008"/>
</try>
<msg timestamp="20241129 00:00:05.008" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241129 00:00:04.961" endtime="20241129 00:00:05.008"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.012" endtime="20241129 00:00:05.012"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.012" endtime="20241129 00:00:05.013"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.012" endtime="20241129 00:00:05.013"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.012" endtime="20241129 00:00:05.013"/>
</if>
<status status="PASS" starttime="20241129 00:00:05.010" endtime="20241129 00:00:05.013"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.958" endtime="20241129 00:00:05.013"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.014" endtime="20241129 00:00:05.014"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.013" endtime="20241129 00:00:05.014"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.958" endtime="20241129 00:00:05.014"/>
</try>
<status status="PASS" starttime="20241129 00:00:04.957" endtime="20241129 00:00:05.015"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:05.033" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241129 00:00:05.024" endtime="20241129 00:00:05.033"/>
</kw>
<msg timestamp="20241129 00:00:05.034" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.023" endtime="20241129 00:00:05.034"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.034" endtime="20241129 00:00:05.034"/>
</return>
<status status="PASS" starttime="20241129 00:00:05.023" endtime="20241129 00:00:05.035"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.035" endtime="20241129 00:00:05.035"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.036" endtime="20241129 00:00:05.036"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.035" endtime="20241129 00:00:05.036"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.023" endtime="20241129 00:00:05.036"/>
</try>
<msg timestamp="20241129 00:00:05.036" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.022" endtime="20241129 00:00:05.036"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.037" endtime="20241129 00:00:05.037"/>
</return>
<msg timestamp="20241129 00:00:05.037" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.020" endtime="20241129 00:00:05.037"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.039" endtime="20241129 00:00:05.040"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.040" endtime="20241129 00:00:05.040"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.039" endtime="20241129 00:00:05.040"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.039" endtime="20241129 00:00:05.040"/>
</if>
<status status="PASS" starttime="20241129 00:00:05.038" endtime="20241129 00:00:05.040"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.019" endtime="20241129 00:00:05.040"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.924" endtime="20241129 00:00:05.040"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:05.060" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241129 00:00:05.045" endtime="20241129 00:00:05.060"/>
</kw>
<msg timestamp="20241129 00:00:05.061" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.045" endtime="20241129 00:00:05.061"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.061" endtime="20241129 00:00:05.061"/>
</return>
<status status="PASS" starttime="20241129 00:00:05.045" endtime="20241129 00:00:05.061"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.061" endtime="20241129 00:00:05.061"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.062" endtime="20241129 00:00:05.062"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.061" endtime="20241129 00:00:05.062"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.045" endtime="20241129 00:00:05.062"/>
</try>
<msg timestamp="20241129 00:00:05.062" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.044" endtime="20241129 00:00:05.062"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.062" endtime="20241129 00:00:05.062"/>
</return>
<msg timestamp="20241129 00:00:05.063" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.043" endtime="20241129 00:00:05.063"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.065" endtime="20241129 00:00:05.065"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.065" endtime="20241129 00:00:05.065"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.065" endtime="20241129 00:00:05.065"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.065" endtime="20241129 00:00:05.065"/>
</if>
<status status="PASS" starttime="20241129 00:00:05.064" endtime="20241129 00:00:05.066"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.042" endtime="20241129 00:00:05.066"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 00:00:05.066" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241129 00:00:05.066" endtime="20241129 00:00:05.066"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.068" endtime="20241129 00:00:05.068"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.070" endtime="20241129 00:00:05.070"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.068" endtime="20241129 00:00:05.070"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241129 00:00:05.070" endtime="20241129 00:00:05.071"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.070" endtime="20241129 00:00:05.071"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.068" endtime="20241129 00:00:05.071"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241129 00:00:05.072" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241129 00:00:05.071" endtime="20241129 00:00:05.095"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.071" endtime="20241129 00:00:05.096"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.096" endtime="20241129 00:00:05.096"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.096" endtime="20241129 00:00:05.097"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.096" endtime="20241129 00:00:05.097"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.071" endtime="20241129 00:00:05.097"/>
</try>
<status status="PASS" starttime="20241129 00:00:05.067" endtime="20241129 00:00:05.097"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.067" endtime="20241129 00:00:05.097"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.067" endtime="20241129 00:00:05.097"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.097" endtime="20241129 00:00:05.097"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.097" endtime="20241129 00:00:05.098"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.066" endtime="20241129 00:00:05.098"/>
</try>
<status status="PASS" starttime="20241129 00:00:04.922" endtime="20241129 00:00:05.098"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.098" endtime="20241129 00:00:05.098"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.098" endtime="20241129 00:00:05.098"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.098" endtime="20241129 00:00:05.099"/>
</if>
<status status="PASS" starttime="20241129 00:00:04.918" endtime="20241129 00:00:05.099"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.100" endtime="20241129 00:00:05.100"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.099" endtime="20241129 00:00:05.100"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.101" endtime="20241129 00:00:05.101"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.102" endtime="20241129 00:00:05.102"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.101" endtime="20241129 00:00:05.102"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.102" endtime="20241129 00:00:05.102"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.102" endtime="20241129 00:00:05.102"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.101" endtime="20241129 00:00:05.102"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.100" endtime="20241129 00:00:05.102"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 00:00:05.108" endtime="20241129 00:00:05.108"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.112" endtime="20241129 00:00:05.112"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.102" endtime="20241129 00:00:05.112"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.113" endtime="20241129 00:00:05.113"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.114" endtime="20241129 00:00:05.114"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.114" endtime="20241129 00:00:05.114"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.114" endtime="20241129 00:00:05.115"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.114" endtime="20241129 00:00:05.115"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.114" endtime="20241129 00:00:05.115"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.112" endtime="20241129 00:00:05.115"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 00:00:05.121" endtime="20241129 00:00:05.121"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.124" endtime="20241129 00:00:05.125"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.115" endtime="20241129 00:00:05.125"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.126" endtime="20241129 00:00:05.126"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.127" endtime="20241129 00:00:05.127"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.127" endtime="20241129 00:00:05.128"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.128" endtime="20241129 00:00:05.128"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.128" endtime="20241129 00:00:05.128"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.127" endtime="20241129 00:00:05.128"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.125" endtime="20241129 00:00:05.128"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.131" endtime="20241129 00:00:05.131"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.129" endtime="20241129 00:00:05.131"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 00:00:05.139" endtime="20241129 00:00:05.139"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.139" endtime="20241129 00:00:05.139"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.132" endtime="20241129 00:00:05.139"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.898" endtime="20241129 00:00:05.139"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:05.140" endtime="20241129 00:00:05.140"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241129 00:00:05.140" endtime="20241129 00:00:05.141"/>
</return>
<msg timestamp="20241129 00:00:05.141" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241129 00:00:04.895" endtime="20241129 00:00:05.141"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.142" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241129 00:00:05.142" endtime="20241129 00:00:05.142"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.143" endtime="20241129 00:00:05.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.144" endtime="20241129 00:00:05.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.144" endtime="20241129 00:00:05.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.144" endtime="20241129 00:00:05.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.145" endtime="20241129 00:00:05.145"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.145" endtime="20241129 00:00:05.145"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.145" endtime="20241129 00:00:05.145"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.145" endtime="20241129 00:00:05.146"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.147" endtime="20241129 00:00:05.147"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.149" endtime="20241129 00:00:05.149"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 00:00:05.149" endtime="20241129 00:00:05.149"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.149" endtime="20241129 00:00:05.149"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.149" endtime="20241129 00:00:05.150"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.150" endtime="20241129 00:00:05.150"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:05.150" endtime="20241129 00:00:05.150"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.150" endtime="20241129 00:00:05.150"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.150" endtime="20241129 00:00:05.150"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.151" endtime="20241129 00:00:05.151"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:05.151" endtime="20241129 00:00:05.151"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.151" endtime="20241129 00:00:05.151"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.150" endtime="20241129 00:00:05.151"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.149" endtime="20241129 00:00:05.151"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.149" endtime="20241129 00:00:05.151"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 00:00:05.152" endtime="20241129 00:00:05.152"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.152" endtime="20241129 00:00:05.152"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.152" endtime="20241129 00:00:05.152"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.152" endtime="20241129 00:00:05.153"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.152" endtime="20241129 00:00:05.153"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.152" endtime="20241129 00:00:05.153"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.153" endtime="20241129 00:00:05.153"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:05.153" endtime="20241129 00:00:05.153"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.153" endtime="20241129 00:00:05.153"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.153" endtime="20241129 00:00:05.154"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.152" endtime="20241129 00:00:05.154"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.151" endtime="20241129 00:00:05.154"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.143" endtime="20241129 00:00:05.154"/>
</iter>
<status status="NOT RUN" starttime="20241129 00:00:05.143" endtime="20241129 00:00:05.154"/>
</for>
<msg timestamp="20241129 00:00:05.154" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241129 00:00:05.141" endtime="20241129 00:00:05.154"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:05.154" endtime="20241129 00:00:05.155"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 00:00:05.161" endtime="20241129 00:00:05.161"/>
</kw>
<msg timestamp="20241129 00:00:05.162" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.161" endtime="20241129 00:00:05.162"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.163" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:57.275Z', 'updatedAt': '2024-11-28T06:56:57.275Z'}</msg>
<status status="PASS" starttime="20241129 00:00:05.162" endtime="20241129 00:00:05.163"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.164" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.163" endtime="20241129 00:00:05.164"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.163" endtime="20241129 00:00:05.164"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.164" endtime="20241129 00:00:05.164"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.164" endtime="20241129 00:00:05.164"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.163" endtime="20241129 00:00:05.164"/>
</if>
<status status="PASS" starttime="20241129 00:00:05.162" endtime="20241129 00:00:05.164"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.162" endtime="20241129 00:00:05.164"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 00:00:05.165" endtime="20241129 00:00:05.165"/>
</return>
<msg timestamp="20241129 00:00:05.165" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.159" endtime="20241129 00:00:05.165"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.166" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241129 00:00:05.166" endtime="20241129 00:00:05.166"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.165" endtime="20241129 00:00:05.166"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.166" endtime="20241129 00:00:05.166"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.166" endtime="20241129 00:00:05.166"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.165" endtime="20241129 00:00:05.167"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 00:00:05.169" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '35', 'status': 'COMPLETED', 'actionName': 'Set Password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', 'a...</msg>
<status status="PASS" starttime="20241129 00:00:05.167" endtime="20241129 00:00:05.169"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 00:00:05.170" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "35", "status": "COMPLETED", "actionName": "Set Password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "a...</msg>
<status status="PASS" starttime="20241129 00:00:05.170" endtime="20241129 00:00:05.170"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 00:00:05.196" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 00:00:05.196" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241129 00:00:05.170" endtime="20241129 00:00:05.196"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:05.196" endtime="20241129 00:00:05.197"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 00:00:05.197" endtime="20241129 00:00:05.197"/>
</return>
<status status="PASS" starttime="20241129 00:00:05.169" endtime="20241129 00:00:05.198"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.155" endtime="20241129 00:00:05.198"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 00:00:05.199" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241129 00:00:05.198" endtime="20241129 00:00:05.199"/>
</kw>
<status status="PASS" starttime="20241129 00:00:04.889" endtime="20241129 00:00:05.199"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.199" endtime="20241129 00:00:05.199"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241129 00:00:05.200" endtime="20241129 00:00:05.200"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.200" endtime="20241129 00:00:05.200"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.199" endtime="20241129 00:00:05.200"/>
</branch>
<status status="PASS" starttime="20241129 00:00:04.889" endtime="20241129 00:00:05.200"/>
</try>
<status status="PASS" starttime="20241129 00:00:04.888" endtime="20241129 00:00:05.201"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-28T07:02:35.068Z', 'updatedAt': '2024-11-28T07:02:35.068Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.202" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:57:48.296Z', 'updatedAt': '2024-11-28T06:57:4...</msg>
<status status="PASS" starttime="20241129 00:00:05.201" endtime="20241129 00:00:05.202"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:05.202" endtime="20241129 00:00:05.203"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 00:00:05.204" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:57:48.432Z', 'updatedAt': '2024-11-28T06:57:48.432Z'}</msg>
<status status="PASS" starttime="20241129 00:00:05.204" endtime="20241129 00:00:05.204"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.205" endtime="20241129 00:00:05.205"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.205" endtime="20241129 00:00:05.205"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.205" endtime="20241129 00:00:05.205"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.204" endtime="20241129 00:00:05.206"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.208" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241129 00:00:05.207" endtime="20241129 00:00:05.208"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 00:00:05.208" endtime="20241129 00:00:05.208"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.208" endtime="20241129 00:00:05.209"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 00:00:05.209" endtime="20241129 00:00:05.209"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.209" endtime="20241129 00:00:05.209"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:05.228" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241129 00:00:05.221" endtime="20241129 00:00:05.229"/>
</kw>
<msg timestamp="20241129 00:00:05.229" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.220" endtime="20241129 00:00:05.229"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.229" endtime="20241129 00:00:05.229"/>
</return>
<status status="PASS" starttime="20241129 00:00:05.220" endtime="20241129 00:00:05.229"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.230" endtime="20241129 00:00:05.230"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.230" endtime="20241129 00:00:05.230"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.229" endtime="20241129 00:00:05.230"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.220" endtime="20241129 00:00:05.230"/>
</try>
<msg timestamp="20241129 00:00:05.231" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.220" endtime="20241129 00:00:05.231"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.231" endtime="20241129 00:00:05.231"/>
</return>
<status status="PASS" starttime="20241129 00:00:05.218" endtime="20241129 00:00:05.231"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241129 00:00:05.231" endtime="20241129 00:00:05.231"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.231" endtime="20241129 00:00:05.231"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.218" endtime="20241129 00:00:05.232"/>
</try>
<msg timestamp="20241129 00:00:05.232" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.218" endtime="20241129 00:00:05.232"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.235" endtime="20241129 00:00:05.235"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.235" endtime="20241129 00:00:05.235"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.235" endtime="20241129 00:00:05.235"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.234" endtime="20241129 00:00:05.235"/>
</if>
<status status="PASS" starttime="20241129 00:00:05.233" endtime="20241129 00:00:05.236"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.217" endtime="20241129 00:00:05.236"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:05.248" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241129 00:00:05.242" endtime="20241129 00:00:05.248"/>
</kw>
<msg timestamp="20241129 00:00:05.248" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.241" endtime="20241129 00:00:05.248"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.250" endtime="20241129 00:00:05.250"/>
</return>
<status status="PASS" starttime="20241129 00:00:05.241" endtime="20241129 00:00:05.250"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.250" endtime="20241129 00:00:05.250"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.251" endtime="20241129 00:00:05.251"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.250" endtime="20241129 00:00:05.251"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.241" endtime="20241129 00:00:05.251"/>
</try>
<msg timestamp="20241129 00:00:05.251" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.240" endtime="20241129 00:00:05.251"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.251" endtime="20241129 00:00:05.251"/>
</return>
<msg timestamp="20241129 00:00:05.252" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.239" endtime="20241129 00:00:05.252"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.254" endtime="20241129 00:00:05.254"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.254" endtime="20241129 00:00:05.254"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.254" endtime="20241129 00:00:05.254"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.253" endtime="20241129 00:00:05.254"/>
</if>
<status status="PASS" starttime="20241129 00:00:05.253" endtime="20241129 00:00:05.255"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.238" endtime="20241129 00:00:05.255"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 00:00:05.277" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241129 00:00:05.261" endtime="20241129 00:00:05.277"/>
</kw>
<msg timestamp="20241129 00:00:05.277" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.260" endtime="20241129 00:00:05.277"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.277" endtime="20241129 00:00:05.277"/>
</return>
<status status="PASS" starttime="20241129 00:00:05.260" endtime="20241129 00:00:05.278"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.278" endtime="20241129 00:00:05.278"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.278" endtime="20241129 00:00:05.278"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.278" endtime="20241129 00:00:05.278"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.260" endtime="20241129 00:00:05.278"/>
</try>
<msg timestamp="20241129 00:00:05.279" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.259" endtime="20241129 00:00:05.279"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 00:00:05.279" endtime="20241129 00:00:05.279"/>
</return>
<msg timestamp="20241129 00:00:05.279" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.258" endtime="20241129 00:00:05.279"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.282" endtime="20241129 00:00:05.283"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.283" endtime="20241129 00:00:05.284"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.282" endtime="20241129 00:00:05.284"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.282" endtime="20241129 00:00:05.284"/>
</if>
<status status="PASS" starttime="20241129 00:00:05.281" endtime="20241129 00:00:05.284"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.257" endtime="20241129 00:00:05.284"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.215" endtime="20241129 00:00:05.284"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 00:00:05.285" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241129 00:00:05.285" endtime="20241129 00:00:05.285"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.287" endtime="20241129 00:00:05.288"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.287" endtime="20241129 00:00:05.288"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241129 00:00:05.288" endtime="20241129 00:00:05.288"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.288" endtime="20241129 00:00:05.289"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.287" endtime="20241129 00:00:05.289"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241129 00:00:05.289" endtime="20241129 00:00:05.340"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.289" endtime="20241129 00:00:05.340"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.341" endtime="20241129 00:00:05.341"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.341" endtime="20241129 00:00:05.341"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.340" endtime="20241129 00:00:05.341"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.289" endtime="20241129 00:00:05.341"/>
</try>
<status status="PASS" starttime="20241129 00:00:05.286" endtime="20241129 00:00:05.342"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.286" endtime="20241129 00:00:05.342"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.285" endtime="20241129 00:00:05.342"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.342" endtime="20241129 00:00:05.342"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.342" endtime="20241129 00:00:05.342"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.285" endtime="20241129 00:00:05.342"/>
</try>
<status status="PASS" starttime="20241129 00:00:05.213" endtime="20241129 00:00:05.343"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.210" endtime="20241129 00:00:05.343"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.345" endtime="20241129 00:00:05.345"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.348" endtime="20241129 00:00:05.348"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.343" endtime="20241129 00:00:05.348"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.349" endtime="20241129 00:00:05.349"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.348" endtime="20241129 00:00:05.349"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.353" endtime="20241129 00:00:05.353"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.350" endtime="20241129 00:00:05.353"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.356" endtime="20241129 00:00:05.356"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.356" endtime="20241129 00:00:05.357"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.356" endtime="20241129 00:00:05.357"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.356" endtime="20241129 00:00:05.357"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.353" endtime="20241129 00:00:05.357"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.358" endtime="20241129 00:00:05.358"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.357" endtime="20241129 00:00:05.358"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.360" endtime="20241129 00:00:05.360"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.361" endtime="20241129 00:00:05.361"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.361" endtime="20241129 00:00:05.361"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.361" endtime="20241129 00:00:05.361"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.361" endtime="20241129 00:00:05.362"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.360" endtime="20241129 00:00:05.362"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.359" endtime="20241129 00:00:05.362"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 00:00:05.368" endtime="20241129 00:00:05.369"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.372" endtime="20241129 00:00:05.372"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.362" endtime="20241129 00:00:05.372"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.374" endtime="20241129 00:00:05.374"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.374" endtime="20241129 00:00:05.375"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.374" endtime="20241129 00:00:05.375"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.375" endtime="20241129 00:00:05.375"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.375" endtime="20241129 00:00:05.375"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.374" endtime="20241129 00:00:05.375"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.372" endtime="20241129 00:00:05.375"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 00:00:05.383" endtime="20241129 00:00:05.383"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.387" endtime="20241129 00:00:05.388"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.375" endtime="20241129 00:00:05.388"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.389" endtime="20241129 00:00:05.390"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.390" endtime="20241129 00:00:05.390"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.390" endtime="20241129 00:00:05.390"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.391" endtime="20241129 00:00:05.391"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.390" endtime="20241129 00:00:05.391"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.390" endtime="20241129 00:00:05.391"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.388" endtime="20241129 00:00:05.391"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.394" endtime="20241129 00:00:05.394"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.391" endtime="20241129 00:00:05.395"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 00:00:05.405" endtime="20241129 00:00:05.405"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.406" endtime="20241129 00:00:05.406"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.396" endtime="20241129 00:00:05.406"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.208" endtime="20241129 00:00:05.406"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:05.406" endtime="20241129 00:00:05.407"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241129 00:00:05.407" endtime="20241129 00:00:05.407"/>
</return>
<msg timestamp="20241129 00:00:05.407" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241129 00:00:05.206" endtime="20241129 00:00:05.407"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.409" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241129 00:00:05.409" endtime="20241129 00:00:05.409"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.411" endtime="20241129 00:00:05.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.412" endtime="20241129 00:00:05.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.412" endtime="20241129 00:00:05.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.413" endtime="20241129 00:00:05.413"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.413" endtime="20241129 00:00:05.413"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.413" endtime="20241129 00:00:05.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.414" endtime="20241129 00:00:05.414"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.414" endtime="20241129 00:00:05.414"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.416" endtime="20241129 00:00:05.416"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.418" endtime="20241129 00:00:05.418"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 00:00:05.418" endtime="20241129 00:00:05.419"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.418" endtime="20241129 00:00:05.419"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.418" endtime="20241129 00:00:05.419"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.419" endtime="20241129 00:00:05.419"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:05.419" endtime="20241129 00:00:05.419"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.419" endtime="20241129 00:00:05.420"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.419" endtime="20241129 00:00:05.420"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.420" endtime="20241129 00:00:05.421"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:05.421" endtime="20241129 00:00:05.421"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.420" endtime="20241129 00:00:05.421"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.420" endtime="20241129 00:00:05.421"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.418" endtime="20241129 00:00:05.421"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.418" endtime="20241129 00:00:05.421"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 00:00:05.421" endtime="20241129 00:00:05.421"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.421" endtime="20241129 00:00:05.421"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.421" endtime="20241129 00:00:05.421"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.422" endtime="20241129 00:00:05.422"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.422" endtime="20241129 00:00:05.422"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.421" endtime="20241129 00:00:05.423"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.423" endtime="20241129 00:00:05.423"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 00:00:05.423" endtime="20241129 00:00:05.423"/>
</return>
<status status="NOT RUN" starttime="20241129 00:00:05.423" endtime="20241129 00:00:05.423"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.423" endtime="20241129 00:00:05.423"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.421" endtime="20241129 00:00:05.423"/>
</branch>
<status status="NOT RUN" starttime="20241129 00:00:05.421" endtime="20241129 00:00:05.423"/>
</if>
<status status="NOT RUN" starttime="20241129 00:00:05.410" endtime="20241129 00:00:05.423"/>
</iter>
<status status="NOT RUN" starttime="20241129 00:00:05.410" endtime="20241129 00:00:05.423"/>
</for>
<msg timestamp="20241129 00:00:05.424" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241129 00:00:05.408" endtime="20241129 00:00:05.424"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:05.424" endtime="20241129 00:00:05.425"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 00:00:05.432" endtime="20241129 00:00:05.432"/>
</kw>
<msg timestamp="20241129 00:00:05.432" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.431" endtime="20241129 00:00:05.432"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.433" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@type="submit" and text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-28T06:57:46.898Z', 'updatedAt': '2024-11-28T14:47:44.548Z'}</msg>
<status status="PASS" starttime="20241129 00:00:05.433" endtime="20241129 00:00:05.433"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.434" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.434" endtime="20241129 00:00:05.434"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.434" endtime="20241129 00:00:05.435"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.435" endtime="20241129 00:00:05.435"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.435" endtime="20241129 00:00:05.435"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.433" endtime="20241129 00:00:05.435"/>
</if>
<status status="PASS" starttime="20241129 00:00:05.433" endtime="20241129 00:00:05.435"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.432" endtime="20241129 00:00:05.435"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 00:00:05.435" endtime="20241129 00:00:05.436"/>
</return>
<msg timestamp="20241129 00:00:05.436" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241129 00:00:05.430" endtime="20241129 00:00:05.436"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 00:00:05.437" level="INFO">${xpath} = //button[@type="submit" and text()="Login"]</msg>
<status status="PASS" starttime="20241129 00:00:05.437" endtime="20241129 00:00:05.437"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.436" endtime="20241129 00:00:05.437"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.438" endtime="20241129 00:00:05.438"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.437" endtime="20241129 00:00:05.438"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.436" endtime="20241129 00:00:05.438"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 00:00:05.439" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '36', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '', ...</msg>
<status status="PASS" starttime="20241129 00:00:05.438" endtime="20241129 00:00:05.439"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 00:00:05.441" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "36", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue": ...</msg>
<status status="PASS" starttime="20241129 00:00:05.440" endtime="20241129 00:00:05.441"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 00:00:05.451" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 00:00:05.451" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000258CBBDC430&gt;</msg>
<status status="PASS" starttime="20241129 00:00:05.441" endtime="20241129 00:00:05.451"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 00:00:05.452" endtime="20241129 00:00:05.453"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 00:00:05.453" endtime="20241129 00:00:05.453"/>
</return>
<status status="PASS" starttime="20241129 00:00:05.440" endtime="20241129 00:00:05.453"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.425" endtime="20241129 00:00:05.454"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 00:00:05.454" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241129 00:00:05.454" endtime="20241129 00:00:05.454"/>
</kw>
<status status="PASS" starttime="20241129 00:00:05.201" endtime="20241129 00:00:05.454"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.455" endtime="20241129 00:00:05.455"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241129 00:00:05.455" endtime="20241129 00:00:05.455"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 00:00:05.456" endtime="20241129 00:00:05.456"/>
</kw>
<status status="NOT RUN" starttime="20241129 00:00:05.455" endtime="20241129 00:00:05.456"/>
</branch>
<status status="PASS" starttime="20241129 00:00:05.201" endtime="20241129 00:00:05.456"/>
</try>
<status status="PASS" starttime="20241129 00:00:05.201" endtime="20241129 00:00:05.456"/>
</iter>
<status status="PASS" starttime="20241128 23:59:58.138" endtime="20241129 00:00:05.456"/>
</for>
<status status="PASS" starttime="20241128 23:59:58.138" endtime="20241129 00:00:05.456"/>
</branch>
<status status="PASS" starttime="20241128 23:59:58.138" endtime="20241129 00:00:05.457"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 00:00:05.460" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '9', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241129 00:00:05.458" endtime="20241129 00:00:05.460"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json