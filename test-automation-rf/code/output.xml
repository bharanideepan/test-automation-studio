<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241125 18:29:43.914" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="42">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:29:47.052" endtime="20241125 18:29:47.053"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241125 18:29:52.805" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '30', 'testCaseId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-25T12:59:52.215Z', 'createdAt': '2024-11-25T12:59:52.215Z', 'errorMes...</msg>
<status status="PASS" starttime="20241125 18:29:47.053" endtime="20241125 18:29:52.805"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241125 18:29:52.807" endtime="20241125 18:29:52.807"/>
</break>
<status status="NOT RUN" starttime="20241125 18:29:52.807" endtime="20241125 18:29:52.807"/>
</branch>
<status status="PASS" starttime="20241125 18:29:52.807" endtime="20241125 18:29:52.808"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241125 18:29:52.811" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\80e89204-388f-403b-a511-dd388813287e"}</msg>
<msg timestamp="20241125 18:29:53.914" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\80e89204-388f-403b-a511-dd388813287e"}</msg>
<status status="PASS" starttime="20241125 18:29:52.809" endtime="20241125 18:29:53.914"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241125 18:29:53.917" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241125 18:29:53.968" level="INFO">Successfully created context. </msg>
<msg timestamp="20241125 18:29:53.968" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241125 18:29:53.915" endtime="20241125 18:29:53.969"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241125 18:29:53.980" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241125 18:29:53.970" endtime="20241125 18:29:53.980"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241125 18:29:56.584" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241125 18:29:56.584" level="INFO">${page_id} = {'page_id': 'page=334aded4-2ebc-44df-920f-cdecef16a46c', 'video_path': ''}</msg>
<status status="PASS" starttime="20241125 18:29:53.981" endtime="20241125 18:29:56.584"/>
</kw>
<status status="PASS" starttime="20241125 18:29:52.808" endtime="20241125 18:29:56.585"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:29:56.587" endtime="20241125 18:29:56.603"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:29:56.610" endtime="20241125 18:29:56.611"/>
</kw>
<msg timestamp="20241125 18:29:56.611" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.609" endtime="20241125 18:29:56.611"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.621" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241125 18:29:56.620" endtime="20241125 18:29:56.622"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.625" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.624" endtime="20241125 18:29:56.625"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.623" endtime="20241125 18:29:56.625"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.627" endtime="20241125 18:29:56.627"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:29:56.627" endtime="20241125 18:29:56.627"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.622" endtime="20241125 18:29:56.628"/>
</if>
<status status="PASS" starttime="20241125 18:29:56.619" endtime="20241125 18:29:56.628"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.612" endtime="20241125 18:29:56.628"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:29:56.628" endtime="20241125 18:29:56.628"/>
</return>
<msg timestamp="20241125 18:29:56.629" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.607" endtime="20241125 18:29:56.629"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.630" endtime="20241125 18:29:56.630"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241125 18:29:56.630" endtime="20241125 18:29:56.631"/>
</return>
<status status="NOT RUN" starttime="20241125 18:29:56.629" endtime="20241125 18:29:56.631"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.629" endtime="20241125 18:29:56.631"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:29:56.637" endtime="20241125 18:29:56.637"/>
</kw>
<msg timestamp="20241125 18:29:56.639" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.637" endtime="20241125 18:29:56.639"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.643" level="INFO">${values} = {'id': '3', 'name': 'Enter vehicle', 'projectId': '1', 'createdAt': '2024-11-25T11:15:44.260Z', 'updatedAt': '2024-11-25T12:29:01.804Z', 'testCaseFlowSequences': [{'id': '5', 'testCaseId': '3', 'flowI...</msg>
<status status="PASS" starttime="20241125 18:29:56.641" endtime="20241125 18:29:56.643"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.644" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.644" endtime="20241125 18:29:56.645"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.643" endtime="20241125 18:29:56.645"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.645" endtime="20241125 18:29:56.645"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:29:56.645" endtime="20241125 18:29:56.645"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.643" endtime="20241125 18:29:56.645"/>
</if>
<status status="PASS" starttime="20241125 18:29:56.640" endtime="20241125 18:29:56.645"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.640" endtime="20241125 18:29:56.645"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:29:56.645" endtime="20241125 18:29:56.645"/>
</return>
<msg timestamp="20241125 18:29:56.647" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.636" endtime="20241125 18:29:56.647"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:29:56.652" endtime="20241125 18:29:56.652"/>
</kw>
<msg timestamp="20241125 18:29:56.652" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.651" endtime="20241125 18:29:56.652"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.654" level="INFO">${values} = {'id': '30', 'testCaseId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-25T12:59:52.215Z', 'createdAt': '2024-11-25T12:59:52.215Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241125 18:29:56.653" endtime="20241125 18:29:56.654"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.656" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.655" endtime="20241125 18:29:56.656"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.655" endtime="20241125 18:29:56.656"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.657" endtime="20241125 18:29:56.657"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:29:56.656" endtime="20241125 18:29:56.657"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.654" endtime="20241125 18:29:56.657"/>
</if>
<status status="PASS" starttime="20241125 18:29:56.653" endtime="20241125 18:29:56.658"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.653" endtime="20241125 18:29:56.658"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:29:56.658" endtime="20241125 18:29:56.658"/>
</return>
<msg timestamp="20241125 18:29:56.658" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.650" endtime="20241125 18:29:56.658"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.659" endtime="20241125 18:29:56.660"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:29:56.659" endtime="20241125 18:29:56.660"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.659" endtime="20241125 18:29:56.660"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.661" level="INFO">${testCase} = {'id': '3', 'name': 'Enter vehicle', 'projectId': '1', 'createdAt': '2024-11-25T11:15:44.260Z', 'updatedAt': '2024-11-25T12:29:01.804Z', 'testCaseFlowSequences': [{'id': '5', 'testCaseId': '3', 'flowI...</msg>
<status status="PASS" starttime="20241125 18:29:56.660" endtime="20241125 18:29:56.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.662" level="INFO">${testCaseRun} = {'id': '30', 'testCaseId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-25T12:59:52.215Z', 'createdAt': '2024-11-25T12:59:52.215Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241125 18:29:56.662" endtime="20241125 18:29:56.662"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.663" level="INFO">${assertions} = [{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'use...</msg>
<status status="PASS" starttime="20241125 18:29:56.662" endtime="20241125 18:29:56.663"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:29:56.663" endtime="20241125 18:29:56.664"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:29:56.669" endtime="20241125 18:29:56.670"/>
</kw>
<msg timestamp="20241125 18:29:56.671" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.669" endtime="20241125 18:29:56.671"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.675" level="INFO">${values} = [{'id': '5', 'testCaseId': '3', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T11:15:44.388Z', 'updatedAt': '2024-11-25T12:29:01.943Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241125 18:29:56.674" endtime="20241125 18:29:56.675"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.679" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.677" endtime="20241125 18:29:56.679"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.676" endtime="20241125 18:29:56.679"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.680" endtime="20241125 18:29:56.680"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:29:56.679" endtime="20241125 18:29:56.680"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.676" endtime="20241125 18:29:56.680"/>
</if>
<status status="PASS" starttime="20241125 18:29:56.672" endtime="20241125 18:29:56.681"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.672" endtime="20241125 18:29:56.681"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:29:56.681" endtime="20241125 18:29:56.681"/>
</return>
<msg timestamp="20241125 18:29:56.682" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.668" endtime="20241125 18:29:56.682"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:29:56.683" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '30', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241125 18:29:56.682" endtime="20241125 18:29:56.683"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:29:56.685" level="INFO">${json_response} = {"testCaseRunId": "30", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241125 18:29:56.685" endtime="20241125 18:29:56.685"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:29:56.692" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:29:56.693" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:29:56.686" endtime="20241125 18:29:56.693"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:29:56.693" endtime="20241125 18:29:56.694"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:29:56.694" endtime="20241125 18:29:56.695"/>
</return>
<status status="PASS" starttime="20241125 18:29:56.684" endtime="20241125 18:29:56.695"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:29:56.697" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241125 18:29:56.697" endtime="20241125 18:29:56.697"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '5', 'testCaseId': '3', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T11:15:44.388Z', 'updatedAt': '2024-11-25T12:29:01.943Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.699" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241125 18:29:56.699" endtime="20241125 18:29:56.700"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:29:56.700" endtime="20241125 18:29:56.701"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:29:56.709" endtime="20241125 18:29:56.711"/>
</kw>
<msg timestamp="20241125 18:29:56.711" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.708" endtime="20241125 18:29:56.711"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.712" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241125 18:29:56.712" endtime="20241125 18:29:56.712"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.713" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.713" endtime="20241125 18:29:56.713"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.713" endtime="20241125 18:29:56.713"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.714" endtime="20241125 18:29:56.714"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:29:56.714" endtime="20241125 18:29:56.714"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.712" endtime="20241125 18:29:56.714"/>
</if>
<status status="PASS" starttime="20241125 18:29:56.711" endtime="20241125 18:29:56.714"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.711" endtime="20241125 18:29:56.714"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:29:56.715" endtime="20241125 18:29:56.715"/>
</return>
<msg timestamp="20241125 18:29:56.715" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241125 18:29:56.706" endtime="20241125 18:29:56.715"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.717" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241125 18:29:56.716" endtime="20241125 18:29:56.717"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:29:56.717" endtime="20241125 18:29:56.718"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:29:56.719" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241125 18:29:56.718" endtime="20241125 18:29:56.719"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.720" endtime="20241125 18:29:56.720"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:29:56.721" endtime="20241125 18:29:56.722"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:29:56.719" endtime="20241125 18:29:56.722"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.719" endtime="20241125 18:29:56.722"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:29:56.727" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241125 18:29:56.724" endtime="20241125 18:29:56.727"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241125 18:29:59.986" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241125 18:29:59.987" level="INFO">${page_id} = {'page_id': 'page=cc278ce3-581c-44ba-9304-5b8226899283', 'video_path': ''}</msg>
<status status="PASS" starttime="20241125 18:29:56.730" endtime="20241125 18:29:59.987"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241125 18:29:59.989" level="INFO">Switching to page {'page_id': 'page=cc278ce3-581c-44ba-9304-5b8226899283', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241125 18:30:00.135" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=50264c6e-ed12-4ff7-8f12-8b80fa0a3f6f",
    "contexts": [
      {
        "type": "context",
        "id": "context=d03d72c9-2a47-4eb4-ab43-b5ea9ab1ed89",
        "activePage": "page=cc278ce3-581c-44ba-9304-5b8226899283",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=334aded4-2ebc-44df-920f-cdecef16a46c",
            "timestamp": 1732539594.421
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=cc278ce3-581c-44ba-9304-5b8226899283",
            "timestamp": 1732539596.821
          }
        ]
      }
    ],
    "activeContext": "context=d03d72c9-2a47-4eb4-ab43-b5ea9ab1ed89",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241125 18:30:00.145" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241125 18:29:59.988" endtime="20241125 18:30:00.146"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.728" endtime="20241125 18:30:00.147"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.728" endtime="20241125 18:30:00.148"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.149" endtime="20241125 18:30:00.149"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.148" endtime="20241125 18:30:00.149"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.154" endtime="20241125 18:30:00.155"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.149" endtime="20241125 18:30:00.155"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.159" endtime="20241125 18:30:00.159"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.162" endtime="20241125 18:30:00.163"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.155" endtime="20241125 18:30:00.163"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.166" endtime="20241125 18:30:00.166"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.163" endtime="20241125 18:30:00.167"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.178" endtime="20241125 18:30:00.179"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.167" endtime="20241125 18:30:00.179"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.187" endtime="20241125 18:30:00.187"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.188" endtime="20241125 18:30:00.188"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.191" endtime="20241125 18:30:00.192"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.189" endtime="20241125 18:30:00.192"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.189" endtime="20241125 18:30:00.193"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.193" endtime="20241125 18:30:00.193"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.179" endtime="20241125 18:30:00.193"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.195" endtime="20241125 18:30:00.197"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.194" endtime="20241125 18:30:00.197"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.200" endtime="20241125 18:30:00.200"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.201" endtime="20241125 18:30:00.202"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.201" endtime="20241125 18:30:00.202"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.203" endtime="20241125 18:30:00.203"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.202" endtime="20241125 18:30:00.203"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.201" endtime="20241125 18:30:00.203"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.197" endtime="20241125 18:30:00.204"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:00.219" endtime="20241125 18:30:00.220"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.231" endtime="20241125 18:30:00.231"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.204" endtime="20241125 18:30:00.232"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.235" endtime="20241125 18:30:00.237"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.238" endtime="20241125 18:30:00.238"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.237" endtime="20241125 18:30:00.238"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.239" endtime="20241125 18:30:00.239"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.238" endtime="20241125 18:30:00.239"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.237" endtime="20241125 18:30:00.239"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.232" endtime="20241125 18:30:00.239"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:00.250" endtime="20241125 18:30:00.250"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.257" endtime="20241125 18:30:00.257"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.239" endtime="20241125 18:30:00.257"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.260" endtime="20241125 18:30:00.260"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.262" endtime="20241125 18:30:00.263"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.261" endtime="20241125 18:30:00.263"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.263" endtime="20241125 18:30:00.264"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.263" endtime="20241125 18:30:00.264"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.261" endtime="20241125 18:30:00.264"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.257" endtime="20241125 18:30:00.264"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.272" endtime="20241125 18:30:00.272"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.264" endtime="20241125 18:30:00.273"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.284" endtime="20241125 18:30:00.285"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.285" endtime="20241125 18:30:00.285"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.273" endtime="20241125 18:30:00.287"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.727" endtime="20241125 18:30:00.287"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.288" endtime="20241125 18:30:00.289"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:00.291" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:00.290" endtime="20241125 18:30:00.291"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:00.292" endtime="20241125 18:30:00.292"/>
</return>
<msg timestamp="20241125 18:30:00.293" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241125 18:29:56.723" endtime="20241125 18:30:00.293"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.298" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241125 18:30:00.296" endtime="20241125 18:30:00.298"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.307" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:00.304" endtime="20241125 18:30:00.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.309" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:00.308" endtime="20241125 18:30:00.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.310" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.309" endtime="20241125 18:30:00.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.312" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:00.311" endtime="20241125 18:30:00.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.314" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.313" endtime="20241125 18:30:00.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.315" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:00.314" endtime="20241125 18:30:00.315"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.317" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:00.316" endtime="20241125 18:30:00.317"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:00.318" endtime="20241125 18:30:00.319"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:00.328" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:00.325" endtime="20241125 18:30:00.328"/>
</kw>
<msg timestamp="20241125 18:30:00.328" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.325" endtime="20241125 18:30:00.328"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.330" endtime="20241125 18:30:00.330"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.330" endtime="20241125 18:30:00.331"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.330" endtime="20241125 18:30:00.331"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.331" endtime="20241125 18:30:00.332"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.331" endtime="20241125 18:30:00.332"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.330" endtime="20241125 18:30:00.332"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.329" endtime="20241125 18:30:00.332"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.329" endtime="20241125 18:30:00.333"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:00.333" endtime="20241125 18:30:00.333"/>
</return>
<msg timestamp="20241125 18:30:00.337" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.323" endtime="20241125 18:30:00.337"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:00.348" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:00.346" endtime="20241125 18:30:00.348"/>
</kw>
<msg timestamp="20241125 18:30:00.348" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.345" endtime="20241125 18:30:00.348"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.349" endtime="20241125 18:30:00.349"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.349" endtime="20241125 18:30:00.350"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.349" endtime="20241125 18:30:00.350"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.351" endtime="20241125 18:30:00.352"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.350" endtime="20241125 18:30:00.352"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.349" endtime="20241125 18:30:00.352"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.348" endtime="20241125 18:30:00.352"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.348" endtime="20241125 18:30:00.353"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:00.353" endtime="20241125 18:30:00.353"/>
</return>
<msg timestamp="20241125 18:30:00.354" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.343" endtime="20241125 18:30:00.354"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:00.355" endtime="20241125 18:30:00.355"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.355" endtime="20241125 18:30:00.355"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.355" endtime="20241125 18:30:00.355"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.357" endtime="20241125 18:30:00.357"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:00.357" endtime="20241125 18:30:00.358"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.357" endtime="20241125 18:30:00.358"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.358" endtime="20241125 18:30:00.358"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:00.358" endtime="20241125 18:30:00.358"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.358" endtime="20241125 18:30:00.359"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.357" endtime="20241125 18:30:00.359"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.357" endtime="20241125 18:30:00.359"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.357" endtime="20241125 18:30:00.359"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.360" endtime="20241125 18:30:00.360"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:00.360" endtime="20241125 18:30:00.360"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.359" endtime="20241125 18:30:00.360"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.361" endtime="20241125 18:30:00.361"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:00.361" endtime="20241125 18:30:00.361"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.360" endtime="20241125 18:30:00.361"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.359" endtime="20241125 18:30:00.361"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.359" endtime="20241125 18:30:00.362"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.359" endtime="20241125 18:30:00.362"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.355" endtime="20241125 18:30:00.362"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.354" endtime="20241125 18:30:00.362"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:00.364" endtime="20241125 18:30:00.364"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.363" endtime="20241125 18:30:00.364"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.363" endtime="20241125 18:30:00.364"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.365" endtime="20241125 18:30:00.365"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.364" endtime="20241125 18:30:00.365"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.364" endtime="20241125 18:30:00.365"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.366" endtime="20241125 18:30:00.366"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:00.366" endtime="20241125 18:30:00.366"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.365" endtime="20241125 18:30:00.367"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.367" endtime="20241125 18:30:00.369"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:00.369" endtime="20241125 18:30:00.369"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.367" endtime="20241125 18:30:00.369"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.365" endtime="20241125 18:30:00.369"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.365" endtime="20241125 18:30:00.369"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.365" endtime="20241125 18:30:00.370"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.363" endtime="20241125 18:30:00.370"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.362" endtime="20241125 18:30:00.370"/>
</if>
<status status="PASS" starttime="20241125 18:30:00.299" endtime="20241125 18:30:00.370"/>
</iter>
<status status="PASS" starttime="20241125 18:30:00.299" endtime="20241125 18:30:00.370"/>
</for>
<msg timestamp="20241125 18:30:00.371" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:00.294" endtime="20241125 18:30:00.371"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.371" endtime="20241125 18:30:00.372"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:00.382" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241125 18:30:00.380" endtime="20241125 18:30:00.382"/>
</kw>
<msg timestamp="20241125 18:30:00.383" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.380" endtime="20241125 18:30:00.383"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.397" endtime="20241125 18:30:00.399"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.403" endtime="20241125 18:30:00.404"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.400" endtime="20241125 18:30:00.405"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.406" endtime="20241125 18:30:00.409"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.405" endtime="20241125 18:30:00.409"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.400" endtime="20241125 18:30:00.409"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.394" endtime="20241125 18:30:00.409"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.383" endtime="20241125 18:30:00.410"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:00.410" endtime="20241125 18:30:00.410"/>
</return>
<msg timestamp="20241125 18:30:00.411" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.378" endtime="20241125 18:30:00.411"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.412" endtime="20241125 18:30:00.412"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.411" endtime="20241125 18:30:00.412"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.413" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241125 18:30:00.412" endtime="20241125 18:30:00.413"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.412" endtime="20241125 18:30:00.413"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.411" endtime="20241125 18:30:00.413"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:00.415" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '318', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241125 18:30:00.414" endtime="20241125 18:30:00.415"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:00.420" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "318", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241125 18:30:00.419" endtime="20241125 18:30:00.421"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:00.430" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:00.430" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:00.421" endtime="20241125 18:30:00.430"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.431" endtime="20241125 18:30:00.432"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:00.433" endtime="20241125 18:30:00.433"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.416" endtime="20241125 18:30:00.433"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.372" endtime="20241125 18:30:00.434"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.716" endtime="20241125 18:30:00.435"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.435" endtime="20241125 18:30:00.436"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.436" endtime="20241125 18:30:00.436"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.438" endtime="20241125 18:30:00.438"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.435" endtime="20241125 18:30:00.438"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.716" endtime="20241125 18:30:00.439"/>
</try>
<status status="PASS" starttime="20241125 18:29:56.716" endtime="20241125 18:30:00.439"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.442" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241125 18:30:00.441" endtime="20241125 18:30:00.442"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.443" endtime="20241125 18:30:00.444"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:00.445" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241125 18:30:00.444" endtime="20241125 18:30:00.445"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.446" endtime="20241125 18:30:00.446"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.447" endtime="20241125 18:30:00.447"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.445" endtime="20241125 18:30:00.447"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.445" endtime="20241125 18:30:00.447"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.449" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241125 18:30:00.448" endtime="20241125 18:30:00.449"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.452" endtime="20241125 18:30:00.453"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.451" endtime="20241125 18:30:00.454"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.455" endtime="20241125 18:30:00.455"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.454" endtime="20241125 18:30:00.455"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.462" endtime="20241125 18:30:00.462"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.457" endtime="20241125 18:30:00.463"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.469" endtime="20241125 18:30:00.469"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.477" endtime="20241125 18:30:00.477"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.463" endtime="20241125 18:30:00.477"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.481" endtime="20241125 18:30:00.481"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.479" endtime="20241125 18:30:00.481"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.487" endtime="20241125 18:30:00.488"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.481" endtime="20241125 18:30:00.488"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:00.547" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241125 18:30:00.505" endtime="20241125 18:30:00.547"/>
</kw>
<msg timestamp="20241125 18:30:00.547" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.504" endtime="20241125 18:30:00.547"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:00.548" endtime="20241125 18:30:00.548"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.504" endtime="20241125 18:30:00.548"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.548" endtime="20241125 18:30:00.549"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.549" endtime="20241125 18:30:00.549"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.548" endtime="20241125 18:30:00.549"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.503" endtime="20241125 18:30:00.549"/>
</try>
<msg timestamp="20241125 18:30:00.550" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.502" endtime="20241125 18:30:00.550"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:00.550" endtime="20241125 18:30:00.550"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.500" endtime="20241125 18:30:00.550"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:00.550" endtime="20241125 18:30:00.551"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.550" endtime="20241125 18:30:00.551"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.500" endtime="20241125 18:30:00.551"/>
</try>
<msg timestamp="20241125 18:30:00.551" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.499" endtime="20241125 18:30:00.551"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.555" endtime="20241125 18:30:00.555"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.556" endtime="20241125 18:30:00.556"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.555" endtime="20241125 18:30:00.556"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.555" endtime="20241125 18:30:00.556"/>
</if>
<status status="PASS" starttime="20241125 18:30:00.553" endtime="20241125 18:30:00.556"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.498" endtime="20241125 18:30:00.557"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:00.585" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241125 18:30:00.570" endtime="20241125 18:30:00.585"/>
</kw>
<msg timestamp="20241125 18:30:00.585" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.569" endtime="20241125 18:30:00.585"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:00.585" endtime="20241125 18:30:00.585"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.569" endtime="20241125 18:30:00.586"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.586" endtime="20241125 18:30:00.587"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.587" endtime="20241125 18:30:00.587"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.586" endtime="20241125 18:30:00.588"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.569" endtime="20241125 18:30:00.588"/>
</try>
<msg timestamp="20241125 18:30:00.589" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.568" endtime="20241125 18:30:00.589"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:00.589" endtime="20241125 18:30:00.589"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.567" endtime="20241125 18:30:00.589"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:00.589" endtime="20241125 18:30:00.590"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.589" endtime="20241125 18:30:00.590"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.567" endtime="20241125 18:30:00.590"/>
</try>
<msg timestamp="20241125 18:30:00.590" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.565" endtime="20241125 18:30:00.590"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.595" endtime="20241125 18:30:00.595"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.596" endtime="20241125 18:30:00.596"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.595" endtime="20241125 18:30:00.596"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.595" endtime="20241125 18:30:00.596"/>
</if>
<status status="PASS" starttime="20241125 18:30:00.592" endtime="20241125 18:30:00.597"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.565" endtime="20241125 18:30:00.597"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 18:30:00.634" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241125 18:30:00.634" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241125 18:30:00.598" endtime="20241125 18:30:00.635"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 18:30:00.635" endtime="20241125 18:30:00.635"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.598" endtime="20241125 18:30:00.635"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.635" endtime="20241125 18:30:00.635"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.635" endtime="20241125 18:30:00.637"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.635" endtime="20241125 18:30:00.637"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.597" endtime="20241125 18:30:00.637"/>
</try>
<msg timestamp="20241125 18:30:00.637" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241125 18:30:00.561" endtime="20241125 18:30:00.637"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.641" endtime="20241125 18:30:00.641"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.642" endtime="20241125 18:30:00.642"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.641" endtime="20241125 18:30:00.642"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.641" endtime="20241125 18:30:00.642"/>
</if>
<status status="PASS" starttime="20241125 18:30:00.639" endtime="20241125 18:30:00.642"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.560" endtime="20241125 18:30:00.642"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.643" endtime="20241125 18:30:00.643"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.643" endtime="20241125 18:30:00.643"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.559" endtime="20241125 18:30:00.643"/>
</try>
<status status="PASS" starttime="20241125 18:30:00.559" endtime="20241125 18:30:00.644"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:00.661" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241125 18:30:00.651" endtime="20241125 18:30:00.661"/>
</kw>
<msg timestamp="20241125 18:30:00.661" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.650" endtime="20241125 18:30:00.661"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:00.662" endtime="20241125 18:30:00.662"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.650" endtime="20241125 18:30:00.662"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.662" endtime="20241125 18:30:00.663"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.663" endtime="20241125 18:30:00.663"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.662" endtime="20241125 18:30:00.663"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.650" endtime="20241125 18:30:00.663"/>
</try>
<msg timestamp="20241125 18:30:00.664" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.649" endtime="20241125 18:30:00.664"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:00.664" endtime="20241125 18:30:00.664"/>
</return>
<msg timestamp="20241125 18:30:00.664" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.647" endtime="20241125 18:30:00.664"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.669" endtime="20241125 18:30:00.669"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.669" endtime="20241125 18:30:00.670"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.669" endtime="20241125 18:30:00.670"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.668" endtime="20241125 18:30:00.670"/>
</if>
<status status="PASS" starttime="20241125 18:30:00.667" endtime="20241125 18:30:00.670"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.646" endtime="20241125 18:30:00.670"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.494" endtime="20241125 18:30:00.671"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:00.706" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241125 18:30:00.678" endtime="20241125 18:30:00.706"/>
</kw>
<msg timestamp="20241125 18:30:00.707" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.677" endtime="20241125 18:30:00.707"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:00.707" endtime="20241125 18:30:00.707"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.677" endtime="20241125 18:30:00.707"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.707" endtime="20241125 18:30:00.707"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.707" endtime="20241125 18:30:00.707"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.707" endtime="20241125 18:30:00.707"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.677" endtime="20241125 18:30:00.708"/>
</try>
<msg timestamp="20241125 18:30:00.708" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.676" endtime="20241125 18:30:00.708"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:00.708" endtime="20241125 18:30:00.708"/>
</return>
<msg timestamp="20241125 18:30:00.708" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.675" endtime="20241125 18:30:00.708"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.711" endtime="20241125 18:30:00.711"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.711" endtime="20241125 18:30:00.712"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.711" endtime="20241125 18:30:00.712"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.711" endtime="20241125 18:30:00.712"/>
</if>
<status status="PASS" starttime="20241125 18:30:00.710" endtime="20241125 18:30:00.712"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.674" endtime="20241125 18:30:00.712"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:00.713" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:00.712" endtime="20241125 18:30:00.713"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.715" endtime="20241125 18:30:00.715"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.718" endtime="20241125 18:30:00.718"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.715" endtime="20241125 18:30:00.718"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:00.719" endtime="20241125 18:30:00.719"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.719" endtime="20241125 18:30:00.719"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.714" endtime="20241125 18:30:00.719"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241125 18:30:00.720" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241125 18:30:00.720" endtime="20241125 18:30:00.771"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.720" endtime="20241125 18:30:00.771"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.772" endtime="20241125 18:30:00.772"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.772" endtime="20241125 18:30:00.772"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.771" endtime="20241125 18:30:00.772"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.720" endtime="20241125 18:30:00.772"/>
</try>
<status status="PASS" starttime="20241125 18:30:00.714" endtime="20241125 18:30:00.773"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.713" endtime="20241125 18:30:00.773"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.713" endtime="20241125 18:30:00.773"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.773" endtime="20241125 18:30:00.774"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.773" endtime="20241125 18:30:00.774"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.713" endtime="20241125 18:30:00.774"/>
</try>
<status status="PASS" starttime="20241125 18:30:00.492" endtime="20241125 18:30:00.774"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.774" endtime="20241125 18:30:00.775"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.775" endtime="20241125 18:30:00.775"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.775" endtime="20241125 18:30:00.777"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.775" endtime="20241125 18:30:00.777"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.777" endtime="20241125 18:30:00.778"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.489" endtime="20241125 18:30:00.778"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.781" endtime="20241125 18:30:00.781"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.778" endtime="20241125 18:30:00.781"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.785" endtime="20241125 18:30:00.785"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.786" endtime="20241125 18:30:00.786"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.785" endtime="20241125 18:30:00.786"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.787" endtime="20241125 18:30:00.787"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.787" endtime="20241125 18:30:00.789"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.785" endtime="20241125 18:30:00.789"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.782" endtime="20241125 18:30:00.789"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:00.802" endtime="20241125 18:30:00.802"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.809" endtime="20241125 18:30:00.809"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.789" endtime="20241125 18:30:00.809"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.811" endtime="20241125 18:30:00.811"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.812" endtime="20241125 18:30:00.812"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.811" endtime="20241125 18:30:00.812"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.812" endtime="20241125 18:30:00.813"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.812" endtime="20241125 18:30:00.813"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.811" endtime="20241125 18:30:00.813"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.809" endtime="20241125 18:30:00.813"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:00.823" endtime="20241125 18:30:00.823"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.828" endtime="20241125 18:30:00.828"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.813" endtime="20241125 18:30:00.828"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.830" endtime="20241125 18:30:00.830"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.831" endtime="20241125 18:30:00.831"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.830" endtime="20241125 18:30:00.831"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.831" endtime="20241125 18:30:00.831"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.831" endtime="20241125 18:30:00.831"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.830" endtime="20241125 18:30:00.832"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.828" endtime="20241125 18:30:00.832"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.836" endtime="20241125 18:30:00.837"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.832" endtime="20241125 18:30:00.837"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.846" endtime="20241125 18:30:00.846"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.847" endtime="20241125 18:30:00.847"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.837" endtime="20241125 18:30:00.847"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.449" endtime="20241125 18:30:00.847"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.847" endtime="20241125 18:30:00.849"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:00.850" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:00.849" endtime="20241125 18:30:00.850"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:00.850" endtime="20241125 18:30:00.850"/>
</return>
<msg timestamp="20241125 18:30:00.851" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241125 18:30:00.447" endtime="20241125 18:30:00.851"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.853" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241125 18:30:00.853" endtime="20241125 18:30:00.853"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.854" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:00.854" endtime="20241125 18:30:00.855"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.855" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:00.855" endtime="20241125 18:30:00.855"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.856" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.855" endtime="20241125 18:30:00.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.857" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:00.857" endtime="20241125 18:30:00.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.858" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.858" endtime="20241125 18:30:00.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.859" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:00.859" endtime="20241125 18:30:00.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.860" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:00.860" endtime="20241125 18:30:00.860"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:00.861" endtime="20241125 18:30:00.861"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:00.867" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:00.865" endtime="20241125 18:30:00.868"/>
</kw>
<msg timestamp="20241125 18:30:00.868" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.865" endtime="20241125 18:30:00.868"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.869" endtime="20241125 18:30:00.869"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.870" endtime="20241125 18:30:00.870"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.869" endtime="20241125 18:30:00.870"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.870" endtime="20241125 18:30:00.871"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.870" endtime="20241125 18:30:00.871"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.869" endtime="20241125 18:30:00.872"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.869" endtime="20241125 18:30:00.872"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.868" endtime="20241125 18:30:00.872"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:00.872" endtime="20241125 18:30:00.872"/>
</return>
<msg timestamp="20241125 18:30:00.873" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.864" endtime="20241125 18:30:00.873"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:00.878" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:00.877" endtime="20241125 18:30:00.878"/>
</kw>
<msg timestamp="20241125 18:30:00.878" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.877" endtime="20241125 18:30:00.878"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.879" endtime="20241125 18:30:00.879"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.880" endtime="20241125 18:30:00.880"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.879" endtime="20241125 18:30:00.880"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.880" endtime="20241125 18:30:00.881"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.880" endtime="20241125 18:30:00.881"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.879" endtime="20241125 18:30:00.881"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.879" endtime="20241125 18:30:00.881"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.878" endtime="20241125 18:30:00.881"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:00.881" endtime="20241125 18:30:00.881"/>
</return>
<msg timestamp="20241125 18:30:00.882" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:00.875" endtime="20241125 18:30:00.882"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:00.883" endtime="20241125 18:30:00.883"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.883" endtime="20241125 18:30:00.883"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.883" endtime="20241125 18:30:00.883"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.885" endtime="20241125 18:30:00.885"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:00.885" endtime="20241125 18:30:00.885"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.884" endtime="20241125 18:30:00.885"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.886" endtime="20241125 18:30:00.886"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:00.886" endtime="20241125 18:30:00.886"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.885" endtime="20241125 18:30:00.886"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.884" endtime="20241125 18:30:00.887"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.884" endtime="20241125 18:30:00.887"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.883" endtime="20241125 18:30:00.887"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.888" endtime="20241125 18:30:00.888"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:00.888" endtime="20241125 18:30:00.888"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.887" endtime="20241125 18:30:00.888"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.889" endtime="20241125 18:30:00.889"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:00.889" endtime="20241125 18:30:00.889"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.888" endtime="20241125 18:30:00.889"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.887" endtime="20241125 18:30:00.889"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.887" endtime="20241125 18:30:00.889"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.887" endtime="20241125 18:30:00.890"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.882" endtime="20241125 18:30:00.890"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.882" endtime="20241125 18:30:00.890"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:00.891" endtime="20241125 18:30:00.891"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.891" endtime="20241125 18:30:00.891"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.891" endtime="20241125 18:30:00.891"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.892" endtime="20241125 18:30:00.892"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.891" endtime="20241125 18:30:00.892"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.891" endtime="20241125 18:30:00.892"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.893" endtime="20241125 18:30:00.893"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:00.893" endtime="20241125 18:30:00.893"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.893" endtime="20241125 18:30:00.894"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.894" endtime="20241125 18:30:00.894"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:00.894" endtime="20241125 18:30:00.894"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:00.894" endtime="20241125 18:30:00.895"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.893" endtime="20241125 18:30:00.895"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.892" endtime="20241125 18:30:00.895"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:00.892" endtime="20241125 18:30:00.895"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:00.890" endtime="20241125 18:30:00.895"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.890" endtime="20241125 18:30:00.895"/>
</if>
<status status="PASS" starttime="20241125 18:30:00.854" endtime="20241125 18:30:00.895"/>
</iter>
<status status="PASS" starttime="20241125 18:30:00.853" endtime="20241125 18:30:00.895"/>
</for>
<msg timestamp="20241125 18:30:00.896" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:00.851" endtime="20241125 18:30:00.896"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.897" endtime="20241125 18:30:00.897"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:00.905" endtime="20241125 18:30:00.905"/>
</kw>
<msg timestamp="20241125 18:30:00.905" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.904" endtime="20241125 18:30:00.905"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.907" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241125 18:30:00.906" endtime="20241125 18:30:00.907"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.909" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.909" endtime="20241125 18:30:00.909"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.907" endtime="20241125 18:30:00.910"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.910" endtime="20241125 18:30:00.910"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.910" endtime="20241125 18:30:00.910"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.907" endtime="20241125 18:30:00.910"/>
</if>
<status status="PASS" starttime="20241125 18:30:00.905" endtime="20241125 18:30:00.911"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.905" endtime="20241125 18:30:00.911"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:00.911" endtime="20241125 18:30:00.911"/>
</return>
<msg timestamp="20241125 18:30:00.911" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.903" endtime="20241125 18:30:00.911"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.912" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241125 18:30:00.912" endtime="20241125 18:30:00.912"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.912" endtime="20241125 18:30:00.912"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.912" endtime="20241125 18:30:00.913"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.912" endtime="20241125 18:30:00.913"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.912" endtime="20241125 18:30:00.913"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:00.915" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '319', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241125 18:30:00.913" endtime="20241125 18:30:00.915"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:00.918" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "319", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241125 18:30:00.916" endtime="20241125 18:30:00.918"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:00.928" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:00.928" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:00.919" endtime="20241125 18:30:00.928"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.929" endtime="20241125 18:30:00.930"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:00.930" endtime="20241125 18:30:00.930"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.915" endtime="20241125 18:30:00.931"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.898" endtime="20241125 18:30:00.932"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.440" endtime="20241125 18:30:00.932"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.932" endtime="20241125 18:30:00.932"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.933" endtime="20241125 18:30:00.933"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.933" endtime="20241125 18:30:00.933"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.932" endtime="20241125 18:30:00.934"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.440" endtime="20241125 18:30:00.934"/>
</try>
<status status="PASS" starttime="20241125 18:30:00.440" endtime="20241125 18:30:00.934"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.937" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241125 18:30:00.936" endtime="20241125 18:30:00.937"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:00.938" endtime="20241125 18:30:00.940"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:00.942" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241125 18:30:00.941" endtime="20241125 18:30:00.942"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.943" endtime="20241125 18:30:00.943"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.944" endtime="20241125 18:30:00.944"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.943" endtime="20241125 18:30:00.944"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.942" endtime="20241125 18:30:00.944"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:00.947" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241125 18:30:00.945" endtime="20241125 18:30:00.947"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.948" endtime="20241125 18:30:00.948"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.947" endtime="20241125 18:30:00.948"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:00.949" endtime="20241125 18:30:00.949"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.948" endtime="20241125 18:30:00.949"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.954" endtime="20241125 18:30:00.955"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.949" endtime="20241125 18:30:00.955"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.959" endtime="20241125 18:30:00.960"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.963" endtime="20241125 18:30:00.963"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.956" endtime="20241125 18:30:00.963"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.965" endtime="20241125 18:30:00.965"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.963" endtime="20241125 18:30:00.965"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:00.975" endtime="20241125 18:30:00.976"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:00.965" endtime="20241125 18:30:00.976"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:01.005" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241125 18:30:00.995" endtime="20241125 18:30:01.006"/>
</kw>
<msg timestamp="20241125 18:30:01.006" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.994" endtime="20241125 18:30:01.006"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.006" endtime="20241125 18:30:01.006"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.994" endtime="20241125 18:30:01.006"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.007" endtime="20241125 18:30:01.007"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.007" endtime="20241125 18:30:01.008"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.007" endtime="20241125 18:30:01.008"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.993" endtime="20241125 18:30:01.008"/>
</try>
<msg timestamp="20241125 18:30:01.008" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.993" endtime="20241125 18:30:01.008"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.010" endtime="20241125 18:30:01.010"/>
</return>
<status status="PASS" starttime="20241125 18:30:00.991" endtime="20241125 18:30:01.010"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:01.010" endtime="20241125 18:30:01.010"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.010" endtime="20241125 18:30:01.010"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.991" endtime="20241125 18:30:01.010"/>
</try>
<msg timestamp="20241125 18:30:01.010" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:00.990" endtime="20241125 18:30:01.010"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.014" endtime="20241125 18:30:01.014"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.015" endtime="20241125 18:30:01.015"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.014" endtime="20241125 18:30:01.015"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.014" endtime="20241125 18:30:01.015"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.012" endtime="20241125 18:30:01.015"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.988" endtime="20241125 18:30:01.016"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:01.034" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241125 18:30:01.028" endtime="20241125 18:30:01.034"/>
</kw>
<msg timestamp="20241125 18:30:01.034" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.028" endtime="20241125 18:30:01.034"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.034" endtime="20241125 18:30:01.034"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.027" endtime="20241125 18:30:01.034"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.035" endtime="20241125 18:30:01.035"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.035" endtime="20241125 18:30:01.035"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.034" endtime="20241125 18:30:01.035"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.027" endtime="20241125 18:30:01.035"/>
</try>
<msg timestamp="20241125 18:30:01.035" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.027" endtime="20241125 18:30:01.035"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.036" endtime="20241125 18:30:01.036"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.026" endtime="20241125 18:30:01.036"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:01.036" endtime="20241125 18:30:01.036"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.036" endtime="20241125 18:30:01.037"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.026" endtime="20241125 18:30:01.037"/>
</try>
<msg timestamp="20241125 18:30:01.037" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.025" endtime="20241125 18:30:01.037"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.039" endtime="20241125 18:30:01.040"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.040" endtime="20241125 18:30:01.040"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.039" endtime="20241125 18:30:01.040"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.039" endtime="20241125 18:30:01.040"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.038" endtime="20241125 18:30:01.040"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.025" endtime="20241125 18:30:01.040"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 18:30:01.052" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241125 18:30:01.052" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241125 18:30:01.041" endtime="20241125 18:30:01.052"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 18:30:01.053" endtime="20241125 18:30:01.053"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.040" endtime="20241125 18:30:01.053"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.053" endtime="20241125 18:30:01.053"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.053" endtime="20241125 18:30:01.054"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.053" endtime="20241125 18:30:01.054"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.040" endtime="20241125 18:30:01.054"/>
</try>
<msg timestamp="20241125 18:30:01.054" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241125 18:30:01.023" endtime="20241125 18:30:01.054"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.056" endtime="20241125 18:30:01.056"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.056" endtime="20241125 18:30:01.056"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.056" endtime="20241125 18:30:01.056"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.056" endtime="20241125 18:30:01.057"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.055" endtime="20241125 18:30:01.057"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.021" endtime="20241125 18:30:01.057"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.057" endtime="20241125 18:30:01.057"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.057" endtime="20241125 18:30:01.057"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.021" endtime="20241125 18:30:01.057"/>
</try>
<status status="PASS" starttime="20241125 18:30:01.020" endtime="20241125 18:30:01.057"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:01.071" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241125 18:30:01.062" endtime="20241125 18:30:01.071"/>
</kw>
<msg timestamp="20241125 18:30:01.071" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.062" endtime="20241125 18:30:01.071"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.072" endtime="20241125 18:30:01.072"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.062" endtime="20241125 18:30:01.072"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.072" endtime="20241125 18:30:01.072"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.072" endtime="20241125 18:30:01.072"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.072" endtime="20241125 18:30:01.073"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.062" endtime="20241125 18:30:01.073"/>
</try>
<msg timestamp="20241125 18:30:01.073" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.061" endtime="20241125 18:30:01.073"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.073" endtime="20241125 18:30:01.073"/>
</return>
<msg timestamp="20241125 18:30:01.073" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.060" endtime="20241125 18:30:01.073"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.076" endtime="20241125 18:30:01.076"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.076" endtime="20241125 18:30:01.076"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.076" endtime="20241125 18:30:01.076"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.076" endtime="20241125 18:30:01.076"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.075" endtime="20241125 18:30:01.076"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.059" endtime="20241125 18:30:01.078"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.983" endtime="20241125 18:30:01.078"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:01.097" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241125 18:30:01.082" endtime="20241125 18:30:01.097"/>
</kw>
<msg timestamp="20241125 18:30:01.097" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.082" endtime="20241125 18:30:01.097"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.097" endtime="20241125 18:30:01.097"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.082" endtime="20241125 18:30:01.098"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.098" endtime="20241125 18:30:01.098"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.098" endtime="20241125 18:30:01.098"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.098" endtime="20241125 18:30:01.098"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.082" endtime="20241125 18:30:01.098"/>
</try>
<msg timestamp="20241125 18:30:01.099" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.081" endtime="20241125 18:30:01.099"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.099" endtime="20241125 18:30:01.099"/>
</return>
<msg timestamp="20241125 18:30:01.099" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.080" endtime="20241125 18:30:01.099"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.102" endtime="20241125 18:30:01.102"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.103" endtime="20241125 18:30:01.103"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.102" endtime="20241125 18:30:01.103"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.102" endtime="20241125 18:30:01.103"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.101" endtime="20241125 18:30:01.103"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.080" endtime="20241125 18:30:01.103"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:01.104" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:01.103" endtime="20241125 18:30:01.104"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.106" endtime="20241125 18:30:01.106"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.109" endtime="20241125 18:30:01.109"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.106" endtime="20241125 18:30:01.109"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:01.109" endtime="20241125 18:30:01.110"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.109" endtime="20241125 18:30:01.110"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.105" endtime="20241125 18:30:01.110"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241125 18:30:01.111" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241125 18:30:01.110" endtime="20241125 18:30:01.141"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.110" endtime="20241125 18:30:01.141"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.141" endtime="20241125 18:30:01.141"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.142" endtime="20241125 18:30:01.142"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.141" endtime="20241125 18:30:01.142"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.110" endtime="20241125 18:30:01.142"/>
</try>
<status status="PASS" starttime="20241125 18:30:01.105" endtime="20241125 18:30:01.142"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.104" endtime="20241125 18:30:01.142"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.104" endtime="20241125 18:30:01.143"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.143" endtime="20241125 18:30:01.143"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.143" endtime="20241125 18:30:01.143"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.104" endtime="20241125 18:30:01.143"/>
</try>
<status status="PASS" starttime="20241125 18:30:00.982" endtime="20241125 18:30:01.143"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.144" endtime="20241125 18:30:01.144"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.145" endtime="20241125 18:30:01.145"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.145" endtime="20241125 18:30:01.145"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.144" endtime="20241125 18:30:01.145"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.145" endtime="20241125 18:30:01.146"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.978" endtime="20241125 18:30:01.146"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.147" endtime="20241125 18:30:01.147"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.146" endtime="20241125 18:30:01.147"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.149" endtime="20241125 18:30:01.149"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.149" endtime="20241125 18:30:01.149"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.149" endtime="20241125 18:30:01.150"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.150" endtime="20241125 18:30:01.150"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.150" endtime="20241125 18:30:01.150"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.149" endtime="20241125 18:30:01.151"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.147" endtime="20241125 18:30:01.151"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:01.160" endtime="20241125 18:30:01.160"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.163" endtime="20241125 18:30:01.163"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.151" endtime="20241125 18:30:01.163"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.165" endtime="20241125 18:30:01.165"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.166" endtime="20241125 18:30:01.166"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.165" endtime="20241125 18:30:01.166"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.168" endtime="20241125 18:30:01.168"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.166" endtime="20241125 18:30:01.168"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.165" endtime="20241125 18:30:01.168"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.163" endtime="20241125 18:30:01.169"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:01.177" endtime="20241125 18:30:01.177"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.181" endtime="20241125 18:30:01.182"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.169" endtime="20241125 18:30:01.182"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.184" endtime="20241125 18:30:01.184"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.185" endtime="20241125 18:30:01.185"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.185" endtime="20241125 18:30:01.185"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.185" endtime="20241125 18:30:01.185"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.185" endtime="20241125 18:30:01.185"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.184" endtime="20241125 18:30:01.186"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.182" endtime="20241125 18:30:01.186"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.189" endtime="20241125 18:30:01.189"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.186" endtime="20241125 18:30:01.189"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.198" endtime="20241125 18:30:01.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.198" endtime="20241125 18:30:01.198"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.189" endtime="20241125 18:30:01.198"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.947" endtime="20241125 18:30:01.198"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.199" endtime="20241125 18:30:01.200"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:01.201" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:01.200" endtime="20241125 18:30:01.201"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:01.201" endtime="20241125 18:30:01.201"/>
</return>
<msg timestamp="20241125 18:30:01.202" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241125 18:30:00.945" endtime="20241125 18:30:01.202"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.204" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241125 18:30:01.203" endtime="20241125 18:30:01.204"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.205" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:01.204" endtime="20241125 18:30:01.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.205" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:01.205" endtime="20241125 18:30:01.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.207" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.206" endtime="20241125 18:30:01.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.207" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:01.207" endtime="20241125 18:30:01.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.208" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.208" endtime="20241125 18:30:01.208"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.209" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:01.208" endtime="20241125 18:30:01.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.209" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:01.209" endtime="20241125 18:30:01.209"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:01.210" endtime="20241125 18:30:01.210"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:01.214" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:01.213" endtime="20241125 18:30:01.214"/>
</kw>
<msg timestamp="20241125 18:30:01.214" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.213" endtime="20241125 18:30:01.214"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.215" endtime="20241125 18:30:01.215"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.215" endtime="20241125 18:30:01.215"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.215" endtime="20241125 18:30:01.215"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.216" endtime="20241125 18:30:01.216"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.215" endtime="20241125 18:30:01.216"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.215" endtime="20241125 18:30:01.217"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.214" endtime="20241125 18:30:01.217"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.214" endtime="20241125 18:30:01.217"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:01.217" endtime="20241125 18:30:01.217"/>
</return>
<msg timestamp="20241125 18:30:01.218" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.212" endtime="20241125 18:30:01.218"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:01.222" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:01.221" endtime="20241125 18:30:01.222"/>
</kw>
<msg timestamp="20241125 18:30:01.222" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.220" endtime="20241125 18:30:01.222"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.222" endtime="20241125 18:30:01.223"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.223" endtime="20241125 18:30:01.223"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.223" endtime="20241125 18:30:01.223"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.224" endtime="20241125 18:30:01.224"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.224" endtime="20241125 18:30:01.224"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.223" endtime="20241125 18:30:01.224"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.222" endtime="20241125 18:30:01.224"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.222" endtime="20241125 18:30:01.224"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:01.225" endtime="20241125 18:30:01.226"/>
</return>
<msg timestamp="20241125 18:30:01.226" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.220" endtime="20241125 18:30:01.226"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:01.228" endtime="20241125 18:30:01.228"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.228" endtime="20241125 18:30:01.228"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.228" endtime="20241125 18:30:01.228"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.229" endtime="20241125 18:30:01.229"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:01.229" endtime="20241125 18:30:01.229"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.229" endtime="20241125 18:30:01.230"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.230" endtime="20241125 18:30:01.230"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:01.230" endtime="20241125 18:30:01.230"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.230" endtime="20241125 18:30:01.230"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.229" endtime="20241125 18:30:01.230"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.229" endtime="20241125 18:30:01.230"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.229" endtime="20241125 18:30:01.231"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.231" endtime="20241125 18:30:01.231"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:01.231" endtime="20241125 18:30:01.231"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.231" endtime="20241125 18:30:01.232"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.232" endtime="20241125 18:30:01.232"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:01.232" endtime="20241125 18:30:01.232"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.232" endtime="20241125 18:30:01.232"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.231" endtime="20241125 18:30:01.232"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.231" endtime="20241125 18:30:01.233"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.231" endtime="20241125 18:30:01.233"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.228" endtime="20241125 18:30:01.233"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.226" endtime="20241125 18:30:01.233"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:01.234" endtime="20241125 18:30:01.234"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.234" endtime="20241125 18:30:01.234"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.234" endtime="20241125 18:30:01.234"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.235"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.235"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.234" endtime="20241125 18:30:01.235"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.235"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.235"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.235"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.236" endtime="20241125 18:30:01.236"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:01.236" endtime="20241125 18:30:01.236"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.236"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.236"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.236"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.235" endtime="20241125 18:30:01.238"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.233" endtime="20241125 18:30:01.238"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.233" endtime="20241125 18:30:01.238"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.204" endtime="20241125 18:30:01.238"/>
</iter>
<status status="PASS" starttime="20241125 18:30:01.204" endtime="20241125 18:30:01.238"/>
</for>
<msg timestamp="20241125 18:30:01.239" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:01.202" endtime="20241125 18:30:01.239"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.239" endtime="20241125 18:30:01.240"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:01.245" endtime="20241125 18:30:01.245"/>
</kw>
<msg timestamp="20241125 18:30:01.245" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.244" endtime="20241125 18:30:01.245"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.246" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241125 18:30:01.246" endtime="20241125 18:30:01.246"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.247" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.247" endtime="20241125 18:30:01.247"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.247" endtime="20241125 18:30:01.247"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.248" endtime="20241125 18:30:01.248"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.248" endtime="20241125 18:30:01.248"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.247" endtime="20241125 18:30:01.248"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.246" endtime="20241125 18:30:01.248"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.245" endtime="20241125 18:30:01.248"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:01.248" endtime="20241125 18:30:01.249"/>
</return>
<msg timestamp="20241125 18:30:01.249" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.244" endtime="20241125 18:30:01.249"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.250" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241125 18:30:01.249" endtime="20241125 18:30:01.250"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.249" endtime="20241125 18:30:01.250"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.251" endtime="20241125 18:30:01.251"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.251" endtime="20241125 18:30:01.252"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.249" endtime="20241125 18:30:01.252"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:01.254" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '320', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241125 18:30:01.252" endtime="20241125 18:30:01.254"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:01.255" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "320", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241125 18:30:01.255" endtime="20241125 18:30:01.255"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:01.273" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:01.273" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:01.255" endtime="20241125 18:30:01.273"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.273" endtime="20241125 18:30:01.274"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:01.274" endtime="20241125 18:30:01.274"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.254" endtime="20241125 18:30:01.274"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.240" endtime="20241125 18:30:01.275"/>
</kw>
<status status="PASS" starttime="20241125 18:30:00.935" endtime="20241125 18:30:01.275"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.275" endtime="20241125 18:30:01.275"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.276" endtime="20241125 18:30:01.276"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.276" endtime="20241125 18:30:01.277"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.275" endtime="20241125 18:30:01.277"/>
</branch>
<status status="PASS" starttime="20241125 18:30:00.935" endtime="20241125 18:30:01.277"/>
</try>
<status status="PASS" starttime="20241125 18:30:00.935" endtime="20241125 18:30:01.277"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.277" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241125 18:30:01.277" endtime="20241125 18:30:01.278"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.279" endtime="20241125 18:30:01.279"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:01.281" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241125 18:30:01.279" endtime="20241125 18:30:01.281"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.281" endtime="20241125 18:30:01.281"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.282" endtime="20241125 18:30:01.282"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.281" endtime="20241125 18:30:01.282"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.281" endtime="20241125 18:30:01.282"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.283" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:01.282" endtime="20241125 18:30:01.283"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.284" endtime="20241125 18:30:01.284"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.284" endtime="20241125 18:30:01.284"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.285" endtime="20241125 18:30:01.285"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.285" endtime="20241125 18:30:01.285"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:01.306" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241125 18:30:01.298" endtime="20241125 18:30:01.306"/>
</kw>
<msg timestamp="20241125 18:30:01.306" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.298" endtime="20241125 18:30:01.306"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.306" endtime="20241125 18:30:01.306"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.296" endtime="20241125 18:30:01.307"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.307" endtime="20241125 18:30:01.307"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.307" endtime="20241125 18:30:01.307"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.307" endtime="20241125 18:30:01.308"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.296" endtime="20241125 18:30:01.308"/>
</try>
<msg timestamp="20241125 18:30:01.308" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.296" endtime="20241125 18:30:01.308"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.308" endtime="20241125 18:30:01.308"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.294" endtime="20241125 18:30:01.308"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:01.308" endtime="20241125 18:30:01.309"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.308" endtime="20241125 18:30:01.309"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.294" endtime="20241125 18:30:01.309"/>
</try>
<msg timestamp="20241125 18:30:01.309" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.294" endtime="20241125 18:30:01.309"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.312" endtime="20241125 18:30:01.312"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.312" endtime="20241125 18:30:01.312"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.312" endtime="20241125 18:30:01.312"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.311" endtime="20241125 18:30:01.312"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.310" endtime="20241125 18:30:01.313"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.293" endtime="20241125 18:30:01.313"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:01.326" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241125 18:30:01.320" endtime="20241125 18:30:01.327"/>
</kw>
<msg timestamp="20241125 18:30:01.327" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.320" endtime="20241125 18:30:01.327"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.327" endtime="20241125 18:30:01.327"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.320" endtime="20241125 18:30:01.327"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.327" endtime="20241125 18:30:01.327"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.329" endtime="20241125 18:30:01.329"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.327" endtime="20241125 18:30:01.329"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.319" endtime="20241125 18:30:01.329"/>
</try>
<msg timestamp="20241125 18:30:01.329" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.318" endtime="20241125 18:30:01.329"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.329" endtime="20241125 18:30:01.329"/>
</return>
<msg timestamp="20241125 18:30:01.330" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.316" endtime="20241125 18:30:01.330"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.333" endtime="20241125 18:30:01.333"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.334" endtime="20241125 18:30:01.334"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.333" endtime="20241125 18:30:01.334"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.332" endtime="20241125 18:30:01.334"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.331" endtime="20241125 18:30:01.334"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.315" endtime="20241125 18:30:01.335"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:01.357" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241125 18:30:01.341" endtime="20241125 18:30:01.357"/>
</kw>
<msg timestamp="20241125 18:30:01.357" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.340" endtime="20241125 18:30:01.357"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.357" endtime="20241125 18:30:01.357"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.340" endtime="20241125 18:30:01.357"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.359" endtime="20241125 18:30:01.359"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.359" endtime="20241125 18:30:01.359"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.357" endtime="20241125 18:30:01.359"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.340" endtime="20241125 18:30:01.359"/>
</try>
<msg timestamp="20241125 18:30:01.360" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.339" endtime="20241125 18:30:01.360"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:01.360" endtime="20241125 18:30:01.360"/>
</return>
<msg timestamp="20241125 18:30:01.360" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.338" endtime="20241125 18:30:01.360"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.363" endtime="20241125 18:30:01.363"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.364" endtime="20241125 18:30:01.364"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.363" endtime="20241125 18:30:01.364"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.363" endtime="20241125 18:30:01.364"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.362" endtime="20241125 18:30:01.364"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.337" endtime="20241125 18:30:01.364"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.290" endtime="20241125 18:30:01.364"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:01.365" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:01.365" endtime="20241125 18:30:01.365"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.368" endtime="20241125 18:30:01.368"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.368" endtime="20241125 18:30:01.368"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:01.368" endtime="20241125 18:30:01.369"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.368" endtime="20241125 18:30:01.369"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.366" endtime="20241125 18:30:01.369"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 18:30:01.369" endtime="20241125 18:30:01.415"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.369" endtime="20241125 18:30:01.415"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.415" endtime="20241125 18:30:01.415"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.416" endtime="20241125 18:30:01.416"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.415" endtime="20241125 18:30:01.416"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.369" endtime="20241125 18:30:01.416"/>
</try>
<status status="PASS" starttime="20241125 18:30:01.365" endtime="20241125 18:30:01.416"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.365" endtime="20241125 18:30:01.417"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.365" endtime="20241125 18:30:01.417"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.417" endtime="20241125 18:30:01.417"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.417" endtime="20241125 18:30:01.417"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.365" endtime="20241125 18:30:01.417"/>
</try>
<status status="PASS" starttime="20241125 18:30:01.289" endtime="20241125 18:30:01.419"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.286" endtime="20241125 18:30:01.419"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.421" endtime="20241125 18:30:01.421"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.424" endtime="20241125 18:30:01.424"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.419" endtime="20241125 18:30:01.424"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.425" endtime="20241125 18:30:01.425"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.424" endtime="20241125 18:30:01.425"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.429" endtime="20241125 18:30:01.429"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.425" endtime="20241125 18:30:01.429"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.432" endtime="20241125 18:30:01.432"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.432" endtime="20241125 18:30:01.433"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.434" endtime="20241125 18:30:01.434"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.433" endtime="20241125 18:30:01.434"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.433" endtime="20241125 18:30:01.434"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.434" endtime="20241125 18:30:01.434"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.429" endtime="20241125 18:30:01.435"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.437" endtime="20241125 18:30:01.437"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.435" endtime="20241125 18:30:01.437"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.438" endtime="20241125 18:30:01.439"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.439" endtime="20241125 18:30:01.439"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.439" endtime="20241125 18:30:01.439"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.439" endtime="20241125 18:30:01.440"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.439" endtime="20241125 18:30:01.440"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.439" endtime="20241125 18:30:01.440"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.437" endtime="20241125 18:30:01.440"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:01.446" endtime="20241125 18:30:01.447"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.450" endtime="20241125 18:30:01.451"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.440" endtime="20241125 18:30:01.451"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.453" endtime="20241125 18:30:01.453"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.453" endtime="20241125 18:30:01.453"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.453" endtime="20241125 18:30:01.453"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.454" endtime="20241125 18:30:01.454"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.453" endtime="20241125 18:30:01.454"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.453" endtime="20241125 18:30:01.454"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.451" endtime="20241125 18:30:01.454"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:01.462" endtime="20241125 18:30:01.462"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.466" endtime="20241125 18:30:01.466"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.454" endtime="20241125 18:30:01.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.468" endtime="20241125 18:30:01.468"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.468" endtime="20241125 18:30:01.468"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.468" endtime="20241125 18:30:01.469"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.469" endtime="20241125 18:30:01.469"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.469" endtime="20241125 18:30:01.469"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.468" endtime="20241125 18:30:01.469"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.466" endtime="20241125 18:30:01.469"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.472" endtime="20241125 18:30:01.472"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.469" endtime="20241125 18:30:01.472"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.482" endtime="20241125 18:30:01.483"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.483" endtime="20241125 18:30:01.483"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.473" endtime="20241125 18:30:01.483"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.283" endtime="20241125 18:30:01.483"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.484" endtime="20241125 18:30:01.485"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:01.486" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:01.485" endtime="20241125 18:30:01.486"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:01.486" endtime="20241125 18:30:01.486"/>
</return>
<msg timestamp="20241125 18:30:01.487" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:01.282" endtime="20241125 18:30:01.487"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.488" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241125 18:30:01.487" endtime="20241125 18:30:01.488"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.489" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:01.489" endtime="20241125 18:30:01.489"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.490" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:01.489" endtime="20241125 18:30:01.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.491" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.490" endtime="20241125 18:30:01.491"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.491" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:01.491" endtime="20241125 18:30:01.491"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.492" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.492" endtime="20241125 18:30:01.492"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.493" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:01.492" endtime="20241125 18:30:01.493"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.494" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:01.493" endtime="20241125 18:30:01.494"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:01.494" endtime="20241125 18:30:01.495"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:01.499" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:01.498" endtime="20241125 18:30:01.499"/>
</kw>
<msg timestamp="20241125 18:30:01.500" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.498" endtime="20241125 18:30:01.500"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.501" endtime="20241125 18:30:01.501"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.501" endtime="20241125 18:30:01.502"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.501" endtime="20241125 18:30:01.502"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.502" endtime="20241125 18:30:01.502"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.502" endtime="20241125 18:30:01.503"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.501" endtime="20241125 18:30:01.503"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.500" endtime="20241125 18:30:01.503"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.500" endtime="20241125 18:30:01.503"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:01.503" endtime="20241125 18:30:01.503"/>
</return>
<msg timestamp="20241125 18:30:01.504" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.497" endtime="20241125 18:30:01.504"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:01.509" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:01.508" endtime="20241125 18:30:01.509"/>
</kw>
<msg timestamp="20241125 18:30:01.509" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.507" endtime="20241125 18:30:01.509"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.510" endtime="20241125 18:30:01.510"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.511" endtime="20241125 18:30:01.511"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.511" endtime="20241125 18:30:01.511"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.512" endtime="20241125 18:30:01.512"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.512" endtime="20241125 18:30:01.512"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.511" endtime="20241125 18:30:01.512"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.510" endtime="20241125 18:30:01.512"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.510" endtime="20241125 18:30:01.512"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:01.512" endtime="20241125 18:30:01.513"/>
</return>
<msg timestamp="20241125 18:30:01.513" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:01.507" endtime="20241125 18:30:01.513"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:01.514" endtime="20241125 18:30:01.514"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.514" endtime="20241125 18:30:01.514"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.514" endtime="20241125 18:30:01.514"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.515" endtime="20241125 18:30:01.515"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:01.515" endtime="20241125 18:30:01.515"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.515" endtime="20241125 18:30:01.515"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.517" endtime="20241125 18:30:01.517"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:01.517" endtime="20241125 18:30:01.517"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.517" endtime="20241125 18:30:01.518"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.515" endtime="20241125 18:30:01.518"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.515" endtime="20241125 18:30:01.518"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.515" endtime="20241125 18:30:01.518"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.518" endtime="20241125 18:30:01.519"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:01.519" endtime="20241125 18:30:01.519"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.518" endtime="20241125 18:30:01.519"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.520" endtime="20241125 18:30:01.520"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:01.520" endtime="20241125 18:30:01.520"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.519" endtime="20241125 18:30:01.520"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.518" endtime="20241125 18:30:01.520"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.518" endtime="20241125 18:30:01.520"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.518" endtime="20241125 18:30:01.520"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.514" endtime="20241125 18:30:01.520"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.513" endtime="20241125 18:30:01.521"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:01.522" endtime="20241125 18:30:01.522"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.521" endtime="20241125 18:30:01.522"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.521" endtime="20241125 18:30:01.522"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.522" endtime="20241125 18:30:01.522"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.522" endtime="20241125 18:30:01.523"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.522" endtime="20241125 18:30:01.523"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.523" endtime="20241125 18:30:01.524"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:01.524" endtime="20241125 18:30:01.524"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.523" endtime="20241125 18:30:01.524"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.524" endtime="20241125 18:30:01.524"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:01.524" endtime="20241125 18:30:01.525"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:01.524" endtime="20241125 18:30:01.525"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.523" endtime="20241125 18:30:01.525"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.523" endtime="20241125 18:30:01.525"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:01.523" endtime="20241125 18:30:01.525"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:01.521" endtime="20241125 18:30:01.525"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.521" endtime="20241125 18:30:01.525"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.488" endtime="20241125 18:30:01.525"/>
</iter>
<status status="PASS" starttime="20241125 18:30:01.488" endtime="20241125 18:30:01.525"/>
</for>
<msg timestamp="20241125 18:30:01.525" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:01.487" endtime="20241125 18:30:01.525"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.527" endtime="20241125 18:30:01.527"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:01.532" endtime="20241125 18:30:01.533"/>
</kw>
<msg timestamp="20241125 18:30:01.533" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.532" endtime="20241125 18:30:01.533"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.535" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241125 18:30:01.535" endtime="20241125 18:30:01.535"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.537" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.536" endtime="20241125 18:30:01.537"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.536" endtime="20241125 18:30:01.537"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.537" endtime="20241125 18:30:01.537"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.537" endtime="20241125 18:30:01.537"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.535" endtime="20241125 18:30:01.537"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.534" endtime="20241125 18:30:01.537"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.534" endtime="20241125 18:30:01.537"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:01.537" endtime="20241125 18:30:01.538"/>
</return>
<msg timestamp="20241125 18:30:01.538" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.531" endtime="20241125 18:30:01.538"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.539" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241125 18:30:01.539" endtime="20241125 18:30:01.539"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.538" endtime="20241125 18:30:01.539"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.540" endtime="20241125 18:30:01.540"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.539" endtime="20241125 18:30:01.540"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.538" endtime="20241125 18:30:01.540"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:01.541" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '321', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241125 18:30:01.540" endtime="20241125 18:30:01.541"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:01.543" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "321", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241125 18:30:01.542" endtime="20241125 18:30:01.543"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:01.569" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:01.569" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:01.543" endtime="20241125 18:30:01.569"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.569" endtime="20241125 18:30:01.570"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:01.570" endtime="20241125 18:30:01.570"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.542" endtime="20241125 18:30:01.571"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.527" endtime="20241125 18:30:01.571"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.277" endtime="20241125 18:30:01.571"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.572" endtime="20241125 18:30:01.572"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.572" endtime="20241125 18:30:01.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.572" endtime="20241125 18:30:01.572"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.571" endtime="20241125 18:30:01.572"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.277" endtime="20241125 18:30:01.573"/>
</try>
<status status="PASS" starttime="20241125 18:30:01.277" endtime="20241125 18:30:01.573"/>
</iter>
<status status="PASS" starttime="20241125 18:29:56.715" endtime="20241125 18:30:01.573"/>
</for>
<status status="PASS" starttime="20241125 18:29:56.715" endtime="20241125 18:30:01.573"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.715" endtime="20241125 18:30:01.573"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:01.576" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '84', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241125 18:30:01.575" endtime="20241125 18:30:01.576"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:01.578" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "84", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241125 18:30:01.577" endtime="20241125 18:30:01.578"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:01.595" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:01.595" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:01.578" endtime="20241125 18:30:01.595"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.596" endtime="20241125 18:30:01.596"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:01.596" endtime="20241125 18:30:01.597"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.576" endtime="20241125 18:30:01.597"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.573" endtime="20241125 18:30:01.597"/>
</kw>
<status status="PASS" starttime="20241125 18:29:56.699" endtime="20241125 18:30:01.597"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.597" endtime="20241125 18:30:01.597"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.598" endtime="20241125 18:30:01.598"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.598" endtime="20241125 18:30:01.598"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.597" endtime="20241125 18:30:01.598"/>
</branch>
<status status="PASS" starttime="20241125 18:29:56.698" endtime="20241125 18:30:01.598"/>
</try>
<status status="PASS" starttime="20241125 18:29:56.698" endtime="20241125 18:30:01.598"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '6', 'testCaseId': '3', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T11:15:44.388Z', 'updatedAt': '2024-11-25T12:29:01.947Z', 'flow': {'id': '2', 'name': 'Navigate to profile', 'projectI...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.600" level="INFO">${flow} = {'id': '2', 'name': 'Navigate to profile', 'projectId': '1', 'createdAt': '2024-11-25T08:07:30.175Z', 'updatedAt': '2024-11-25T08:07:30.175Z', 'flowActionSequences': [{'id': '5', 'actionId': '5', 'flo...</msg>
<status status="PASS" starttime="20241125 18:30:01.599" endtime="20241125 18:30:01.600"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.601" endtime="20241125 18:30:01.601"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:01.607" endtime="20241125 18:30:01.607"/>
</kw>
<msg timestamp="20241125 18:30:01.607" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.605" endtime="20241125 18:30:01.607"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.608" level="INFO">${values} = [{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 't...</msg>
<status status="PASS" starttime="20241125 18:30:01.608" endtime="20241125 18:30:01.608"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.610" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.609" endtime="20241125 18:30:01.610"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.609" endtime="20241125 18:30:01.610"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.610" endtime="20241125 18:30:01.610"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.610" endtime="20241125 18:30:01.610"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.609" endtime="20241125 18:30:01.610"/>
</if>
<status status="PASS" starttime="20241125 18:30:01.607" endtime="20241125 18:30:01.610"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.607" endtime="20241125 18:30:01.611"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:01.611" endtime="20241125 18:30:01.611"/>
</return>
<msg timestamp="20241125 18:30:01.611" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.605" endtime="20241125 18:30:01.611"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 'ty...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.613" level="INFO">${action} = {'id': '5', 'name': 'Click profile header icon', 'type': 'CLICK', 'selectorI': '4', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:04:54.162Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241125 18:30:01.613" endtime="20241125 18:30:01.613"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:01.613" endtime="20241125 18:30:01.614"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:01.615" level="INFO">${input} = {'id': '6', 'actionId': '5', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:04:54.340Z', 'updatedAt': '2024-11-25T08:04:54.340Z'}</msg>
<status status="PASS" starttime="20241125 18:30:01.614" endtime="20241125 18:30:01.615"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.615" endtime="20241125 18:30:01.615"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:01.616" endtime="20241125 18:30:01.616"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.615" endtime="20241125 18:30:01.616"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.615" endtime="20241125 18:30:01.616"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:01.618" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:01.618" endtime="20241125 18:30:01.618"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.620" endtime="20241125 18:30:01.620"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.619" endtime="20241125 18:30:01.620"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:01.622" endtime="20241125 18:30:01.622"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:01.622" endtime="20241125 18:30:01.623"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:02.578" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241125 18:30:01.663" endtime="20241125 18:30:02.579"/>
</kw>
<msg timestamp="20241125 18:30:02.579" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.661" endtime="20241125 18:30:02.579"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:02.579" endtime="20241125 18:30:02.580"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.661" endtime="20241125 18:30:02.580"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.580" endtime="20241125 18:30:02.580"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.581" endtime="20241125 18:30:02.581"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:02.580" endtime="20241125 18:30:02.581"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.661" endtime="20241125 18:30:02.581"/>
</try>
<msg timestamp="20241125 18:30:02.582" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.659" endtime="20241125 18:30:02.582"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:02.583" endtime="20241125 18:30:02.583"/>
</return>
<status status="PASS" starttime="20241125 18:30:01.652" endtime="20241125 18:30:02.583"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:02.583" endtime="20241125 18:30:02.583"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:02.583" endtime="20241125 18:30:02.584"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.652" endtime="20241125 18:30:02.584"/>
</try>
<msg timestamp="20241125 18:30:02.584" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:01.651" endtime="20241125 18:30:02.584"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.590" endtime="20241125 18:30:02.590"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.590" endtime="20241125 18:30:02.591"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:02.590" endtime="20241125 18:30:02.591"/>
</branch>
<status status="PASS" starttime="20241125 18:30:02.589" endtime="20241125 18:30:02.591"/>
</if>
<status status="PASS" starttime="20241125 18:30:02.586" endtime="20241125 18:30:02.591"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.648" endtime="20241125 18:30:02.591"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:02.609" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241125 18:30:02.600" endtime="20241125 18:30:02.609"/>
</kw>
<msg timestamp="20241125 18:30:02.609" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:02.599" endtime="20241125 18:30:02.609"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:02.610" endtime="20241125 18:30:02.610"/>
</return>
<status status="PASS" starttime="20241125 18:30:02.598" endtime="20241125 18:30:02.610"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.610" endtime="20241125 18:30:02.611"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.611" endtime="20241125 18:30:02.611"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:02.610" endtime="20241125 18:30:02.611"/>
</branch>
<status status="PASS" starttime="20241125 18:30:02.598" endtime="20241125 18:30:02.611"/>
</try>
<msg timestamp="20241125 18:30:02.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:02.597" endtime="20241125 18:30:02.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:02.612" endtime="20241125 18:30:02.612"/>
</return>
<msg timestamp="20241125 18:30:02.613" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:02.595" endtime="20241125 18:30:02.613"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.619" endtime="20241125 18:30:02.619"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.619" endtime="20241125 18:30:02.620"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:02.618" endtime="20241125 18:30:02.620"/>
</branch>
<status status="PASS" starttime="20241125 18:30:02.618" endtime="20241125 18:30:02.620"/>
</if>
<status status="PASS" starttime="20241125 18:30:02.615" endtime="20241125 18:30:02.621"/>
</kw>
<status status="PASS" starttime="20241125 18:30:02.594" endtime="20241125 18:30:02.621"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:02.652" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241125 18:30:02.630" endtime="20241125 18:30:02.653"/>
</kw>
<msg timestamp="20241125 18:30:02.653" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:02.629" endtime="20241125 18:30:02.653"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:02.653" endtime="20241125 18:30:02.653"/>
</return>
<status status="PASS" starttime="20241125 18:30:02.629" endtime="20241125 18:30:02.653"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.654" endtime="20241125 18:30:02.654"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.654" endtime="20241125 18:30:02.654"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:02.653" endtime="20241125 18:30:02.654"/>
</branch>
<status status="PASS" starttime="20241125 18:30:02.629" endtime="20241125 18:30:02.655"/>
</try>
<msg timestamp="20241125 18:30:02.655" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:02.628" endtime="20241125 18:30:02.655"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:02.655" endtime="20241125 18:30:02.655"/>
</return>
<msg timestamp="20241125 18:30:02.655" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 18:30:02.626" endtime="20241125 18:30:02.655"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.659" endtime="20241125 18:30:02.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.659" endtime="20241125 18:30:02.660"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:02.659" endtime="20241125 18:30:02.660"/>
</branch>
<status status="PASS" starttime="20241125 18:30:02.658" endtime="20241125 18:30:02.660"/>
</if>
<status status="PASS" starttime="20241125 18:30:02.657" endtime="20241125 18:30:02.660"/>
</kw>
<status status="PASS" starttime="20241125 18:30:02.625" endtime="20241125 18:30:02.660"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.631" endtime="20241125 18:30:02.660"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:02.661" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:02.661" endtime="20241125 18:30:02.661"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 18:30:02.664" endtime="20241125 18:30:02.664"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:02.664" endtime="20241125 18:30:02.664"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:02.665" endtime="20241125 18:30:02.666"/>
</kw>
<status status="PASS" starttime="20241125 18:30:02.665" endtime="20241125 18:30:02.666"/>
</branch>
<status status="PASS" starttime="20241125 18:30:02.663" endtime="20241125 18:30:02.667"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 18:30:02.667" endtime="20241125 18:30:03.237"/>
</kw>
<status status="PASS" starttime="20241125 18:30:02.667" endtime="20241125 18:30:03.237"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.237" endtime="20241125 18:30:03.237"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.237" endtime="20241125 18:30:03.238"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.237" endtime="20241125 18:30:03.238"/>
</branch>
<status status="PASS" starttime="20241125 18:30:02.667" endtime="20241125 18:30:03.238"/>
</try>
<status status="PASS" starttime="20241125 18:30:02.663" endtime="20241125 18:30:03.238"/>
</kw>
<status status="PASS" starttime="20241125 18:30:02.662" endtime="20241125 18:30:03.238"/>
</kw>
<status status="PASS" starttime="20241125 18:30:02.662" endtime="20241125 18:30:03.238"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.239" endtime="20241125 18:30:03.239"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.238" endtime="20241125 18:30:03.239"/>
</branch>
<status status="PASS" starttime="20241125 18:30:02.662" endtime="20241125 18:30:03.239"/>
</try>
<status status="PASS" starttime="20241125 18:30:01.629" endtime="20241125 18:30:03.239"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.623" endtime="20241125 18:30:03.239"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.242" endtime="20241125 18:30:03.242"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.245" endtime="20241125 18:30:03.245"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.239" endtime="20241125 18:30:03.245"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.248" endtime="20241125 18:30:03.248"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.245" endtime="20241125 18:30:03.248"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.252" endtime="20241125 18:30:03.253"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.248" endtime="20241125 18:30:03.253"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.255" endtime="20241125 18:30:03.255"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.255" endtime="20241125 18:30:03.255"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.255" endtime="20241125 18:30:03.255"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.255" endtime="20241125 18:30:03.257"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.255" endtime="20241125 18:30:03.257"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.257" endtime="20241125 18:30:03.257"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.253" endtime="20241125 18:30:03.257"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.258" endtime="20241125 18:30:03.258"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.257" endtime="20241125 18:30:03.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.260" endtime="20241125 18:30:03.260"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.260" endtime="20241125 18:30:03.261"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.260" endtime="20241125 18:30:03.261"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.261" endtime="20241125 18:30:03.261"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.261" endtime="20241125 18:30:03.262"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.260" endtime="20241125 18:30:03.262"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.258" endtime="20241125 18:30:03.262"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:03.270" endtime="20241125 18:30:03.270"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.274" endtime="20241125 18:30:03.274"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.262" endtime="20241125 18:30:03.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.277" endtime="20241125 18:30:03.277"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.277" endtime="20241125 18:30:03.279"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.277" endtime="20241125 18:30:03.279"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.279" endtime="20241125 18:30:03.279"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.279" endtime="20241125 18:30:03.279"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.277" endtime="20241125 18:30:03.279"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.276" endtime="20241125 18:30:03.280"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:03.291" endtime="20241125 18:30:03.292"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.297" endtime="20241125 18:30:03.297"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.280" endtime="20241125 18:30:03.297"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.300" endtime="20241125 18:30:03.300"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.301" endtime="20241125 18:30:03.301"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.301" endtime="20241125 18:30:03.301"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.302" endtime="20241125 18:30:03.302"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.301" endtime="20241125 18:30:03.302"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.300" endtime="20241125 18:30:03.302"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.298" endtime="20241125 18:30:03.302"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.309" endtime="20241125 18:30:03.309"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.302" endtime="20241125 18:30:03.310"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:03.322" endtime="20241125 18:30:03.322"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.322" endtime="20241125 18:30:03.322"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.310" endtime="20241125 18:30:03.323"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.619" endtime="20241125 18:30:03.323"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:03.323" endtime="20241125 18:30:03.324"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:03.325" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:03.324" endtime="20241125 18:30:03.325"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:03.325" endtime="20241125 18:30:03.325"/>
</return>
<msg timestamp="20241125 18:30:03.325" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:01.617" endtime="20241125 18:30:03.325"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.327" level="INFO">${key} = testCaseFlowSequenceId:6::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241125 18:30:03.326" endtime="20241125 18:30:03.327"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.328" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:03.328" endtime="20241125 18:30:03.328"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.329" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:03.329" endtime="20241125 18:30:03.329"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.330" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.329" endtime="20241125 18:30:03.330"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.331" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:03.330" endtime="20241125 18:30:03.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.333" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.332" endtime="20241125 18:30:03.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.334" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:03.333" endtime="20241125 18:30:03.334"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.336" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:03.335" endtime="20241125 18:30:03.336"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:03.336" endtime="20241125 18:30:03.337"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:03.345" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:03.343" endtime="20241125 18:30:03.345"/>
</kw>
<msg timestamp="20241125 18:30:03.347" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.342" endtime="20241125 18:30:03.347"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.350" endtime="20241125 18:30:03.350"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.351" endtime="20241125 18:30:03.352"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.351" endtime="20241125 18:30:03.353"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.353" endtime="20241125 18:30:03.353"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.353" endtime="20241125 18:30:03.353"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.351" endtime="20241125 18:30:03.353"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.348" endtime="20241125 18:30:03.354"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.347" endtime="20241125 18:30:03.354"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:03.354" endtime="20241125 18:30:03.354"/>
</return>
<msg timestamp="20241125 18:30:03.355" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.341" endtime="20241125 18:30:03.355"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:03.363" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:03.361" endtime="20241125 18:30:03.363"/>
</kw>
<msg timestamp="20241125 18:30:03.364" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.360" endtime="20241125 18:30:03.364"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.367" endtime="20241125 18:30:03.367"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.368" endtime="20241125 18:30:03.368"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.368" endtime="20241125 18:30:03.368"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.369" endtime="20241125 18:30:03.369"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.369" endtime="20241125 18:30:03.370"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.367" endtime="20241125 18:30:03.370"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.365" endtime="20241125 18:30:03.370"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.364" endtime="20241125 18:30:03.370"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:03.370" endtime="20241125 18:30:03.371"/>
</return>
<msg timestamp="20241125 18:30:03.371" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.359" endtime="20241125 18:30:03.371"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:03.374" endtime="20241125 18:30:03.374"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.373" endtime="20241125 18:30:03.374"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.373" endtime="20241125 18:30:03.375"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.376" endtime="20241125 18:30:03.376"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:03.376" endtime="20241125 18:30:03.376"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.376" endtime="20241125 18:30:03.377"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.378" endtime="20241125 18:30:03.378"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:03.378" endtime="20241125 18:30:03.378"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.377" endtime="20241125 18:30:03.378"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.375" endtime="20241125 18:30:03.378"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.375" endtime="20241125 18:30:03.378"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.375" endtime="20241125 18:30:03.378"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.380" endtime="20241125 18:30:03.381"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:03.381" endtime="20241125 18:30:03.382"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.379" endtime="20241125 18:30:03.382"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.383" endtime="20241125 18:30:03.384"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:03.384" endtime="20241125 18:30:03.385"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.383" endtime="20241125 18:30:03.385"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.379" endtime="20241125 18:30:03.385"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.379" endtime="20241125 18:30:03.386"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.379" endtime="20241125 18:30:03.386"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.373" endtime="20241125 18:30:03.387"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.372" endtime="20241125 18:30:03.387"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:03.389" endtime="20241125 18:30:03.389"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.389" endtime="20241125 18:30:03.390"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.389" endtime="20241125 18:30:03.390"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.391" endtime="20241125 18:30:03.391"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.391" endtime="20241125 18:30:03.391"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.390" endtime="20241125 18:30:03.392"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.393" endtime="20241125 18:30:03.393"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:03.394" endtime="20241125 18:30:03.394"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.392" endtime="20241125 18:30:03.394"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.394" endtime="20241125 18:30:03.395"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:03.395" endtime="20241125 18:30:03.395"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.394" endtime="20241125 18:30:03.395"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.392" endtime="20241125 18:30:03.395"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.392" endtime="20241125 18:30:03.395"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.392" endtime="20241125 18:30:03.395"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.388" endtime="20241125 18:30:03.395"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.387" endtime="20241125 18:30:03.395"/>
</if>
<status status="PASS" starttime="20241125 18:30:03.328" endtime="20241125 18:30:03.395"/>
</iter>
<status status="PASS" starttime="20241125 18:30:03.327" endtime="20241125 18:30:03.395"/>
</for>
<msg timestamp="20241125 18:30:03.396" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:03.325" endtime="20241125 18:30:03.396"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:03.396" endtime="20241125 18:30:03.398"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:03.411" endtime="20241125 18:30:03.412"/>
</kw>
<msg timestamp="20241125 18:30:03.412" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.410" endtime="20241125 18:30:03.412"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.416" level="INFO">${values} = {'id': '4', 'name': 'Profile header icon', 'xpath': 'id=headerProfileImage', 'pageId': '2', 'createdAt': '2024-11-25T08:04:52.707Z', 'updatedAt': '2024-11-25T08:04:52.707Z'}</msg>
<status status="PASS" starttime="20241125 18:30:03.414" endtime="20241125 18:30:03.416"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.420" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.419" endtime="20241125 18:30:03.420"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.418" endtime="20241125 18:30:03.421"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.422" endtime="20241125 18:30:03.422"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.421" endtime="20241125 18:30:03.422"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.417" endtime="20241125 18:30:03.423"/>
</if>
<status status="PASS" starttime="20241125 18:30:03.413" endtime="20241125 18:30:03.423"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.413" endtime="20241125 18:30:03.423"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:03.424" endtime="20241125 18:30:03.424"/>
</return>
<msg timestamp="20241125 18:30:03.424" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.407" endtime="20241125 18:30:03.425"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.427" level="INFO">${xpath} = id=headerProfileImage</msg>
<status status="PASS" starttime="20241125 18:30:03.425" endtime="20241125 18:30:03.427"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.425" endtime="20241125 18:30:03.427"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.428" endtime="20241125 18:30:03.429"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.428" endtime="20241125 18:30:03.429"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.425" endtime="20241125 18:30:03.429"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:03.432" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '322', 'status': 'COMPLETED', 'actionName': 'Click profile header icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage'...</msg>
<status status="PASS" starttime="20241125 18:30:03.429" endtime="20241125 18:30:03.432"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:03.436" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "322", "status": "COMPLETED", "actionName": "Click profile header icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage"...</msg>
<status status="PASS" starttime="20241125 18:30:03.434" endtime="20241125 18:30:03.436"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:03.443" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:03.443" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:03.436" endtime="20241125 18:30:03.443"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:03.444" endtime="20241125 18:30:03.445"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:03.445" endtime="20241125 18:30:03.445"/>
</return>
<status status="PASS" starttime="20241125 18:30:03.433" endtime="20241125 18:30:03.446"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.398" endtime="20241125 18:30:03.446"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.612" endtime="20241125 18:30:03.446"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.448" endtime="20241125 18:30:03.448"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:03.450" endtime="20241125 18:30:03.450"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.451" endtime="20241125 18:30:03.451"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.447" endtime="20241125 18:30:03.451"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.612" endtime="20241125 18:30:03.451"/>
</try>
<status status="PASS" starttime="20241125 18:30:01.612" endtime="20241125 18:30:03.452"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '6', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '6', 'name': 'Click profile dropdown item', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.454" level="INFO">${action} = {'id': '6', 'name': 'Click profile dropdown item', 'type': 'CLICK', 'selectorI': '5', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:05:44.025Z', 'updatedAt': '2024-11-2...</msg>
<status status="PASS" starttime="20241125 18:30:03.453" endtime="20241125 18:30:03.454"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:03.454" endtime="20241125 18:30:03.455"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:03.456" level="INFO">${input} = {'id': '7', 'actionId': '6', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:05:44.210Z', 'updatedAt': '2024-11-25T08:05:44.210Z'}</msg>
<status status="PASS" starttime="20241125 18:30:03.456" endtime="20241125 18:30:03.456"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.458" endtime="20241125 18:30:03.459"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.459" endtime="20241125 18:30:03.459"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.458" endtime="20241125 18:30:03.459"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.458" endtime="20241125 18:30:03.459"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.461" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:03.461" endtime="20241125 18:30:03.461"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:03.462" endtime="20241125 18:30:03.462"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.462" endtime="20241125 18:30:03.463"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:03.463" endtime="20241125 18:30:03.464"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.463" endtime="20241125 18:30:03.464"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:03.494" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241125 18:30:03.482" endtime="20241125 18:30:03.494"/>
</kw>
<msg timestamp="20241125 18:30:03.495" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.482" endtime="20241125 18:30:03.495"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:03.495" endtime="20241125 18:30:03.495"/>
</return>
<status status="PASS" starttime="20241125 18:30:03.481" endtime="20241125 18:30:03.495"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.497" endtime="20241125 18:30:03.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.497" endtime="20241125 18:30:03.498"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.495" endtime="20241125 18:30:03.498"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.481" endtime="20241125 18:30:03.498"/>
</try>
<msg timestamp="20241125 18:30:03.499" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.480" endtime="20241125 18:30:03.499"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:03.499" endtime="20241125 18:30:03.499"/>
</return>
<status status="PASS" starttime="20241125 18:30:03.478" endtime="20241125 18:30:03.499"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:03.500" endtime="20241125 18:30:03.500"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.499" endtime="20241125 18:30:03.500"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.478" endtime="20241125 18:30:03.500"/>
</try>
<msg timestamp="20241125 18:30:03.500" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.477" endtime="20241125 18:30:03.501"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.505" endtime="20241125 18:30:03.505"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.505" endtime="20241125 18:30:03.506"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.505" endtime="20241125 18:30:03.506"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.505" endtime="20241125 18:30:03.506"/>
</if>
<status status="PASS" starttime="20241125 18:30:03.503" endtime="20241125 18:30:03.506"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.476" endtime="20241125 18:30:03.506"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:03.525" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241125 18:30:03.517" endtime="20241125 18:30:03.525"/>
</kw>
<msg timestamp="20241125 18:30:03.525" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.515" endtime="20241125 18:30:03.525"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:03.525" endtime="20241125 18:30:03.526"/>
</return>
<status status="PASS" starttime="20241125 18:30:03.515" endtime="20241125 18:30:03.526"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.526" endtime="20241125 18:30:03.526"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.527" endtime="20241125 18:30:03.527"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.526" endtime="20241125 18:30:03.527"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.514" endtime="20241125 18:30:03.527"/>
</try>
<msg timestamp="20241125 18:30:03.528" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.513" endtime="20241125 18:30:03.528"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:03.528" endtime="20241125 18:30:03.528"/>
</return>
<msg timestamp="20241125 18:30:03.528" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.511" endtime="20241125 18:30:03.529"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.533" endtime="20241125 18:30:03.533"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.533" endtime="20241125 18:30:03.533"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.532" endtime="20241125 18:30:03.533"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.532" endtime="20241125 18:30:03.534"/>
</if>
<status status="PASS" starttime="20241125 18:30:03.530" endtime="20241125 18:30:03.534"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.510" endtime="20241125 18:30:03.534"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:03.563" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241125 18:30:03.542" endtime="20241125 18:30:03.563"/>
</kw>
<msg timestamp="20241125 18:30:03.563" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.541" endtime="20241125 18:30:03.563"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:03.563" endtime="20241125 18:30:03.564"/>
</return>
<status status="PASS" starttime="20241125 18:30:03.541" endtime="20241125 18:30:03.564"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.565" endtime="20241125 18:30:03.565"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.565" endtime="20241125 18:30:03.565"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.564" endtime="20241125 18:30:03.565"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.541" endtime="20241125 18:30:03.565"/>
</try>
<msg timestamp="20241125 18:30:03.565" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.540" endtime="20241125 18:30:03.565"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:03.565" endtime="20241125 18:30:03.567"/>
</return>
<msg timestamp="20241125 18:30:03.567" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.538" endtime="20241125 18:30:03.567"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.570" endtime="20241125 18:30:03.570"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.570" endtime="20241125 18:30:03.571"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.570" endtime="20241125 18:30:03.571"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.570" endtime="20241125 18:30:03.571"/>
</if>
<status status="PASS" starttime="20241125 18:30:03.568" endtime="20241125 18:30:03.571"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.537" endtime="20241125 18:30:03.571"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.473" endtime="20241125 18:30:03.571"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:03.572" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:03.572" endtime="20241125 18:30:03.572"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.574" endtime="20241125 18:30:03.574"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.574" endtime="20241125 18:30:03.574"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:03.576" endtime="20241125 18:30:03.576"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.574" endtime="20241125 18:30:03.576"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.574" endtime="20241125 18:30:03.576"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 18:30:03.577" endtime="20241125 18:30:03.737"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.577" endtime="20241125 18:30:03.737"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.738" endtime="20241125 18:30:03.738"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.738" endtime="20241125 18:30:03.738"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.737" endtime="20241125 18:30:03.738"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.576" endtime="20241125 18:30:03.738"/>
</try>
<status status="PASS" starttime="20241125 18:30:03.573" endtime="20241125 18:30:03.739"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.573" endtime="20241125 18:30:03.739"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.572" endtime="20241125 18:30:03.739"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.740" endtime="20241125 18:30:03.740"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.739" endtime="20241125 18:30:03.740"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.572" endtime="20241125 18:30:03.740"/>
</try>
<status status="PASS" starttime="20241125 18:30:03.471" endtime="20241125 18:30:03.740"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.465" endtime="20241125 18:30:03.740"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.744" endtime="20241125 18:30:03.744"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.748" endtime="20241125 18:30:03.748"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.740" endtime="20241125 18:30:03.748"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.750" endtime="20241125 18:30:03.751"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.749" endtime="20241125 18:30:03.751"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.755" endtime="20241125 18:30:03.755"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.751" endtime="20241125 18:30:03.755"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.762" endtime="20241125 18:30:03.762"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.762" endtime="20241125 18:30:03.762"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.763" endtime="20241125 18:30:03.764"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.763" endtime="20241125 18:30:03.764"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.763" endtime="20241125 18:30:03.764"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.765" endtime="20241125 18:30:03.766"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.755" endtime="20241125 18:30:03.766"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.770" endtime="20241125 18:30:03.770"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.766" endtime="20241125 18:30:03.770"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.773" endtime="20241125 18:30:03.774"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.774" endtime="20241125 18:30:03.774"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.774" endtime="20241125 18:30:03.774"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.776" endtime="20241125 18:30:03.776"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.776" endtime="20241125 18:30:03.777"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.774" endtime="20241125 18:30:03.777"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.770" endtime="20241125 18:30:03.777"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:03.791" endtime="20241125 18:30:03.791"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.801" endtime="20241125 18:30:03.801"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.777" endtime="20241125 18:30:03.802"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.805" endtime="20241125 18:30:03.805"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.807" endtime="20241125 18:30:03.807"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.806" endtime="20241125 18:30:03.807"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.808" endtime="20241125 18:30:03.808"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.808" endtime="20241125 18:30:03.809"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.806" endtime="20241125 18:30:03.809"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.802" endtime="20241125 18:30:03.809"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:03.830" endtime="20241125 18:30:03.830"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.837" endtime="20241125 18:30:03.838"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.810" endtime="20241125 18:30:03.838"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.840" endtime="20241125 18:30:03.840"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.841" endtime="20241125 18:30:03.841"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.841" endtime="20241125 18:30:03.841"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.842" endtime="20241125 18:30:03.842"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.841" endtime="20241125 18:30:03.842"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.840" endtime="20241125 18:30:03.842"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.838" endtime="20241125 18:30:03.842"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.846" endtime="20241125 18:30:03.846"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.842" endtime="20241125 18:30:03.846"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:03.858" endtime="20241125 18:30:03.858"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.858" endtime="20241125 18:30:03.858"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.847" endtime="20241125 18:30:03.860"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.461" endtime="20241125 18:30:03.860"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:03.860" endtime="20241125 18:30:03.861"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:03.861" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:03.861" endtime="20241125 18:30:03.861"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:03.861" endtime="20241125 18:30:03.861"/>
</return>
<msg timestamp="20241125 18:30:03.861" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:03.460" endtime="20241125 18:30:03.861"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.864" level="INFO">${key} = testCaseFlowSequenceId:6::flowActionSequenceId:6</msg>
<status status="PASS" starttime="20241125 18:30:03.863" endtime="20241125 18:30:03.864"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.867" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:03.866" endtime="20241125 18:30:03.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.868" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:03.868" endtime="20241125 18:30:03.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.869" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.869" endtime="20241125 18:30:03.869"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.870" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:03.869" endtime="20241125 18:30:03.870"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.871" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.870" endtime="20241125 18:30:03.871"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.872" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:03.871" endtime="20241125 18:30:03.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.873" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:03.872" endtime="20241125 18:30:03.873"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:03.873" endtime="20241125 18:30:03.874"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:03.881" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:03.879" endtime="20241125 18:30:03.881"/>
</kw>
<msg timestamp="20241125 18:30:03.882" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.879" endtime="20241125 18:30:03.882"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.884" endtime="20241125 18:30:03.884"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.885" endtime="20241125 18:30:03.886"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.885" endtime="20241125 18:30:03.886"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.887" endtime="20241125 18:30:03.887"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.886" endtime="20241125 18:30:03.887"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.885" endtime="20241125 18:30:03.887"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.884" endtime="20241125 18:30:03.887"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.883" endtime="20241125 18:30:03.887"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:03.887" endtime="20241125 18:30:03.887"/>
</return>
<msg timestamp="20241125 18:30:03.888" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.877" endtime="20241125 18:30:03.888"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:03.893" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:03.892" endtime="20241125 18:30:03.893"/>
</kw>
<msg timestamp="20241125 18:30:03.893" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.891" endtime="20241125 18:30:03.893"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.894" endtime="20241125 18:30:03.894"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.895" endtime="20241125 18:30:03.895"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.895" endtime="20241125 18:30:03.895"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.895" endtime="20241125 18:30:03.895"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.895" endtime="20241125 18:30:03.895"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.895" endtime="20241125 18:30:03.895"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.894" endtime="20241125 18:30:03.896"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.894" endtime="20241125 18:30:03.896"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:03.896" endtime="20241125 18:30:03.896"/>
</return>
<msg timestamp="20241125 18:30:03.897" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:03.890" endtime="20241125 18:30:03.897"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:03.899" endtime="20241125 18:30:03.899"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.899" endtime="20241125 18:30:03.899"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.899" endtime="20241125 18:30:03.900"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.901" endtime="20241125 18:30:03.901"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:03.901" endtime="20241125 18:30:03.901"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.900" endtime="20241125 18:30:03.901"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.902" endtime="20241125 18:30:03.902"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:03.902" endtime="20241125 18:30:03.902"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.901" endtime="20241125 18:30:03.902"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.900" endtime="20241125 18:30:03.902"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.900" endtime="20241125 18:30:03.902"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.900" endtime="20241125 18:30:03.903"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.903" endtime="20241125 18:30:03.904"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:03.904" endtime="20241125 18:30:03.904"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.903" endtime="20241125 18:30:03.904"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.904" endtime="20241125 18:30:03.905"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:03.905" endtime="20241125 18:30:03.905"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.904" endtime="20241125 18:30:03.905"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.903" endtime="20241125 18:30:03.905"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.903" endtime="20241125 18:30:03.905"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.903" endtime="20241125 18:30:03.905"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.898" endtime="20241125 18:30:03.906"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.897" endtime="20241125 18:30:03.906"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:03.907" endtime="20241125 18:30:03.907"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.907" endtime="20241125 18:30:03.908"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.907" endtime="20241125 18:30:03.908"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.908" endtime="20241125 18:30:03.908"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.908" endtime="20241125 18:30:03.909"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.908" endtime="20241125 18:30:03.909"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.910" endtime="20241125 18:30:03.910"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:03.910" endtime="20241125 18:30:03.910"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.909" endtime="20241125 18:30:03.910"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.911" endtime="20241125 18:30:03.911"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:03.911" endtime="20241125 18:30:03.911"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:03.910" endtime="20241125 18:30:03.911"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.909" endtime="20241125 18:30:03.911"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.909" endtime="20241125 18:30:03.911"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:03.909" endtime="20241125 18:30:03.911"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:03.907" endtime="20241125 18:30:03.912"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.906" endtime="20241125 18:30:03.912"/>
</if>
<status status="PASS" starttime="20241125 18:30:03.865" endtime="20241125 18:30:03.912"/>
</iter>
<status status="PASS" starttime="20241125 18:30:03.864" endtime="20241125 18:30:03.912"/>
</for>
<msg timestamp="20241125 18:30:03.912" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:03.862" endtime="20241125 18:30:03.912"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:03.913" endtime="20241125 18:30:03.914"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:03.924" endtime="20241125 18:30:03.924"/>
</kw>
<msg timestamp="20241125 18:30:03.925" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.923" endtime="20241125 18:30:03.925"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.927" level="INFO">${values} = {'id': '5', 'name': 'Click profile icon dropdown item', 'xpath': '//p[text()="Profile"]', 'pageId': '2', 'createdAt': '2024-11-25T08:05:42.554Z', 'updatedAt': '2024-11-25T08:05:42.554Z'}</msg>
<status status="PASS" starttime="20241125 18:30:03.926" endtime="20241125 18:30:03.927"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.928" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.928" endtime="20241125 18:30:03.929"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.928" endtime="20241125 18:30:03.929"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.929" endtime="20241125 18:30:03.929"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.929" endtime="20241125 18:30:03.929"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.927" endtime="20241125 18:30:03.930"/>
</if>
<status status="PASS" starttime="20241125 18:30:03.926" endtime="20241125 18:30:03.930"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.925" endtime="20241125 18:30:03.930"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:03.930" endtime="20241125 18:30:03.930"/>
</return>
<msg timestamp="20241125 18:30:03.931" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:03.922" endtime="20241125 18:30:03.931"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.934" level="INFO">${xpath} = //p[text()="Profile"]</msg>
<status status="PASS" starttime="20241125 18:30:03.933" endtime="20241125 18:30:03.934"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.932" endtime="20241125 18:30:03.934"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.935" endtime="20241125 18:30:03.935"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.935" endtime="20241125 18:30:03.935"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.931" endtime="20241125 18:30:03.936"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:03.938" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '323', 'status': 'COMPLETED', 'actionName': 'Click profile dropdown item', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMessag...</msg>
<status status="PASS" starttime="20241125 18:30:03.936" endtime="20241125 18:30:03.938"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:03.940" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "323", "status": "COMPLETED", "actionName": "Click profile dropdown item", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMess...</msg>
<status status="PASS" starttime="20241125 18:30:03.939" endtime="20241125 18:30:03.940"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:03.949" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:03.950" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:03.941" endtime="20241125 18:30:03.950"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:03.951" endtime="20241125 18:30:03.952"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:03.953" endtime="20241125 18:30:03.953"/>
</return>
<status status="PASS" starttime="20241125 18:30:03.939" endtime="20241125 18:30:03.954"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.914" endtime="20241125 18:30:03.955"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.452" endtime="20241125 18:30:03.955"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.955" endtime="20241125 18:30:03.955"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:03.955" endtime="20241125 18:30:03.957"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.957" endtime="20241125 18:30:03.957"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.955" endtime="20241125 18:30:03.957"/>
</branch>
<status status="PASS" starttime="20241125 18:30:03.452" endtime="20241125 18:30:03.957"/>
</try>
<status status="PASS" starttime="20241125 18:30:03.452" endtime="20241125 18:30:03.958"/>
</iter>
<status status="PASS" starttime="20241125 18:30:01.612" endtime="20241125 18:30:03.958"/>
</for>
<status status="PASS" starttime="20241125 18:30:01.612" endtime="20241125 18:30:03.958"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.611" endtime="20241125 18:30:03.959"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:03.963" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '85', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241125 18:30:03.961" endtime="20241125 18:30:03.963"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:03.968" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "85", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241125 18:30:03.965" endtime="20241125 18:30:03.968"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:03.987" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:03.988" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:03.968" endtime="20241125 18:30:03.988"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:03.989" endtime="20241125 18:30:03.991"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:03.991" endtime="20241125 18:30:03.991"/>
</return>
<status status="PASS" starttime="20241125 18:30:03.964" endtime="20241125 18:30:03.992"/>
</kw>
<status status="PASS" starttime="20241125 18:30:03.959" endtime="20241125 18:30:03.992"/>
</kw>
<status status="PASS" starttime="20241125 18:30:01.599" endtime="20241125 18:30:03.992"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.993" endtime="20241125 18:30:03.993"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:03.993" endtime="20241125 18:30:03.993"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:03.994" endtime="20241125 18:30:03.994"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:03.992" endtime="20241125 18:30:03.994"/>
</branch>
<status status="PASS" starttime="20241125 18:30:01.599" endtime="20241125 18:30:03.995"/>
</try>
<status status="PASS" starttime="20241125 18:30:01.598" endtime="20241125 18:30:03.995"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '7', 'testCaseId': '3', 'flowId': '4', 'order': 2, 'createdAt': '2024-11-25T11:15:44.388Z', 'updatedAt': '2024-11-25T12:29:01.988Z', 'flow': {'id': '4', 'name': 'Create vehicle', 'projectId': '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:03.999" level="INFO">${flow} = {'id': '4', 'name': 'Create vehicle', 'projectId': '1', 'createdAt': '2024-11-25T11:15:26.197Z', 'updatedAt': '2024-11-25T12:28:38.155Z', 'flowActionSequences': [{'id': '9', 'actionId': '9', 'flowId':...</msg>
<status status="PASS" starttime="20241125 18:30:03.996" endtime="20241125 18:30:03.999"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:04.000" endtime="20241125 18:30:04.002"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:04.011" endtime="20241125 18:30:04.011"/>
</kw>
<msg timestamp="20241125 18:30:04.012" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.010" endtime="20241125 18:30:04.012"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:04.014" level="INFO">${values} = [{'id': '9', 'actionId': '9', 'flowId': '4', 'order': 0, 'createdAt': '2024-11-25T11:15:26.506Z', 'updatedAt': '2024-11-25T12:28:37.844Z', 'action': {'id': '9', 'name': 'Click Add vehicle icon', 'type...</msg>
<status status="PASS" starttime="20241125 18:30:04.013" endtime="20241125 18:30:04.014"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:04.017" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.016" endtime="20241125 18:30:04.017"/>
</kw>
<status status="PASS" starttime="20241125 18:30:04.016" endtime="20241125 18:30:04.017"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:04.019" endtime="20241125 18:30:04.019"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:04.017" endtime="20241125 18:30:04.019"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.015" endtime="20241125 18:30:04.020"/>
</if>
<status status="PASS" starttime="20241125 18:30:04.012" endtime="20241125 18:30:04.020"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.012" endtime="20241125 18:30:04.020"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:04.020" endtime="20241125 18:30:04.021"/>
</return>
<msg timestamp="20241125 18:30:04.022" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.009" endtime="20241125 18:30:04.022"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '9', 'actionId': '9', 'flowId': '4', 'order': 0, 'createdAt': '2024-11-25T11:15:26.506Z', 'updatedAt': '2024-11-25T12:28:37.844Z', 'action': {'id': '9', 'name': 'Click Add vehicle icon', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:04.025" level="INFO">${action} = {'id': '9', 'name': 'Click Add vehicle icon', 'type': 'CLICK', 'selectorI': '8', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:44:11.329Z', 'updatedAt': '2024-11-25T10:...</msg>
<status status="PASS" starttime="20241125 18:30:04.024" endtime="20241125 18:30:04.025"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:04.025" endtime="20241125 18:30:04.026"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:04.026" level="INFO">${input} = {'id': '10', 'actionId': '9', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:44:11.572Z', 'updatedAt': '2024-11-25T10:44:11.572Z'}</msg>
<status status="PASS" starttime="20241125 18:30:04.026" endtime="20241125 18:30:04.027"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:04.027" endtime="20241125 18:30:04.028"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:04.028" endtime="20241125 18:30:04.028"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:04.027" endtime="20241125 18:30:04.028"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.027" endtime="20241125 18:30:04.028"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:04.031" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:04.030" endtime="20241125 18:30:04.031"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:04.033" endtime="20241125 18:30:04.033"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:04.033" endtime="20241125 18:30:04.034"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:04.035" endtime="20241125 18:30:04.035"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:04.034" endtime="20241125 18:30:04.035"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:04.068" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state attached</msg>
<status status="PASS" starttime="20241125 18:30:04.057" endtime="20241125 18:30:04.068"/>
</kw>
<msg timestamp="20241125 18:30:04.068" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.056" endtime="20241125 18:30:04.068"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:04.068" endtime="20241125 18:30:04.069"/>
</return>
<status status="PASS" starttime="20241125 18:30:04.055" endtime="20241125 18:30:04.069"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:04.070" endtime="20241125 18:30:04.070"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:04.071" endtime="20241125 18:30:04.071"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:04.069" endtime="20241125 18:30:04.071"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.055" endtime="20241125 18:30:04.071"/>
</try>
<msg timestamp="20241125 18:30:04.072" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.054" endtime="20241125 18:30:04.072"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:04.072" endtime="20241125 18:30:04.072"/>
</return>
<status status="PASS" starttime="20241125 18:30:04.050" endtime="20241125 18:30:04.072"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:04.072" endtime="20241125 18:30:04.073"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:04.072" endtime="20241125 18:30:04.073"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.050" endtime="20241125 18:30:04.073"/>
</try>
<msg timestamp="20241125 18:30:04.073" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.049" endtime="20241125 18:30:04.073"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:04.078" endtime="20241125 18:30:04.078"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:04.079" endtime="20241125 18:30:04.079"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:04.078" endtime="20241125 18:30:04.079"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.078" endtime="20241125 18:30:04.079"/>
</if>
<status status="PASS" starttime="20241125 18:30:04.076" endtime="20241125 18:30:04.080"/>
</kw>
<status status="PASS" starttime="20241125 18:30:04.046" endtime="20241125 18:30:04.080"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:05.512" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state visible</msg>
<status status="PASS" starttime="20241125 18:30:04.089" endtime="20241125 18:30:05.512"/>
</kw>
<msg timestamp="20241125 18:30:05.513" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.089" endtime="20241125 18:30:05.514"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:05.514" endtime="20241125 18:30:05.514"/>
</return>
<status status="PASS" starttime="20241125 18:30:04.088" endtime="20241125 18:30:05.514"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.515" endtime="20241125 18:30:05.515"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.515" endtime="20241125 18:30:05.515"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.514" endtime="20241125 18:30:05.515"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.088" endtime="20241125 18:30:05.515"/>
</try>
<msg timestamp="20241125 18:30:05.517" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.087" endtime="20241125 18:30:05.517"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:05.517" endtime="20241125 18:30:05.517"/>
</return>
<msg timestamp="20241125 18:30:05.517" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:04.085" endtime="20241125 18:30:05.517"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.521" endtime="20241125 18:30:05.521"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.521" endtime="20241125 18:30:05.521"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.521" endtime="20241125 18:30:05.522"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.520" endtime="20241125 18:30:05.522"/>
</if>
<status status="PASS" starttime="20241125 18:30:05.519" endtime="20241125 18:30:05.522"/>
</kw>
<status status="PASS" starttime="20241125 18:30:04.084" endtime="20241125 18:30:05.522"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:05.552" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state enabled</msg>
<status status="PASS" starttime="20241125 18:30:05.529" endtime="20241125 18:30:05.552"/>
</kw>
<msg timestamp="20241125 18:30:05.553" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.529" endtime="20241125 18:30:05.553"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:05.553" endtime="20241125 18:30:05.553"/>
</return>
<status status="PASS" starttime="20241125 18:30:05.528" endtime="20241125 18:30:05.553"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.554" endtime="20241125 18:30:05.554"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.554" endtime="20241125 18:30:05.554"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.553" endtime="20241125 18:30:05.554"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.528" endtime="20241125 18:30:05.554"/>
</try>
<msg timestamp="20241125 18:30:05.555" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.527" endtime="20241125 18:30:05.555"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:05.555" endtime="20241125 18:30:05.555"/>
</return>
<msg timestamp="20241125 18:30:05.555" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.526" endtime="20241125 18:30:05.555"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.560" endtime="20241125 18:30:05.560"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.560" endtime="20241125 18:30:05.560"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.559" endtime="20241125 18:30:05.560"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.559" endtime="20241125 18:30:05.561"/>
</if>
<status status="PASS" starttime="20241125 18:30:05.558" endtime="20241125 18:30:05.561"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.525" endtime="20241125 18:30:05.561"/>
</kw>
<status status="PASS" starttime="20241125 18:30:04.043" endtime="20241125 18:30:05.561"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:05.562" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:05.562" endtime="20241125 18:30:05.562"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.565" endtime="20241125 18:30:05.565"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.565" endtime="20241125 18:30:05.565"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:05.565" endtime="20241125 18:30:05.567"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.565" endtime="20241125 18:30:05.567"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.564" endtime="20241125 18:30:05.567"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 18:30:05.567" endtime="20241125 18:30:05.661"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.567" endtime="20241125 18:30:05.662"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.662" endtime="20241125 18:30:05.662"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.663" endtime="20241125 18:30:05.663"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.662" endtime="20241125 18:30:05.663"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.567" endtime="20241125 18:30:05.664"/>
</try>
<status status="PASS" starttime="20241125 18:30:05.564" endtime="20241125 18:30:05.664"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.563" endtime="20241125 18:30:05.664"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.563" endtime="20241125 18:30:05.664"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.665" endtime="20241125 18:30:05.665"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.664" endtime="20241125 18:30:05.665"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.562" endtime="20241125 18:30:05.665"/>
</try>
<status status="PASS" starttime="20241125 18:30:04.041" endtime="20241125 18:30:05.665"/>
</kw>
<status status="PASS" starttime="20241125 18:30:04.036" endtime="20241125 18:30:05.665"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.668" endtime="20241125 18:30:05.668"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.671" endtime="20241125 18:30:05.671"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.665" endtime="20241125 18:30:05.671"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.672" endtime="20241125 18:30:05.673"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.671" endtime="20241125 18:30:05.673"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.677" endtime="20241125 18:30:05.677"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.673" endtime="20241125 18:30:05.677"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.680" endtime="20241125 18:30:05.681"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.681" endtime="20241125 18:30:05.681"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.682" endtime="20241125 18:30:05.682"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.681" endtime="20241125 18:30:05.683"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.681" endtime="20241125 18:30:05.683"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.683" endtime="20241125 18:30:05.683"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.677" endtime="20241125 18:30:05.683"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.685" endtime="20241125 18:30:05.685"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.683" endtime="20241125 18:30:05.685"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.688" endtime="20241125 18:30:05.688"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.688" endtime="20241125 18:30:05.688"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.688" endtime="20241125 18:30:05.688"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.689" endtime="20241125 18:30:05.689"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.689" endtime="20241125 18:30:05.689"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.688" endtime="20241125 18:30:05.689"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.685" endtime="20241125 18:30:05.689"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:05.697" endtime="20241125 18:30:05.698"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.702" endtime="20241125 18:30:05.702"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.689" endtime="20241125 18:30:05.702"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.704" endtime="20241125 18:30:05.705"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.705" endtime="20241125 18:30:05.705"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.705" endtime="20241125 18:30:05.705"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.706" endtime="20241125 18:30:05.706"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.705" endtime="20241125 18:30:05.706"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.705" endtime="20241125 18:30:05.707"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.703" endtime="20241125 18:30:05.707"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:05.715" endtime="20241125 18:30:05.715"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.720" endtime="20241125 18:30:05.721"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.707" endtime="20241125 18:30:05.721"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.722" endtime="20241125 18:30:05.723"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.723" endtime="20241125 18:30:05.723"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.723" endtime="20241125 18:30:05.724"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.724" endtime="20241125 18:30:05.724"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.724" endtime="20241125 18:30:05.724"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.723" endtime="20241125 18:30:05.724"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.721" endtime="20241125 18:30:05.725"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.729" endtime="20241125 18:30:05.729"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.725" endtime="20241125 18:30:05.729"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:05.737" endtime="20241125 18:30:05.738"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.738" endtime="20241125 18:30:05.738"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.729" endtime="20241125 18:30:05.738"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.031" endtime="20241125 18:30:05.738"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:05.739" endtime="20241125 18:30:05.739"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:05.740" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:05.740" endtime="20241125 18:30:05.740"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:05.740" endtime="20241125 18:30:05.741"/>
</return>
<msg timestamp="20241125 18:30:05.741" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:04.029" endtime="20241125 18:30:05.741"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.743" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:9</msg>
<status status="PASS" starttime="20241125 18:30:05.742" endtime="20241125 18:30:05.743"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.745" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:05.744" endtime="20241125 18:30:05.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.747" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:05.746" endtime="20241125 18:30:05.747"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.748" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.747" endtime="20241125 18:30:05.748"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.748" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:05.748" endtime="20241125 18:30:05.748"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.749" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.749" endtime="20241125 18:30:05.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.750" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:05.749" endtime="20241125 18:30:05.750"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.750" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:05.750" endtime="20241125 18:30:05.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:05.751" endtime="20241125 18:30:05.751"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:05.755" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:05.754" endtime="20241125 18:30:05.755"/>
</kw>
<msg timestamp="20241125 18:30:05.755" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.754" endtime="20241125 18:30:05.755"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.756" endtime="20241125 18:30:05.756"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.756" endtime="20241125 18:30:05.757"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.756" endtime="20241125 18:30:05.757"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.757" endtime="20241125 18:30:05.757"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.757" endtime="20241125 18:30:05.757"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.756" endtime="20241125 18:30:05.757"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.755" endtime="20241125 18:30:05.758"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.755" endtime="20241125 18:30:05.758"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:05.758" endtime="20241125 18:30:05.758"/>
</return>
<msg timestamp="20241125 18:30:05.758" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.753" endtime="20241125 18:30:05.758"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:05.762" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:05.761" endtime="20241125 18:30:05.763"/>
</kw>
<msg timestamp="20241125 18:30:05.763" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.761" endtime="20241125 18:30:05.763"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.764" endtime="20241125 18:30:05.764"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.765" endtime="20241125 18:30:05.765"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.764" endtime="20241125 18:30:05.765"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.765" endtime="20241125 18:30:05.767"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.765" endtime="20241125 18:30:05.767"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.764" endtime="20241125 18:30:05.767"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.763" endtime="20241125 18:30:05.767"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.763" endtime="20241125 18:30:05.767"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:05.767" endtime="20241125 18:30:05.767"/>
</return>
<msg timestamp="20241125 18:30:05.768" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.760" endtime="20241125 18:30:05.768"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:05.769" endtime="20241125 18:30:05.769"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.768" endtime="20241125 18:30:05.769"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.768" endtime="20241125 18:30:05.769"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.769" endtime="20241125 18:30:05.770"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:05.770" endtime="20241125 18:30:05.770"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.769" endtime="20241125 18:30:05.770"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.770" endtime="20241125 18:30:05.770"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:05.770" endtime="20241125 18:30:05.771"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.770" endtime="20241125 18:30:05.771"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.769" endtime="20241125 18:30:05.771"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.769" endtime="20241125 18:30:05.771"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.769" endtime="20241125 18:30:05.771"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.772" endtime="20241125 18:30:05.772"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:05.772" endtime="20241125 18:30:05.772"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.771" endtime="20241125 18:30:05.772"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.772" endtime="20241125 18:30:05.772"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:05.772" endtime="20241125 18:30:05.773"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.772" endtime="20241125 18:30:05.773"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.771" endtime="20241125 18:30:05.773"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.771" endtime="20241125 18:30:05.773"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.771" endtime="20241125 18:30:05.773"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.768" endtime="20241125 18:30:05.773"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.768" endtime="20241125 18:30:05.773"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:05.774" endtime="20241125 18:30:05.774"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.774" endtime="20241125 18:30:05.774"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.774" endtime="20241125 18:30:05.774"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.775" endtime="20241125 18:30:05.775"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.774" endtime="20241125 18:30:05.775"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.774" endtime="20241125 18:30:05.775"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.775" endtime="20241125 18:30:05.775"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:05.775" endtime="20241125 18:30:05.775"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.775" endtime="20241125 18:30:05.775"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.777" endtime="20241125 18:30:05.777"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:05.777" endtime="20241125 18:30:05.777"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.775" endtime="20241125 18:30:05.777"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.775" endtime="20241125 18:30:05.777"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.775" endtime="20241125 18:30:05.777"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.775" endtime="20241125 18:30:05.777"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.774" endtime="20241125 18:30:05.777"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.773" endtime="20241125 18:30:05.777"/>
</if>
<status status="PASS" starttime="20241125 18:30:05.744" endtime="20241125 18:30:05.778"/>
</iter>
<status status="PASS" starttime="20241125 18:30:05.743" endtime="20241125 18:30:05.778"/>
</for>
<msg timestamp="20241125 18:30:05.778" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:05.741" endtime="20241125 18:30:05.778"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:05.778" endtime="20241125 18:30:05.778"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:05.785" endtime="20241125 18:30:05.785"/>
</kw>
<msg timestamp="20241125 18:30:05.787" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.785" endtime="20241125 18:30:05.787"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.787" level="INFO">${values} = {'id': '8', 'name': 'Add vehicle icon', 'xpath': '//p[text()="VEHICLE"]//parent::div//following-sibling::img', 'pageId': '3', 'createdAt': '2024-11-25T10:44:06.334Z', 'updatedAt': '2024-11-25T10:44:06...</msg>
<status status="PASS" starttime="20241125 18:30:05.787" endtime="20241125 18:30:05.787"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.789" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.788" endtime="20241125 18:30:05.789"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.788" endtime="20241125 18:30:05.789"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.789" endtime="20241125 18:30:05.789"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.789" endtime="20241125 18:30:05.789"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.787" endtime="20241125 18:30:05.789"/>
</if>
<status status="PASS" starttime="20241125 18:30:05.787" endtime="20241125 18:30:05.789"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.787" endtime="20241125 18:30:05.789"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:05.789" endtime="20241125 18:30:05.789"/>
</return>
<msg timestamp="20241125 18:30:05.790" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.784" endtime="20241125 18:30:05.790"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.790" level="INFO">${xpath} = //p[text()="VEHICLE"]//parent::div//following-sibling::img</msg>
<status status="PASS" starttime="20241125 18:30:05.790" endtime="20241125 18:30:05.790"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.790" endtime="20241125 18:30:05.790"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.792" endtime="20241125 18:30:05.792"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.790" endtime="20241125 18:30:05.792"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.790" endtime="20241125 18:30:05.792"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:05.793" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '324', 'status': 'COMPLETED', 'actionName': 'Click Add vehicle icon', 'actionType': 'CLICK', 'actionXpath': '//p[text()="VEHICLE"]//parent::div//following-sibling::img'...</msg>
<status status="PASS" starttime="20241125 18:30:05.792" endtime="20241125 18:30:05.793"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:05.795" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "324", "status": "COMPLETED", "actionName": "Click Add vehicle icon", "actionType": "CLICK", "actionXpath": "//p[text()=\"VEHICLE\"]//parent::div//following-sibling::im...</msg>
<status status="PASS" starttime="20241125 18:30:05.794" endtime="20241125 18:30:05.795"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:05.802" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:05.802" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:05.795" endtime="20241125 18:30:05.802"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:05.802" endtime="20241125 18:30:05.803"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:05.803" endtime="20241125 18:30:05.804"/>
</return>
<status status="PASS" starttime="20241125 18:30:05.794" endtime="20241125 18:30:05.804"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.779" endtime="20241125 18:30:05.804"/>
</kw>
<status status="PASS" starttime="20241125 18:30:04.024" endtime="20241125 18:30:05.804"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.805" endtime="20241125 18:30:05.805"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:05.805" endtime="20241125 18:30:05.805"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.805" endtime="20241125 18:30:05.805"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.805" endtime="20241125 18:30:05.805"/>
</branch>
<status status="PASS" starttime="20241125 18:30:04.023" endtime="20241125 18:30:05.806"/>
</try>
<status status="PASS" starttime="20241125 18:30:04.023" endtime="20241125 18:30:05.806"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '10', 'actionId': '10', 'flowId': '4', 'order': 1, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.853Z', 'action': {'id': '10', 'name': 'Is vehicle details popup fou...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.809" level="INFO">${action} = {'id': '10', 'name': 'Is vehicle details popup found', 'type': 'IS_ELEMENT_VISIBLE', 'selectorI': '9', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:46:45.996Z', 'updat...</msg>
<status status="PASS" starttime="20241125 18:30:05.807" endtime="20241125 18:30:05.809"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:05.809" endtime="20241125 18:30:05.811"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:05.811" level="INFO">${input} = {'id': '11', 'actionId': '10', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:46:46.217Z', 'updatedAt': '2024-11-25T10:46:46.217Z'}</msg>
<status status="PASS" starttime="20241125 18:30:05.811" endtime="20241125 18:30:05.811"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.812" endtime="20241125 18:30:05.812"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.812" endtime="20241125 18:30:05.812"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.812" endtime="20241125 18:30:05.812"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.812" endtime="20241125 18:30:05.812"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.814" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:05.813" endtime="20241125 18:30:05.814"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:05.815" endtime="20241125 18:30:05.815"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.815" endtime="20241125 18:30:05.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:05.816" endtime="20241125 18:30:05.816"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.816" endtime="20241125 18:30:05.816"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.820" endtime="20241125 18:30:05.820"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.818" endtime="20241125 18:30:05.820"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.824" endtime="20241125 18:30:05.824"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.826" endtime="20241125 18:30:05.826"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.821" endtime="20241125 18:30:05.826"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.830" endtime="20241125 18:30:05.830"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.828" endtime="20241125 18:30:05.830"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.835" endtime="20241125 18:30:05.836"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.830" endtime="20241125 18:30:05.836"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.839" endtime="20241125 18:30:05.839"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.840" endtime="20241125 18:30:05.840"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.841" endtime="20241125 18:30:05.841"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.840" endtime="20241125 18:30:05.841"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.840" endtime="20241125 18:30:05.841"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.841" endtime="20241125 18:30:05.841"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.836" endtime="20241125 18:30:05.842"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.844" endtime="20241125 18:30:05.844"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.842" endtime="20241125 18:30:05.844"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.847" endtime="20241125 18:30:05.848"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.848" endtime="20241125 18:30:05.849"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.848" endtime="20241125 18:30:05.849"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.849" endtime="20241125 18:30:05.849"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.849" endtime="20241125 18:30:05.849"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.848" endtime="20241125 18:30:05.850"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.844" endtime="20241125 18:30:05.850"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:05.858" endtime="20241125 18:30:05.858"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.863" endtime="20241125 18:30:05.863"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.850" endtime="20241125 18:30:05.863"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.865" endtime="20241125 18:30:05.865"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.866" endtime="20241125 18:30:05.866"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.866" endtime="20241125 18:30:05.866"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.867" endtime="20241125 18:30:05.867"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.866" endtime="20241125 18:30:05.867"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.866" endtime="20241125 18:30:05.867"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.864" endtime="20241125 18:30:05.867"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:05.875" endtime="20241125 18:30:05.875"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.879" endtime="20241125 18:30:05.879"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.867" endtime="20241125 18:30:05.879"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:05.893" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"] at state attached</msg>
<status status="PASS" starttime="20241125 18:30:05.885" endtime="20241125 18:30:05.893"/>
</kw>
<msg timestamp="20241125 18:30:05.894" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.885" endtime="20241125 18:30:05.894"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:05.894" endtime="20241125 18:30:05.894"/>
</return>
<status status="PASS" starttime="20241125 18:30:05.884" endtime="20241125 18:30:05.894"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.895" endtime="20241125 18:30:05.895"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.895" endtime="20241125 18:30:05.895"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.894" endtime="20241125 18:30:05.895"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.884" endtime="20241125 18:30:05.896"/>
</try>
<msg timestamp="20241125 18:30:05.896" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.884" endtime="20241125 18:30:05.896"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:05.896" endtime="20241125 18:30:05.896"/>
</return>
<status status="PASS" starttime="20241125 18:30:05.882" endtime="20241125 18:30:05.896"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:05.896" endtime="20241125 18:30:05.898"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.896" endtime="20241125 18:30:05.898"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.882" endtime="20241125 18:30:05.898"/>
</try>
<msg timestamp="20241125 18:30:05.898" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.881" endtime="20241125 18:30:05.898"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.899" level="INFO">${value} = TRUE</msg>
<status status="PASS" starttime="20241125 18:30:05.899" endtime="20241125 18:30:05.899"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.898" endtime="20241125 18:30:05.899"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.899" endtime="20241125 18:30:05.900"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.899" endtime="20241125 18:30:05.900"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.898" endtime="20241125 18:30:05.900"/>
</if>
<status status="PASS" starttime="20241125 18:30:05.880" endtime="20241125 18:30:05.900"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.903" endtime="20241125 18:30:05.903"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.900" endtime="20241125 18:30:05.903"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:05.911" endtime="20241125 18:30:05.911"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.911" endtime="20241125 18:30:05.912"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.903" endtime="20241125 18:30:05.912"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.814" endtime="20241125 18:30:05.912"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:05.912" endtime="20241125 18:30:05.913"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:05.914" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:05.913" endtime="20241125 18:30:05.914"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:05.914" endtime="20241125 18:30:05.914"/>
</return>
<msg timestamp="20241125 18:30:05.914" level="INFO">${value} = TRUE</msg>
<status status="PASS" starttime="20241125 18:30:05.812" endtime="20241125 18:30:05.914"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.916" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:10</msg>
<status status="PASS" starttime="20241125 18:30:05.915" endtime="20241125 18:30:05.916"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.917" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:05.916" endtime="20241125 18:30:05.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.917" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:05.917" endtime="20241125 18:30:05.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.918" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.918" endtime="20241125 18:30:05.918"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.918" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:05.918" endtime="20241125 18:30:05.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.920" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.920" endtime="20241125 18:30:05.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.920" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:05.920" endtime="20241125 18:30:05.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.921" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:05.920" endtime="20241125 18:30:05.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:05.921" endtime="20241125 18:30:05.922"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:05.927" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:05.925" endtime="20241125 18:30:05.927"/>
</kw>
<msg timestamp="20241125 18:30:05.927" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.925" endtime="20241125 18:30:05.927"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.928" endtime="20241125 18:30:05.928"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.929" endtime="20241125 18:30:05.929"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.928" endtime="20241125 18:30:05.929"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.930" endtime="20241125 18:30:05.930"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.929" endtime="20241125 18:30:05.930"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.928" endtime="20241125 18:30:05.930"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.927" endtime="20241125 18:30:05.930"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.927" endtime="20241125 18:30:05.930"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:05.930" endtime="20241125 18:30:05.930"/>
</return>
<msg timestamp="20241125 18:30:05.931" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.924" endtime="20241125 18:30:05.931"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:05.937" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:05.935" endtime="20241125 18:30:05.937"/>
</kw>
<msg timestamp="20241125 18:30:05.937" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.935" endtime="20241125 18:30:05.937"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.938" endtime="20241125 18:30:05.938"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.939" endtime="20241125 18:30:05.939"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.938" endtime="20241125 18:30:05.939"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.939" endtime="20241125 18:30:05.940"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.939" endtime="20241125 18:30:05.940"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.938" endtime="20241125 18:30:05.940"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.938" endtime="20241125 18:30:05.940"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.937" endtime="20241125 18:30:05.940"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:05.940" endtime="20241125 18:30:05.940"/>
</return>
<msg timestamp="20241125 18:30:05.941" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:05.934" endtime="20241125 18:30:05.941"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:05.942" endtime="20241125 18:30:05.942"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.942" endtime="20241125 18:30:05.942"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.941" endtime="20241125 18:30:05.942"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.943" endtime="20241125 18:30:05.943"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:05.943" endtime="20241125 18:30:05.943"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.942" endtime="20241125 18:30:05.943"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.943" endtime="20241125 18:30:05.944"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:05.944" endtime="20241125 18:30:05.944"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.943" endtime="20241125 18:30:05.944"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.942" endtime="20241125 18:30:05.944"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.942" endtime="20241125 18:30:05.944"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.942" endtime="20241125 18:30:05.944"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.945" endtime="20241125 18:30:05.945"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:05.945" endtime="20241125 18:30:05.945"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.945" endtime="20241125 18:30:05.945"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.946" endtime="20241125 18:30:05.946"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:05.946" endtime="20241125 18:30:05.947"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.946" endtime="20241125 18:30:05.947"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.945" endtime="20241125 18:30:05.947"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.944" endtime="20241125 18:30:05.947"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.944" endtime="20241125 18:30:05.947"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.941" endtime="20241125 18:30:05.947"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.941" endtime="20241125 18:30:05.947"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:05.948" endtime="20241125 18:30:05.948"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.948" endtime="20241125 18:30:05.949"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.948" endtime="20241125 18:30:05.949"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.949" endtime="20241125 18:30:05.949"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.949" endtime="20241125 18:30:05.949"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.949" endtime="20241125 18:30:05.950"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.950" endtime="20241125 18:30:05.950"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:05.950" endtime="20241125 18:30:05.950"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.950" endtime="20241125 18:30:05.951"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.951" endtime="20241125 18:30:05.951"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:05.951" endtime="20241125 18:30:05.951"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:05.951" endtime="20241125 18:30:05.951"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.950" endtime="20241125 18:30:05.951"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.950" endtime="20241125 18:30:05.951"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:05.950" endtime="20241125 18:30:05.952"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:05.948" endtime="20241125 18:30:05.952"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.947" endtime="20241125 18:30:05.952"/>
</if>
<status status="PASS" starttime="20241125 18:30:05.916" endtime="20241125 18:30:05.952"/>
</iter>
<status status="PASS" starttime="20241125 18:30:05.916" endtime="20241125 18:30:05.952"/>
</for>
<msg timestamp="20241125 18:30:05.952" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:05.915" endtime="20241125 18:30:05.952"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:05.952" endtime="20241125 18:30:05.953"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:05.957" endtime="20241125 18:30:05.957"/>
</kw>
<msg timestamp="20241125 18:30:05.957" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.956" endtime="20241125 18:30:05.957"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.958" level="INFO">${values} = {'id': '9', 'name': 'Add Vehicle popup heading', 'xpath': '//h6[text()="Add Vehicle Details"]', 'pageId': '3', 'createdAt': '2024-11-25T10:46:44.506Z', 'updatedAt': '2024-11-25T10:46:44.506Z'}</msg>
<status status="PASS" starttime="20241125 18:30:05.958" endtime="20241125 18:30:05.958"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.959" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.959" endtime="20241125 18:30:05.959"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.958" endtime="20241125 18:30:05.959"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.959" endtime="20241125 18:30:05.960"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.959" endtime="20241125 18:30:05.960"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.958" endtime="20241125 18:30:05.960"/>
</if>
<status status="PASS" starttime="20241125 18:30:05.958" endtime="20241125 18:30:05.960"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.957" endtime="20241125 18:30:05.960"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:05.960" endtime="20241125 18:30:05.960"/>
</return>
<msg timestamp="20241125 18:30:05.960" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:05.956" endtime="20241125 18:30:05.960"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.962" level="INFO">${xpath} = //h6[text()="Add Vehicle Details"]</msg>
<status status="PASS" starttime="20241125 18:30:05.961" endtime="20241125 18:30:05.962"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.961" endtime="20241125 18:30:05.962"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.962" endtime="20241125 18:30:05.962"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.962" endtime="20241125 18:30:05.962"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.961" endtime="20241125 18:30:05.962"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:05.964" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '325', 'status': 'COMPLETED', 'actionName': 'Is vehicle details popup found', 'actionType': 'IS_ELEMENT_VISIBLE', 'actionXpath': '//h6[text()="Add Vehicle Details"]', '...</msg>
<status status="PASS" starttime="20241125 18:30:05.963" endtime="20241125 18:30:05.964"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:05.966" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "325", "status": "COMPLETED", "actionName": "Is vehicle details popup found", "actionType": "IS_ELEMENT_VISIBLE", "actionXpath": "//h6[text()=\"Add Vehicle Details\"]",...</msg>
<status status="PASS" starttime="20241125 18:30:05.965" endtime="20241125 18:30:05.966"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:05.981" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:05.981" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:05.966" endtime="20241125 18:30:05.981"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:05.982" endtime="20241125 18:30:05.983"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:05.983" endtime="20241125 18:30:05.983"/>
</return>
<status status="PASS" starttime="20241125 18:30:05.964" endtime="20241125 18:30:05.983"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.953" endtime="20241125 18:30:05.984"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.807" endtime="20241125 18:30:05.984"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.984" endtime="20241125 18:30:05.984"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:05.984" endtime="20241125 18:30:05.984"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.984" endtime="20241125 18:30:05.985"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.984" endtime="20241125 18:30:05.985"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.806" endtime="20241125 18:30:05.985"/>
</try>
<status status="PASS" starttime="20241125 18:30:05.806" endtime="20241125 18:30:05.985"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '11', 'actionId': '11', 'flowId': '4', 'order': 2, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.858Z', 'action': {'id': '11', 'name': 'Enter Vehicle type', 'type':...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.985" level="INFO">${action} = {'id': '11', 'name': 'Enter Vehicle type', 'type': 'TYPE_TEXT', 'selectorI': '10', 'valueRege': '', 'projectId': '1', 'enter': True, 'createdAt': '2024-11-25T10:49:11.179Z', 'updatedAt': '2024-11-25T1...</msg>
<status status="PASS" starttime="20241125 18:30:05.985" endtime="20241125 18:30:05.985"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:05.986" endtime="20241125 18:30:05.986"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:05.987" level="INFO">${input} = {'id': '12', 'actionId': '11', 'name': 'Two wheeler', 'value': '2 Wheeler', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:49:11.397Z', 'updatedAt': '2024-11-25T12:27:35.774Z'}</msg>
<status status="PASS" starttime="20241125 18:30:05.986" endtime="20241125 18:30:05.987"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.987" endtime="20241125 18:30:05.987"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.987" endtime="20241125 18:30:05.987"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.987" endtime="20241125 18:30:05.989"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.987" endtime="20241125 18:30:05.989"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:05.990" level="INFO">${value} = 2 Wheeler</msg>
<status status="PASS" starttime="20241125 18:30:05.989" endtime="20241125 18:30:05.990"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:05.990" endtime="20241125 18:30:05.990"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.990" endtime="20241125 18:30:05.990"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:05.991" endtime="20241125 18:30:05.991"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.991" endtime="20241125 18:30:05.991"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.993" endtime="20241125 18:30:05.993"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.991" endtime="20241125 18:30:05.993"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:05.996" endtime="20241125 18:30:05.996"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.000" endtime="20241125 18:30:06.000"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:05.994" endtime="20241125 18:30:06.000"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.002" endtime="20241125 18:30:06.002"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.001" endtime="20241125 18:30:06.002"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.006" endtime="20241125 18:30:06.006"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.003" endtime="20241125 18:30:06.006"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//div[text()="Select vehicle type"]//following-sibling::div/input: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.027" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state attached</msg>
<status status="PASS" starttime="20241125 18:30:06.019" endtime="20241125 18:30:06.027"/>
</kw>
<msg timestamp="20241125 18:30:06.027" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.019" endtime="20241125 18:30:06.027"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.027" endtime="20241125 18:30:06.027"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.018" endtime="20241125 18:30:06.027"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.028" endtime="20241125 18:30:06.028"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.028" endtime="20241125 18:30:06.029"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.027" endtime="20241125 18:30:06.029"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.018" endtime="20241125 18:30:06.029"/>
</try>
<msg timestamp="20241125 18:30:06.030" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.017" endtime="20241125 18:30:06.030"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.030" endtime="20241125 18:30:06.030"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.015" endtime="20241125 18:30:06.030"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.031" endtime="20241125 18:30:06.031"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.030" endtime="20241125 18:30:06.031"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.015" endtime="20241125 18:30:06.031"/>
</try>
<msg timestamp="20241125 18:30:06.031" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.014" endtime="20241125 18:30:06.031"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.035" endtime="20241125 18:30:06.035"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.035" endtime="20241125 18:30:06.036"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.035" endtime="20241125 18:30:06.036"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.035" endtime="20241125 18:30:06.036"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.033" endtime="20241125 18:30:06.036"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.013" endtime="20241125 18:30:06.037"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.055" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state attached</msg>
<status status="PASS" starttime="20241125 18:30:06.049" endtime="20241125 18:30:06.055"/>
</kw>
<msg timestamp="20241125 18:30:06.055" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.048" endtime="20241125 18:30:06.056"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.056" endtime="20241125 18:30:06.056"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.048" endtime="20241125 18:30:06.056"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.056" endtime="20241125 18:30:06.056"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.057" endtime="20241125 18:30:06.057"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.056" endtime="20241125 18:30:06.057"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.048" endtime="20241125 18:30:06.057"/>
</try>
<msg timestamp="20241125 18:30:06.057" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.047" endtime="20241125 18:30:06.057"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.057" endtime="20241125 18:30:06.058"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.045" endtime="20241125 18:30:06.058"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.058" endtime="20241125 18:30:06.058"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.058" endtime="20241125 18:30:06.058"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.045" endtime="20241125 18:30:06.058"/>
</try>
<msg timestamp="20241125 18:30:06.058" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.044" endtime="20241125 18:30:06.058"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.062" endtime="20241125 18:30:06.062"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.062" endtime="20241125 18:30:06.062"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.061" endtime="20241125 18:30:06.062"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.061" endtime="20241125 18:30:06.062"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.060" endtime="20241125 18:30:06.063"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.044" endtime="20241125 18:30:06.063"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 18:30:06.077" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241125 18:30:06.077" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241125 18:30:06.063" endtime="20241125 18:30:06.077"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 18:30:06.077" endtime="20241125 18:30:06.077"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.063" endtime="20241125 18:30:06.077"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.077" endtime="20241125 18:30:06.077"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.078" endtime="20241125 18:30:06.078"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.077" endtime="20241125 18:30:06.078"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.063" endtime="20241125 18:30:06.078"/>
</try>
<msg timestamp="20241125 18:30:06.078" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241125 18:30:06.041" endtime="20241125 18:30:06.079"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.082" endtime="20241125 18:30:06.082"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.083" endtime="20241125 18:30:06.083"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.082" endtime="20241125 18:30:06.083"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.082" endtime="20241125 18:30:06.083"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.081" endtime="20241125 18:30:06.083"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.039" endtime="20241125 18:30:06.083"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.084" endtime="20241125 18:30:06.084"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.083" endtime="20241125 18:30:06.084"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.039" endtime="20241125 18:30:06.084"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.039" endtime="20241125 18:30:06.084"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.097" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state visible</msg>
<status status="PASS" starttime="20241125 18:30:06.090" endtime="20241125 18:30:06.098"/>
</kw>
<msg timestamp="20241125 18:30:06.098" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.089" endtime="20241125 18:30:06.098"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.098" endtime="20241125 18:30:06.098"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.089" endtime="20241125 18:30:06.098"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.099" endtime="20241125 18:30:06.099"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.099" endtime="20241125 18:30:06.099"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.098" endtime="20241125 18:30:06.099"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.089" endtime="20241125 18:30:06.099"/>
</try>
<msg timestamp="20241125 18:30:06.100" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.088" endtime="20241125 18:30:06.100"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.100" endtime="20241125 18:30:06.100"/>
</return>
<msg timestamp="20241125 18:30:06.100" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.087" endtime="20241125 18:30:06.100"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.103" endtime="20241125 18:30:06.103"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.104" endtime="20241125 18:30:06.104"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.103" endtime="20241125 18:30:06.104"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.103" endtime="20241125 18:30:06.104"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.102" endtime="20241125 18:30:06.104"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.087" endtime="20241125 18:30:06.104"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.009" endtime="20241125 18:30:06.105"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.132" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state editable</msg>
<status status="PASS" starttime="20241125 18:30:06.110" endtime="20241125 18:30:06.132"/>
</kw>
<msg timestamp="20241125 18:30:06.133" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.110" endtime="20241125 18:30:06.133"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.133" endtime="20241125 18:30:06.133"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.110" endtime="20241125 18:30:06.133"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.133" endtime="20241125 18:30:06.133"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.133" endtime="20241125 18:30:06.133"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.133" endtime="20241125 18:30:06.133"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.109" endtime="20241125 18:30:06.133"/>
</try>
<msg timestamp="20241125 18:30:06.134" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.109" endtime="20241125 18:30:06.134"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.134" endtime="20241125 18:30:06.134"/>
</return>
<msg timestamp="20241125 18:30:06.134" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.107" endtime="20241125 18:30:06.134"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.138" endtime="20241125 18:30:06.138"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.138" endtime="20241125 18:30:06.139"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.138" endtime="20241125 18:30:06.139"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.138" endtime="20241125 18:30:06.139"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.136" endtime="20241125 18:30:06.139"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.107" endtime="20241125 18:30:06.139"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:06.140" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:06.140" endtime="20241125 18:30:06.140"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//div[text()="Select vehicle type"]//following-sibling::div/input: string</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.143" endtime="20241125 18:30:06.143"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.145" endtime="20241125 18:30:06.145"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.142" endtime="20241125 18:30:06.145"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:06.146" endtime="20241125 18:30:06.146"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.145" endtime="20241125 18:30:06.146"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.142" endtime="20241125 18:30:06.146"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241125 18:30:06.148" level="INFO">Fills the text '2 Wheeler' in the given field.</msg>
<status status="PASS" starttime="20241125 18:30:06.148" endtime="20241125 18:30:06.198"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.148" endtime="20241125 18:30:06.198"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.199" endtime="20241125 18:30:06.199"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.199" endtime="20241125 18:30:06.200"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.198" endtime="20241125 18:30:06.200"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.148" endtime="20241125 18:30:06.200"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.141" endtime="20241125 18:30:06.201"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.141" endtime="20241125 18:30:06.201"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.140" endtime="20241125 18:30:06.201"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.202" endtime="20241125 18:30:06.202"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.202" endtime="20241125 18:30:06.202"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.140" endtime="20241125 18:30:06.203"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.009" endtime="20241125 18:30:06.203"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.203" endtime="20241125 18:30:06.204"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20241125 18:30:06.205" endtime="20241125 18:30:06.228"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.205" endtime="20241125 18:30:06.228"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.204" endtime="20241125 18:30:06.229"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.229" endtime="20241125 18:30:06.230"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.007" endtime="20241125 18:30:06.231"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.234" endtime="20241125 18:30:06.234"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.231" endtime="20241125 18:30:06.234"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.238" endtime="20241125 18:30:06.238"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.239" endtime="20241125 18:30:06.239"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.238" endtime="20241125 18:30:06.239"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.240" endtime="20241125 18:30:06.240"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.240" endtime="20241125 18:30:06.241"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.238" endtime="20241125 18:30:06.241"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.235" endtime="20241125 18:30:06.241"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:06.252" endtime="20241125 18:30:06.252"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.257" endtime="20241125 18:30:06.257"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.241" endtime="20241125 18:30:06.257"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.259" endtime="20241125 18:30:06.259"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.260" endtime="20241125 18:30:06.260"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.259" endtime="20241125 18:30:06.260"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.261" endtime="20241125 18:30:06.261"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.260" endtime="20241125 18:30:06.261"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.259" endtime="20241125 18:30:06.261"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.257" endtime="20241125 18:30:06.261"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:06.273" endtime="20241125 18:30:06.273"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.278" endtime="20241125 18:30:06.279"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.261" endtime="20241125 18:30:06.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.282" endtime="20241125 18:30:06.282"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.283" endtime="20241125 18:30:06.283"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.282" endtime="20241125 18:30:06.283"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.283" endtime="20241125 18:30:06.284"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.283" endtime="20241125 18:30:06.284"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.282" endtime="20241125 18:30:06.284"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.279" endtime="20241125 18:30:06.284"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.287" endtime="20241125 18:30:06.288"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.284" endtime="20241125 18:30:06.288"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:06.300" endtime="20241125 18:30:06.300"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.300" endtime="20241125 18:30:06.301"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.288" endtime="20241125 18:30:06.301"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.990" endtime="20241125 18:30:06.301"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.301" endtime="20241125 18:30:06.302"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:06.303" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:06.302" endtime="20241125 18:30:06.303"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:06.303" endtime="20241125 18:30:06.303"/>
</return>
<msg timestamp="20241125 18:30:06.304" level="INFO">${value} = 2 Wheeler</msg>
<status status="PASS" starttime="20241125 18:30:05.989" endtime="20241125 18:30:06.304"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.305" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:11</msg>
<status status="PASS" starttime="20241125 18:30:06.305" endtime="20241125 18:30:06.305"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.307" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:06.307" endtime="20241125 18:30:06.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.308" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:06.308" endtime="20241125 18:30:06.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.309" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.309" endtime="20241125 18:30:06.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.310" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:06.309" endtime="20241125 18:30:06.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.311" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.310" endtime="20241125 18:30:06.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.312" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:06.311" endtime="20241125 18:30:06.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.314" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:06.313" endtime="20241125 18:30:06.314"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:06.314" endtime="20241125 18:30:06.315"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:06.319" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:06.318" endtime="20241125 18:30:06.319"/>
</kw>
<msg timestamp="20241125 18:30:06.319" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.317" endtime="20241125 18:30:06.319"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.320" endtime="20241125 18:30:06.320"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.320" endtime="20241125 18:30:06.321"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.320" endtime="20241125 18:30:06.321"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.321" endtime="20241125 18:30:06.321"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.321" endtime="20241125 18:30:06.321"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.320" endtime="20241125 18:30:06.321"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.319" endtime="20241125 18:30:06.321"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.319" endtime="20241125 18:30:06.322"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:06.322" endtime="20241125 18:30:06.322"/>
</return>
<msg timestamp="20241125 18:30:06.322" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.317" endtime="20241125 18:30:06.322"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:06.326" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:06.325" endtime="20241125 18:30:06.326"/>
</kw>
<msg timestamp="20241125 18:30:06.327" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.324" endtime="20241125 18:30:06.327"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.327" endtime="20241125 18:30:06.327"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.327" endtime="20241125 18:30:06.328"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.327" endtime="20241125 18:30:06.328"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.328" endtime="20241125 18:30:06.328"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.328" endtime="20241125 18:30:06.328"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.327" endtime="20241125 18:30:06.329"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.327" endtime="20241125 18:30:06.329"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.327" endtime="20241125 18:30:06.329"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:06.329" endtime="20241125 18:30:06.329"/>
</return>
<msg timestamp="20241125 18:30:06.329" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.324" endtime="20241125 18:30:06.329"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:06.330" endtime="20241125 18:30:06.331"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.330" endtime="20241125 18:30:06.331"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.330" endtime="20241125 18:30:06.331"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.331" endtime="20241125 18:30:06.332"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.332" endtime="20241125 18:30:06.332"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.331" endtime="20241125 18:30:06.332"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.332" endtime="20241125 18:30:06.333"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.333" endtime="20241125 18:30:06.333"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.332" endtime="20241125 18:30:06.333"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.331" endtime="20241125 18:30:06.333"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.331" endtime="20241125 18:30:06.333"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.331" endtime="20241125 18:30:06.333"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.334" endtime="20241125 18:30:06.334"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:06.334" endtime="20241125 18:30:06.334"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.334" endtime="20241125 18:30:06.334"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.335" endtime="20241125 18:30:06.335"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:06.335" endtime="20241125 18:30:06.335"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.334" endtime="20241125 18:30:06.335"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.334" endtime="20241125 18:30:06.335"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.333" endtime="20241125 18:30:06.335"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.333" endtime="20241125 18:30:06.335"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.330" endtime="20241125 18:30:06.335"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.330" endtime="20241125 18:30:06.335"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:06.337" endtime="20241125 18:30:06.337"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.337" endtime="20241125 18:30:06.337"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.337" endtime="20241125 18:30:06.337"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.338" endtime="20241125 18:30:06.338"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.337" endtime="20241125 18:30:06.338"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.337" endtime="20241125 18:30:06.338"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.339" endtime="20241125 18:30:06.339"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:06.339" endtime="20241125 18:30:06.339"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.338" endtime="20241125 18:30:06.339"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.339" endtime="20241125 18:30:06.339"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:06.340" endtime="20241125 18:30:06.340"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.339" endtime="20241125 18:30:06.340"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.338" endtime="20241125 18:30:06.340"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.338" endtime="20241125 18:30:06.340"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.338" endtime="20241125 18:30:06.340"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.336" endtime="20241125 18:30:06.340"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.336" endtime="20241125 18:30:06.340"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.307" endtime="20241125 18:30:06.340"/>
</iter>
<status status="PASS" starttime="20241125 18:30:06.305" endtime="20241125 18:30:06.340"/>
</for>
<msg timestamp="20241125 18:30:06.341" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:06.304" endtime="20241125 18:30:06.341"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.341" endtime="20241125 18:30:06.342"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:06.347" endtime="20241125 18:30:06.349"/>
</kw>
<msg timestamp="20241125 18:30:06.349" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.347" endtime="20241125 18:30:06.349"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.350" level="INFO">${values} = {'id': '10', 'name': 'Vehicle type', 'xpath': '//div[text()="Select vehicle type"]//following-sibling::div/input', 'pageId': '3', 'createdAt': '2024-11-25T10:49:09.637Z', 'updatedAt': '2024-11-25T11:1...</msg>
<status status="PASS" starttime="20241125 18:30:06.350" endtime="20241125 18:30:06.350"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.351" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.351" endtime="20241125 18:30:06.351"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.351" endtime="20241125 18:30:06.351"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.352" endtime="20241125 18:30:06.352"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.351" endtime="20241125 18:30:06.352"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.350" endtime="20241125 18:30:06.352"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.350" endtime="20241125 18:30:06.352"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.349" endtime="20241125 18:30:06.352"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:06.352" endtime="20241125 18:30:06.352"/>
</return>
<msg timestamp="20241125 18:30:06.353" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.346" endtime="20241125 18:30:06.353"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.354" level="INFO">${xpath} = //div[text()="Select vehicle type"]//following-sibling::div/input</msg>
<status status="PASS" starttime="20241125 18:30:06.353" endtime="20241125 18:30:06.354"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.353" endtime="20241125 18:30:06.354"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.354" endtime="20241125 18:30:06.354"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.354" endtime="20241125 18:30:06.354"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.353" endtime="20241125 18:30:06.355"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:06.356" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '326', 'status': 'COMPLETED', 'actionName': 'Enter Vehicle type', 'actionType': 'TYPE_TEXT', 'actionXpath': '//div[text()="Select vehicle type"]//following-sibling::div...</msg>
<status status="PASS" starttime="20241125 18:30:06.355" endtime="20241125 18:30:06.356"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:06.357" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "326", "status": "COMPLETED", "actionName": "Enter Vehicle type", "actionType": "TYPE_TEXT", "actionXpath": "//div[text()=\"Select vehicle type\"]//following-sibling::d...</msg>
<status status="PASS" starttime="20241125 18:30:06.357" endtime="20241125 18:30:06.357"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:06.385" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:06.385" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:06.357" endtime="20241125 18:30:06.385"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.385" endtime="20241125 18:30:06.385"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:06.386" endtime="20241125 18:30:06.386"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.356" endtime="20241125 18:30:06.386"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.342" endtime="20241125 18:30:06.388"/>
</kw>
<status status="PASS" starttime="20241125 18:30:05.985" endtime="20241125 18:30:06.388"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.388" endtime="20241125 18:30:06.388"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:06.389" endtime="20241125 18:30:06.389"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.389" endtime="20241125 18:30:06.389"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.388" endtime="20241125 18:30:06.389"/>
</branch>
<status status="PASS" starttime="20241125 18:30:05.985" endtime="20241125 18:30:06.389"/>
</try>
<status status="PASS" starttime="20241125 18:30:05.985" endtime="20241125 18:30:06.389"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '13', 'actionId': '12', 'flowId': '4', 'order': 3, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.860Z', 'action': {'id': '12', 'name': 'Enter vehicle number', 'type...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.390" level="INFO">${action} = {'id': '12', 'name': 'Enter vehicle number', 'type': 'TYPE_TEXT', 'selectorI': '11', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:54:49.286Z', 'updatedAt': '2024-11-25...</msg>
<status status="PASS" starttime="20241125 18:30:06.389" endtime="20241125 18:30:06.390"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.390" endtime="20241125 18:30:06.391"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:06.391" level="INFO">${input} = {'id': '13', 'actionId': '12', 'name': 'Bharani Bike number', 'value': 'TN91 T9861', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:54:49.735Z', 'updatedAt': '2024-11-25T11:18:...</msg>
<status status="PASS" starttime="20241125 18:30:06.391" endtime="20241125 18:30:06.393"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.393" endtime="20241125 18:30:06.393"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.394" endtime="20241125 18:30:06.394"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.393" endtime="20241125 18:30:06.394"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.393" endtime="20241125 18:30:06.394"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.395" level="INFO">${value} = TN91 T9861</msg>
<status status="PASS" starttime="20241125 18:30:06.395" endtime="20241125 18:30:06.395"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:06.396" endtime="20241125 18:30:06.396"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.395" endtime="20241125 18:30:06.396"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:06.398" endtime="20241125 18:30:06.398"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.397" endtime="20241125 18:30:06.398"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.401" endtime="20241125 18:30:06.401"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.398" endtime="20241125 18:30:06.402"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.405" endtime="20241125 18:30:06.405"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.407" endtime="20241125 18:30:06.407"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.402" endtime="20241125 18:30:06.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.409" endtime="20241125 18:30:06.409"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.407" endtime="20241125 18:30:06.409"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.414" endtime="20241125 18:30:06.414"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.409" endtime="20241125 18:30:06.415"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=vehicleNumber: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.434" level="INFO">Waited for Element with selector id=vehicleNumber at state attached</msg>
<status status="PASS" starttime="20241125 18:30:06.425" endtime="20241125 18:30:06.435"/>
</kw>
<msg timestamp="20241125 18:30:06.435" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.425" endtime="20241125 18:30:06.435"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.435" endtime="20241125 18:30:06.435"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.425" endtime="20241125 18:30:06.435"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.435" endtime="20241125 18:30:06.435"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.435" endtime="20241125 18:30:06.435"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.435" endtime="20241125 18:30:06.436"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.425" endtime="20241125 18:30:06.436"/>
</try>
<msg timestamp="20241125 18:30:06.436" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.425" endtime="20241125 18:30:06.436"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.436" endtime="20241125 18:30:06.436"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.423" endtime="20241125 18:30:06.436"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.436" endtime="20241125 18:30:06.436"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.436" endtime="20241125 18:30:06.438"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.423" endtime="20241125 18:30:06.438"/>
</try>
<msg timestamp="20241125 18:30:06.438" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.423" endtime="20241125 18:30:06.438"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.441" endtime="20241125 18:30:06.441"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.441" endtime="20241125 18:30:06.441"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.441" endtime="20241125 18:30:06.441"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.440" endtime="20241125 18:30:06.441"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.439" endtime="20241125 18:30:06.442"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.422" endtime="20241125 18:30:06.442"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.459" level="INFO">Waited for Element with selector id=vehicleNumber at state attached</msg>
<status status="PASS" starttime="20241125 18:30:06.452" endtime="20241125 18:30:06.459"/>
</kw>
<msg timestamp="20241125 18:30:06.460" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.452" endtime="20241125 18:30:06.460"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.460" endtime="20241125 18:30:06.460"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.452" endtime="20241125 18:30:06.460"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.460" endtime="20241125 18:30:06.460"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.461" endtime="20241125 18:30:06.461"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.460" endtime="20241125 18:30:06.461"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.451" endtime="20241125 18:30:06.461"/>
</try>
<msg timestamp="20241125 18:30:06.461" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.451" endtime="20241125 18:30:06.461"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.461" endtime="20241125 18:30:06.462"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.450" endtime="20241125 18:30:06.462"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.462" endtime="20241125 18:30:06.462"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.462" endtime="20241125 18:30:06.462"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.450" endtime="20241125 18:30:06.462"/>
</try>
<msg timestamp="20241125 18:30:06.463" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.449" endtime="20241125 18:30:06.463"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.466" endtime="20241125 18:30:06.466"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.466" endtime="20241125 18:30:06.466"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.465" endtime="20241125 18:30:06.466"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.465" endtime="20241125 18:30:06.466"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.464" endtime="20241125 18:30:06.467"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.449" endtime="20241125 18:30:06.467"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 18:30:06.481" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241125 18:30:06.482" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241125 18:30:06.467" endtime="20241125 18:30:06.482"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 18:30:06.482" endtime="20241125 18:30:06.482"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.467" endtime="20241125 18:30:06.482"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.483" endtime="20241125 18:30:06.483"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.483" endtime="20241125 18:30:06.483"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.482" endtime="20241125 18:30:06.483"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.467" endtime="20241125 18:30:06.483"/>
</try>
<msg timestamp="20241125 18:30:06.484" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241125 18:30:06.446" endtime="20241125 18:30:06.484"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.487" endtime="20241125 18:30:06.487"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.487" endtime="20241125 18:30:06.487"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.487" endtime="20241125 18:30:06.487"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.486" endtime="20241125 18:30:06.487"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.485" endtime="20241125 18:30:06.487"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.444" endtime="20241125 18:30:06.487"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.487" endtime="20241125 18:30:06.488"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.487" endtime="20241125 18:30:06.488"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.444" endtime="20241125 18:30:06.488"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.444" endtime="20241125 18:30:06.488"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.502" level="INFO">Waited for Element with selector id=vehicleNumber at state visible</msg>
<status status="PASS" starttime="20241125 18:30:06.494" endtime="20241125 18:30:06.503"/>
</kw>
<msg timestamp="20241125 18:30:06.503" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.494" endtime="20241125 18:30:06.503"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.503" endtime="20241125 18:30:06.503"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.493" endtime="20241125 18:30:06.503"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.504" endtime="20241125 18:30:06.504"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.504" endtime="20241125 18:30:06.504"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.504" endtime="20241125 18:30:06.504"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.493" endtime="20241125 18:30:06.505"/>
</try>
<msg timestamp="20241125 18:30:06.505" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.493" endtime="20241125 18:30:06.505"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.505" endtime="20241125 18:30:06.505"/>
</return>
<msg timestamp="20241125 18:30:06.505" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.491" endtime="20241125 18:30:06.505"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.508" endtime="20241125 18:30:06.508"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.508" endtime="20241125 18:30:06.509"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.508" endtime="20241125 18:30:06.509"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.508" endtime="20241125 18:30:06.509"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.506" endtime="20241125 18:30:06.509"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.490" endtime="20241125 18:30:06.509"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.419" endtime="20241125 18:30:06.509"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.535" level="INFO">Waited for Element with selector id=vehicleNumber at state editable</msg>
<status status="PASS" starttime="20241125 18:30:06.516" endtime="20241125 18:30:06.535"/>
</kw>
<msg timestamp="20241125 18:30:06.535" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.515" endtime="20241125 18:30:06.535"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.535" endtime="20241125 18:30:06.535"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.515" endtime="20241125 18:30:06.535"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.536" endtime="20241125 18:30:06.536"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.536" endtime="20241125 18:30:06.537"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.535" endtime="20241125 18:30:06.537"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.515" endtime="20241125 18:30:06.537"/>
</try>
<msg timestamp="20241125 18:30:06.537" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.515" endtime="20241125 18:30:06.537"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.537" endtime="20241125 18:30:06.537"/>
</return>
<msg timestamp="20241125 18:30:06.538" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.513" endtime="20241125 18:30:06.538"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.540" endtime="20241125 18:30:06.541"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.541" endtime="20241125 18:30:06.541"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.540" endtime="20241125 18:30:06.541"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.540" endtime="20241125 18:30:06.541"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.539" endtime="20241125 18:30:06.541"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.512" endtime="20241125 18:30:06.541"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:06.542" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:06.542" endtime="20241125 18:30:06.542"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=vehicleNumber: string</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.544" endtime="20241125 18:30:06.545"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.547" endtime="20241125 18:30:06.548"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.544" endtime="20241125 18:30:06.548"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:06.548" endtime="20241125 18:30:06.549"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.548" endtime="20241125 18:30:06.549"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.544" endtime="20241125 18:30:06.549"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241125 18:30:06.550" level="INFO">Fills the text 'TN91 T9861' in the given field.</msg>
<status status="PASS" starttime="20241125 18:30:06.549" endtime="20241125 18:30:06.604"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.549" endtime="20241125 18:30:06.604"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.605" endtime="20241125 18:30:06.605"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.605" endtime="20241125 18:30:06.605"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.604" endtime="20241125 18:30:06.605"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.549" endtime="20241125 18:30:06.605"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.543" endtime="20241125 18:30:06.605"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.543" endtime="20241125 18:30:06.605"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.542" endtime="20241125 18:30:06.606"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.606" endtime="20241125 18:30:06.606"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.606" endtime="20241125 18:30:06.606"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.542" endtime="20241125 18:30:06.606"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.418" endtime="20241125 18:30:06.607"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.607" endtime="20241125 18:30:06.607"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.609" endtime="20241125 18:30:06.609"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.609" endtime="20241125 18:30:06.609"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.607" endtime="20241125 18:30:06.610"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.610" endtime="20241125 18:30:06.611"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.415" endtime="20241125 18:30:06.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.613" endtime="20241125 18:30:06.613"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.611" endtime="20241125 18:30:06.613"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.615" endtime="20241125 18:30:06.615"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.615" endtime="20241125 18:30:06.615"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.615" endtime="20241125 18:30:06.615"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.616" endtime="20241125 18:30:06.616"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.616" endtime="20241125 18:30:06.616"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.615" endtime="20241125 18:30:06.616"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.613" endtime="20241125 18:30:06.616"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:06.626" endtime="20241125 18:30:06.627"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.632" endtime="20241125 18:30:06.632"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.617" endtime="20241125 18:30:06.632"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.635" endtime="20241125 18:30:06.635"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.635" endtime="20241125 18:30:06.635"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.635" endtime="20241125 18:30:06.636"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.636" endtime="20241125 18:30:06.636"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.636" endtime="20241125 18:30:06.636"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.635" endtime="20241125 18:30:06.636"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.633" endtime="20241125 18:30:06.636"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:06.647" endtime="20241125 18:30:06.647"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.653" endtime="20241125 18:30:06.653"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.637" endtime="20241125 18:30:06.653"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.655" endtime="20241125 18:30:06.656"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.656" endtime="20241125 18:30:06.656"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.656" endtime="20241125 18:30:06.656"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.656" endtime="20241125 18:30:06.656"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.656" endtime="20241125 18:30:06.656"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.656" endtime="20241125 18:30:06.656"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.654" endtime="20241125 18:30:06.657"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.660" endtime="20241125 18:30:06.660"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.657" endtime="20241125 18:30:06.660"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:06.669" endtime="20241125 18:30:06.669"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.669" endtime="20241125 18:30:06.669"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.660" endtime="20241125 18:30:06.670"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.395" endtime="20241125 18:30:06.670"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.670" endtime="20241125 18:30:06.671"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:06.671" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:06.671" endtime="20241125 18:30:06.672"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:06.672" endtime="20241125 18:30:06.672"/>
</return>
<msg timestamp="20241125 18:30:06.672" level="INFO">${value} = TN91 T9861</msg>
<status status="PASS" starttime="20241125 18:30:06.394" endtime="20241125 18:30:06.672"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.674" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 18:30:06.674" endtime="20241125 18:30:06.674"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.675" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:06.675" endtime="20241125 18:30:06.675"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.676" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:06.675" endtime="20241125 18:30:06.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.676" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.676" endtime="20241125 18:30:06.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.677" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:06.677" endtime="20241125 18:30:06.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.678" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.677" endtime="20241125 18:30:06.678"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.680" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:06.678" endtime="20241125 18:30:06.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.681" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:06.681" endtime="20241125 18:30:06.681"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:06.682" endtime="20241125 18:30:06.682"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:06.686" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:06.685" endtime="20241125 18:30:06.686"/>
</kw>
<msg timestamp="20241125 18:30:06.686" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.685" endtime="20241125 18:30:06.686"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.687" endtime="20241125 18:30:06.687"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.687" endtime="20241125 18:30:06.687"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.687" endtime="20241125 18:30:06.687"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.689" endtime="20241125 18:30:06.689"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.687" endtime="20241125 18:30:06.689"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.687" endtime="20241125 18:30:06.689"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.686" endtime="20241125 18:30:06.689"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.686" endtime="20241125 18:30:06.689"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:06.690" endtime="20241125 18:30:06.690"/>
</return>
<msg timestamp="20241125 18:30:06.690" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.684" endtime="20241125 18:30:06.690"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:06.694" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:06.693" endtime="20241125 18:30:06.694"/>
</kw>
<msg timestamp="20241125 18:30:06.694" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.693" endtime="20241125 18:30:06.695"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.696" endtime="20241125 18:30:06.696"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.697" endtime="20241125 18:30:06.697"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.697" endtime="20241125 18:30:06.697"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.697" endtime="20241125 18:30:06.697"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.697" endtime="20241125 18:30:06.697"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.696" endtime="20241125 18:30:06.697"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.696" endtime="20241125 18:30:06.697"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.695" endtime="20241125 18:30:06.699"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:06.699" endtime="20241125 18:30:06.699"/>
</return>
<msg timestamp="20241125 18:30:06.699" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:06.692" endtime="20241125 18:30:06.699"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:06.700" endtime="20241125 18:30:06.700"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.700" endtime="20241125 18:30:06.700"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.700" endtime="20241125 18:30:06.700"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.701" endtime="20241125 18:30:06.701"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.701" endtime="20241125 18:30:06.701"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.701" endtime="20241125 18:30:06.702"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.702" endtime="20241125 18:30:06.702"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.702" endtime="20241125 18:30:06.702"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.702" endtime="20241125 18:30:06.702"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.701" endtime="20241125 18:30:06.703"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.701" endtime="20241125 18:30:06.703"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.701" endtime="20241125 18:30:06.703"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.704" endtime="20241125 18:30:06.704"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:06.704" endtime="20241125 18:30:06.704"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.703" endtime="20241125 18:30:06.704"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.704" endtime="20241125 18:30:06.705"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:06.705" endtime="20241125 18:30:06.705"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.704" endtime="20241125 18:30:06.705"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.703" endtime="20241125 18:30:06.705"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.703" endtime="20241125 18:30:06.705"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.703" endtime="20241125 18:30:06.705"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.700" endtime="20241125 18:30:06.705"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.699" endtime="20241125 18:30:06.705"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:06.706" endtime="20241125 18:30:06.706"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.706" endtime="20241125 18:30:06.706"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.706" endtime="20241125 18:30:06.706"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.707" endtime="20241125 18:30:06.707"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.706" endtime="20241125 18:30:06.707"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.706" endtime="20241125 18:30:06.707"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.708" endtime="20241125 18:30:06.708"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:06.708" endtime="20241125 18:30:06.708"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.707" endtime="20241125 18:30:06.708"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.708" endtime="20241125 18:30:06.709"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:06.709" endtime="20241125 18:30:06.709"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.708" endtime="20241125 18:30:06.709"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.707" endtime="20241125 18:30:06.709"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.707" endtime="20241125 18:30:06.709"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.707" endtime="20241125 18:30:06.709"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.705" endtime="20241125 18:30:06.709"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.705" endtime="20241125 18:30:06.709"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.675" endtime="20241125 18:30:06.710"/>
</iter>
<status status="PASS" starttime="20241125 18:30:06.674" endtime="20241125 18:30:06.710"/>
</for>
<msg timestamp="20241125 18:30:06.710" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:06.672" endtime="20241125 18:30:06.710"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.710" endtime="20241125 18:30:06.712"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:06.720" endtime="20241125 18:30:06.720"/>
</kw>
<msg timestamp="20241125 18:30:06.720" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.719" endtime="20241125 18:30:06.720"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.721" level="INFO">${values} = {'id': '11', 'name': 'Vehicle number', 'xpath': 'id=vehicleNumber', 'pageId': '3', 'createdAt': '2024-11-25T10:54:47.928Z', 'updatedAt': '2024-11-25T10:54:47.928Z'}</msg>
<status status="PASS" starttime="20241125 18:30:06.721" endtime="20241125 18:30:06.722"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.723" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.722" endtime="20241125 18:30:06.723"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.722" endtime="20241125 18:30:06.723"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.723" endtime="20241125 18:30:06.723"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.723" endtime="20241125 18:30:06.723"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.722" endtime="20241125 18:30:06.724"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.721" endtime="20241125 18:30:06.724"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.720" endtime="20241125 18:30:06.724"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:06.724" endtime="20241125 18:30:06.724"/>
</return>
<msg timestamp="20241125 18:30:06.724" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.718" endtime="20241125 18:30:06.725"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.726" level="INFO">${xpath} = id=vehicleNumber</msg>
<status status="PASS" starttime="20241125 18:30:06.725" endtime="20241125 18:30:06.726"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.725" endtime="20241125 18:30:06.726"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.727" endtime="20241125 18:30:06.727"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.726" endtime="20241125 18:30:06.727"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.725" endtime="20241125 18:30:06.727"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:06.730" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '327', 'status': 'COMPLETED', 'actionName': 'Enter vehicle number', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=vehicleNumber', 'inputValue': 'TN91 T9861', 'errorMess...</msg>
<status status="PASS" starttime="20241125 18:30:06.728" endtime="20241125 18:30:06.730"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:06.731" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "327", "status": "COMPLETED", "actionName": "Enter vehicle number", "actionType": "TYPE_TEXT", "actionXpath": "id=vehicleNumber", "inputValue": "TN91 T9861", "errorMess...</msg>
<status status="PASS" starttime="20241125 18:30:06.731" endtime="20241125 18:30:06.731"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:06.748" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:06.748" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:06.731" endtime="20241125 18:30:06.749"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.749" endtime="20241125 18:30:06.750"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:06.750" endtime="20241125 18:30:06.750"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.730" endtime="20241125 18:30:06.751"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.712" endtime="20241125 18:30:06.751"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.389" endtime="20241125 18:30:06.751"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.751" endtime="20241125 18:30:06.751"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:06.752" endtime="20241125 18:30:06.752"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.752" endtime="20241125 18:30:06.752"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.751" endtime="20241125 18:30:06.752"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.389" endtime="20241125 18:30:06.753"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.389" endtime="20241125 18:30:06.753"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '14', 'actionId': '13', 'flowId': '4', 'order': 4, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.863Z', 'action': {'id': '13', 'name': 'Click add vehicle button', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.754" level="INFO">${action} = {'id': '13', 'name': 'Click add vehicle button', 'type': 'CLICK', 'selectorI': '12', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:56:26.254Z', 'updatedAt': '2024-11-25...</msg>
<status status="PASS" starttime="20241125 18:30:06.753" endtime="20241125 18:30:06.754"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:06.754" endtime="20241125 18:30:06.755"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:06.755" level="INFO">${input} = {'id': '14', 'actionId': '13', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:56:26.592Z', 'updatedAt': '2024-11-25T10:56:26.592Z'}</msg>
<status status="PASS" starttime="20241125 18:30:06.755" endtime="20241125 18:30:06.755"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.756" endtime="20241125 18:30:06.756"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.756" endtime="20241125 18:30:06.757"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.756" endtime="20241125 18:30:06.757"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.756" endtime="20241125 18:30:06.757"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:06.758" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:06.757" endtime="20241125 18:30:06.758"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:06.758" endtime="20241125 18:30:06.758"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.758" endtime="20241125 18:30:06.759"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:06.759" endtime="20241125 18:30:06.759"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.759" endtime="20241125 18:30:06.759"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.778" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state attached</msg>
<status status="PASS" starttime="20241125 18:30:06.771" endtime="20241125 18:30:06.778"/>
</kw>
<msg timestamp="20241125 18:30:06.779" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.771" endtime="20241125 18:30:06.779"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.779" endtime="20241125 18:30:06.779"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.771" endtime="20241125 18:30:06.779"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.780" endtime="20241125 18:30:06.780"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.780" endtime="20241125 18:30:06.780"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.779" endtime="20241125 18:30:06.780"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.770" endtime="20241125 18:30:06.781"/>
</try>
<msg timestamp="20241125 18:30:06.781" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.770" endtime="20241125 18:30:06.781"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.781" endtime="20241125 18:30:06.781"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.769" endtime="20241125 18:30:06.781"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:06.782" endtime="20241125 18:30:06.782"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:06.782" endtime="20241125 18:30:06.782"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.769" endtime="20241125 18:30:06.782"/>
</try>
<msg timestamp="20241125 18:30:06.782" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.768" endtime="20241125 18:30:06.782"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.785" endtime="20241125 18:30:06.785"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.785" endtime="20241125 18:30:06.785"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.785" endtime="20241125 18:30:06.785"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.785" endtime="20241125 18:30:06.785"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.784" endtime="20241125 18:30:06.787"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.767" endtime="20241125 18:30:06.787"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.802" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state visible</msg>
<status status="PASS" starttime="20241125 18:30:06.793" endtime="20241125 18:30:06.803"/>
</kw>
<msg timestamp="20241125 18:30:06.803" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.792" endtime="20241125 18:30:06.803"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.803" endtime="20241125 18:30:06.803"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.792" endtime="20241125 18:30:06.803"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.804" endtime="20241125 18:30:06.804"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.804" endtime="20241125 18:30:06.804"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.803" endtime="20241125 18:30:06.804"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.792" endtime="20241125 18:30:06.804"/>
</try>
<msg timestamp="20241125 18:30:06.805" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.792" endtime="20241125 18:30:06.805"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.805" endtime="20241125 18:30:06.805"/>
</return>
<msg timestamp="20241125 18:30:06.805" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.790" endtime="20241125 18:30:06.805"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.809" endtime="20241125 18:30:06.809"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.809" endtime="20241125 18:30:06.810"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.809" endtime="20241125 18:30:06.810"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.809" endtime="20241125 18:30:06.810"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.807" endtime="20241125 18:30:06.810"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.789" endtime="20241125 18:30:06.810"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:06.835" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state enabled</msg>
<status status="PASS" starttime="20241125 18:30:06.818" endtime="20241125 18:30:06.835"/>
</kw>
<msg timestamp="20241125 18:30:06.835" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.818" endtime="20241125 18:30:06.835"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.835" endtime="20241125 18:30:06.835"/>
</return>
<status status="PASS" starttime="20241125 18:30:06.816" endtime="20241125 18:30:06.836"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.836" endtime="20241125 18:30:06.836"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.836" endtime="20241125 18:30:06.837"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.836" endtime="20241125 18:30:06.837"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.816" endtime="20241125 18:30:06.837"/>
</try>
<msg timestamp="20241125 18:30:06.837" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.816" endtime="20241125 18:30:06.837"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:06.837" endtime="20241125 18:30:06.837"/>
</return>
<msg timestamp="20241125 18:30:06.837" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 18:30:06.815" endtime="20241125 18:30:06.837"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.841" endtime="20241125 18:30:06.841"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.842" endtime="20241125 18:30:06.842"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.841" endtime="20241125 18:30:06.842"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.841" endtime="20241125 18:30:06.842"/>
</if>
<status status="PASS" starttime="20241125 18:30:06.840" endtime="20241125 18:30:06.842"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.814" endtime="20241125 18:30:06.842"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.764" endtime="20241125 18:30:06.843"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:06.843" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:06.843" endtime="20241125 18:30:06.843"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.846" endtime="20241125 18:30:06.846"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.845" endtime="20241125 18:30:06.846"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:06.846" endtime="20241125 18:30:06.847"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.846" endtime="20241125 18:30:06.847"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.845" endtime="20241125 18:30:06.847"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 18:30:06.847" endtime="20241125 18:30:06.946"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.847" endtime="20241125 18:30:06.946"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.947" endtime="20241125 18:30:06.947"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.948" endtime="20241125 18:30:06.948"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.946" endtime="20241125 18:30:06.948"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.847" endtime="20241125 18:30:06.948"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.845" endtime="20241125 18:30:06.949"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.844" endtime="20241125 18:30:06.949"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.844" endtime="20241125 18:30:06.949"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.950" endtime="20241125 18:30:06.950"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.949" endtime="20241125 18:30:06.950"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.844" endtime="20241125 18:30:06.950"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.762" endtime="20241125 18:30:06.950"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.759" endtime="20241125 18:30:06.950"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.953" endtime="20241125 18:30:06.954"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.957" endtime="20241125 18:30:06.957"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.950" endtime="20241125 18:30:06.957"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.959" endtime="20241125 18:30:06.959"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.957" endtime="20241125 18:30:06.959"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.965" endtime="20241125 18:30:06.965"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.959" endtime="20241125 18:30:06.965"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.968" endtime="20241125 18:30:06.969"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.969" endtime="20241125 18:30:06.969"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.970" endtime="20241125 18:30:06.970"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.969" endtime="20241125 18:30:06.970"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.969" endtime="20241125 18:30:06.970"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.970" endtime="20241125 18:30:06.970"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.965" endtime="20241125 18:30:06.971"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.972" endtime="20241125 18:30:06.972"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.971" endtime="20241125 18:30:06.973"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.975" endtime="20241125 18:30:06.975"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.976" endtime="20241125 18:30:06.976"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.975" endtime="20241125 18:30:06.976"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.976" endtime="20241125 18:30:06.977"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.976" endtime="20241125 18:30:06.977"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.975" endtime="20241125 18:30:06.977"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.973" endtime="20241125 18:30:06.977"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:06.987" endtime="20241125 18:30:06.987"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.992" endtime="20241125 18:30:06.992"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.977" endtime="20241125 18:30:06.992"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.994" endtime="20241125 18:30:06.994"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.996" endtime="20241125 18:30:06.996"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.995" endtime="20241125 18:30:06.997"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:06.997" endtime="20241125 18:30:06.998"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.997" endtime="20241125 18:30:06.998"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:06.995" endtime="20241125 18:30:06.998"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:06.992" endtime="20241125 18:30:06.998"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:07.008" endtime="20241125 18:30:07.008"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.015" endtime="20241125 18:30:07.015"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:06.998" endtime="20241125 18:30:07.015"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.017" endtime="20241125 18:30:07.017"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.018" endtime="20241125 18:30:07.018"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.018" endtime="20241125 18:30:07.018"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.019" endtime="20241125 18:30:07.019"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.018" endtime="20241125 18:30:07.019"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.018" endtime="20241125 18:30:07.019"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.016" endtime="20241125 18:30:07.019"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.023" endtime="20241125 18:30:07.023"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.019" endtime="20241125 18:30:07.023"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.035" endtime="20241125 18:30:07.035"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.035" endtime="20241125 18:30:07.035"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.023" endtime="20241125 18:30:07.035"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.758" endtime="20241125 18:30:07.035"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.037" endtime="20241125 18:30:07.038"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:07.038" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:07.038" endtime="20241125 18:30:07.038"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:07.039" endtime="20241125 18:30:07.039"/>
</return>
<msg timestamp="20241125 18:30:07.039" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:06.757" endtime="20241125 18:30:07.039"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.041" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:14</msg>
<status status="PASS" starttime="20241125 18:30:07.041" endtime="20241125 18:30:07.041"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.043" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:07.042" endtime="20241125 18:30:07.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.044" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:07.043" endtime="20241125 18:30:07.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.045" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.044" endtime="20241125 18:30:07.045"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.047" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:07.046" endtime="20241125 18:30:07.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.048" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.047" endtime="20241125 18:30:07.048"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.049" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:07.048" endtime="20241125 18:30:07.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.050" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:07.049" endtime="20241125 18:30:07.050"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:07.050" endtime="20241125 18:30:07.051"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:07.055" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:07.054" endtime="20241125 18:30:07.055"/>
</kw>
<msg timestamp="20241125 18:30:07.055" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.054" endtime="20241125 18:30:07.055"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.057" endtime="20241125 18:30:07.057"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.058" endtime="20241125 18:30:07.058"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.058" endtime="20241125 18:30:07.058"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.059" endtime="20241125 18:30:07.059"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.059" endtime="20241125 18:30:07.059"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.057" endtime="20241125 18:30:07.059"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.057" endtime="20241125 18:30:07.059"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.055" endtime="20241125 18:30:07.059"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.059" endtime="20241125 18:30:07.060"/>
</return>
<msg timestamp="20241125 18:30:07.060" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.053" endtime="20241125 18:30:07.060"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:07.066" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:07.065" endtime="20241125 18:30:07.066"/>
</kw>
<msg timestamp="20241125 18:30:07.066" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.065" endtime="20241125 18:30:07.066"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.067" endtime="20241125 18:30:07.067"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.068" endtime="20241125 18:30:07.068"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.067" endtime="20241125 18:30:07.068"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.068" endtime="20241125 18:30:07.068"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.068" endtime="20241125 18:30:07.068"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.067" endtime="20241125 18:30:07.069"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.067" endtime="20241125 18:30:07.069"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.066" endtime="20241125 18:30:07.069"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.069" endtime="20241125 18:30:07.069"/>
</return>
<msg timestamp="20241125 18:30:07.069" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.063" endtime="20241125 18:30:07.069"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:07.070" endtime="20241125 18:30:07.070"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.070" endtime="20241125 18:30:07.071"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.070" endtime="20241125 18:30:07.071"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.071" endtime="20241125 18:30:07.071"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:07.071" endtime="20241125 18:30:07.072"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.071" endtime="20241125 18:30:07.072"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.072" endtime="20241125 18:30:07.072"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:07.072" endtime="20241125 18:30:07.072"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.072" endtime="20241125 18:30:07.072"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.071" endtime="20241125 18:30:07.073"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.071" endtime="20241125 18:30:07.073"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.071" endtime="20241125 18:30:07.073"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.073" endtime="20241125 18:30:07.073"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.074" endtime="20241125 18:30:07.074"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.073" endtime="20241125 18:30:07.074"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.074" endtime="20241125 18:30:07.074"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.074" endtime="20241125 18:30:07.075"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.074" endtime="20241125 18:30:07.075"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.073" endtime="20241125 18:30:07.075"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.073" endtime="20241125 18:30:07.075"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.073" endtime="20241125 18:30:07.075"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.070" endtime="20241125 18:30:07.075"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.070" endtime="20241125 18:30:07.075"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:07.077" endtime="20241125 18:30:07.077"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.076" endtime="20241125 18:30:07.077"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.076" endtime="20241125 18:30:07.077"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.077" endtime="20241125 18:30:07.078"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.077" endtime="20241125 18:30:07.078"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.077" endtime="20241125 18:30:07.078"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.079" endtime="20241125 18:30:07.079"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.079" endtime="20241125 18:30:07.080"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.079" endtime="20241125 18:30:07.080"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.080" endtime="20241125 18:30:07.080"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.080" endtime="20241125 18:30:07.081"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.080" endtime="20241125 18:30:07.081"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.079" endtime="20241125 18:30:07.081"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.079" endtime="20241125 18:30:07.081"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.078" endtime="20241125 18:30:07.081"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.076" endtime="20241125 18:30:07.081"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.075" endtime="20241125 18:30:07.081"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.042" endtime="20241125 18:30:07.081"/>
</iter>
<status status="PASS" starttime="20241125 18:30:07.042" endtime="20241125 18:30:07.082"/>
</for>
<msg timestamp="20241125 18:30:07.082" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:07.040" endtime="20241125 18:30:07.082"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.082" endtime="20241125 18:30:07.083"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:07.089" endtime="20241125 18:30:07.089"/>
</kw>
<msg timestamp="20241125 18:30:07.089" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.088" endtime="20241125 18:30:07.089"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.090" level="INFO">${values} = {'id': '12', 'name': 'Add vehicle button', 'xpath': '//button[@type="submit"]//p[text()="Add"]', 'pageId': '3', 'createdAt': '2024-11-25T10:56:22.831Z', 'updatedAt': '2024-11-25T11:27:24.850Z'}</msg>
<status status="PASS" starttime="20241125 18:30:07.090" endtime="20241125 18:30:07.090"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.092" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.091" endtime="20241125 18:30:07.092"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.091" endtime="20241125 18:30:07.092"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.093" endtime="20241125 18:30:07.093"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.092" endtime="20241125 18:30:07.093"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.091" endtime="20241125 18:30:07.093"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.090" endtime="20241125 18:30:07.093"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.089" endtime="20241125 18:30:07.093"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.093" endtime="20241125 18:30:07.093"/>
</return>
<msg timestamp="20241125 18:30:07.094" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.088" endtime="20241125 18:30:07.094"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.098" level="INFO">${xpath} = //button[@type="submit"]//p[text()="Add"]</msg>
<status status="PASS" starttime="20241125 18:30:07.095" endtime="20241125 18:30:07.098"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.095" endtime="20241125 18:30:07.098"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.098" endtime="20241125 18:30:07.098"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.098" endtime="20241125 18:30:07.098"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.094" endtime="20241125 18:30:07.098"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:07.100" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '328', 'status': 'COMPLETED', 'actionName': 'Click add vehicle button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit"]//p[text()="Add"]', 'inputValue':...</msg>
<status status="PASS" starttime="20241125 18:30:07.099" endtime="20241125 18:30:07.100"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:07.102" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "328", "status": "COMPLETED", "actionName": "Click add vehicle button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\"]//p[text()=\"Add\"]", "inputVal...</msg>
<status status="PASS" starttime="20241125 18:30:07.101" endtime="20241125 18:30:07.102"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:07.108" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:07.108" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:07.102" endtime="20241125 18:30:07.108"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.109" endtime="20241125 18:30:07.110"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:07.110" endtime="20241125 18:30:07.110"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.100" endtime="20241125 18:30:07.111"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.083" endtime="20241125 18:30:07.111"/>
</kw>
<status status="PASS" starttime="20241125 18:30:06.753" endtime="20241125 18:30:07.112"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.113" endtime="20241125 18:30:07.113"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.114" endtime="20241125 18:30:07.114"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.115" endtime="20241125 18:30:07.115"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.113" endtime="20241125 18:30:07.115"/>
</branch>
<status status="PASS" starttime="20241125 18:30:06.753" endtime="20241125 18:30:07.115"/>
</try>
<status status="PASS" starttime="20241125 18:30:06.753" endtime="20241125 18:30:07.116"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '15', 'actionId': '15', 'flowId': '4', 'order': 5, 'createdAt': '2024-11-25T11:24:20.716Z', 'updatedAt': '2024-11-25T12:28:37.865Z', 'action': {'id': '15', 'name': 'Close add vehicle popup', 't...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.118" level="INFO">${action} = {'id': '15', 'name': 'Close add vehicle popup', 'type': 'CLICK', 'selectorI': '14', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T11:20:45.695Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241125 18:30:07.118" endtime="20241125 18:30:07.118"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.118" endtime="20241125 18:30:07.120"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:07.120" level="INFO">${input} = {'id': '16', 'actionId': '15', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T11:20:46.000Z', 'updatedAt': '2024-11-25T11:20:46.000Z'}</msg>
<status status="PASS" starttime="20241125 18:30:07.120" endtime="20241125 18:30:07.120"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.121" endtime="20241125 18:30:07.121"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.122" endtime="20241125 18:30:07.122"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.121" endtime="20241125 18:30:07.122"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.120" endtime="20241125 18:30:07.123"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.124" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:07.124" endtime="20241125 18:30:07.124"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.125" endtime="20241125 18:30:07.125"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.125" endtime="20241125 18:30:07.126"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.126" endtime="20241125 18:30:07.126"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.126" endtime="20241125 18:30:07.126"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:07.153" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state attached</msg>
<status status="PASS" starttime="20241125 18:30:07.143" endtime="20241125 18:30:07.154"/>
</kw>
<msg timestamp="20241125 18:30:07.154" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.142" endtime="20241125 18:30:07.154"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:07.154" endtime="20241125 18:30:07.154"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.142" endtime="20241125 18:30:07.154"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.155" endtime="20241125 18:30:07.155"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.155" endtime="20241125 18:30:07.155"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.155" endtime="20241125 18:30:07.155"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.142" endtime="20241125 18:30:07.156"/>
</try>
<msg timestamp="20241125 18:30:07.156" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.141" endtime="20241125 18:30:07.156"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:07.156" endtime="20241125 18:30:07.156"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.140" endtime="20241125 18:30:07.156"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:07.157" endtime="20241125 18:30:07.157"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.157" endtime="20241125 18:30:07.157"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.140" endtime="20241125 18:30:07.157"/>
</try>
<msg timestamp="20241125 18:30:07.157" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.139" endtime="20241125 18:30:07.157"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.160" endtime="20241125 18:30:07.161"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.161" endtime="20241125 18:30:07.161"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.160" endtime="20241125 18:30:07.161"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.160" endtime="20241125 18:30:07.162"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.158" endtime="20241125 18:30:07.162"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.137" endtime="20241125 18:30:07.162"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:07.177" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state visible</msg>
<status status="PASS" starttime="20241125 18:30:07.170" endtime="20241125 18:30:07.177"/>
</kw>
<msg timestamp="20241125 18:30:07.178" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.170" endtime="20241125 18:30:07.178"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:07.178" endtime="20241125 18:30:07.178"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.170" endtime="20241125 18:30:07.178"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.179" endtime="20241125 18:30:07.179"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.179" endtime="20241125 18:30:07.179"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.178" endtime="20241125 18:30:07.179"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.169" endtime="20241125 18:30:07.180"/>
</try>
<msg timestamp="20241125 18:30:07.180" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.169" endtime="20241125 18:30:07.180"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:07.181" endtime="20241125 18:30:07.181"/>
</return>
<msg timestamp="20241125 18:30:07.181" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.167" endtime="20241125 18:30:07.181"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.185" endtime="20241125 18:30:07.185"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.185" endtime="20241125 18:30:07.185"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.184" endtime="20241125 18:30:07.185"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.184" endtime="20241125 18:30:07.185"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.183" endtime="20241125 18:30:07.185"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.166" endtime="20241125 18:30:07.185"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:07.209" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state enabled</msg>
<status status="PASS" starttime="20241125 18:30:07.192" endtime="20241125 18:30:07.209"/>
</kw>
<msg timestamp="20241125 18:30:07.209" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.191" endtime="20241125 18:30:07.209"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:07.209" endtime="20241125 18:30:07.209"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.191" endtime="20241125 18:30:07.210"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.210" endtime="20241125 18:30:07.210"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.210" endtime="20241125 18:30:07.210"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.210" endtime="20241125 18:30:07.210"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.191" endtime="20241125 18:30:07.211"/>
</try>
<msg timestamp="20241125 18:30:07.211" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.190" endtime="20241125 18:30:07.211"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:07.211" endtime="20241125 18:30:07.211"/>
</return>
<msg timestamp="20241125 18:30:07.212" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.189" endtime="20241125 18:30:07.212"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.215" endtime="20241125 18:30:07.215"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.215" endtime="20241125 18:30:07.215"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.215" endtime="20241125 18:30:07.215"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.214" endtime="20241125 18:30:07.215"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.213" endtime="20241125 18:30:07.215"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.188" endtime="20241125 18:30:07.215"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.135" endtime="20241125 18:30:07.216"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:07.216" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 18:30:07.216" endtime="20241125 18:30:07.216"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.219" endtime="20241125 18:30:07.219"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.218" endtime="20241125 18:30:07.219"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:07.219" endtime="20241125 18:30:07.220"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.219" endtime="20241125 18:30:07.220"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.218" endtime="20241125 18:30:07.220"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 18:30:07.220" endtime="20241125 18:30:07.272"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.220" endtime="20241125 18:30:07.272"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.273" endtime="20241125 18:30:07.273"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.273" endtime="20241125 18:30:07.273"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.272" endtime="20241125 18:30:07.273"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.220" endtime="20241125 18:30:07.273"/>
</try>
<status status="PASS" starttime="20241125 18:30:07.217" endtime="20241125 18:30:07.274"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.217" endtime="20241125 18:30:07.274"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.217" endtime="20241125 18:30:07.274"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.275" endtime="20241125 18:30:07.275"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.274" endtime="20241125 18:30:07.275"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.217" endtime="20241125 18:30:07.275"/>
</try>
<status status="PASS" starttime="20241125 18:30:07.132" endtime="20241125 18:30:07.275"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.126" endtime="20241125 18:30:07.275"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.280" endtime="20241125 18:30:07.280"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.283" endtime="20241125 18:30:07.284"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.275" endtime="20241125 18:30:07.284"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.285" endtime="20241125 18:30:07.287"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.284" endtime="20241125 18:30:07.287"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.291" endtime="20241125 18:30:07.291"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.287" endtime="20241125 18:30:07.291"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.294" endtime="20241125 18:30:07.294"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.295" endtime="20241125 18:30:07.295"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.296" endtime="20241125 18:30:07.296"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.295" endtime="20241125 18:30:07.296"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.295" endtime="20241125 18:30:07.296"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.296" endtime="20241125 18:30:07.296"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.291" endtime="20241125 18:30:07.296"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.298" endtime="20241125 18:30:07.298"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.296" endtime="20241125 18:30:07.298"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.300" endtime="20241125 18:30:07.300"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.300" endtime="20241125 18:30:07.300"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.300" endtime="20241125 18:30:07.301"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.301" endtime="20241125 18:30:07.301"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.301" endtime="20241125 18:30:07.301"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.300" endtime="20241125 18:30:07.301"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.298" endtime="20241125 18:30:07.301"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:07.310" endtime="20241125 18:30:07.310"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.314" endtime="20241125 18:30:07.314"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.301" endtime="20241125 18:30:07.314"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.316" endtime="20241125 18:30:07.316"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.316" endtime="20241125 18:30:07.317"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.316" endtime="20241125 18:30:07.317"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.317" endtime="20241125 18:30:07.317"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.317" endtime="20241125 18:30:07.317"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.316" endtime="20241125 18:30:07.317"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.314" endtime="20241125 18:30:07.317"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:07.325" endtime="20241125 18:30:07.325"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.329" endtime="20241125 18:30:07.329"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.318" endtime="20241125 18:30:07.329"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.331" endtime="20241125 18:30:07.331"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.332" endtime="20241125 18:30:07.332"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.331" endtime="20241125 18:30:07.332"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.332" endtime="20241125 18:30:07.332"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.332" endtime="20241125 18:30:07.333"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.331" endtime="20241125 18:30:07.333"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.330" endtime="20241125 18:30:07.333"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.335" endtime="20241125 18:30:07.335"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.333" endtime="20241125 18:30:07.335"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.344" endtime="20241125 18:30:07.344"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.345" endtime="20241125 18:30:07.345"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.335" endtime="20241125 18:30:07.345"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.125" endtime="20241125 18:30:07.345"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.345" endtime="20241125 18:30:07.345"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:07.346" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:07.346" endtime="20241125 18:30:07.346"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:07.346" endtime="20241125 18:30:07.346"/>
</return>
<msg timestamp="20241125 18:30:07.347" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:07.123" endtime="20241125 18:30:07.347"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.348" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:15</msg>
<status status="PASS" starttime="20241125 18:30:07.348" endtime="20241125 18:30:07.348"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.350" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:07.349" endtime="20241125 18:30:07.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.350" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:07.350" endtime="20241125 18:30:07.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.351" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.350" endtime="20241125 18:30:07.351"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.351" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:07.351" endtime="20241125 18:30:07.352"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.352" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.352" endtime="20241125 18:30:07.352"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.353" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:07.352" endtime="20241125 18:30:07.353"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.353" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:07.353" endtime="20241125 18:30:07.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:07.354" endtime="20241125 18:30:07.354"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:07.359" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 18:30:07.358" endtime="20241125 18:30:07.359"/>
</kw>
<msg timestamp="20241125 18:30:07.359" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.357" endtime="20241125 18:30:07.359"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.360" endtime="20241125 18:30:07.360"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.360" endtime="20241125 18:30:07.361"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.360" endtime="20241125 18:30:07.361"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.362" endtime="20241125 18:30:07.362"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.362" endtime="20241125 18:30:07.362"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.360" endtime="20241125 18:30:07.362"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.360" endtime="20241125 18:30:07.362"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.359" endtime="20241125 18:30:07.362"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.362" endtime="20241125 18:30:07.363"/>
</return>
<msg timestamp="20241125 18:30:07.363" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.357" endtime="20241125 18:30:07.363"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:07.367" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:07.366" endtime="20241125 18:30:07.367"/>
</kw>
<msg timestamp="20241125 18:30:07.367" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.365" endtime="20241125 18:30:07.367"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.368" endtime="20241125 18:30:07.368"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.369" endtime="20241125 18:30:07.369"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.368" endtime="20241125 18:30:07.369"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.370" endtime="20241125 18:30:07.370"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.369" endtime="20241125 18:30:07.370"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.368" endtime="20241125 18:30:07.370"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.368" endtime="20241125 18:30:07.370"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.367" endtime="20241125 18:30:07.370"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.370" endtime="20241125 18:30:07.370"/>
</return>
<msg timestamp="20241125 18:30:07.371" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.365" endtime="20241125 18:30:07.371"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:07.372" endtime="20241125 18:30:07.372"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.372" endtime="20241125 18:30:07.372"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.372" endtime="20241125 18:30:07.372"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.373" endtime="20241125 18:30:07.373"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:07.373" endtime="20241125 18:30:07.373"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.373" endtime="20241125 18:30:07.373"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.374" endtime="20241125 18:30:07.374"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:07.374" endtime="20241125 18:30:07.374"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.373" endtime="20241125 18:30:07.374"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.373" endtime="20241125 18:30:07.374"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.372" endtime="20241125 18:30:07.374"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.372" endtime="20241125 18:30:07.375"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.375" endtime="20241125 18:30:07.375"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.376" endtime="20241125 18:30:07.376"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.375" endtime="20241125 18:30:07.376"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.377" endtime="20241125 18:30:07.377"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.377" endtime="20241125 18:30:07.377"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.376" endtime="20241125 18:30:07.377"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.375" endtime="20241125 18:30:07.377"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.375" endtime="20241125 18:30:07.377"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.375" endtime="20241125 18:30:07.378"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.371" endtime="20241125 18:30:07.378"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.371" endtime="20241125 18:30:07.378"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:07.379" endtime="20241125 18:30:07.379"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.379" endtime="20241125 18:30:07.379"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.379" endtime="20241125 18:30:07.379"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.380" endtime="20241125 18:30:07.380"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.380" endtime="20241125 18:30:07.380"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.380" endtime="20241125 18:30:07.380"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.381" endtime="20241125 18:30:07.381"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.381" endtime="20241125 18:30:07.381"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.381" endtime="20241125 18:30:07.381"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.381" endtime="20241125 18:30:07.382"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.382" endtime="20241125 18:30:07.382"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.381" endtime="20241125 18:30:07.382"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.381" endtime="20241125 18:30:07.382"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.381" endtime="20241125 18:30:07.382"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.381" endtime="20241125 18:30:07.382"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.379" endtime="20241125 18:30:07.382"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.378" endtime="20241125 18:30:07.382"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.349" endtime="20241125 18:30:07.383"/>
</iter>
<status status="PASS" starttime="20241125 18:30:07.349" endtime="20241125 18:30:07.383"/>
</for>
<msg timestamp="20241125 18:30:07.383" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 18:30:07.347" endtime="20241125 18:30:07.383"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.383" endtime="20241125 18:30:07.384"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:07.390" endtime="20241125 18:30:07.390"/>
</kw>
<msg timestamp="20241125 18:30:07.391" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.390" endtime="20241125 18:30:07.391"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.392" level="INFO">${values} = {'id': '14', 'name': 'Close add vehicle', 'xpath': '//h6[text()="Add Vehicle Details"]//preceding-sibling::img', 'pageId': '3', 'createdAt': '2024-11-25T11:20:43.962Z', 'updatedAt': '2024-11-25T11:20:...</msg>
<status status="PASS" starttime="20241125 18:30:07.392" endtime="20241125 18:30:07.392"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.393" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.393" endtime="20241125 18:30:07.393"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.393" endtime="20241125 18:30:07.393"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.394" endtime="20241125 18:30:07.394"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.394" endtime="20241125 18:30:07.395"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.392" endtime="20241125 18:30:07.395"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.391" endtime="20241125 18:30:07.395"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.391" endtime="20241125 18:30:07.395"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.395" endtime="20241125 18:30:07.395"/>
</return>
<msg timestamp="20241125 18:30:07.396" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.389" endtime="20241125 18:30:07.396"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.397" level="INFO">${xpath} = //h6[text()="Add Vehicle Details"]//preceding-sibling::img</msg>
<status status="PASS" starttime="20241125 18:30:07.397" endtime="20241125 18:30:07.397"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.397" endtime="20241125 18:30:07.397"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.399" endtime="20241125 18:30:07.399"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.399" endtime="20241125 18:30:07.399"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.396" endtime="20241125 18:30:07.399"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:07.401" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '329', 'status': 'COMPLETED', 'actionName': 'Close add vehicle popup', 'actionType': 'CLICK', 'actionXpath': '//h6[text()="Add Vehicle Details"]//preceding-sibling::img...</msg>
<status status="PASS" starttime="20241125 18:30:07.400" endtime="20241125 18:30:07.401"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 18:30:07.403" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "329", "status": "COMPLETED", "actionName": "Close add vehicle popup", "actionType": "CLICK", "actionXpath": "//h6[text()=\"Add Vehicle Details\"]//preceding-sibling::i...</msg>
<status status="PASS" starttime="20241125 18:30:07.402" endtime="20241125 18:30:07.403"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 18:30:07.430" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 18:30:07.430" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000020384F5B430&gt;</msg>
<status status="PASS" starttime="20241125 18:30:07.403" endtime="20241125 18:30:07.430"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.430" endtime="20241125 18:30:07.431"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 18:30:07.432" endtime="20241125 18:30:07.432"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.401" endtime="20241125 18:30:07.432"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.384" endtime="20241125 18:30:07.433"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.117" endtime="20241125 18:30:07.433"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.433" endtime="20241125 18:30:07.433"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.433" endtime="20241125 18:30:07.433"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.434" endtime="20241125 18:30:07.434"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.433" endtime="20241125 18:30:07.434"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.117" endtime="20241125 18:30:07.434"/>
</try>
<status status="PASS" starttime="20241125 18:30:07.116" endtime="20241125 18:30:07.434"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '16', 'actionId': '16', 'flowId': '4', 'order': 6, 'createdAt': '2024-11-25T11:24:20.716Z', 'updatedAt': '2024-11-25T12:28:37.873Z', 'action': {'id': '16', 'name': 'Get vehicle info', 'type': '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.435" level="INFO">${action} = {'id': '16', 'name': 'Get vehicle info', 'type': 'GET_TEXT', 'selectorI': '15', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T11:23:13.728Z', 'updatedAt': '2024-11-25T11:2...</msg>
<status status="PASS" starttime="20241125 18:30:07.435" endtime="20241125 18:30:07.435"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.435" endtime="20241125 18:30:07.436"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 18:30:07.437" level="INFO">${input} = {'id': '17', 'actionId': '16', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T11:23:13.975Z', 'updatedAt': '2024-11-25T11:23:13.975Z'}</msg>
<status status="PASS" starttime="20241125 18:30:07.436" endtime="20241125 18:30:07.437"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.437" endtime="20241125 18:30:07.437"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.437" endtime="20241125 18:30:07.439"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.437" endtime="20241125 18:30:07.439"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.437" endtime="20241125 18:30:07.439"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.440" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 18:30:07.440" endtime="20241125 18:30:07.440"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.441" endtime="20241125 18:30:07.441"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.440" endtime="20241125 18:30:07.441"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.441" endtime="20241125 18:30:07.442"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.441" endtime="20241125 18:30:07.442"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.445" endtime="20241125 18:30:07.445"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.442" endtime="20241125 18:30:07.445"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.447" endtime="20241125 18:30:07.448"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.450" endtime="20241125 18:30:07.451"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.445" endtime="20241125 18:30:07.451"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.452" endtime="20241125 18:30:07.452"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.451" endtime="20241125 18:30:07.452"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.457" endtime="20241125 18:30:07.457"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.453" endtime="20241125 18:30:07.457"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.460" endtime="20241125 18:30:07.460"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.460" endtime="20241125 18:30:07.460"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.461" endtime="20241125 18:30:07.461"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.461" endtime="20241125 18:30:07.461"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.460" endtime="20241125 18:30:07.462"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>entered ${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.462" endtime="20241125 18:30:07.462"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.457" endtime="20241125 18:30:07.462"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.464" endtime="20241125 18:30:07.464"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.462" endtime="20241125 18:30:07.464"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.466" endtime="20241125 18:30:07.466"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.466" endtime="20241125 18:30:07.467"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.466" endtime="20241125 18:30:07.467"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.467" endtime="20241125 18:30:07.467"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.467" endtime="20241125 18:30:07.467"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.466" endtime="20241125 18:30:07.467"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.465" endtime="20241125 18:30:07.467"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:07.476" endtime="20241125 18:30:07.476"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.481" endtime="20241125 18:30:07.481"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.468" endtime="20241125 18:30:07.481"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.484" endtime="20241125 18:30:07.484"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.484" endtime="20241125 18:30:07.484"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.484" endtime="20241125 18:30:07.484"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.485" endtime="20241125 18:30:07.485"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.485" endtime="20241125 18:30:07.485"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.484" endtime="20241125 18:30:07.485"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.481" endtime="20241125 18:30:07.485"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 18:30:07.497" endtime="20241125 18:30:07.497"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.501" endtime="20241125 18:30:07.502"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.487" endtime="20241125 18:30:07.502"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.504" endtime="20241125 18:30:07.505"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.505" endtime="20241125 18:30:07.505"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.505" endtime="20241125 18:30:07.505"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.506" endtime="20241125 18:30:07.506"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.506" endtime="20241125 18:30:07.506"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.505" endtime="20241125 18:30:07.506"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.502" endtime="20241125 18:30:07.506"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 18:30:07.524" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]/following-sibling::p at state attached</msg>
<status status="PASS" starttime="20241125 18:30:07.517" endtime="20241125 18:30:07.524"/>
</kw>
<msg timestamp="20241125 18:30:07.524" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.515" endtime="20241125 18:30:07.524"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:07.525" endtime="20241125 18:30:07.525"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.515" endtime="20241125 18:30:07.525"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.525" endtime="20241125 18:30:07.525"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.526" endtime="20241125 18:30:07.526"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.525" endtime="20241125 18:30:07.526"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.515" endtime="20241125 18:30:07.526"/>
</try>
<msg timestamp="20241125 18:30:07.526" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.515" endtime="20241125 18:30:07.526"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 18:30:07.527" endtime="20241125 18:30:07.527"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.513" endtime="20241125 18:30:07.527"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 18:30:07.527" endtime="20241125 18:30:07.527"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.527" endtime="20241125 18:30:07.527"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.513" endtime="20241125 18:30:07.527"/>
</try>
<msg timestamp="20241125 18:30:07.527" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.513" endtime="20241125 18:30:07.527"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.531" endtime="20241125 18:30:07.531"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.531" endtime="20241125 18:30:07.532"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.531" endtime="20241125 18:30:07.532"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.531" endtime="20241125 18:30:07.532"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.529" endtime="20241125 18:30:07.532"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.512" endtime="20241125 18:30:07.532"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 18:30:07.547" level="INFO">Property: 'TN91 T9861 ( Two-wheeler )'</msg>
<msg timestamp="20241125 18:30:07.547" level="INFO">${property} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:07.533" endtime="20241125 18:30:07.547"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 18:30:07.547" endtime="20241125 18:30:07.547"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.532" endtime="20241125 18:30:07.548"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.548" endtime="20241125 18:30:07.548"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.548" endtime="20241125 18:30:07.549"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.548" endtime="20241125 18:30:07.549"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.532" endtime="20241125 18:30:07.549"/>
</try>
<msg timestamp="20241125 18:30:07.549" level="INFO">${value} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:07.509" endtime="20241125 18:30:07.549"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.507" endtime="20241125 18:30:07.549"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 18:30:07.557" endtime="20241125 18:30:07.558"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.558" endtime="20241125 18:30:07.558"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.549" endtime="20241125 18:30:07.558"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.440" endtime="20241125 18:30:07.558"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.558" endtime="20241125 18:30:07.559"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 18:30:07.559" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 18:30:07.559" endtime="20241125 18:30:07.560"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 18:30:07.560" endtime="20241125 18:30:07.560"/>
</return>
<msg timestamp="20241125 18:30:07.560" level="INFO">${value} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:07.439" endtime="20241125 18:30:07.560"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.562" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:07.561" endtime="20241125 18:30:07.562"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': None, 'customTargetValue': 'TN91 T9861 ( Two-wheeler )', 'useC...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.563" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 18:30:07.563" endtime="20241125 18:30:07.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.564" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241125 18:30:07.563" endtime="20241125 18:30:07.564"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.564" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.564" endtime="20241125 18:30:07.564"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.565" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241125 18:30:07.565" endtime="20241125 18:30:07.565"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.566" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.565" endtime="20241125 18:30:07.566"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.567" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:07.566" endtime="20241125 18:30:07.567"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.568" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 18:30:07.567" endtime="20241125 18:30:07.568"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:07.568" endtime="20241125 18:30:07.568"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:07.572" endtime="20241125 18:30:07.572"/>
</kw>
<msg timestamp="20241125 18:30:07.572" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.571" endtime="20241125 18:30:07.572"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.573" level="INFO">${values} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:07.573" endtime="20241125 18:30:07.573"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.574" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.574" endtime="20241125 18:30:07.574"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.574" endtime="20241125 18:30:07.574"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.575" endtime="20241125 18:30:07.575"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.575" endtime="20241125 18:30:07.575"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.573" endtime="20241125 18:30:07.575"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.573" endtime="20241125 18:30:07.575"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.572" endtime="20241125 18:30:07.575"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.575" endtime="20241125 18:30:07.575"/>
</return>
<msg timestamp="20241125 18:30:07.575" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.571" endtime="20241125 18:30:07.575"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 18:30:07.579" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241125 18:30:07.578" endtime="20241125 18:30:07.579"/>
</kw>
<msg timestamp="20241125 18:30:07.579" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.578" endtime="20241125 18:30:07.579"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.580" endtime="20241125 18:30:07.580"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.581" endtime="20241125 18:30:07.582"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.580" endtime="20241125 18:30:07.582"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.582" endtime="20241125 18:30:07.582"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.582" endtime="20241125 18:30:07.582"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.580" endtime="20241125 18:30:07.582"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.580" endtime="20241125 18:30:07.582"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.579" endtime="20241125 18:30:07.582"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.582" endtime="20241125 18:30:07.583"/>
</return>
<msg timestamp="20241125 18:30:07.583" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 18:30:07.577" endtime="20241125 18:30:07.583"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:07.584" endtime="20241125 18:30:07.584"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.584" endtime="20241125 18:30:07.584"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.583" endtime="20241125 18:30:07.584"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241125 18:30:07.585" endtime="20241125 18:30:07.585"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="PASS" starttime="20241125 18:30:07.585" endtime="20241125 18:30:07.585"/>
</return>
<status status="PASS" starttime="20241125 18:30:07.584" endtime="20241125 18:30:07.585"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.585" endtime="20241125 18:30:07.585"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241125 18:30:07.585" endtime="20241125 18:30:07.585"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.585" endtime="20241125 18:30:07.585"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.584" endtime="20241125 18:30:07.585"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.584" endtime="20241125 18:30:07.586"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.584" endtime="20241125 18:30:07.587"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.587" endtime="20241125 18:30:07.587"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.587" endtime="20241125 18:30:07.587"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.587" endtime="20241125 18:30:07.587"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.588" endtime="20241125 18:30:07.588"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.588" endtime="20241125 18:30:07.588"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.587" endtime="20241125 18:30:07.588"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.587" endtime="20241125 18:30:07.588"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.587" endtime="20241125 18:30:07.588"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.587" endtime="20241125 18:30:07.588"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.583" endtime="20241125 18:30:07.588"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.583" endtime="20241125 18:30:07.588"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 18:30:07.589" endtime="20241125 18:30:07.589"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.588" endtime="20241125 18:30:07.589"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.588" endtime="20241125 18:30:07.589"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.589" endtime="20241125 18:30:07.589"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.589" endtime="20241125 18:30:07.589"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.589" endtime="20241125 18:30:07.589"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.590" endtime="20241125 18:30:07.590"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.590" endtime="20241125 18:30:07.590"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.590" endtime="20241125 18:30:07.590"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.590" endtime="20241125 18:30:07.591"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241125 18:30:07.591" endtime="20241125 18:30:07.591"/>
</return>
<status status="NOT RUN" starttime="20241125 18:30:07.590" endtime="20241125 18:30:07.591"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.590" endtime="20241125 18:30:07.591"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.590" endtime="20241125 18:30:07.591"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.589" endtime="20241125 18:30:07.591"/>
</if>
<status status="NOT RUN" starttime="20241125 18:30:07.588" endtime="20241125 18:30:07.591"/>
</branch>
<status status="NOT RUN" starttime="20241125 18:30:07.588" endtime="20241125 18:30:07.591"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.562" endtime="20241125 18:30:07.591"/>
</iter>
<status status="PASS" starttime="20241125 18:30:07.562" endtime="20241125 18:30:07.591"/>
</for>
<msg timestamp="20241125 18:30:07.592" level="INFO">${assertion_message} = Assertion passed: TN91 T9861 ( Two-wheeler ) == TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 18:30:07.560" endtime="20241125 18:30:07.592"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 18:30:07.592" endtime="20241125 18:30:07.593"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 18:30:07.598" endtime="20241125 18:30:07.599"/>
</kw>
<msg timestamp="20241125 18:30:07.599" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.598" endtime="20241125 18:30:07.599"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.600" level="INFO">${values} = {'id': '15', 'name': 'Get vehicle info', 'xpath': '//p[text()="VEHICLE"]/following-sibling::p', 'pageId': '3', 'createdAt': '2024-11-25T11:23:12.124Z', 'updatedAt': '2024-11-25T11:23:12.124Z'}</msg>
<status status="PASS" starttime="20241125 18:30:07.600" endtime="20241125 18:30:07.600"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.601" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.600" endtime="20241125 18:30:07.601"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.600" endtime="20241125 18:30:07.601"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.601" endtime="20241125 18:30:07.601"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.601" endtime="20241125 18:30:07.601"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.600" endtime="20241125 18:30:07.601"/>
</if>
<status status="PASS" starttime="20241125 18:30:07.599" endtime="20241125 18:30:07.602"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.599" endtime="20241125 18:30:07.602"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 18:30:07.602" endtime="20241125 18:30:07.602"/>
</return>
<msg timestamp="20241125 18:30:07.602" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 18:30:07.597" endtime="20241125 18:30:07.602"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 18:30:07.603" level="INFO">${xpath} = //p[text()="VEHICLE"]/following-sibling::p</msg>
<status status="PASS" starttime="20241125 18:30:07.603" endtime="20241125 18:30:07.603"/>
</kw>
<status status="PASS" starttime="20241125 18:30:07.602" endtime="20241125 18:30:07.603"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 18:30:07.603" endtime="20241125 18:30:07.603"/>
</kw>
<status status="NOT RUN" starttime="20241125 18:30:07.603" endtime="20241125 18:30:07.604"/>
</branch>
<status status="PASS" starttime="20241125 18:30:07.602" endtime="20241125 18:30:07.604"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 18:30:07.606" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '330', 'status': 'COMPLETED', 'actionName': 'Get vehicle info', 'actionType': 'GET_TEXT', 'actionXpath': '//p[text()="VEHICLE"]/following-sibling::p', 'inputValue': '',...</msg>
<status status="PASS" starttime="20241125 18:30:07.604" endtime="20241125 18:30:07.606"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
