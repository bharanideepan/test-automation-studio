<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241123 15:13:53.905" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="43">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241123 15:14:02.262" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\7364d280-3e0f-44a1-82d7-02fcc79bb375"}</msg>
<msg timestamp="20241123 15:14:03.239" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\7364d280-3e0f-44a1-82d7-02fcc79bb375"}</msg>
<status status="PASS" starttime="20241123 15:14:02.261" endtime="20241123 15:14:03.239"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241123 15:14:03.241" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241123 15:14:03.274" level="INFO">Successfully created context. </msg>
<msg timestamp="20241123 15:14:03.275" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241123 15:14:03.240" endtime="20241123 15:14:03.275"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241123 15:14:03.283" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241123 15:14:03.276" endtime="20241123 15:14:03.283"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241123 15:14:06.396" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241123 15:14:06.396" level="INFO">${page_id} = {'page_id': 'page=8cba51d2-7a9c-469c-9680-fa40c58fb68d', 'video_path': ''}</msg>
<status status="PASS" starttime="20241123 15:14:03.284" endtime="20241123 15:14:06.396"/>
</kw>
<status status="PASS" starttime="20241123 15:14:02.261" endtime="20241123 15:14:06.397"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:06.397" endtime="20241123 15:14:06.398"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241123 15:14:06.416" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '86', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T09:41:52.140Z', 'createdAt': '2024-11-23T09:41:52.140Z', 'errorMe...</msg>
<status status="PASS" starttime="20241123 15:14:06.398" endtime="20241123 15:14:06.416"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241123 15:14:06.417" endtime="20241123 15:14:06.417"/>
</break>
<status status="NOT RUN" starttime="20241123 15:14:06.417" endtime="20241123 15:14:06.417"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.417" endtime="20241123 15:14:06.417"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:06.418" endtime="20241123 15:14:06.420"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:06.423" endtime="20241123 15:14:06.423"/>
</kw>
<msg timestamp="20241123 15:14:06.423" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.422" endtime="20241123 15:14:06.423"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.426" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241123 15:14:06.426" endtime="20241123 15:14:06.426"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.427" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.426" endtime="20241123 15:14:06.427"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.426" endtime="20241123 15:14:06.427"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.427" endtime="20241123 15:14:06.427"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:06.427" endtime="20241123 15:14:06.427"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.426" endtime="20241123 15:14:06.427"/>
</if>
<status status="PASS" starttime="20241123 15:14:06.426" endtime="20241123 15:14:06.427"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.423" endtime="20241123 15:14:06.427"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 15:14:06.427" endtime="20241123 15:14:06.427"/>
</return>
<msg timestamp="20241123 15:14:06.428" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.422" endtime="20241123 15:14:06.428"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.428" endtime="20241123 15:14:06.428"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241123 15:14:06.428" endtime="20241123 15:14:06.429"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:06.428" endtime="20241123 15:14:06.429"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.428" endtime="20241123 15:14:06.429"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:06.431" endtime="20241123 15:14:06.431"/>
</kw>
<msg timestamp="20241123 15:14:06.432" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.431" endtime="20241123 15:14:06.432"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.432" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-22T07:35:54.969Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241123 15:14:06.432" endtime="20241123 15:14:06.432"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.433" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.433" endtime="20241123 15:14:06.433"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.433" endtime="20241123 15:14:06.433"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.433" endtime="20241123 15:14:06.433"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:06.433" endtime="20241123 15:14:06.433"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.432" endtime="20241123 15:14:06.433"/>
</if>
<status status="PASS" starttime="20241123 15:14:06.432" endtime="20241123 15:14:06.433"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.432" endtime="20241123 15:14:06.433"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 15:14:06.433" endtime="20241123 15:14:06.434"/>
</return>
<msg timestamp="20241123 15:14:06.434" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.431" endtime="20241123 15:14:06.434"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:06.436" endtime="20241123 15:14:06.436"/>
</kw>
<msg timestamp="20241123 15:14:06.437" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.436" endtime="20241123 15:14:06.437"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.438" level="INFO">${values} = {'id': '86', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T09:41:52.140Z', 'createdAt': '2024-11-23T09:41:52.140Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241123 15:14:06.438" endtime="20241123 15:14:06.438"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.439" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.439" endtime="20241123 15:14:06.439"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.439" endtime="20241123 15:14:06.439"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.440" endtime="20241123 15:14:06.440"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:06.439" endtime="20241123 15:14:06.440"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.438" endtime="20241123 15:14:06.440"/>
</if>
<status status="PASS" starttime="20241123 15:14:06.437" endtime="20241123 15:14:06.440"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.437" endtime="20241123 15:14:06.440"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 15:14:06.440" endtime="20241123 15:14:06.440"/>
</return>
<msg timestamp="20241123 15:14:06.440" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.435" endtime="20241123 15:14:06.440"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.441" endtime="20241123 15:14:06.441"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:06.441" endtime="20241123 15:14:06.441"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.441" endtime="20241123 15:14:06.441"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.442" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-22T07:35:54.969Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241123 15:14:06.441" endtime="20241123 15:14:06.442"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.442" level="INFO">${testCaseRun} = {'id': '86', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T09:41:52.140Z', 'createdAt': '2024-11-23T09:41:52.140Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241123 15:14:06.442" endtime="20241123 15:14:06.442"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:06.443" endtime="20241123 15:14:06.444"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:06.447" endtime="20241123 15:14:06.448"/>
</kw>
<msg timestamp="20241123 15:14:06.448" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.447" endtime="20241123 15:14:06.448"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.449" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-22T07:35:55.016Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241123 15:14:06.448" endtime="20241123 15:14:06.449"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.450" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.449" endtime="20241123 15:14:06.450"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.449" endtime="20241123 15:14:06.450"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.450" endtime="20241123 15:14:06.450"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:06.450" endtime="20241123 15:14:06.450"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.449" endtime="20241123 15:14:06.450"/>
</if>
<status status="PASS" starttime="20241123 15:14:06.448" endtime="20241123 15:14:06.450"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.448" endtime="20241123 15:14:06.450"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 15:14:06.451" endtime="20241123 15:14:06.451"/>
</return>
<msg timestamp="20241123 15:14:06.451" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.446" endtime="20241123 15:14:06.451"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:06.452" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '86', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241123 15:14:06.451" endtime="20241123 15:14:06.452"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:06.453" level="INFO">${json_response} = {"testCaseRunId": "86", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241123 15:14:06.453" endtime="20241123 15:14:06.453"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:06.483" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:06.483" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:06.453" endtime="20241123 15:14:06.483"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:06.483" endtime="20241123 15:14:06.484"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:06.484" endtime="20241123 15:14:06.484"/>
</return>
<status status="PASS" starttime="20241123 15:14:06.452" endtime="20241123 15:14:06.484"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-22T07:35:55.016Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.486" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-22T04:20:41.623Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241123 15:14:06.485" endtime="20241123 15:14:06.486"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:06.486" endtime="20241123 15:14:06.487"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:06.492" endtime="20241123 15:14:06.493"/>
</kw>
<msg timestamp="20241123 15:14:06.493" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.492" endtime="20241123 15:14:06.493"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.495" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.468Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241123 15:14:06.494" endtime="20241123 15:14:06.495"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.496" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.495" endtime="20241123 15:14:06.496"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.495" endtime="20241123 15:14:06.496"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.496" endtime="20241123 15:14:06.497"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:06.496" endtime="20241123 15:14:06.497"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.495" endtime="20241123 15:14:06.497"/>
</if>
<status status="PASS" starttime="20241123 15:14:06.494" endtime="20241123 15:14:06.497"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.493" endtime="20241123 15:14:06.497"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 15:14:06.497" endtime="20241123 15:14:06.498"/>
</return>
<msg timestamp="20241123 15:14:06.498" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:06.490" endtime="20241123 15:14:06.498"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.468Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.499" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241123 15:14:06.499" endtime="20241123 15:14:06.500"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:06.500" endtime="20241123 15:14:06.500"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 15:14:06.501" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241123 15:14:06.501" endtime="20241123 15:14:06.501"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.501" endtime="20241123 15:14:06.501"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:06.502" endtime="20241123 15:14:06.502"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:06.501" endtime="20241123 15:14:06.502"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.501" endtime="20241123 15:14:06.502"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:06.502" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241123 15:14:06.502" endtime="20241123 15:14:06.502"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241123 15:14:13.093" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241123 15:14:13.093" level="INFO">${page_id} = {'page_id': 'page=9752bce0-8421-48ef-9464-f75d3e3c5703', 'video_path': ''}</msg>
<status status="PASS" starttime="20241123 15:14:06.503" endtime="20241123 15:14:13.093"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241123 15:14:13.094" level="INFO">Switching to page {'page_id': 'page=9752bce0-8421-48ef-9464-f75d3e3c5703', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241123 15:14:13.108" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=eec30b0b-22e5-448f-97ef-6a341b0a5578",
    "contexts": [
      {
        "type": "context",
        "id": "context=f738259a-eeca-4331-be89-561b1414fdf3",
        "activePage": "page=9752bce0-8421-48ef-9464-f75d3e3c5703",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=8cba51d2-7a9c-469c-9680-fa40c58fb68d",
            "timestamp": 1732355043.603
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=9752bce0-8421-48ef-9464-f75d3e3c5703",
            "timestamp": 1732355046.556
          }
        ]
      }
    ],
    "activeContext": "context=f738259a-eeca-4331-be89-561b1414fdf3",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241123 15:14:13.117" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241123 15:14:13.094" endtime="20241123 15:14:13.118"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.503" endtime="20241123 15:14:13.118"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.503" endtime="20241123 15:14:13.118"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:13.119" endtime="20241123 15:14:13.119"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.118" endtime="20241123 15:14:13.119"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.123" endtime="20241123 15:14:13.123"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.119" endtime="20241123 15:14:13.124"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.126" endtime="20241123 15:14:13.126"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.128" endtime="20241123 15:14:13.128"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.124" endtime="20241123 15:14:13.128"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.130" endtime="20241123 15:14:13.130"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.129" endtime="20241123 15:14:13.130"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.134" endtime="20241123 15:14:13.135"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.130" endtime="20241123 15:14:13.135"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.138" endtime="20241123 15:14:13.138"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.135" endtime="20241123 15:14:13.138"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.140" endtime="20241123 15:14:13.140"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.139" endtime="20241123 15:14:13.141"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.142" endtime="20241123 15:14:13.142"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.142" endtime="20241123 15:14:13.142"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.142" endtime="20241123 15:14:13.143"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.143" endtime="20241123 15:14:13.143"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.143" endtime="20241123 15:14:13.143"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:13.142" endtime="20241123 15:14:13.143"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:13.141" endtime="20241123 15:14:13.143"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:13.149" endtime="20241123 15:14:13.149"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.152" endtime="20241123 15:14:13.153"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.143" endtime="20241123 15:14:13.153"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.154" endtime="20241123 15:14:13.154"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.155" endtime="20241123 15:14:13.155"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.155" endtime="20241123 15:14:13.155"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.155" endtime="20241123 15:14:13.155"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.155" endtime="20241123 15:14:13.155"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:13.154" endtime="20241123 15:14:13.155"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:13.153" endtime="20241123 15:14:13.156"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:13.161" endtime="20241123 15:14:13.161"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.165" endtime="20241123 15:14:13.165"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.156" endtime="20241123 15:14:13.165"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.167" endtime="20241123 15:14:13.167"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.165" endtime="20241123 15:14:13.167"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.170" endtime="20241123 15:14:13.170"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.168" endtime="20241123 15:14:13.170"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 15:14:13.176" endtime="20241123 15:14:13.176"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:13.177" endtime="20241123 15:14:13.177"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:13.170" endtime="20241123 15:14:13.177"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.503" endtime="20241123 15:14:13.177"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:13.177" endtime="20241123 15:14:13.178"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 15:14:14.185" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241123 15:14:13.178" endtime="20241123 15:14:14.185"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.502" endtime="20241123 15:14:14.185"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:14.187" level="INFO">${response_message} = {'flowActionSequenceId': '41', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:14.186" endtime="20241123 15:14:14.187"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:14.188" level="INFO">${json_response} = {"flowActionSequenceId": "41", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:14.188" endtime="20241123 15:14:14.188"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:14.194" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:14.194" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:14.188" endtime="20241123 15:14:14.194"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:14.194" endtime="20241123 15:14:14.195"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:14.195" endtime="20241123 15:14:14.195"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.187" endtime="20241123 15:14:14.196"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.185" endtime="20241123 15:14:14.196"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.499" endtime="20241123 15:14:14.196"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.196" endtime="20241123 15:14:14.196"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:14.196" endtime="20241123 15:14:14.197"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.198" endtime="20241123 15:14:14.198"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.196" endtime="20241123 15:14:14.198"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.499" endtime="20241123 15:14:14.199"/>
</try>
<status status="PASS" starttime="20241123 15:14:06.499" endtime="20241123 15:14:14.199"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-22T04:20:41.490Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:14.200" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241123 15:14:14.200" endtime="20241123 15:14:14.200"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:14.201" endtime="20241123 15:14:14.202"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 15:14:14.203" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241123 15:14:14.202" endtime="20241123 15:14:14.203"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.204" endtime="20241123 15:14:14.204"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.204" endtime="20241123 15:14:14.205"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.204" endtime="20241123 15:14:14.205"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.203" endtime="20241123 15:14:14.205"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:14.206" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241123 15:14:14.206" endtime="20241123 15:14:14.206"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:14.207" endtime="20241123 15:14:14.207"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.206" endtime="20241123 15:14:14.207"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:14.208" endtime="20241123 15:14:14.208"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.208" endtime="20241123 15:14:14.208"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.212" endtime="20241123 15:14:14.212"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.209" endtime="20241123 15:14:14.212"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.217" endtime="20241123 15:14:14.217"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.220" endtime="20241123 15:14:14.220"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.212" endtime="20241123 15:14:14.220"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.222" endtime="20241123 15:14:14.222"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.221" endtime="20241123 15:14:14.223"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.226" endtime="20241123 15:14:14.226"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.223" endtime="20241123 15:14:14.226"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:14.272" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 15:14:14.240" endtime="20241123 15:14:14.272"/>
</kw>
<msg timestamp="20241123 15:14:14.273" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.239" endtime="20241123 15:14:14.273"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.273" endtime="20241123 15:14:14.273"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.239" endtime="20241123 15:14:14.273"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.273" endtime="20241123 15:14:14.273"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.274" endtime="20241123 15:14:14.274"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.273" endtime="20241123 15:14:14.274"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.239" endtime="20241123 15:14:14.274"/>
</try>
<msg timestamp="20241123 15:14:14.274" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.238" endtime="20241123 15:14:14.274"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.274" endtime="20241123 15:14:14.274"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.236" endtime="20241123 15:14:14.274"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:14.275" endtime="20241123 15:14:14.275"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:14.274" endtime="20241123 15:14:14.275"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.236" endtime="20241123 15:14:14.275"/>
</try>
<msg timestamp="20241123 15:14:14.275" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.235" endtime="20241123 15:14:14.275"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.278" endtime="20241123 15:14:14.278"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.278" endtime="20241123 15:14:14.278"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.277" endtime="20241123 15:14:14.278"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.277" endtime="20241123 15:14:14.278"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.276" endtime="20241123 15:14:14.278"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.234" endtime="20241123 15:14:14.278"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:14.301" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 15:14:14.290" endtime="20241123 15:14:14.301"/>
</kw>
<msg timestamp="20241123 15:14:14.301" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.290" endtime="20241123 15:14:14.301"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.301" endtime="20241123 15:14:14.301"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.290" endtime="20241123 15:14:14.302"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.302" endtime="20241123 15:14:14.302"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.302" endtime="20241123 15:14:14.303"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.302" endtime="20241123 15:14:14.303"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.290" endtime="20241123 15:14:14.303"/>
</try>
<msg timestamp="20241123 15:14:14.303" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.289" endtime="20241123 15:14:14.303"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.303" endtime="20241123 15:14:14.303"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.288" endtime="20241123 15:14:14.304"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:14.304" endtime="20241123 15:14:14.304"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:14.304" endtime="20241123 15:14:14.304"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.288" endtime="20241123 15:14:14.304"/>
</try>
<msg timestamp="20241123 15:14:14.305" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.288" endtime="20241123 15:14:14.305"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.309" endtime="20241123 15:14:14.309"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.310" endtime="20241123 15:14:14.310"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.309" endtime="20241123 15:14:14.310"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.309" endtime="20241123 15:14:14.310"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.307" endtime="20241123 15:14:14.311"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.287" endtime="20241123 15:14:14.311"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 15:14:14.343" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241123 15:14:14.343" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241123 15:14:14.312" endtime="20241123 15:14:14.343"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 15:14:14.343" endtime="20241123 15:14:14.344"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.312" endtime="20241123 15:14:14.344"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.344" endtime="20241123 15:14:14.344"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.344" endtime="20241123 15:14:14.344"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.344" endtime="20241123 15:14:14.345"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.312" endtime="20241123 15:14:14.345"/>
</try>
<msg timestamp="20241123 15:14:14.345" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241123 15:14:14.285" endtime="20241123 15:14:14.345"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.349" endtime="20241123 15:14:14.349"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.349" endtime="20241123 15:14:14.350"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.348" endtime="20241123 15:14:14.350"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.348" endtime="20241123 15:14:14.350"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.347" endtime="20241123 15:14:14.350"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.283" endtime="20241123 15:14:14.351"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.351" endtime="20241123 15:14:14.351"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.351" endtime="20241123 15:14:14.352"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.283" endtime="20241123 15:14:14.352"/>
</try>
<status status="PASS" starttime="20241123 15:14:14.282" endtime="20241123 15:14:14.352"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:14.371" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241123 15:14:14.363" endtime="20241123 15:14:14.371"/>
</kw>
<msg timestamp="20241123 15:14:14.372" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.362" endtime="20241123 15:14:14.372"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.372" endtime="20241123 15:14:14.372"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.361" endtime="20241123 15:14:14.372"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.373" endtime="20241123 15:14:14.373"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.373" endtime="20241123 15:14:14.373"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.372" endtime="20241123 15:14:14.374"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.361" endtime="20241123 15:14:14.374"/>
</try>
<msg timestamp="20241123 15:14:14.374" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.359" endtime="20241123 15:14:14.374"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.374" endtime="20241123 15:14:14.375"/>
</return>
<msg timestamp="20241123 15:14:14.375" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.357" endtime="20241123 15:14:14.375"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.380" endtime="20241123 15:14:14.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.381" endtime="20241123 15:14:14.381"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.380" endtime="20241123 15:14:14.381"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.379" endtime="20241123 15:14:14.381"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.377" endtime="20241123 15:14:14.381"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.356" endtime="20241123 15:14:14.381"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.230" endtime="20241123 15:14:14.382"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:14.409" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241123 15:14:14.387" endtime="20241123 15:14:14.409"/>
</kw>
<msg timestamp="20241123 15:14:14.410" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.387" endtime="20241123 15:14:14.410"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.410" endtime="20241123 15:14:14.410"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.387" endtime="20241123 15:14:14.410"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.410" endtime="20241123 15:14:14.410"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.411" endtime="20241123 15:14:14.411"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.410" endtime="20241123 15:14:14.411"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.387" endtime="20241123 15:14:14.411"/>
</try>
<msg timestamp="20241123 15:14:14.411" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.386" endtime="20241123 15:14:14.411"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.411" endtime="20241123 15:14:14.412"/>
</return>
<msg timestamp="20241123 15:14:14.412" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.384" endtime="20241123 15:14:14.412"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.415" endtime="20241123 15:14:14.415"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.416" endtime="20241123 15:14:14.416"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.415" endtime="20241123 15:14:14.416"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.415" endtime="20241123 15:14:14.416"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.414" endtime="20241123 15:14:14.416"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.384" endtime="20241123 15:14:14.416"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:14.417" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 15:14:14.417" endtime="20241123 15:14:14.417"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.419" endtime="20241123 15:14:14.419"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.422" endtime="20241123 15:14:14.422"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.419" endtime="20241123 15:14:14.422"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:14.422" endtime="20241123 15:14:14.423"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.422" endtime="20241123 15:14:14.423"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.419" endtime="20241123 15:14:14.423"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241123 15:14:14.424" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241123 15:14:14.423" endtime="20241123 15:14:14.471"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.423" endtime="20241123 15:14:14.472"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.472" endtime="20241123 15:14:14.472"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.473" endtime="20241123 15:14:14.473"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.472" endtime="20241123 15:14:14.473"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.423" endtime="20241123 15:14:14.473"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:14.499" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 15:14:14.489" endtime="20241123 15:14:14.499"/>
</kw>
<msg timestamp="20241123 15:14:14.500" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.489" endtime="20241123 15:14:14.500"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.500" endtime="20241123 15:14:14.501"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.489" endtime="20241123 15:14:14.501"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.501" endtime="20241123 15:14:14.502"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.502" endtime="20241123 15:14:14.502"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.501" endtime="20241123 15:14:14.502"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.488" endtime="20241123 15:14:14.503"/>
</try>
<msg timestamp="20241123 15:14:14.504" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.488" endtime="20241123 15:14:14.504"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.504" endtime="20241123 15:14:14.504"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.486" endtime="20241123 15:14:14.504"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:14.504" endtime="20241123 15:14:14.505"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:14.504" endtime="20241123 15:14:14.505"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.486" endtime="20241123 15:14:14.505"/>
</try>
<msg timestamp="20241123 15:14:14.505" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.485" endtime="20241123 15:14:14.505"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.509" endtime="20241123 15:14:14.509"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.509" endtime="20241123 15:14:14.509"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.509" endtime="20241123 15:14:14.510"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.508" endtime="20241123 15:14:14.510"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.507" endtime="20241123 15:14:14.510"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.483" endtime="20241123 15:14:14.510"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:14.537" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 15:14:14.526" endtime="20241123 15:14:14.537"/>
</kw>
<msg timestamp="20241123 15:14:14.538" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.526" endtime="20241123 15:14:14.538"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.538" endtime="20241123 15:14:14.538"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.525" endtime="20241123 15:14:14.538"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.539" endtime="20241123 15:14:14.539"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.539" endtime="20241123 15:14:14.539"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.538" endtime="20241123 15:14:14.539"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.525" endtime="20241123 15:14:14.540"/>
</try>
<msg timestamp="20241123 15:14:14.540" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.524" endtime="20241123 15:14:14.540"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.540" endtime="20241123 15:14:14.541"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.522" endtime="20241123 15:14:14.541"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:14.541" endtime="20241123 15:14:14.541"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:14.541" endtime="20241123 15:14:14.541"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.522" endtime="20241123 15:14:14.541"/>
</try>
<msg timestamp="20241123 15:14:14.542" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.522" endtime="20241123 15:14:14.542"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.548" endtime="20241123 15:14:14.548"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.549" endtime="20241123 15:14:14.549"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.547" endtime="20241123 15:14:14.549"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.547" endtime="20241123 15:14:14.549"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.544" endtime="20241123 15:14:14.550"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.521" endtime="20241123 15:14:14.550"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 15:14:14.571" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241123 15:14:14.571" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241123 15:14:14.551" endtime="20241123 15:14:14.571"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 15:14:14.571" endtime="20241123 15:14:14.571"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.550" endtime="20241123 15:14:14.571"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.572" endtime="20241123 15:14:14.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.572" endtime="20241123 15:14:14.572"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.571" endtime="20241123 15:14:14.572"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.550" endtime="20241123 15:14:14.573"/>
</try>
<msg timestamp="20241123 15:14:14.573" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241123 15:14:14.518" endtime="20241123 15:14:14.573"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.576" endtime="20241123 15:14:14.577"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.577" endtime="20241123 15:14:14.577"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.576" endtime="20241123 15:14:14.577"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.576" endtime="20241123 15:14:14.577"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.574" endtime="20241123 15:14:14.577"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.515" endtime="20241123 15:14:14.577"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.578" endtime="20241123 15:14:14.578"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.578" endtime="20241123 15:14:14.578"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.515" endtime="20241123 15:14:14.578"/>
</try>
<status status="PASS" starttime="20241123 15:14:14.514" endtime="20241123 15:14:14.579"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:14.595" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241123 15:14:14.586" endtime="20241123 15:14:14.595"/>
</kw>
<msg timestamp="20241123 15:14:14.595" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.586" endtime="20241123 15:14:14.595"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.595" endtime="20241123 15:14:14.595"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.585" endtime="20241123 15:14:14.596"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.596" endtime="20241123 15:14:14.596"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.597" endtime="20241123 15:14:14.597"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.596" endtime="20241123 15:14:14.597"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.585" endtime="20241123 15:14:14.597"/>
</try>
<msg timestamp="20241123 15:14:14.598" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.584" endtime="20241123 15:14:14.598"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.598" endtime="20241123 15:14:14.598"/>
</return>
<msg timestamp="20241123 15:14:14.598" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.583" endtime="20241123 15:14:14.599"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.603" endtime="20241123 15:14:14.603"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.603" endtime="20241123 15:14:14.603"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.602" endtime="20241123 15:14:14.603"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.602" endtime="20241123 15:14:14.603"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.600" endtime="20241123 15:14:14.604"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.582" endtime="20241123 15:14:14.604"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.477" endtime="20241123 15:14:14.604"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:14.629" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 15:14:14.620" endtime="20241123 15:14:14.629"/>
</kw>
<msg timestamp="20241123 15:14:14.629" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.620" endtime="20241123 15:14:14.629"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.630" endtime="20241123 15:14:14.630"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.619" endtime="20241123 15:14:14.630"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.631" endtime="20241123 15:14:14.631"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.631" endtime="20241123 15:14:14.632"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.630" endtime="20241123 15:14:14.632"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.619" endtime="20241123 15:14:14.632"/>
</try>
<msg timestamp="20241123 15:14:14.633" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.618" endtime="20241123 15:14:14.633"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.633" endtime="20241123 15:14:14.634"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.615" endtime="20241123 15:14:14.634"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:14.634" endtime="20241123 15:14:14.634"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:14.634" endtime="20241123 15:14:14.634"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.615" endtime="20241123 15:14:14.634"/>
</try>
<msg timestamp="20241123 15:14:14.635" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.612" endtime="20241123 15:14:14.635"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.638" endtime="20241123 15:14:14.639"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.639" endtime="20241123 15:14:14.639"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.638" endtime="20241123 15:14:14.639"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.638" endtime="20241123 15:14:14.639"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.636" endtime="20241123 15:14:14.639"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.610" endtime="20241123 15:14:14.640"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 15:14:14.658" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241123 15:14:14.658" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241123 15:14:14.640" endtime="20241123 15:14:14.658"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 15:14:14.658" endtime="20241123 15:14:14.659"/>
</return>
<status status="PASS" starttime="20241123 15:14:14.640" endtime="20241123 15:14:14.659"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.659" endtime="20241123 15:14:14.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.660" endtime="20241123 15:14:14.660"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.659" endtime="20241123 15:14:14.660"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.640" endtime="20241123 15:14:14.660"/>
</try>
<msg timestamp="20241123 15:14:14.660" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241123 15:14:14.606" endtime="20241123 15:14:14.660"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241123 15:14:14.661" endtime="20241123 15:14:14.661"/>
</return>
<msg timestamp="20241123 15:14:14.661" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241123 15:14:14.475" endtime="20241123 15:14:14.661"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241123 15:14:14.673" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.666" endtime="20241123 15:14:14.673"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:14.673" endtime="20241123 15:14:14.673"/>
</return>
<msg timestamp="20241123 15:14:14.674" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241123 15:14:14.664" endtime="20241123 15:14:14.674"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.679" endtime="20241123 15:14:14.680"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.680" endtime="20241123 15:14:14.680"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.679" endtime="20241123 15:14:14.681"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.679" endtime="20241123 15:14:14.681"/>
</if>
<status status="PASS" starttime="20241123 15:14:14.678" endtime="20241123 15:14:14.681"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.474" endtime="20241123 15:14:14.681"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.418" endtime="20241123 15:14:14.681"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.418" endtime="20241123 15:14:14.682"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.417" endtime="20241123 15:14:14.682"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.682" endtime="20241123 15:14:14.683"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.682" endtime="20241123 15:14:14.683"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.417" endtime="20241123 15:14:14.683"/>
</try>
<status status="PASS" starttime="20241123 15:14:14.229" endtime="20241123 15:14:14.683"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.227" endtime="20241123 15:14:14.683"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.685" endtime="20241123 15:14:14.685"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.683" endtime="20241123 15:14:14.685"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.687" endtime="20241123 15:14:14.687"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.688" endtime="20241123 15:14:14.688"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.687" endtime="20241123 15:14:14.688"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.688" endtime="20241123 15:14:14.688"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.688" endtime="20241123 15:14:14.688"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:14.687" endtime="20241123 15:14:14.689"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:14.685" endtime="20241123 15:14:14.689"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:14.696" endtime="20241123 15:14:14.696"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.701" endtime="20241123 15:14:14.701"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.689" endtime="20241123 15:14:14.701"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.703" endtime="20241123 15:14:14.703"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.704" endtime="20241123 15:14:14.704"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.703" endtime="20241123 15:14:14.704"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.704" endtime="20241123 15:14:14.704"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.704" endtime="20241123 15:14:14.704"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:14.703" endtime="20241123 15:14:14.704"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:14.701" endtime="20241123 15:14:14.705"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:14.714" endtime="20241123 15:14:14.715"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.722" endtime="20241123 15:14:14.722"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.705" endtime="20241123 15:14:14.723"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.724" endtime="20241123 15:14:14.725"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.723" endtime="20241123 15:14:14.725"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.728" endtime="20241123 15:14:14.729"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.725" endtime="20241123 15:14:14.729"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 15:14:14.742" endtime="20241123 15:14:14.742"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:14.742" endtime="20241123 15:14:14.742"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:14.729" endtime="20241123 15:14:14.743"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.206" endtime="20241123 15:14:14.743"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:14.743" endtime="20241123 15:14:14.744"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 15:14:15.749" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241123 15:14:14.744" endtime="20241123 15:14:15.749"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.205" endtime="20241123 15:14:15.749"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:15.751" level="INFO">${response_message} = {'flowActionSequenceId': '43', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:15.750" endtime="20241123 15:14:15.751"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:15.752" level="INFO">${json_response} = {"flowActionSequenceId": "43", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:15.752" endtime="20241123 15:14:15.752"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:15.784" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:15.785" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:15.753" endtime="20241123 15:14:15.785"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:15.785" endtime="20241123 15:14:15.786"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:15.786" endtime="20241123 15:14:15.786"/>
</return>
<status status="PASS" starttime="20241123 15:14:15.751" endtime="20241123 15:14:15.787"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.749" endtime="20241123 15:14:15.787"/>
</kw>
<status status="PASS" starttime="20241123 15:14:14.199" endtime="20241123 15:14:15.788"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.788" endtime="20241123 15:14:15.788"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:15.789" endtime="20241123 15:14:15.789"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.789" endtime="20241123 15:14:15.789"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.788" endtime="20241123 15:14:15.789"/>
</branch>
<status status="PASS" starttime="20241123 15:14:14.199" endtime="20241123 15:14:15.789"/>
</try>
<status status="PASS" starttime="20241123 15:14:14.199" endtime="20241123 15:14:15.790"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.497Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:15.791" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241123 15:14:15.790" endtime="20241123 15:14:15.791"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:15.791" endtime="20241123 15:14:15.792"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 15:14:15.792" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241123 15:14:15.792" endtime="20241123 15:14:15.793"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.793" endtime="20241123 15:14:15.793"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.794" endtime="20241123 15:14:15.794"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.793" endtime="20241123 15:14:15.794"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.793" endtime="20241123 15:14:15.794"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:15.796" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 15:14:15.796" endtime="20241123 15:14:15.796"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:15.797" endtime="20241123 15:14:15.798"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.797" endtime="20241123 15:14:15.798"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:15.798" endtime="20241123 15:14:15.798"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.798" endtime="20241123 15:14:15.798"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.801" endtime="20241123 15:14:15.801"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.799" endtime="20241123 15:14:15.802"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.805" endtime="20241123 15:14:15.805"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.808" endtime="20241123 15:14:15.808"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.802" endtime="20241123 15:14:15.808"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.810" endtime="20241123 15:14:15.810"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.808" endtime="20241123 15:14:15.810"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.815" endtime="20241123 15:14:15.815"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.810" endtime="20241123 15:14:15.816"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:15.838" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 15:14:15.828" endtime="20241123 15:14:15.838"/>
</kw>
<msg timestamp="20241123 15:14:15.838" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.827" endtime="20241123 15:14:15.838"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:15.838" endtime="20241123 15:14:15.839"/>
</return>
<status status="PASS" starttime="20241123 15:14:15.827" endtime="20241123 15:14:15.839"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.839" endtime="20241123 15:14:15.839"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.839" endtime="20241123 15:14:15.840"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.839" endtime="20241123 15:14:15.840"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.827" endtime="20241123 15:14:15.840"/>
</try>
<msg timestamp="20241123 15:14:15.840" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.826" endtime="20241123 15:14:15.840"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:15.840" endtime="20241123 15:14:15.840"/>
</return>
<status status="PASS" starttime="20241123 15:14:15.825" endtime="20241123 15:14:15.841"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:15.841" endtime="20241123 15:14:15.841"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:15.841" endtime="20241123 15:14:15.841"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.824" endtime="20241123 15:14:15.841"/>
</try>
<msg timestamp="20241123 15:14:15.841" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.824" endtime="20241123 15:14:15.841"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.846" endtime="20241123 15:14:15.846"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.847" endtime="20241123 15:14:15.847"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.846" endtime="20241123 15:14:15.847"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.846" endtime="20241123 15:14:15.847"/>
</if>
<status status="PASS" starttime="20241123 15:14:15.843" endtime="20241123 15:14:15.847"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.823" endtime="20241123 15:14:15.847"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:15.870" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 15:14:15.861" endtime="20241123 15:14:15.870"/>
</kw>
<msg timestamp="20241123 15:14:15.870" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.860" endtime="20241123 15:14:15.870"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:15.870" endtime="20241123 15:14:15.870"/>
</return>
<status status="PASS" starttime="20241123 15:14:15.860" endtime="20241123 15:14:15.871"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.871" endtime="20241123 15:14:15.871"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.871" endtime="20241123 15:14:15.871"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.871" endtime="20241123 15:14:15.871"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.860" endtime="20241123 15:14:15.872"/>
</try>
<msg timestamp="20241123 15:14:15.872" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.859" endtime="20241123 15:14:15.872"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:15.872" endtime="20241123 15:14:15.872"/>
</return>
<status status="PASS" starttime="20241123 15:14:15.857" endtime="20241123 15:14:15.872"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:15.873" endtime="20241123 15:14:15.873"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:15.872" endtime="20241123 15:14:15.873"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.857" endtime="20241123 15:14:15.873"/>
</try>
<msg timestamp="20241123 15:14:15.873" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.856" endtime="20241123 15:14:15.873"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.877" endtime="20241123 15:14:15.877"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.877" endtime="20241123 15:14:15.877"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.876" endtime="20241123 15:14:15.877"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.876" endtime="20241123 15:14:15.877"/>
</if>
<status status="PASS" starttime="20241123 15:14:15.875" endtime="20241123 15:14:15.878"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.856" endtime="20241123 15:14:15.878"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 15:14:15.892" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241123 15:14:15.892" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241123 15:14:15.879" endtime="20241123 15:14:15.892"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 15:14:15.892" endtime="20241123 15:14:15.893"/>
</return>
<status status="PASS" starttime="20241123 15:14:15.878" endtime="20241123 15:14:15.893"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.893" endtime="20241123 15:14:15.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.893" endtime="20241123 15:14:15.894"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.893" endtime="20241123 15:14:15.894"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.878" endtime="20241123 15:14:15.894"/>
</try>
<msg timestamp="20241123 15:14:15.894" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241123 15:14:15.853" endtime="20241123 15:14:15.894"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.898" endtime="20241123 15:14:15.898"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.898" endtime="20241123 15:14:15.899"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.898" endtime="20241123 15:14:15.899"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.898" endtime="20241123 15:14:15.899"/>
</if>
<status status="PASS" starttime="20241123 15:14:15.896" endtime="20241123 15:14:15.899"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.851" endtime="20241123 15:14:15.899"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.900" endtime="20241123 15:14:15.900"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.899" endtime="20241123 15:14:15.900"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.851" endtime="20241123 15:14:15.900"/>
</try>
<status status="PASS" starttime="20241123 15:14:15.850" endtime="20241123 15:14:15.900"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:15.915" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241123 15:14:15.907" endtime="20241123 15:14:15.915"/>
</kw>
<msg timestamp="20241123 15:14:15.915" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.906" endtime="20241123 15:14:15.915"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:15.915" endtime="20241123 15:14:15.915"/>
</return>
<status status="PASS" starttime="20241123 15:14:15.906" endtime="20241123 15:14:15.915"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.916" endtime="20241123 15:14:15.916"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.916" endtime="20241123 15:14:15.916"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.916" endtime="20241123 15:14:15.916"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.906" endtime="20241123 15:14:15.917"/>
</try>
<msg timestamp="20241123 15:14:15.917" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.905" endtime="20241123 15:14:15.917"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:15.917" endtime="20241123 15:14:15.917"/>
</return>
<msg timestamp="20241123 15:14:15.918" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.903" endtime="20241123 15:14:15.918"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.921" endtime="20241123 15:14:15.921"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.921" endtime="20241123 15:14:15.921"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.921" endtime="20241123 15:14:15.921"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.920" endtime="20241123 15:14:15.922"/>
</if>
<status status="PASS" starttime="20241123 15:14:15.919" endtime="20241123 15:14:15.922"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.903" endtime="20241123 15:14:15.922"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.821" endtime="20241123 15:14:15.922"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:15.947" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241123 15:14:15.929" endtime="20241123 15:14:15.947"/>
</kw>
<msg timestamp="20241123 15:14:15.947" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.928" endtime="20241123 15:14:15.947"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:15.948" endtime="20241123 15:14:15.948"/>
</return>
<status status="PASS" starttime="20241123 15:14:15.928" endtime="20241123 15:14:15.948"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.948" endtime="20241123 15:14:15.948"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.949" endtime="20241123 15:14:15.949"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.948" endtime="20241123 15:14:15.949"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.928" endtime="20241123 15:14:15.949"/>
</try>
<msg timestamp="20241123 15:14:15.949" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.927" endtime="20241123 15:14:15.949"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:15.949" endtime="20241123 15:14:15.950"/>
</return>
<msg timestamp="20241123 15:14:15.950" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241123 15:14:15.925" endtime="20241123 15:14:15.950"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.953" endtime="20241123 15:14:15.954"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.954" endtime="20241123 15:14:15.954"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.953" endtime="20241123 15:14:15.954"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.953" endtime="20241123 15:14:15.954"/>
</if>
<status status="PASS" starttime="20241123 15:14:15.951" endtime="20241123 15:14:15.954"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.925" endtime="20241123 15:14:15.955"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:15.955" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 15:14:15.955" endtime="20241123 15:14:15.955"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.958" endtime="20241123 15:14:15.958"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.960" endtime="20241123 15:14:15.960"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.957" endtime="20241123 15:14:15.961"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:15.961" endtime="20241123 15:14:15.961"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.961" endtime="20241123 15:14:15.961"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.957" endtime="20241123 15:14:15.962"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241123 15:14:15.963" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241123 15:14:15.962" endtime="20241123 15:14:15.993"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.962" endtime="20241123 15:14:15.993"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.994" endtime="20241123 15:14:15.994"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:15.994" endtime="20241123 15:14:15.994"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:15.993" endtime="20241123 15:14:15.994"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.962" endtime="20241123 15:14:15.995"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:16.013" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 15:14:16.006" endtime="20241123 15:14:16.013"/>
</kw>
<msg timestamp="20241123 15:14:16.014" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.005" endtime="20241123 15:14:16.014"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.014" endtime="20241123 15:14:16.014"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.005" endtime="20241123 15:14:16.014"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.015" endtime="20241123 15:14:16.015"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.015" endtime="20241123 15:14:16.015"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.014" endtime="20241123 15:14:16.015"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.005" endtime="20241123 15:14:16.015"/>
</try>
<msg timestamp="20241123 15:14:16.016" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.004" endtime="20241123 15:14:16.016"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.016" endtime="20241123 15:14:16.016"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.003" endtime="20241123 15:14:16.016"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:16.016" endtime="20241123 15:14:16.016"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:16.016" endtime="20241123 15:14:16.016"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.003" endtime="20241123 15:14:16.017"/>
</try>
<msg timestamp="20241123 15:14:16.017" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.002" endtime="20241123 15:14:16.017"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.020" endtime="20241123 15:14:16.020"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.021" endtime="20241123 15:14:16.021"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.020" endtime="20241123 15:14:16.021"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.020" endtime="20241123 15:14:16.021"/>
</if>
<status status="PASS" starttime="20241123 15:14:16.018" endtime="20241123 15:14:16.021"/>
</kw>
<status status="PASS" starttime="20241123 15:14:16.001" endtime="20241123 15:14:16.021"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:16.041" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 15:14:16.033" endtime="20241123 15:14:16.041"/>
</kw>
<msg timestamp="20241123 15:14:16.041" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.033" endtime="20241123 15:14:16.041"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.042" endtime="20241123 15:14:16.042"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.033" endtime="20241123 15:14:16.042"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.042" endtime="20241123 15:14:16.042"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.043" endtime="20241123 15:14:16.043"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.042" endtime="20241123 15:14:16.043"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.033" endtime="20241123 15:14:16.043"/>
</try>
<msg timestamp="20241123 15:14:16.043" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.032" endtime="20241123 15:14:16.043"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.044" endtime="20241123 15:14:16.044"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.030" endtime="20241123 15:14:16.044"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:16.044" endtime="20241123 15:14:16.044"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:16.044" endtime="20241123 15:14:16.044"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.030" endtime="20241123 15:14:16.044"/>
</try>
<msg timestamp="20241123 15:14:16.045" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.030" endtime="20241123 15:14:16.045"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.049" endtime="20241123 15:14:16.049"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.049" endtime="20241123 15:14:16.049"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.049" endtime="20241123 15:14:16.049"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.048" endtime="20241123 15:14:16.050"/>
</if>
<status status="PASS" starttime="20241123 15:14:16.047" endtime="20241123 15:14:16.050"/>
</kw>
<status status="PASS" starttime="20241123 15:14:16.029" endtime="20241123 15:14:16.050"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 15:14:16.064" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241123 15:14:16.064" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241123 15:14:16.051" endtime="20241123 15:14:16.064"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 15:14:16.064" endtime="20241123 15:14:16.064"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.050" endtime="20241123 15:14:16.065"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.065" endtime="20241123 15:14:16.065"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.065" endtime="20241123 15:14:16.065"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.065" endtime="20241123 15:14:16.066"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.050" endtime="20241123 15:14:16.066"/>
</try>
<msg timestamp="20241123 15:14:16.066" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241123 15:14:16.026" endtime="20241123 15:14:16.066"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.069" endtime="20241123 15:14:16.069"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.070" endtime="20241123 15:14:16.070"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.069" endtime="20241123 15:14:16.070"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.069" endtime="20241123 15:14:16.070"/>
</if>
<status status="PASS" starttime="20241123 15:14:16.068" endtime="20241123 15:14:16.070"/>
</kw>
<status status="PASS" starttime="20241123 15:14:16.024" endtime="20241123 15:14:16.070"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.071" endtime="20241123 15:14:16.071"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.070" endtime="20241123 15:14:16.071"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.024" endtime="20241123 15:14:16.071"/>
</try>
<status status="PASS" starttime="20241123 15:14:16.024" endtime="20241123 15:14:16.071"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:16.085" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241123 15:14:16.077" endtime="20241123 15:14:16.085"/>
</kw>
<msg timestamp="20241123 15:14:16.086" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.077" endtime="20241123 15:14:16.086"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.086" endtime="20241123 15:14:16.086"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.077" endtime="20241123 15:14:16.086"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.087" endtime="20241123 15:14:16.087"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.087" endtime="20241123 15:14:16.087"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.086" endtime="20241123 15:14:16.087"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.077" endtime="20241123 15:14:16.087"/>
</try>
<msg timestamp="20241123 15:14:16.088" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.076" endtime="20241123 15:14:16.088"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.088" endtime="20241123 15:14:16.088"/>
</return>
<msg timestamp="20241123 15:14:16.088" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.074" endtime="20241123 15:14:16.088"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.091" endtime="20241123 15:14:16.092"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.092" endtime="20241123 15:14:16.092"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.091" endtime="20241123 15:14:16.092"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.091" endtime="20241123 15:14:16.092"/>
</if>
<status status="PASS" starttime="20241123 15:14:16.090" endtime="20241123 15:14:16.092"/>
</kw>
<status status="PASS" starttime="20241123 15:14:16.074" endtime="20241123 15:14:16.093"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.997" endtime="20241123 15:14:16.093"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:16.109" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 15:14:16.102" endtime="20241123 15:14:16.109"/>
</kw>
<msg timestamp="20241123 15:14:16.109" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.102" endtime="20241123 15:14:16.109"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.109" endtime="20241123 15:14:16.109"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.101" endtime="20241123 15:14:16.109"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.110" endtime="20241123 15:14:16.110"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.110" endtime="20241123 15:14:16.110"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.110" endtime="20241123 15:14:16.110"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.101" endtime="20241123 15:14:16.111"/>
</try>
<msg timestamp="20241123 15:14:16.111" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.101" endtime="20241123 15:14:16.111"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.111" endtime="20241123 15:14:16.111"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.099" endtime="20241123 15:14:16.111"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:16.111" endtime="20241123 15:14:16.111"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:16.111" endtime="20241123 15:14:16.111"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.099" endtime="20241123 15:14:16.111"/>
</try>
<msg timestamp="20241123 15:14:16.112" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.099" endtime="20241123 15:14:16.112"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.115" endtime="20241123 15:14:16.115"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.115" endtime="20241123 15:14:16.116"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.115" endtime="20241123 15:14:16.116"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.115" endtime="20241123 15:14:16.116"/>
</if>
<status status="PASS" starttime="20241123 15:14:16.113" endtime="20241123 15:14:16.116"/>
</kw>
<status status="PASS" starttime="20241123 15:14:16.098" endtime="20241123 15:14:16.116"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 15:14:16.130" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241123 15:14:16.130" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 15:14:16.117" endtime="20241123 15:14:16.131"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 15:14:16.131" endtime="20241123 15:14:16.131"/>
</return>
<status status="PASS" starttime="20241123 15:14:16.116" endtime="20241123 15:14:16.131"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.131" endtime="20241123 15:14:16.131"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.132" endtime="20241123 15:14:16.132"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.131" endtime="20241123 15:14:16.132"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.116" endtime="20241123 15:14:16.132"/>
</try>
<msg timestamp="20241123 15:14:16.133" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 15:14:16.094" endtime="20241123 15:14:16.133"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241123 15:14:16.133" endtime="20241123 15:14:16.133"/>
</return>
<msg timestamp="20241123 15:14:16.133" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 15:14:15.996" endtime="20241123 15:14:16.133"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241123 15:14:16.142" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.136" endtime="20241123 15:14:16.142"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:16.142" endtime="20241123 15:14:16.142"/>
</return>
<msg timestamp="20241123 15:14:16.142" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241123 15:14:16.136" endtime="20241123 15:14:16.143"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.149" endtime="20241123 15:14:16.149"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.150" endtime="20241123 15:14:16.150"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.149" endtime="20241123 15:14:16.150"/>
</branch>
<status status="PASS" starttime="20241123 15:14:16.149" endtime="20241123 15:14:16.150"/>
</if>
<status status="PASS" starttime="20241123 15:14:16.148" endtime="20241123 15:14:16.150"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.995" endtime="20241123 15:14:16.151"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.956" endtime="20241123 15:14:16.151"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.956" endtime="20241123 15:14:16.151"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.956" endtime="20241123 15:14:16.151"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.151" endtime="20241123 15:14:16.152"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.151" endtime="20241123 15:14:16.152"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.956" endtime="20241123 15:14:16.152"/>
</try>
<status status="PASS" starttime="20241123 15:14:15.819" endtime="20241123 15:14:16.152"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.816" endtime="20241123 15:14:16.152"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.154" endtime="20241123 15:14:16.154"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.152" endtime="20241123 15:14:16.154"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.155" endtime="20241123 15:14:16.156"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.156" endtime="20241123 15:14:16.156"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.156" endtime="20241123 15:14:16.156"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.157" endtime="20241123 15:14:16.157"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.156" endtime="20241123 15:14:16.157"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:16.156" endtime="20241123 15:14:16.157"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:16.154" endtime="20241123 15:14:16.157"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:16.165" endtime="20241123 15:14:16.165"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.169" endtime="20241123 15:14:16.169"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.157" endtime="20241123 15:14:16.169"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.170" endtime="20241123 15:14:16.171"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.171" endtime="20241123 15:14:16.171"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.171" endtime="20241123 15:14:16.171"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.172" endtime="20241123 15:14:16.172"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.171" endtime="20241123 15:14:16.172"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:16.171" endtime="20241123 15:14:16.172"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:16.169" endtime="20241123 15:14:16.172"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:16.179" endtime="20241123 15:14:16.180"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.184" endtime="20241123 15:14:16.184"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.172" endtime="20241123 15:14:16.184"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.186" endtime="20241123 15:14:16.186"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.184" endtime="20241123 15:14:16.186"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.189" endtime="20241123 15:14:16.189"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.186" endtime="20241123 15:14:16.189"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 15:14:16.198" endtime="20241123 15:14:16.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:16.198" endtime="20241123 15:14:16.198"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:16.189" endtime="20241123 15:14:16.198"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.797" endtime="20241123 15:14:16.198"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:16.199" endtime="20241123 15:14:16.199"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 15:14:17.211" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241123 15:14:16.200" endtime="20241123 15:14:17.211"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.794" endtime="20241123 15:14:17.212"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:17.216" level="INFO">${response_message} = {'flowActionSequenceId': '42', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:17.215" endtime="20241123 15:14:17.216"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:17.218" level="INFO">${json_response} = {"flowActionSequenceId": "42", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:17.217" endtime="20241123 15:14:17.218"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:17.228" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:17.228" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:17.218" endtime="20241123 15:14:17.228"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:17.229" endtime="20241123 15:14:17.230"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:17.231" endtime="20241123 15:14:17.231"/>
</return>
<status status="PASS" starttime="20241123 15:14:17.216" endtime="20241123 15:14:17.233"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.212" endtime="20241123 15:14:17.234"/>
</kw>
<status status="PASS" starttime="20241123 15:14:15.790" endtime="20241123 15:14:17.234"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.235" endtime="20241123 15:14:17.235"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:17.236" endtime="20241123 15:14:17.236"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.236" endtime="20241123 15:14:17.237"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.234" endtime="20241123 15:14:17.237"/>
</branch>
<status status="PASS" starttime="20241123 15:14:15.790" endtime="20241123 15:14:17.237"/>
</try>
<status status="PASS" starttime="20241123 15:14:15.790" endtime="20241123 15:14:17.237"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-22T04:20:41.481Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:17.240" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241123 15:14:17.239" endtime="20241123 15:14:17.240"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:17.240" endtime="20241123 15:14:17.241"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 15:14:17.243" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241123 15:14:17.242" endtime="20241123 15:14:17.243"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.245" endtime="20241123 15:14:17.245"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.246" endtime="20241123 15:14:17.246"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.244" endtime="20241123 15:14:17.247"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.244" endtime="20241123 15:14:17.247"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:17.250" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 15:14:17.249" endtime="20241123 15:14:17.250"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:17.251" endtime="20241123 15:14:17.251"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.251" endtime="20241123 15:14:17.251"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:17.252" endtime="20241123 15:14:17.253"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.252" endtime="20241123 15:14:17.253"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:17.286" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241123 15:14:17.275" endtime="20241123 15:14:17.287"/>
</kw>
<msg timestamp="20241123 15:14:17.287" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.273" endtime="20241123 15:14:17.287"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:17.287" endtime="20241123 15:14:17.288"/>
</return>
<status status="PASS" starttime="20241123 15:14:17.272" endtime="20241123 15:14:17.288"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.288" endtime="20241123 15:14:17.288"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.289" endtime="20241123 15:14:17.289"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.288" endtime="20241123 15:14:17.289"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.272" endtime="20241123 15:14:17.289"/>
</try>
<msg timestamp="20241123 15:14:17.289" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.270" endtime="20241123 15:14:17.289"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:17.290" endtime="20241123 15:14:17.290"/>
</return>
<status status="PASS" starttime="20241123 15:14:17.268" endtime="20241123 15:14:17.290"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:17.290" endtime="20241123 15:14:17.290"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:17.290" endtime="20241123 15:14:17.290"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.268" endtime="20241123 15:14:17.290"/>
</try>
<msg timestamp="20241123 15:14:17.291" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.267" endtime="20241123 15:14:17.291"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.297" endtime="20241123 15:14:17.297"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.298" endtime="20241123 15:14:17.298"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.296" endtime="20241123 15:14:17.298"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.296" endtime="20241123 15:14:17.298"/>
</if>
<status status="PASS" starttime="20241123 15:14:17.293" endtime="20241123 15:14:17.298"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.266" endtime="20241123 15:14:17.299"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:17.316" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241123 15:14:17.306" endtime="20241123 15:14:17.316"/>
</kw>
<msg timestamp="20241123 15:14:17.317" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.306" endtime="20241123 15:14:17.317"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:17.317" endtime="20241123 15:14:17.317"/>
</return>
<status status="PASS" starttime="20241123 15:14:17.305" endtime="20241123 15:14:17.317"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.318" endtime="20241123 15:14:17.318"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.318" endtime="20241123 15:14:17.318"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.317" endtime="20241123 15:14:17.319"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.305" endtime="20241123 15:14:17.319"/>
</try>
<msg timestamp="20241123 15:14:17.319" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.304" endtime="20241123 15:14:17.319"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:17.319" endtime="20241123 15:14:17.319"/>
</return>
<msg timestamp="20241123 15:14:17.320" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.302" endtime="20241123 15:14:17.320"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.324" endtime="20241123 15:14:17.324"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.324" endtime="20241123 15:14:17.324"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.323" endtime="20241123 15:14:17.325"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.323" endtime="20241123 15:14:17.325"/>
</if>
<status status="PASS" starttime="20241123 15:14:17.322" endtime="20241123 15:14:17.325"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.301" endtime="20241123 15:14:17.325"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:17.369" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241123 15:14:17.335" endtime="20241123 15:14:17.370"/>
</kw>
<msg timestamp="20241123 15:14:17.370" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.334" endtime="20241123 15:14:17.370"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:17.371" endtime="20241123 15:14:17.371"/>
</return>
<status status="PASS" starttime="20241123 15:14:17.333" endtime="20241123 15:14:17.371"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.372" endtime="20241123 15:14:17.372"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.372" endtime="20241123 15:14:17.373"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.371" endtime="20241123 15:14:17.373"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.333" endtime="20241123 15:14:17.373"/>
</try>
<msg timestamp="20241123 15:14:17.374" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.332" endtime="20241123 15:14:17.374"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:17.374" endtime="20241123 15:14:17.374"/>
</return>
<msg timestamp="20241123 15:14:17.375" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241123 15:14:17.330" endtime="20241123 15:14:17.375"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.383" endtime="20241123 15:14:17.383"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.383" endtime="20241123 15:14:17.383"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.382" endtime="20241123 15:14:17.383"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.382" endtime="20241123 15:14:17.383"/>
</if>
<status status="PASS" starttime="20241123 15:14:17.379" endtime="20241123 15:14:17.384"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.329" endtime="20241123 15:14:17.384"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.259" endtime="20241123 15:14:17.384"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:17.386" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 15:14:17.385" endtime="20241123 15:14:17.386"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.389" endtime="20241123 15:14:17.389"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.388" endtime="20241123 15:14:17.389"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:17.390" endtime="20241123 15:14:17.391"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.389" endtime="20241123 15:14:17.391"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.388" endtime="20241123 15:14:17.391"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241123 15:14:17.392" endtime="20241123 15:14:17.474"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.391" endtime="20241123 15:14:17.474"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.475" endtime="20241123 15:14:17.475"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.475" endtime="20241123 15:14:17.475"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.474" endtime="20241123 15:14:17.475"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.391" endtime="20241123 15:14:17.476"/>
</try>
<status status="PASS" starttime="20241123 15:14:17.387" endtime="20241123 15:14:17.476"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.386" endtime="20241123 15:14:17.476"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.386" endtime="20241123 15:14:17.476"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.477" endtime="20241123 15:14:17.477"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.476" endtime="20241123 15:14:17.477"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.386" endtime="20241123 15:14:17.477"/>
</try>
<status status="PASS" starttime="20241123 15:14:17.257" endtime="20241123 15:14:17.478"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.253" endtime="20241123 15:14:17.478"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.483" endtime="20241123 15:14:17.483"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.487" endtime="20241123 15:14:17.487"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.478" endtime="20241123 15:14:17.487"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.489" endtime="20241123 15:14:17.489"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.487" endtime="20241123 15:14:17.489"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.495" endtime="20241123 15:14:17.495"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.490" endtime="20241123 15:14:17.495"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.502" endtime="20241123 15:14:17.502"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.496" endtime="20241123 15:14:17.502"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.506" endtime="20241123 15:14:17.506"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.502" endtime="20241123 15:14:17.506"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.509" endtime="20241123 15:14:17.510"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.511" endtime="20241123 15:14:17.511"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.510" endtime="20241123 15:14:17.512"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.512" endtime="20241123 15:14:17.513"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.512" endtime="20241123 15:14:17.513"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:17.510" endtime="20241123 15:14:17.513"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:17.506" endtime="20241123 15:14:17.513"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:17.530" endtime="20241123 15:14:17.530"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.537" endtime="20241123 15:14:17.538"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.513" endtime="20241123 15:14:17.538"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.540" endtime="20241123 15:14:17.540"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.540" endtime="20241123 15:14:17.541"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.540" endtime="20241123 15:14:17.541"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.541" endtime="20241123 15:14:17.542"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.541" endtime="20241123 15:14:17.542"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:17.540" endtime="20241123 15:14:17.542"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:17.538" endtime="20241123 15:14:17.542"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:17.557" endtime="20241123 15:14:17.557"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.562" endtime="20241123 15:14:17.562"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.542" endtime="20241123 15:14:17.562"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.564" endtime="20241123 15:14:17.564"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.562" endtime="20241123 15:14:17.564"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.567" endtime="20241123 15:14:17.567"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.564" endtime="20241123 15:14:17.568"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 15:14:17.579" endtime="20241123 15:14:17.579"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:17.579" endtime="20241123 15:14:17.579"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:17.568" endtime="20241123 15:14:17.579"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.250" endtime="20241123 15:14:17.580"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:17.580" endtime="20241123 15:14:17.581"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 15:14:22.583" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241123 15:14:17.581" endtime="20241123 15:14:22.583"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.247" endtime="20241123 15:14:22.584"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:22.589" level="INFO">${response_message} = {'flowActionSequenceId': '44', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:22.588" endtime="20241123 15:14:22.589"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:22.592" level="INFO">${json_response} = {"flowActionSequenceId": "44", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:22.591" endtime="20241123 15:14:22.592"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:22.636" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:22.637" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:22.592" endtime="20241123 15:14:22.637"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:22.639" endtime="20241123 15:14:22.642"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:22.642" endtime="20241123 15:14:22.643"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.590" endtime="20241123 15:14:22.644"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.585" endtime="20241123 15:14:22.645"/>
</kw>
<status status="PASS" starttime="20241123 15:14:17.239" endtime="20241123 15:14:22.647"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.651" endtime="20241123 15:14:22.652"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:22.653" endtime="20241123 15:14:22.654"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.655" endtime="20241123 15:14:22.656"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.649" endtime="20241123 15:14:22.656"/>
</branch>
<status status="PASS" starttime="20241123 15:14:17.238" endtime="20241123 15:14:22.657"/>
</try>
<status status="PASS" starttime="20241123 15:14:17.238" endtime="20241123 15:14:22.658"/>
</iter>
<status status="PASS" starttime="20241123 15:14:06.498" endtime="20241123 15:14:22.658"/>
</for>
<status status="PASS" starttime="20241123 15:14:06.498" endtime="20241123 15:14:22.659"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.498" endtime="20241123 15:14:22.660"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceId=${testCaseFlowSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:22.669" level="INFO">${response_message} = {'testCaseFlowSequenceId': '46', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:22.666" endtime="20241123 15:14:22.669"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:22.676" level="INFO">${json_response} = {"testCaseFlowSequenceId": "46", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:22.673" endtime="20241123 15:14:22.676"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:22.698" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:22.699" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:22.677" endtime="20241123 15:14:22.699"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:22.699" endtime="20241123 15:14:22.700"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:22.700" endtime="20241123 15:14:22.700"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.670" endtime="20241123 15:14:22.700"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.662" endtime="20241123 15:14:22.700"/>
</kw>
<status status="PASS" starttime="20241123 15:14:06.485" endtime="20241123 15:14:22.700"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.701" endtime="20241123 15:14:22.701"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:22.701" endtime="20241123 15:14:22.701"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.702" endtime="20241123 15:14:22.702"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.701" endtime="20241123 15:14:22.702"/>
</branch>
<status status="PASS" starttime="20241123 15:14:06.485" endtime="20241123 15:14:22.702"/>
</try>
<status status="PASS" starttime="20241123 15:14:06.485" endtime="20241123 15:14:22.702"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-22T07:35:55.018Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:22.703" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241123 15:14:22.703" endtime="20241123 15:14:22.703"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:22.704" endtime="20241123 15:14:22.704"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:22.707" endtime="20241123 15:14:22.708"/>
</kw>
<msg timestamp="20241123 15:14:22.708" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.707" endtime="20241123 15:14:22.708"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:22.710" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241123 15:14:22.708" endtime="20241123 15:14:22.710"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:22.711" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.711" endtime="20241123 15:14:22.711"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.710" endtime="20241123 15:14:22.711"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.711" endtime="20241123 15:14:22.711"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.711" endtime="20241123 15:14:22.711"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.710" endtime="20241123 15:14:22.711"/>
</if>
<status status="PASS" starttime="20241123 15:14:22.708" endtime="20241123 15:14:22.712"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.708" endtime="20241123 15:14:22.712"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 15:14:22.712" endtime="20241123 15:14:22.712"/>
</return>
<msg timestamp="20241123 15:14:22.712" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.707" endtime="20241123 15:14:22.712"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:22.714" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241123 15:14:22.714" endtime="20241123 15:14:22.714"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:22.714" endtime="20241123 15:14:22.714"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 15:14:22.715" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241123 15:14:22.714" endtime="20241123 15:14:22.715"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.715" endtime="20241123 15:14:22.715"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.715" endtime="20241123 15:14:22.715"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.715" endtime="20241123 15:14:22.715"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.715" endtime="20241123 15:14:22.715"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:22.716" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 15:14:22.716" endtime="20241123 15:14:22.716"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:22.717" endtime="20241123 15:14:22.717"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.716" endtime="20241123 15:14:22.717"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:22.717" endtime="20241123 15:14:22.717"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.717" endtime="20241123 15:14:22.717"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:22.732" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241123 15:14:22.725" endtime="20241123 15:14:22.732"/>
</kw>
<msg timestamp="20241123 15:14:22.732" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.725" endtime="20241123 15:14:22.732"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.732" endtime="20241123 15:14:22.733"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.724" endtime="20241123 15:14:22.733"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.733" endtime="20241123 15:14:22.733"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.733" endtime="20241123 15:14:22.733"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.733" endtime="20241123 15:14:22.733"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.724" endtime="20241123 15:14:22.733"/>
</try>
<msg timestamp="20241123 15:14:22.734" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.724" endtime="20241123 15:14:22.734"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.734" endtime="20241123 15:14:22.734"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.722" endtime="20241123 15:14:22.734"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:22.734" endtime="20241123 15:14:22.734"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:22.734" endtime="20241123 15:14:22.734"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.722" endtime="20241123 15:14:22.734"/>
</try>
<msg timestamp="20241123 15:14:22.734" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.722" endtime="20241123 15:14:22.734"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.736" endtime="20241123 15:14:22.736"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.736" endtime="20241123 15:14:22.736"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.736" endtime="20241123 15:14:22.737"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.736" endtime="20241123 15:14:22.737"/>
</if>
<status status="PASS" starttime="20241123 15:14:22.735" endtime="20241123 15:14:22.737"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.721" endtime="20241123 15:14:22.737"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:22.747" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241123 15:14:22.742" endtime="20241123 15:14:22.747"/>
</kw>
<msg timestamp="20241123 15:14:22.747" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.742" endtime="20241123 15:14:22.747"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.747" endtime="20241123 15:14:22.748"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.741" endtime="20241123 15:14:22.748"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.748" endtime="20241123 15:14:22.748"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.748" endtime="20241123 15:14:22.748"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.748" endtime="20241123 15:14:22.748"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.741" endtime="20241123 15:14:22.748"/>
</try>
<msg timestamp="20241123 15:14:22.749" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.741" endtime="20241123 15:14:22.749"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.749" endtime="20241123 15:14:22.749"/>
</return>
<msg timestamp="20241123 15:14:22.749" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.739" endtime="20241123 15:14:22.749"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.751" endtime="20241123 15:14:22.751"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.751" endtime="20241123 15:14:22.751"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.751" endtime="20241123 15:14:22.751"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.751" endtime="20241123 15:14:22.751"/>
</if>
<status status="PASS" starttime="20241123 15:14:22.750" endtime="20241123 15:14:22.751"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.739" endtime="20241123 15:14:22.752"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:22.769" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241123 15:14:22.755" endtime="20241123 15:14:22.769"/>
</kw>
<msg timestamp="20241123 15:14:22.769" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.755" endtime="20241123 15:14:22.769"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.770" endtime="20241123 15:14:22.770"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.755" endtime="20241123 15:14:22.770"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.770" endtime="20241123 15:14:22.770"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.770" endtime="20241123 15:14:22.770"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.770" endtime="20241123 15:14:22.770"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.755" endtime="20241123 15:14:22.770"/>
</try>
<msg timestamp="20241123 15:14:22.771" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.754" endtime="20241123 15:14:22.771"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.771" endtime="20241123 15:14:22.771"/>
</return>
<msg timestamp="20241123 15:14:22.771" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.753" endtime="20241123 15:14:22.771"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.774" endtime="20241123 15:14:22.774"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.774" endtime="20241123 15:14:22.774"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.773" endtime="20241123 15:14:22.774"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.773" endtime="20241123 15:14:22.774"/>
</if>
<status status="PASS" starttime="20241123 15:14:22.772" endtime="20241123 15:14:22.774"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.753" endtime="20241123 15:14:22.775"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.720" endtime="20241123 15:14:22.775"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:22.775" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 15:14:22.775" endtime="20241123 15:14:22.775"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.777" endtime="20241123 15:14:22.777"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.776" endtime="20241123 15:14:22.777"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:22.777" endtime="20241123 15:14:22.777"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.777" endtime="20241123 15:14:22.777"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.776" endtime="20241123 15:14:22.777"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241123 15:14:22.778" endtime="20241123 15:14:22.803"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.777" endtime="20241123 15:14:22.803"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.803" endtime="20241123 15:14:22.803"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.804" endtime="20241123 15:14:22.804"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.803" endtime="20241123 15:14:22.804"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.777" endtime="20241123 15:14:22.804"/>
</try>
<status status="PASS" starttime="20241123 15:14:22.776" endtime="20241123 15:14:22.804"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.776" endtime="20241123 15:14:22.804"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.775" endtime="20241123 15:14:22.804"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.804" endtime="20241123 15:14:22.804"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.804" endtime="20241123 15:14:22.805"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.775" endtime="20241123 15:14:22.805"/>
</try>
<status status="PASS" starttime="20241123 15:14:22.719" endtime="20241123 15:14:22.805"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.717" endtime="20241123 15:14:22.805"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.807" endtime="20241123 15:14:22.807"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.809" endtime="20241123 15:14:22.810"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.805" endtime="20241123 15:14:22.810"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.811" endtime="20241123 15:14:22.811"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.810" endtime="20241123 15:14:22.811"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.814" endtime="20241123 15:14:22.814"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.811" endtime="20241123 15:14:22.814"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.815" endtime="20241123 15:14:22.815"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.814" endtime="20241123 15:14:22.816"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.817" endtime="20241123 15:14:22.817"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.816" endtime="20241123 15:14:22.817"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.818" endtime="20241123 15:14:22.819"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.819" endtime="20241123 15:14:22.819"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.819" endtime="20241123 15:14:22.819"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.820" endtime="20241123 15:14:22.820"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.819" endtime="20241123 15:14:22.820"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:22.819" endtime="20241123 15:14:22.820"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:22.817" endtime="20241123 15:14:22.820"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:22.826" endtime="20241123 15:14:22.827"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.829" endtime="20241123 15:14:22.829"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.820" endtime="20241123 15:14:22.829"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.830" endtime="20241123 15:14:22.830"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.831" endtime="20241123 15:14:22.831"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.830" endtime="20241123 15:14:22.831"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.831" endtime="20241123 15:14:22.831"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.831" endtime="20241123 15:14:22.831"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:22.830" endtime="20241123 15:14:22.831"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:22.829" endtime="20241123 15:14:22.831"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:22.835" endtime="20241123 15:14:22.835"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.838" endtime="20241123 15:14:22.838"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.831" endtime="20241123 15:14:22.838"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.840" endtime="20241123 15:14:22.841"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.838" endtime="20241123 15:14:22.841"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.845" endtime="20241123 15:14:22.845"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.841" endtime="20241123 15:14:22.845"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 15:14:22.854" endtime="20241123 15:14:22.854"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.854" endtime="20241123 15:14:22.854"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.845" endtime="20241123 15:14:22.854"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.716" endtime="20241123 15:14:22.855"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:22.855" endtime="20241123 15:14:22.855"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 15:14:22.856" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241123 15:14:22.856" endtime="20241123 15:14:22.857"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.716" endtime="20241123 15:14:22.857"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:22.860" level="INFO">${response_message} = {'flowActionSequenceId': '45', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:22.859" endtime="20241123 15:14:22.860"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:22.861" level="INFO">${json_response} = {"flowActionSequenceId": "45", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:22.860" endtime="20241123 15:14:22.861"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:22.887" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:22.887" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:22.861" endtime="20241123 15:14:22.887"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:22.887" endtime="20241123 15:14:22.888"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:22.888" endtime="20241123 15:14:22.888"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.860" endtime="20241123 15:14:22.888"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.857" endtime="20241123 15:14:22.888"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.713" endtime="20241123 15:14:22.888"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.889" endtime="20241123 15:14:22.889"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:22.889" endtime="20241123 15:14:22.889"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.889" endtime="20241123 15:14:22.890"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.888" endtime="20241123 15:14:22.890"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.713" endtime="20241123 15:14:22.890"/>
</try>
<status status="PASS" starttime="20241123 15:14:22.713" endtime="20241123 15:14:22.890"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:22.891" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241123 15:14:22.891" endtime="20241123 15:14:22.891"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:22.891" endtime="20241123 15:14:22.892"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 15:14:22.892" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241123 15:14:22.892" endtime="20241123 15:14:22.893"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.893" endtime="20241123 15:14:22.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.893" endtime="20241123 15:14:22.893"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.893" endtime="20241123 15:14:22.893"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.893" endtime="20241123 15:14:22.894"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:22.895" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 15:14:22.894" endtime="20241123 15:14:22.895"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:22.895" endtime="20241123 15:14:22.896"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.895" endtime="20241123 15:14:22.896"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:22.896" endtime="20241123 15:14:22.896"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.896" endtime="20241123 15:14:22.896"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:22.909" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241123 15:14:22.903" endtime="20241123 15:14:22.909"/>
</kw>
<msg timestamp="20241123 15:14:22.909" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.903" endtime="20241123 15:14:22.909"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.909" endtime="20241123 15:14:22.909"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.902" endtime="20241123 15:14:22.910"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.910" endtime="20241123 15:14:22.910"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.910" endtime="20241123 15:14:22.910"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.910" endtime="20241123 15:14:22.910"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.902" endtime="20241123 15:14:22.910"/>
</try>
<msg timestamp="20241123 15:14:22.911" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.902" endtime="20241123 15:14:22.911"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.911" endtime="20241123 15:14:22.911"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.901" endtime="20241123 15:14:22.911"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:22.911" endtime="20241123 15:14:22.911"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:22.911" endtime="20241123 15:14:22.912"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.901" endtime="20241123 15:14:22.912"/>
</try>
<msg timestamp="20241123 15:14:22.912" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.901" endtime="20241123 15:14:22.912"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.914" endtime="20241123 15:14:22.914"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.914" endtime="20241123 15:14:22.914"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.914" endtime="20241123 15:14:22.914"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.914" endtime="20241123 15:14:22.914"/>
</if>
<status status="PASS" starttime="20241123 15:14:22.913" endtime="20241123 15:14:22.914"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.900" endtime="20241123 15:14:22.915"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:22.924" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241123 15:14:22.918" endtime="20241123 15:14:22.924"/>
</kw>
<msg timestamp="20241123 15:14:22.925" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.918" endtime="20241123 15:14:22.925"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.925" endtime="20241123 15:14:22.925"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.918" endtime="20241123 15:14:22.925"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.925" endtime="20241123 15:14:22.925"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.926" endtime="20241123 15:14:22.926"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.925" endtime="20241123 15:14:22.926"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.918" endtime="20241123 15:14:22.926"/>
</try>
<msg timestamp="20241123 15:14:22.926" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.918" endtime="20241123 15:14:22.926"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.926" endtime="20241123 15:14:22.926"/>
</return>
<msg timestamp="20241123 15:14:22.927" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.916" endtime="20241123 15:14:22.927"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.929" endtime="20241123 15:14:22.929"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.929" endtime="20241123 15:14:22.929"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.929" endtime="20241123 15:14:22.929"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.929" endtime="20241123 15:14:22.929"/>
</if>
<status status="PASS" starttime="20241123 15:14:22.928" endtime="20241123 15:14:22.929"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.916" endtime="20241123 15:14:22.929"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:22.947" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241123 15:14:22.933" endtime="20241123 15:14:22.947"/>
</kw>
<msg timestamp="20241123 15:14:22.947" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.933" endtime="20241123 15:14:22.947"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.947" endtime="20241123 15:14:22.947"/>
</return>
<status status="PASS" starttime="20241123 15:14:22.933" endtime="20241123 15:14:22.947"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.948" endtime="20241123 15:14:22.948"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.948" endtime="20241123 15:14:22.948"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.948" endtime="20241123 15:14:22.948"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.933" endtime="20241123 15:14:22.948"/>
</try>
<msg timestamp="20241123 15:14:22.948" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.932" endtime="20241123 15:14:22.948"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:22.948" endtime="20241123 15:14:22.949"/>
</return>
<msg timestamp="20241123 15:14:22.949" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241123 15:14:22.931" endtime="20241123 15:14:22.949"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.951" endtime="20241123 15:14:22.951"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.951" endtime="20241123 15:14:22.951"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.951" endtime="20241123 15:14:22.951"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.951" endtime="20241123 15:14:22.951"/>
</if>
<status status="PASS" starttime="20241123 15:14:22.950" endtime="20241123 15:14:22.951"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.931" endtime="20241123 15:14:22.952"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.899" endtime="20241123 15:14:22.952"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:22.952" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 15:14:22.952" endtime="20241123 15:14:22.952"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241123 15:14:22.954" endtime="20241123 15:14:22.954"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:22.953" endtime="20241123 15:14:22.954"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 15:14:22.954" endtime="20241123 15:14:22.954"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.954" endtime="20241123 15:14:22.954"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.953" endtime="20241123 15:14:22.954"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241123 15:14:22.955" endtime="20241123 15:14:23.072"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.955" endtime="20241123 15:14:23.072"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.073" endtime="20241123 15:14:23.073"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.073" endtime="20241123 15:14:23.073"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.072" endtime="20241123 15:14:23.073"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.955" endtime="20241123 15:14:23.073"/>
</try>
<status status="PASS" starttime="20241123 15:14:22.953" endtime="20241123 15:14:23.074"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.953" endtime="20241123 15:14:23.074"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.952" endtime="20241123 15:14:23.074"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.074" endtime="20241123 15:14:23.074"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.074" endtime="20241123 15:14:23.075"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.952" endtime="20241123 15:14:23.075"/>
</try>
<status status="PASS" starttime="20241123 15:14:22.898" endtime="20241123 15:14:23.075"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.896" endtime="20241123 15:14:23.075"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.077" endtime="20241123 15:14:23.077"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.081" endtime="20241123 15:14:23.081"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.075" endtime="20241123 15:14:23.081"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.083" endtime="20241123 15:14:23.083"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.081" endtime="20241123 15:14:23.084"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.087" endtime="20241123 15:14:23.087"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.084" endtime="20241123 15:14:23.087"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.089" endtime="20241123 15:14:23.089"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.087" endtime="20241123 15:14:23.089"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.091" endtime="20241123 15:14:23.091"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.090" endtime="20241123 15:14:23.091"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.092" endtime="20241123 15:14:23.092"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.093" endtime="20241123 15:14:23.093"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.092" endtime="20241123 15:14:23.093"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.093" endtime="20241123 15:14:23.093"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.093" endtime="20241123 15:14:23.093"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:23.092" endtime="20241123 15:14:23.093"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:23.091" endtime="20241123 15:14:23.093"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:23.099" endtime="20241123 15:14:23.099"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.104" endtime="20241123 15:14:23.104"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.093" endtime="20241123 15:14:23.104"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.106" endtime="20241123 15:14:23.106"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.107" endtime="20241123 15:14:23.107"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.107" endtime="20241123 15:14:23.107"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.108" endtime="20241123 15:14:23.108"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.108" endtime="20241123 15:14:23.108"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:23.107" endtime="20241123 15:14:23.108"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:23.104" endtime="20241123 15:14:23.108"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:23.114" endtime="20241123 15:14:23.114"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.117" endtime="20241123 15:14:23.117"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.108" endtime="20241123 15:14:23.117"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.119" endtime="20241123 15:14:23.119"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.118" endtime="20241123 15:14:23.119"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.121" endtime="20241123 15:14:23.121"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.119" endtime="20241123 15:14:23.121"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 15:14:23.128" endtime="20241123 15:14:23.128"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.128" endtime="20241123 15:14:23.129"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.121" endtime="20241123 15:14:23.129"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.895" endtime="20241123 15:14:23.129"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:23.129" endtime="20241123 15:14:23.129"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 15:14:23.129" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241123 15:14:23.129" endtime="20241123 15:14:23.129"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.894" endtime="20241123 15:14:23.129"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:23.131" level="INFO">${response_message} = {'flowActionSequenceId': '46', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:23.130" endtime="20241123 15:14:23.131"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:23.132" level="INFO">${json_response} = {"flowActionSequenceId": "46", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:23.132" endtime="20241123 15:14:23.132"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:23.162" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:23.162" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:23.132" endtime="20241123 15:14:23.162"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:23.163" endtime="20241123 15:14:23.164"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:23.165" endtime="20241123 15:14:23.166"/>
</return>
<status status="PASS" starttime="20241123 15:14:23.131" endtime="20241123 15:14:23.167"/>
</kw>
<status status="PASS" starttime="20241123 15:14:23.129" endtime="20241123 15:14:23.167"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.891" endtime="20241123 15:14:23.167"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.168" endtime="20241123 15:14:23.168"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:23.169" endtime="20241123 15:14:23.169"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.169" endtime="20241123 15:14:23.169"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.168" endtime="20241123 15:14:23.169"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.890" endtime="20241123 15:14:23.169"/>
</try>
<status status="PASS" starttime="20241123 15:14:22.890" endtime="20241123 15:14:23.170"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:23.171" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241123 15:14:23.170" endtime="20241123 15:14:23.171"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:23.171" endtime="20241123 15:14:23.171"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 15:14:23.173" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241123 15:14:23.172" endtime="20241123 15:14:23.173"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.174" endtime="20241123 15:14:23.175"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.175" endtime="20241123 15:14:23.175"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.174" endtime="20241123 15:14:23.175"/>
</branch>
<status status="PASS" starttime="20241123 15:14:23.173" endtime="20241123 15:14:23.175"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 15:14:23.177" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 15:14:23.176" endtime="20241123 15:14:23.177"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:23.178" endtime="20241123 15:14:23.178"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.177" endtime="20241123 15:14:23.178"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 15:14:23.179" endtime="20241123 15:14:23.179"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.178" endtime="20241123 15:14:23.179"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.182" endtime="20241123 15:14:23.182"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.179" endtime="20241123 15:14:23.182"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.184" endtime="20241123 15:14:23.184"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.186" endtime="20241123 15:14:23.186"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.182" endtime="20241123 15:14:23.186"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.188" endtime="20241123 15:14:23.189"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.187" endtime="20241123 15:14:23.189"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.194" endtime="20241123 15:14:23.194"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.191" endtime="20241123 15:14:23.194"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.198" endtime="20241123 15:14:23.198"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.195" endtime="20241123 15:14:23.198"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.200" endtime="20241123 15:14:23.200"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.199" endtime="20241123 15:14:23.200"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.202" endtime="20241123 15:14:23.202"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.202" endtime="20241123 15:14:23.202"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.202" endtime="20241123 15:14:23.202"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.203" endtime="20241123 15:14:23.203"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.203" endtime="20241123 15:14:23.203"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:23.202" endtime="20241123 15:14:23.203"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:23.201" endtime="20241123 15:14:23.203"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:23.211" endtime="20241123 15:14:23.211"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.214" endtime="20241123 15:14:23.214"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.204" endtime="20241123 15:14:23.215"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.216" endtime="20241123 15:14:23.216"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.217" endtime="20241123 15:14:23.217"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.216" endtime="20241123 15:14:23.217"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.217" endtime="20241123 15:14:23.217"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.217" endtime="20241123 15:14:23.217"/>
</branch>
<status status="NOT RUN" starttime="20241123 15:14:23.216" endtime="20241123 15:14:23.217"/>
</if>
<status status="NOT RUN" starttime="20241123 15:14:23.215" endtime="20241123 15:14:23.217"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 15:14:23.224" endtime="20241123 15:14:23.224"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.227" endtime="20241123 15:14:23.227"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.218" endtime="20241123 15:14:23.227"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 15:14:23.523" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241123 15:14:23.232" endtime="20241123 15:14:23.523"/>
</kw>
<msg timestamp="20241123 15:14:23.524" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:23.231" endtime="20241123 15:14:23.524"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:23.524" endtime="20241123 15:14:23.524"/>
</return>
<status status="PASS" starttime="20241123 15:14:23.231" endtime="20241123 15:14:23.524"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.524" endtime="20241123 15:14:23.524"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.525" endtime="20241123 15:14:23.525"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.524" endtime="20241123 15:14:23.525"/>
</branch>
<status status="PASS" starttime="20241123 15:14:23.231" endtime="20241123 15:14:23.525"/>
</try>
<msg timestamp="20241123 15:14:23.525" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 15:14:23.230" endtime="20241123 15:14:23.525"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 15:14:23.526" endtime="20241123 15:14:23.526"/>
</return>
<status status="PASS" starttime="20241123 15:14:23.229" endtime="20241123 15:14:23.526"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 15:14:23.526" endtime="20241123 15:14:23.526"/>
</return>
<status status="NOT RUN" starttime="20241123 15:14:23.526" endtime="20241123 15:14:23.526"/>
</branch>
<status status="PASS" starttime="20241123 15:14:23.229" endtime="20241123 15:14:23.526"/>
</try>
<msg timestamp="20241123 15:14:23.527" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241123 15:14:23.229" endtime="20241123 15:14:23.527"/>
</kw>
<status status="PASS" starttime="20241123 15:14:23.228" endtime="20241123 15:14:23.527"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.529" endtime="20241123 15:14:23.530"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.527" endtime="20241123 15:14:23.530"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 15:14:23.537" endtime="20241123 15:14:23.537"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.538" endtime="20241123 15:14:23.538"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.530" endtime="20241123 15:14:23.538"/>
</branch>
<status status="PASS" starttime="20241123 15:14:23.177" endtime="20241123 15:14:23.538"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:23.539" endtime="20241123 15:14:23.541"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 15:14:23.542" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241123 15:14:23.542" endtime="20241123 15:14:23.542"/>
</kw>
<status status="PASS" starttime="20241123 15:14:23.176" endtime="20241123 15:14:23.543"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:23.545" level="INFO">${response_message} = {'flowActionSequenceId': '47', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:23.544" endtime="20241123 15:14:23.545"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:23.546" level="INFO">${json_response} = {"flowActionSequenceId": "47", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:23.546" endtime="20241123 15:14:23.546"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:23.554" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:23.554" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:23.547" endtime="20241123 15:14:23.554"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:23.555" endtime="20241123 15:14:23.556"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:23.557" endtime="20241123 15:14:23.557"/>
</return>
<status status="PASS" starttime="20241123 15:14:23.545" endtime="20241123 15:14:23.558"/>
</kw>
<status status="PASS" starttime="20241123 15:14:23.543" endtime="20241123 15:14:23.558"/>
</kw>
<status status="PASS" starttime="20241123 15:14:23.170" endtime="20241123 15:14:23.558"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.560" endtime="20241123 15:14:23.560"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:23.560" endtime="20241123 15:14:23.560"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.561" endtime="20241123 15:14:23.561"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.559" endtime="20241123 15:14:23.561"/>
</branch>
<status status="PASS" starttime="20241123 15:14:23.170" endtime="20241123 15:14:23.561"/>
</try>
<status status="PASS" starttime="20241123 15:14:23.170" endtime="20241123 15:14:23.561"/>
</iter>
<status status="PASS" starttime="20241123 15:14:22.713" endtime="20241123 15:14:23.561"/>
</for>
<status status="PASS" starttime="20241123 15:14:22.713" endtime="20241123 15:14:23.561"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.712" endtime="20241123 15:14:23.561"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceId=${testCaseFlowSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 15:14:23.564" level="INFO">${response_message} = {'testCaseFlowSequenceId': '47', 'testCaseRunId': '86', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 15:14:23.563" endtime="20241123 15:14:23.564"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 15:14:23.566" level="INFO">${json_response} = {"testCaseFlowSequenceId": "47", "testCaseRunId": "86", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 15:14:23.565" endtime="20241123 15:14:23.566"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 15:14:23.586" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 15:14:23.586" level="INFO">${producer_response} = &lt;function delivery_report at 0x000002658F6A03A0&gt;</msg>
<status status="PASS" starttime="20241123 15:14:23.566" endtime="20241123 15:14:23.586"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 15:14:23.587" endtime="20241123 15:14:23.588"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 15:14:23.588" endtime="20241123 15:14:23.589"/>
</return>
<status status="PASS" starttime="20241123 15:14:23.564" endtime="20241123 15:14:23.589"/>
</kw>
<status status="PASS" starttime="20241123 15:14:23.562" endtime="20241123 15:14:23.589"/>
</kw>
<status status="PASS" starttime="20241123 15:14:22.703" endtime="20241123 15:14:23.590"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.590" endtime="20241123 15:14:23.591"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 15:14:23.591" endtime="20241123 15:14:23.591"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 15:14:23.592" endtime="20241123 15:14:23.592"/>
</kw>
<status status="NOT RUN" starttime="20241123 15:14:23.590" endtime="20241123 15:14:23.592"/>
</branch>
<status status="PASS" starttime="20241123 15:14:22.703" endtime="20241123 15:14:23.593"/>
</try>
<status status="PASS" starttime="20241123 15:14:22.703" endtime="20241123 15:14:23.593"/>
</iter>
