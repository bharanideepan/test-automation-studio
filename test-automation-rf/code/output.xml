<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241121 23:33:58.731" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="43">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:01.571" endtime="20241121 23:34:01.571"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:34:01.658" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '54', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:51:42.238Z', 'createdAt': '2024-11-21T17:51:42.238Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:34:01.571" endtime="20241121 23:34:01.658"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:01.661" endtime="20241121 23:34:01.666"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:01.666" endtime="20241121 23:34:01.666"/>
</kw>
<msg timestamp="20241121 23:34:01.666" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.666" endtime="20241121 23:34:01.666"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.674" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:34:01.674" endtime="20241121 23:34:01.674"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.675" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.675" endtime="20241121 23:34:01.675"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.675" endtime="20241121 23:34:01.675"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.675" endtime="20241121 23:34:01.676"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:01.675" endtime="20241121 23:34:01.676"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.674" endtime="20241121 23:34:01.676"/>
</if>
<status status="PASS" starttime="20241121 23:34:01.673" endtime="20241121 23:34:01.676"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.666" endtime="20241121 23:34:01.676"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:01.676" endtime="20241121 23:34:01.676"/>
</return>
<msg timestamp="20241121 23:34:01.677" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.666" endtime="20241121 23:34:01.677"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.677" endtime="20241121 23:34:01.677"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:34:01.677" endtime="20241121 23:34:01.677"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:01.677" endtime="20241121 23:34:01.677"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.677" endtime="20241121 23:34:01.677"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:01.681" endtime="20241121 23:34:01.681"/>
</kw>
<msg timestamp="20241121 23:34:01.681" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.680" endtime="20241121 23:34:01.681"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.682" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:34:01.682" endtime="20241121 23:34:01.682"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.684" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.684" endtime="20241121 23:34:01.684"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.683" endtime="20241121 23:34:01.684"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.684" endtime="20241121 23:34:01.684"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:01.684" endtime="20241121 23:34:01.684"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.682" endtime="20241121 23:34:01.684"/>
</if>
<status status="PASS" starttime="20241121 23:34:01.681" endtime="20241121 23:34:01.684"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.681" endtime="20241121 23:34:01.684"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:01.684" endtime="20241121 23:34:01.684"/>
</return>
<msg timestamp="20241121 23:34:01.684" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.680" endtime="20241121 23:34:01.684"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:01.691" endtime="20241121 23:34:01.692"/>
</kw>
<msg timestamp="20241121 23:34:01.692" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.691" endtime="20241121 23:34:01.692"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.693" level="INFO">${values} = {'id': '54', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:51:42.238Z', 'createdAt': '2024-11-21T17:51:42.238Z'}</msg>
<status status="PASS" starttime="20241121 23:34:01.693" endtime="20241121 23:34:01.693"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.694" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.693" endtime="20241121 23:34:01.694"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.693" endtime="20241121 23:34:01.694"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.694" endtime="20241121 23:34:01.694"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:01.694" endtime="20241121 23:34:01.694"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.693" endtime="20241121 23:34:01.694"/>
</if>
<status status="PASS" starttime="20241121 23:34:01.692" endtime="20241121 23:34:01.694"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.692" endtime="20241121 23:34:01.695"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:01.695" endtime="20241121 23:34:01.695"/>
</return>
<msg timestamp="20241121 23:34:01.695" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.689" endtime="20241121 23:34:01.695"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.696" endtime="20241121 23:34:01.696"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:01.695" endtime="20241121 23:34:01.696"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.695" endtime="20241121 23:34:01.696"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.697" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:34:01.696" endtime="20241121 23:34:01.697"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.698" level="INFO">${testCaseRun} = {'id': '54', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:51:42.238Z', 'createdAt': '2024-11-21T17:51:42.238Z'}</msg>
<status status="PASS" starttime="20241121 23:34:01.697" endtime="20241121 23:34:01.698"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:01.698" endtime="20241121 23:34:01.699"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</kw>
<msg timestamp="20241121 23:34:01.710" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.710" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.710" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</if>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</return>
<msg timestamp="20241121 23:34:01.710" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.710"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.723" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:01.723"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:01.723" endtime="20241121 23:34:01.725"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:01.738" endtime="20241121 23:34:01.738"/>
</kw>
<msg timestamp="20241121 23:34:01.739" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.725" endtime="20241121 23:34:01.739"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.742" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:34:01.741" endtime="20241121 23:34:01.742"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.743" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.743" endtime="20241121 23:34:01.743"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.742" endtime="20241121 23:34:01.744"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.744" endtime="20241121 23:34:01.744"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:01.744" endtime="20241121 23:34:01.745"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.742" endtime="20241121 23:34:01.745"/>
</if>
<status status="PASS" starttime="20241121 23:34:01.740" endtime="20241121 23:34:01.745"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.739" endtime="20241121 23:34:01.745"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:01.745" endtime="20241121 23:34:01.746"/>
</return>
<msg timestamp="20241121 23:34:01.746" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:01.725" endtime="20241121 23:34:01.746"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.749" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:34:01.749" endtime="20241121 23:34:01.749"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:01.750" endtime="20241121 23:34:01.778"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:01.781" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:34:01.780" endtime="20241121 23:34:01.781"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.782" endtime="20241121 23:34:01.782"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:01.783" endtime="20241121 23:34:01.783"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:01.782" endtime="20241121 23:34:01.783"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.781" endtime="20241121 23:34:01.784"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:01.784" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:34:01.784" endtime="20241121 23:34:01.784"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:34:01.794" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\9e970062-6362-4fe9-ba82-0b3df9698758"}</msg>
<msg timestamp="20241121 23:34:02.555" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\9e970062-6362-4fe9-ba82-0b3df9698758"}</msg>
<status status="PASS" starttime="20241121 23:34:01.792" endtime="20241121 23:34:02.555"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:34:02.555" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:34:02.604" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:34:02.604" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:34:02.555" endtime="20241121 23:34:02.604"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241121 23:34:02.614" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241121 23:34:02.605" endtime="20241121 23:34:02.614"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:34:10.191" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:34:10.191" level="INFO">${page_id} = {'page_id': 'page=15027322-8285-41ba-97b1-eb050df04d00', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:34:02.615" endtime="20241121 23:34:10.191"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:34:10.192" level="INFO">Switching to page {'page_id': 'page=15027322-8285-41ba-97b1-eb050df04d00', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:34:10.218" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "activePage": "page=15027322-8285-41ba-97b1-eb050df04d00",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=15027322-8285-41ba-97b1-eb050df04d00",
            "timestamp": 1732212242.933
          }
        ]
      }
    ],
    "activeContext": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:34:10.229" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:34:10.192" endtime="20241121 23:34:10.229"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.784" endtime="20241121 23:34:10.229"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.784" endtime="20241121 23:34:10.229"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.230" endtime="20241121 23:34:10.230"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.229" endtime="20241121 23:34:10.231"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.235" endtime="20241121 23:34:10.235"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.231" endtime="20241121 23:34:10.235"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.237" endtime="20241121 23:34:10.237"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.239" endtime="20241121 23:34:10.239"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.235" endtime="20241121 23:34:10.239"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.241" endtime="20241121 23:34:10.241"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.239" endtime="20241121 23:34:10.241"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.244" endtime="20241121 23:34:10.244"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.241" endtime="20241121 23:34:10.244"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.247" endtime="20241121 23:34:10.247"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.244" endtime="20241121 23:34:10.247"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.249" endtime="20241121 23:34:10.250"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.247" endtime="20241121 23:34:10.250"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.252" endtime="20241121 23:34:10.252"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.253" endtime="20241121 23:34:10.253"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.253" endtime="20241121 23:34:10.253"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.254" endtime="20241121 23:34:10.254"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.254" endtime="20241121 23:34:10.254"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:10.252" endtime="20241121 23:34:10.254"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:10.250" endtime="20241121 23:34:10.254"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:10.261" endtime="20241121 23:34:10.261"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.266" endtime="20241121 23:34:10.266"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.255" endtime="20241121 23:34:10.267"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.269" endtime="20241121 23:34:10.270"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.270" endtime="20241121 23:34:10.271"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.270" endtime="20241121 23:34:10.271"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.271" endtime="20241121 23:34:10.272"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.271" endtime="20241121 23:34:10.272"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:10.270" endtime="20241121 23:34:10.272"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:10.267" endtime="20241121 23:34:10.272"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:10.286" endtime="20241121 23:34:10.287"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.294" endtime="20241121 23:34:10.294"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.272" endtime="20241121 23:34:10.294"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.296" endtime="20241121 23:34:10.297"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.295" endtime="20241121 23:34:10.297"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.301" endtime="20241121 23:34:10.301"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.297" endtime="20241121 23:34:10.301"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:10.309" endtime="20241121 23:34:10.309"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:10.309" endtime="20241121 23:34:10.310"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:10.302" endtime="20241121 23:34:10.310"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.784" endtime="20241121 23:34:10.310"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:10.310" endtime="20241121 23:34:10.310"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:11.316" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:10.310" endtime="20241121 23:34:11.316"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.784" endtime="20241121 23:34:11.317"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.784" endtime="20241121 23:34:11.318"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.319" endtime="20241121 23:34:11.319"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.318" endtime="20241121 23:34:11.319"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.784" endtime="20241121 23:34:11.319"/>
</try>
<status status="PASS" starttime="20241121 23:34:01.748" endtime="20241121 23:34:11.319"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:11.321" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:34:11.320" endtime="20241121 23:34:11.321"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:11.321" endtime="20241121 23:34:11.322"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:11.323" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:34:11.323" endtime="20241121 23:34:11.323"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.324" endtime="20241121 23:34:11.324"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.325" endtime="20241121 23:34:11.325"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.324" endtime="20241121 23:34:11.325"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.323" endtime="20241121 23:34:11.325"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:11.327" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:11.327" endtime="20241121 23:34:11.327"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:11.328" endtime="20241121 23:34:11.328"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.328" endtime="20241121 23:34:11.328"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.329" endtime="20241121 23:34:11.330"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.329" endtime="20241121 23:34:11.330"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.334" endtime="20241121 23:34:11.334"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.330" endtime="20241121 23:34:11.334"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.335"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.335"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.335"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.335"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.335"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.335"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.335"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:11.383" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.383"/>
</kw>
<msg timestamp="20241121 23:34:11.383" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.383"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.383" endtime="20241121 23:34:11.383"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.383"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.384" endtime="20241121 23:34:11.384"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.384" endtime="20241121 23:34:11.384"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.384" endtime="20241121 23:34:11.384"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.384"/>
</try>
<msg timestamp="20241121 23:34:11.385" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.385"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.385" endtime="20241121 23:34:11.385"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.385"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:11.386" endtime="20241121 23:34:11.386"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:11.385" endtime="20241121 23:34:11.386"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.386"/>
</try>
<msg timestamp="20241121 23:34:11.386" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.386"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.389" endtime="20241121 23:34:11.389"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.389" endtime="20241121 23:34:11.389"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.389" endtime="20241121 23:34:11.389"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.389" endtime="20241121 23:34:11.389"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.388" endtime="20241121 23:34:11.390"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.351" endtime="20241121 23:34:11.390"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:11.396" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</kw>
<msg timestamp="20241121 23:34:11.396" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</try>
<msg timestamp="20241121 23:34:11.396" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</try>
<msg timestamp="20241121 23:34:11.396" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.396"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.411" endtime="20241121 23:34:11.411"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.411" endtime="20241121 23:34:11.411"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.411"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.411"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.411"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.396" endtime="20241121 23:34:11.411"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:11.427" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:11.427" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:11.411" endtime="20241121 23:34:11.427"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.411" endtime="20241121 23:34:11.427"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.411" endtime="20241121 23:34:11.427"/>
</try>
<msg timestamp="20241121 23:34:11.427" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:11.393" endtime="20241121 23:34:11.427"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.392" endtime="20241121 23:34:11.427"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.427" endtime="20241121 23:34:11.427"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.392" endtime="20241121 23:34:11.427"/>
</try>
<status status="PASS" starttime="20241121 23:34:11.392" endtime="20241121 23:34:11.427"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:11.442" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<msg timestamp="20241121 23:34:11.442" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</try>
<msg timestamp="20241121 23:34:11.442" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</return>
<msg timestamp="20241121 23:34:11.442" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.442" endtime="20241121 23:34:11.442"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.442"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:11.479" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:34:11.463" endtime="20241121 23:34:11.479"/>
</kw>
<msg timestamp="20241121 23:34:11.479" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.462" endtime="20241121 23:34:11.479"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.462" endtime="20241121 23:34:11.479"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.462" endtime="20241121 23:34:11.479"/>
</try>
<msg timestamp="20241121 23:34:11.479" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.462" endtime="20241121 23:34:11.479"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</return>
<msg timestamp="20241121 23:34:11.479" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.460" endtime="20241121 23:34:11.479"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.460" endtime="20241121 23:34:11.479"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:11.479" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.479"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.494"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.494"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.494"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:34:11.494" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:34:11.494" endtime="20241121 23:34:11.523"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.494" endtime="20241121 23:34:11.523"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.524" endtime="20241121 23:34:11.524"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.524" endtime="20241121 23:34:11.524"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.524" endtime="20241121 23:34:11.524"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.494" endtime="20241121 23:34:11.524"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:11.539" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:11.532" endtime="20241121 23:34:11.539"/>
</kw>
<msg timestamp="20241121 23:34:11.539" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.532" endtime="20241121 23:34:11.539"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.539" endtime="20241121 23:34:11.540"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.531" endtime="20241121 23:34:11.540"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.540" endtime="20241121 23:34:11.540"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.540" endtime="20241121 23:34:11.540"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.540" endtime="20241121 23:34:11.541"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.531" endtime="20241121 23:34:11.541"/>
</try>
<msg timestamp="20241121 23:34:11.541" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.530" endtime="20241121 23:34:11.541"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.541" endtime="20241121 23:34:11.541"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.529" endtime="20241121 23:34:11.541"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:11.541" endtime="20241121 23:34:11.541"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:11.541" endtime="20241121 23:34:11.542"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.529" endtime="20241121 23:34:11.542"/>
</try>
<msg timestamp="20241121 23:34:11.542" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.529" endtime="20241121 23:34:11.542"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.545" endtime="20241121 23:34:11.545"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.545" endtime="20241121 23:34:11.545"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.545" endtime="20241121 23:34:11.545"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.544" endtime="20241121 23:34:11.546"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.543" endtime="20241121 23:34:11.546"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.528" endtime="20241121 23:34:11.546"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:11.562" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:11.557" endtime="20241121 23:34:11.562"/>
</kw>
<msg timestamp="20241121 23:34:11.562" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.556" endtime="20241121 23:34:11.562"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.556" endtime="20241121 23:34:11.562"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.556" endtime="20241121 23:34:11.562"/>
</try>
<msg timestamp="20241121 23:34:11.562" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.556" endtime="20241121 23:34:11.562"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.554" endtime="20241121 23:34:11.562"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.554" endtime="20241121 23:34:11.562"/>
</try>
<msg timestamp="20241121 23:34:11.562" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.554" endtime="20241121 23:34:11.562"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.562"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.553" endtime="20241121 23:34:11.562"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:11.577" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:11.577" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.577"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.577"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.562" endtime="20241121 23:34:11.577"/>
</try>
<msg timestamp="20241121 23:34:11.577" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:11.550" endtime="20241121 23:34:11.577"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.549" endtime="20241121 23:34:11.577"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.577" endtime="20241121 23:34:11.577"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.549" endtime="20241121 23:34:11.577"/>
</try>
<status status="PASS" starttime="20241121 23:34:11.548" endtime="20241121 23:34:11.577"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:11.593" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</kw>
<msg timestamp="20241121 23:34:11.593" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</try>
<msg timestamp="20241121 23:34:11.593" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</return>
<msg timestamp="20241121 23:34:11.593" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.593"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.608"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.608"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.608"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.608"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.608"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.593" endtime="20241121 23:34:11.608"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.526" endtime="20241121 23:34:11.608"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:11.624" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.624"/>
</kw>
<msg timestamp="20241121 23:34:11.624" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.625"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.625" endtime="20241121 23:34:11.625"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.625"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.625" endtime="20241121 23:34:11.625"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.626" endtime="20241121 23:34:11.626"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.625" endtime="20241121 23:34:11.626"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.626"/>
</try>
<msg timestamp="20241121 23:34:11.626" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.626"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.626" endtime="20241121 23:34:11.626"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.627"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:11.627" endtime="20241121 23:34:11.627"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:11.627" endtime="20241121 23:34:11.627"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.627"/>
</try>
<msg timestamp="20241121 23:34:11.627" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.627"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.631" endtime="20241121 23:34:11.631"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.631" endtime="20241121 23:34:11.631"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.631" endtime="20241121 23:34:11.631"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.630" endtime="20241121 23:34:11.631"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.629" endtime="20241121 23:34:11.632"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.632"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:11.645" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:34:11.645" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:11.632" endtime="20241121 23:34:11.645"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:11.645" endtime="20241121 23:34:11.645"/>
</return>
<status status="PASS" starttime="20241121 23:34:11.632" endtime="20241121 23:34:11.645"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.645" endtime="20241121 23:34:11.645"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.645" endtime="20241121 23:34:11.645"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.645" endtime="20241121 23:34:11.645"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.632" endtime="20241121 23:34:11.645"/>
</try>
<msg timestamp="20241121 23:34:11.645" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:11.608" endtime="20241121 23:34:11.645"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:34:11.645" endtime="20241121 23:34:11.645"/>
</return>
<msg timestamp="20241121 23:34:11.645" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:11.525" endtime="20241121 23:34:11.645"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:34:11.645" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.645" endtime="20241121 23:34:11.645"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:11.645" endtime="20241121 23:34:11.645"/>
</return>
<msg timestamp="20241121 23:34:11.645" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:34:11.645" endtime="20241121 23:34:11.645"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</if>
<status status="PASS" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.525" endtime="20241121 23:34:11.661"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.661"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.661"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.661"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.479" endtime="20241121 23:34:11.661"/>
</try>
<status status="PASS" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.661"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.335" endtime="20241121 23:34:11.661"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.661"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.676"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.661" endtime="20241121 23:34:11.676"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.676"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.676"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.676"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.676"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.676"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.676"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.676"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:11.689" endtime="20241121 23:34:11.689"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.693" endtime="20241121 23:34:11.693"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.676" endtime="20241121 23:34:11.693"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.695" endtime="20241121 23:34:11.696"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.693" endtime="20241121 23:34:11.696"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.699" endtime="20241121 23:34:11.699"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.696" endtime="20241121 23:34:11.699"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:11.705" endtime="20241121 23:34:11.706"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:11.706" endtime="20241121 23:34:11.706"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:11.699" endtime="20241121 23:34:11.706"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.327" endtime="20241121 23:34:11.706"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:11.706" endtime="20241121 23:34:11.707"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:12.709" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:11.708" endtime="20241121 23:34:12.709"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.326" endtime="20241121 23:34:12.709"/>
</kw>
<status status="PASS" starttime="20241121 23:34:11.326" endtime="20241121 23:34:12.709"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.711" endtime="20241121 23:34:12.712"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.709" endtime="20241121 23:34:12.712"/>
</branch>
<status status="PASS" starttime="20241121 23:34:11.325" endtime="20241121 23:34:12.712"/>
</try>
<status status="PASS" starttime="20241121 23:34:11.320" endtime="20241121 23:34:12.712"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:12.712" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:12.712" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:12.712" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.712"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.729" endtime="20241121 23:34:12.729"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.712" endtime="20241121 23:34:12.730"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.731" endtime="20241121 23:34:12.731"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.730" endtime="20241121 23:34:12.732"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.734"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.732" endtime="20241121 23:34:12.734"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:12.753" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.753"/>
</kw>
<msg timestamp="20241121 23:34:12.754" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.754"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.754" endtime="20241121 23:34:12.754"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.754"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.755" endtime="20241121 23:34:12.755"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.755" endtime="20241121 23:34:12.755"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.754" endtime="20241121 23:34:12.756"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.756"/>
</try>
<msg timestamp="20241121 23:34:12.756" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.756"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.756" endtime="20241121 23:34:12.756"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.756"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:12.757" endtime="20241121 23:34:12.757"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:12.757" endtime="20241121 23:34:12.757"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.757"/>
</try>
<msg timestamp="20241121 23:34:12.757" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.757"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.761" endtime="20241121 23:34:12.761"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.761" endtime="20241121 23:34:12.761"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.760" endtime="20241121 23:34:12.761"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.760" endtime="20241121 23:34:12.761"/>
</if>
<status status="PASS" starttime="20241121 23:34:12.759" endtime="20241121 23:34:12.761"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.762"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:12.777" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:12.772" endtime="20241121 23:34:12.777"/>
</kw>
<msg timestamp="20241121 23:34:12.777" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.772" endtime="20241121 23:34:12.777"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.771" endtime="20241121 23:34:12.777"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.771" endtime="20241121 23:34:12.777"/>
</try>
<msg timestamp="20241121 23:34:12.777" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.771" endtime="20241121 23:34:12.777"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.769" endtime="20241121 23:34:12.777"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.769" endtime="20241121 23:34:12.777"/>
</try>
<msg timestamp="20241121 23:34:12.777" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.769" endtime="20241121 23:34:12.777"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</if>
<status status="PASS" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.777"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.768" endtime="20241121 23:34:12.777"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:12.793" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:12.793" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.793"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:12.793" endtime="20241121 23:34:12.793"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.793"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.793" endtime="20241121 23:34:12.793"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.793" endtime="20241121 23:34:12.793"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.793" endtime="20241121 23:34:12.793"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.777" endtime="20241121 23:34:12.793"/>
</try>
<msg timestamp="20241121 23:34:12.793" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:12.766" endtime="20241121 23:34:12.793"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.809"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.809"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.809"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.809"/>
</if>
<status status="PASS" starttime="20241121 23:34:12.793" endtime="20241121 23:34:12.809"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.764" endtime="20241121 23:34:12.809"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.809"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.809"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.764" endtime="20241121 23:34:12.809"/>
</try>
<status status="PASS" starttime="20241121 23:34:12.764" endtime="20241121 23:34:12.809"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:12.809" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.824"/>
</kw>
<msg timestamp="20241121 23:34:12.824" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.824"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.824"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.824"/>
</try>
<msg timestamp="20241121 23:34:12.824" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.824"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</return>
<msg timestamp="20241121 23:34:12.824" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.824"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</if>
<status status="PASS" starttime="20241121 23:34:12.824" endtime="20241121 23:34:12.824"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.809" endtime="20241121 23:34:12.824"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:12.824"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:12.856" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:34:12.840" endtime="20241121 23:34:12.856"/>
</kw>
<msg timestamp="20241121 23:34:12.856" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.840" endtime="20241121 23:34:12.856"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.840" endtime="20241121 23:34:12.856"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.840" endtime="20241121 23:34:12.856"/>
</try>
<msg timestamp="20241121 23:34:12.856" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.840" endtime="20241121 23:34:12.856"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</return>
<msg timestamp="20241121 23:34:12.856" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.840" endtime="20241121 23:34:12.856"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</if>
<status status="PASS" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.856"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.840" endtime="20241121 23:34:12.856"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:12.871" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:12.856" endtime="20241121 23:34:12.871"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.871"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.871"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.871"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.871"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.871"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.871"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:34:12.871" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.915"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.916"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.916" endtime="20241121 23:34:12.916"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.916" endtime="20241121 23:34:12.917"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.916" endtime="20241121 23:34:12.917"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:12.917"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:12.933" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:12.926" endtime="20241121 23:34:12.934"/>
</kw>
<msg timestamp="20241121 23:34:12.934" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.925" endtime="20241121 23:34:12.934"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.934" endtime="20241121 23:34:12.934"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.925" endtime="20241121 23:34:12.934"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.935" endtime="20241121 23:34:12.935"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.935" endtime="20241121 23:34:12.935"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.934" endtime="20241121 23:34:12.935"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.925" endtime="20241121 23:34:12.936"/>
</try>
<msg timestamp="20241121 23:34:12.936" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.924" endtime="20241121 23:34:12.936"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.936" endtime="20241121 23:34:12.936"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.923" endtime="20241121 23:34:12.936"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:12.936" endtime="20241121 23:34:12.937"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:12.936" endtime="20241121 23:34:12.937"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.923" endtime="20241121 23:34:12.937"/>
</try>
<msg timestamp="20241121 23:34:12.937" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.922" endtime="20241121 23:34:12.937"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.940" endtime="20241121 23:34:12.940"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.941" endtime="20241121 23:34:12.941"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.940" endtime="20241121 23:34:12.941"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.940" endtime="20241121 23:34:12.941"/>
</if>
<status status="PASS" starttime="20241121 23:34:12.939" endtime="20241121 23:34:12.941"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.921" endtime="20241121 23:34:12.941"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:12.960" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:12.952" endtime="20241121 23:34:12.960"/>
</kw>
<msg timestamp="20241121 23:34:12.962" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.952" endtime="20241121 23:34:12.962"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.951" endtime="20241121 23:34:12.962"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.951" endtime="20241121 23:34:12.962"/>
</try>
<msg timestamp="20241121 23:34:12.962" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.951" endtime="20241121 23:34:12.962"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.950" endtime="20241121 23:34:12.962"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.950" endtime="20241121 23:34:12.962"/>
</try>
<msg timestamp="20241121 23:34:12.962" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.950" endtime="20241121 23:34:12.962"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</if>
<status status="PASS" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.962"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.949" endtime="20241121 23:34:12.962"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:12.977" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:12.977" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.977"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.977"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.962" endtime="20241121 23:34:12.977"/>
</try>
<msg timestamp="20241121 23:34:12.977" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:12.946" endtime="20241121 23:34:12.977"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</if>
<status status="PASS" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.945" endtime="20241121 23:34:12.977"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.977" endtime="20241121 23:34:12.977"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.944" endtime="20241121 23:34:12.977"/>
</try>
<status status="PASS" starttime="20241121 23:34:12.944" endtime="20241121 23:34:12.977"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:12.993" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</kw>
<msg timestamp="20241121 23:34:12.993" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</return>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</try>
<msg timestamp="20241121 23:34:12.993" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</return>
<msg timestamp="20241121 23:34:12.993" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:12.993"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.008"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.008"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.008"/>
</branch>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.008"/>
</if>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.008"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.993" endtime="20241121 23:34:13.008"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.919" endtime="20241121 23:34:13.008"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:13.024" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</kw>
<msg timestamp="20241121 23:34:13.024" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</return>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</branch>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</try>
<msg timestamp="20241121 23:34:13.024" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</return>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</branch>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</try>
<msg timestamp="20241121 23:34:13.024" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</branch>
<status status="PASS" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</if>
<status status="PASS" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.024"/>
</kw>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.024"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:13.040" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:34:13.040" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.040"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:13.040" endtime="20241121 23:34:13.040"/>
</return>
<status status="PASS" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.040"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.040" endtime="20241121 23:34:13.040"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.040" endtime="20241121 23:34:13.040"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.040" endtime="20241121 23:34:13.040"/>
</branch>
<status status="PASS" starttime="20241121 23:34:13.024" endtime="20241121 23:34:13.040"/>
</try>
<msg timestamp="20241121 23:34:13.040" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:13.008" endtime="20241121 23:34:13.040"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:34:13.040" endtime="20241121 23:34:13.040"/>
</return>
<msg timestamp="20241121 23:34:13.040" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:12.918" endtime="20241121 23:34:13.040"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:34:13.055" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:13.040" endtime="20241121 23:34:13.055"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</return>
<msg timestamp="20241121 23:34:13.055" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:34:13.040" endtime="20241121 23:34:13.055"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</branch>
<status status="PASS" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</if>
<status status="PASS" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.917" endtime="20241121 23:34:13.055"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:13.055"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:13.055"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:13.055"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.871" endtime="20241121 23:34:13.055"/>
</try>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:13.055"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.734" endtime="20241121 23:34:13.055"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.055"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:13.055" endtime="20241121 23:34:13.071"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.071"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.087"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.087"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:13.071" endtime="20241121 23:34:13.087"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:13.087" endtime="20241121 23:34:13.087"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.087" endtime="20241121 23:34:13.087"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.087" endtime="20241121 23:34:13.087"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.087" endtime="20241121 23:34:13.087"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.087" endtime="20241121 23:34:13.087"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.102" endtime="20241121 23:34:13.102"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.087" endtime="20241121 23:34:13.102"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:13.102" endtime="20241121 23:34:13.102"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:13.102" endtime="20241121 23:34:13.102"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:13.102" endtime="20241121 23:34:13.102"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:13.102"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:13.102" endtime="20241121 23:34:13.102"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:14.107" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:13.102" endtime="20241121 23:34:14.107"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:14.107"/>
</kw>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:14.107"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</branch>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:14.107"/>
</try>
<status status="PASS" starttime="20241121 23:34:12.712" endtime="20241121 23:34:14.107"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:14.107" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:14.107" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:14.107" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.107"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:14.130" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:14.125" endtime="20241121 23:34:14.130"/>
</kw>
<msg timestamp="20241121 23:34:14.130" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.124" endtime="20241121 23:34:14.130"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</return>
<status status="PASS" starttime="20241121 23:34:14.124" endtime="20241121 23:34:14.130"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.124" endtime="20241121 23:34:14.130"/>
</try>
<msg timestamp="20241121 23:34:14.130" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.123" endtime="20241121 23:34:14.130"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</return>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.130"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.130"/>
</try>
<msg timestamp="20241121 23:34:14.130" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.130"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</if>
<status status="PASS" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.130"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.130"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:14.154" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:14.147" endtime="20241121 23:34:14.154"/>
</kw>
<msg timestamp="20241121 23:34:14.155" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.147" endtime="20241121 23:34:14.155"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:14.155" endtime="20241121 23:34:14.155"/>
</return>
<status status="PASS" starttime="20241121 23:34:14.146" endtime="20241121 23:34:14.155"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.156" endtime="20241121 23:34:14.156"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.156" endtime="20241121 23:34:14.156"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.155" endtime="20241121 23:34:14.156"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.146" endtime="20241121 23:34:14.156"/>
</try>
<msg timestamp="20241121 23:34:14.157" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.145" endtime="20241121 23:34:14.157"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:14.157" endtime="20241121 23:34:14.157"/>
</return>
<msg timestamp="20241121 23:34:14.157" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.143" endtime="20241121 23:34:14.157"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.161" endtime="20241121 23:34:14.161"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.162" endtime="20241121 23:34:14.162"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.161" endtime="20241121 23:34:14.162"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.161" endtime="20241121 23:34:14.162"/>
</if>
<status status="PASS" starttime="20241121 23:34:14.159" endtime="20241121 23:34:14.162"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.130" endtime="20241121 23:34:14.162"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:14.178" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:14.162" endtime="20241121 23:34:14.178"/>
</kw>
<msg timestamp="20241121 23:34:14.178" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.162" endtime="20241121 23:34:14.178"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:14.178" endtime="20241121 23:34:14.178"/>
</return>
<status status="PASS" starttime="20241121 23:34:14.162" endtime="20241121 23:34:14.178"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.178" endtime="20241121 23:34:14.178"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.178" endtime="20241121 23:34:14.178"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.178" endtime="20241121 23:34:14.178"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.162" endtime="20241121 23:34:14.178"/>
</try>
<msg timestamp="20241121 23:34:14.178" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.162" endtime="20241121 23:34:14.178"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:14.178" endtime="20241121 23:34:14.178"/>
</return>
<msg timestamp="20241121 23:34:14.178" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:14.162" endtime="20241121 23:34:14.178"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.195" endtime="20241121 23:34:14.195"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.195" endtime="20241121 23:34:14.195"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.195" endtime="20241121 23:34:14.196"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.194" endtime="20241121 23:34:14.196"/>
</if>
<status status="PASS" starttime="20241121 23:34:14.193" endtime="20241121 23:34:14.196"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.162" endtime="20241121 23:34:14.196"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.196"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:14.197" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:14.196" endtime="20241121 23:34:14.197"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.199" endtime="20241121 23:34:14.199"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.199" endtime="20241121 23:34:14.199"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:14.200" endtime="20241121 23:34:14.200"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.200" endtime="20241121 23:34:14.200"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.199" endtime="20241121 23:34:14.200"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:14.201" endtime="20241121 23:34:14.266"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.201" endtime="20241121 23:34:14.266"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.266" endtime="20241121 23:34:14.266"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.266" endtime="20241121 23:34:14.266"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.266" endtime="20241121 23:34:14.266"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.201" endtime="20241121 23:34:14.266"/>
</try>
<status status="PASS" starttime="20241121 23:34:14.198" endtime="20241121 23:34:14.266"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.197" endtime="20241121 23:34:14.266"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.197" endtime="20241121 23:34:14.266"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.266" endtime="20241121 23:34:14.266"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.266" endtime="20241121 23:34:14.266"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.197" endtime="20241121 23:34:14.266"/>
</try>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.266"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.266"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.279" endtime="20241121 23:34:14.279"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.285" endtime="20241121 23:34:14.285"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.266" endtime="20241121 23:34:14.285"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.288" endtime="20241121 23:34:14.289"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.286" endtime="20241121 23:34:14.289"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.295" endtime="20241121 23:34:14.295"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.289" endtime="20241121 23:34:14.295"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.298" endtime="20241121 23:34:14.299"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.295" endtime="20241121 23:34:14.299"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.300" endtime="20241121 23:34:14.301"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.299" endtime="20241121 23:34:14.301"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.302" endtime="20241121 23:34:14.302"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.303" endtime="20241121 23:34:14.303"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.303" endtime="20241121 23:34:14.303"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.304" endtime="20241121 23:34:14.304"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.303" endtime="20241121 23:34:14.304"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:14.303" endtime="20241121 23:34:14.304"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:14.301" endtime="20241121 23:34:14.304"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.304" endtime="20241121 23:34:14.311"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.311"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.327" endtime="20241121 23:34:14.327"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.311" endtime="20241121 23:34:14.327"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.327" endtime="20241121 23:34:14.327"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.327" endtime="20241121 23:34:14.327"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.327" endtime="20241121 23:34:14.327"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.327" endtime="20241121 23:34:14.327"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:14.345" endtime="20241121 23:34:14.345"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:14.345" endtime="20241121 23:34:14.346"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:14.327" endtime="20241121 23:34:14.346"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:14.346"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:14.346" endtime="20241121 23:34:14.347"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:19.361" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:34:14.347" endtime="20241121 23:34:19.361"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:19.361"/>
</kw>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:19.361"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.361" endtime="20241121 23:34:19.361"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.361" endtime="20241121 23:34:19.361"/>
</branch>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:19.361"/>
</try>
<status status="PASS" starttime="20241121 23:34:14.107" endtime="20241121 23:34:19.361"/>
</iter>
<status status="PASS" starttime="20241121 23:34:01.746" endtime="20241121 23:34:19.361"/>
</for>
<status status="PASS" starttime="20241121 23:34:01.746" endtime="20241121 23:34:19.361"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.746" endtime="20241121 23:34:19.361"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:19.361" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:34:19.361" endtime="20241121 23:34:19.361"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:34:19.361" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:34:19.361" endtime="20241121 23:34:19.361"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:34:19.377" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:34:19.377" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:34:19.361" endtime="20241121 23:34:19.377"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:19.377" endtime="20241121 23:34:19.393"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:34:19.393" endtime="20241121 23:34:19.393"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.361" endtime="20241121 23:34:19.394"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:19.394"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.395" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:34:19.395" endtime="20241121 23:34:19.395"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:19.395" endtime="20241121 23:34:19.397"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:19.402" endtime="20241121 23:34:19.402"/>
</kw>
<msg timestamp="20241121 23:34:19.402" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.401" endtime="20241121 23:34:19.402"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.405" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:34:19.404" endtime="20241121 23:34:19.405"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.405" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.405" endtime="20241121 23:34:19.405"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.405" endtime="20241121 23:34:19.405"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.405" endtime="20241121 23:34:19.405"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.405" endtime="20241121 23:34:19.405"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.405" endtime="20241121 23:34:19.405"/>
</if>
<status status="PASS" starttime="20241121 23:34:19.404" endtime="20241121 23:34:19.405"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.404" endtime="20241121 23:34:19.405"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:19.405" endtime="20241121 23:34:19.408"/>
</return>
<msg timestamp="20241121 23:34:19.408" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.401" endtime="20241121 23:34:19.408"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.411" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:34:19.410" endtime="20241121 23:34:19.411"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:19.411" endtime="20241121 23:34:19.412"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:19.414" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:34:19.413" endtime="20241121 23:34:19.414"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.414"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.414"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.414"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.414"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.414" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.414"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:19.421" endtime="20241121 23:34:19.421"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.421"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.422" endtime="20241121 23:34:19.422"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.421" endtime="20241121 23:34:19.422"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:19.443" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.443"/>
</kw>
<msg timestamp="20241121 23:34:19.443" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.443"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.443" endtime="20241121 23:34:19.443"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.443"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.444" endtime="20241121 23:34:19.444"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.444" endtime="20241121 23:34:19.444"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.443" endtime="20241121 23:34:19.444"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.444"/>
</try>
<msg timestamp="20241121 23:34:19.445" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.445"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.445" endtime="20241121 23:34:19.445"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.445"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:19.445" endtime="20241121 23:34:19.445"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:19.445" endtime="20241121 23:34:19.445"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.445"/>
</try>
<msg timestamp="20241121 23:34:19.446" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.446"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.447"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.447"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.447"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.447"/>
</if>
<status status="PASS" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.447"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.428" endtime="20241121 23:34:19.447"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:19.458" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:34:19.456" endtime="20241121 23:34:19.458"/>
</kw>
<msg timestamp="20241121 23:34:19.458" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.455" endtime="20241121 23:34:19.458"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.458"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.458"/>
</try>
<msg timestamp="20241121 23:34:19.458" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.458"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</return>
<msg timestamp="20241121 23:34:19.458" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.458"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</if>
<status status="PASS" starttime="20241121 23:34:19.458" endtime="20241121 23:34:19.458"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.447" endtime="20241121 23:34:19.458"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:19.491" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:19.473" endtime="20241121 23:34:19.491"/>
</kw>
<msg timestamp="20241121 23:34:19.492" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.473" endtime="20241121 23:34:19.492"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.492" endtime="20241121 23:34:19.492"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.473" endtime="20241121 23:34:19.492"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.492" endtime="20241121 23:34:19.492"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.493" endtime="20241121 23:34:19.493"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.492" endtime="20241121 23:34:19.493"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.473" endtime="20241121 23:34:19.493"/>
</try>
<msg timestamp="20241121 23:34:19.493" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.473" endtime="20241121 23:34:19.493"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.493" endtime="20241121 23:34:19.493"/>
</return>
<msg timestamp="20241121 23:34:19.494" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.471" endtime="20241121 23:34:19.494"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.496" endtime="20241121 23:34:19.496"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.496" endtime="20241121 23:34:19.496"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.496" endtime="20241121 23:34:19.496"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.496" endtime="20241121 23:34:19.497"/>
</if>
<status status="PASS" starttime="20241121 23:34:19.495" endtime="20241121 23:34:19.497"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.471" endtime="20241121 23:34:19.497"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.427" endtime="20241121 23:34:19.497"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:19.498" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:19.497" endtime="20241121 23:34:19.498"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.499" endtime="20241121 23:34:19.499"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.499" endtime="20241121 23:34:19.499"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:19.500" endtime="20241121 23:34:19.500"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.499" endtime="20241121 23:34:19.500"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.499" endtime="20241121 23:34:19.500"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:19.500" endtime="20241121 23:34:19.541"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.500" endtime="20241121 23:34:19.541"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.500" endtime="20241121 23:34:19.541"/>
</try>
<status status="PASS" starttime="20241121 23:34:19.498" endtime="20241121 23:34:19.541"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.498" endtime="20241121 23:34:19.541"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.498" endtime="20241121 23:34:19.541"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.498" endtime="20241121 23:34:19.541"/>
</try>
<status status="PASS" starttime="20241121 23:34:19.425" endtime="20241121 23:34:19.541"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.422" endtime="20241121 23:34:19.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.555" endtime="20241121 23:34:19.555"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.541" endtime="20241121 23:34:19.555"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.558" endtime="20241121 23:34:19.558"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.555" endtime="20241121 23:34:19.558"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.559" endtime="20241121 23:34:19.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.558" endtime="20241121 23:34:19.560"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.560"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.560"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.560"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.560"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.560"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.560"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.571"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.560" endtime="20241121 23:34:19.571"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.572" endtime="20241121 23:34:19.572"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.573" endtime="20241121 23:34:19.573"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.572" endtime="20241121 23:34:19.573"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.573" endtime="20241121 23:34:19.573"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.573" endtime="20241121 23:34:19.573"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:19.572" endtime="20241121 23:34:19.573"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:19.571" endtime="20241121 23:34:19.573"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:19.579" endtime="20241121 23:34:19.579"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.582" endtime="20241121 23:34:19.582"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.573" endtime="20241121 23:34:19.582"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.583" endtime="20241121 23:34:19.584"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.582" endtime="20241121 23:34:19.584"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.586" endtime="20241121 23:34:19.586"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.584" endtime="20241121 23:34:19.586"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:19.593" endtime="20241121 23:34:19.593"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.594" endtime="20241121 23:34:19.594"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.586" endtime="20241121 23:34:19.594"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.594"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:19.594" endtime="20241121 23:34:19.595"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:19.595" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:19.595" endtime="20241121 23:34:19.595"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.595"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.595"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.596" endtime="20241121 23:34:19.596"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.596" endtime="20241121 23:34:19.596"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.414" endtime="20241121 23:34:19.596"/>
</try>
<status status="PASS" starttime="20241121 23:34:19.408" endtime="20241121 23:34:19.596"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.597" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:34:19.596" endtime="20241121 23:34:19.597"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:19.597" endtime="20241121 23:34:19.598"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:19.598" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:34:19.598" endtime="20241121 23:34:19.598"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.599" endtime="20241121 23:34:19.599"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.599" endtime="20241121 23:34:19.599"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.598" endtime="20241121 23:34:19.599"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.598" endtime="20241121 23:34:19.599"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.600" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:19.600" endtime="20241121 23:34:19.600"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:19.601" endtime="20241121 23:34:19.601"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.600" endtime="20241121 23:34:19.601"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.601" endtime="20241121 23:34:19.601"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.601" endtime="20241121 23:34:19.601"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:19.606" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<msg timestamp="20241121 23:34:19.606" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</try>
<msg timestamp="20241121 23:34:19.606" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</try>
<msg timestamp="20241121 23:34:19.606" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</if>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.606" endtime="20241121 23:34:19.606"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:19.634" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:19.627" endtime="20241121 23:34:19.634"/>
</kw>
<msg timestamp="20241121 23:34:19.634" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.627" endtime="20241121 23:34:19.634"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.634" endtime="20241121 23:34:19.634"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.627" endtime="20241121 23:34:19.634"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.634" endtime="20241121 23:34:19.634"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.634" endtime="20241121 23:34:19.634"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.634" endtime="20241121 23:34:19.634"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.627" endtime="20241121 23:34:19.634"/>
</try>
<msg timestamp="20241121 23:34:19.634" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.626" endtime="20241121 23:34:19.634"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.634" endtime="20241121 23:34:19.634"/>
</return>
<msg timestamp="20241121 23:34:19.634" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.624" endtime="20241121 23:34:19.634"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.639" endtime="20241121 23:34:19.639"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.640" endtime="20241121 23:34:19.640"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.639" endtime="20241121 23:34:19.640"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.639" endtime="20241121 23:34:19.640"/>
</if>
<status status="PASS" starttime="20241121 23:34:19.638" endtime="20241121 23:34:19.640"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.622" endtime="20241121 23:34:19.640"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:19.656" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:19.640" endtime="20241121 23:34:19.656"/>
</kw>
<msg timestamp="20241121 23:34:19.656" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.640" endtime="20241121 23:34:19.656"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.640" endtime="20241121 23:34:19.656"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.640" endtime="20241121 23:34:19.656"/>
</try>
<msg timestamp="20241121 23:34:19.656" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.640" endtime="20241121 23:34:19.656"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</return>
<msg timestamp="20241121 23:34:19.656" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.640" endtime="20241121 23:34:19.656"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</if>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.640" endtime="20241121 23:34:19.656"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.604" endtime="20241121 23:34:19.656"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:19.656" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.656"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.815"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.815"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.815" endtime="20241121 23:34:19.815"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.815" endtime="20241121 23:34:19.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.815" endtime="20241121 23:34:19.815"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.815"/>
</try>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.821"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.821"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.821"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.821" endtime="20241121 23:34:19.822"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.821" endtime="20241121 23:34:19.822"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.656" endtime="20241121 23:34:19.822"/>
</try>
<status status="PASS" starttime="20241121 23:34:19.603" endtime="20241121 23:34:19.822"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.602" endtime="20241121 23:34:19.823"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.825" endtime="20241121 23:34:19.826"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.828" endtime="20241121 23:34:19.828"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.823" endtime="20241121 23:34:19.829"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.830" endtime="20241121 23:34:19.830"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.829" endtime="20241121 23:34:19.830"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.834" endtime="20241121 23:34:19.835"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.831" endtime="20241121 23:34:19.835"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.835" endtime="20241121 23:34:19.837"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.837"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.852"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.837" endtime="20241121 23:34:19.852"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.852"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.852"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.852"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.852"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.852"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.852"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.852"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:19.868" endtime="20241121 23:34:19.868"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.868" endtime="20241121 23:34:19.868"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.852" endtime="20241121 23:34:19.868"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.868" endtime="20241121 23:34:19.868"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.868" endtime="20241121 23:34:19.868"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.868" endtime="20241121 23:34:19.868"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.868" endtime="20241121 23:34:19.868"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.868" endtime="20241121 23:34:19.884"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.600" endtime="20241121 23:34:19.884"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:19.884" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.599" endtime="20241121 23:34:19.884"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.599" endtime="20241121 23:34:19.884"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.599" endtime="20241121 23:34:19.884"/>
</try>
<status status="PASS" starttime="20241121 23:34:19.596" endtime="20241121 23:34:19.884"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.884" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:19.884" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.884"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.899"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.884" endtime="20241121 23:34:19.899"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:19.899" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.899"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.918" endtime="20241121 23:34:19.918"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.899" endtime="20241121 23:34:19.918"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.923" endtime="20241121 23:34:19.923"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.919" endtime="20241121 23:34:19.923"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.926" endtime="20241121 23:34:19.926"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.923" endtime="20241121 23:34:19.926"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.927" endtime="20241121 23:34:19.927"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.928" endtime="20241121 23:34:19.928"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.928" endtime="20241121 23:34:19.928"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.928" endtime="20241121 23:34:19.928"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.928" endtime="20241121 23:34:19.928"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:19.928" endtime="20241121 23:34:19.928"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:19.926" endtime="20241121 23:34:19.929"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:19.930" endtime="20241121 23:34:19.930"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.939" endtime="20241121 23:34:19.939"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.929" endtime="20241121 23:34:19.939"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.942" endtime="20241121 23:34:19.942"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.942" endtime="20241121 23:34:19.942"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.942" endtime="20241121 23:34:19.942"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.942" endtime="20241121 23:34:19.942"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.942" endtime="20241121 23:34:19.942"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:19.942" endtime="20241121 23:34:19.942"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:19.939" endtime="20241121 23:34:19.942"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:19.954" endtime="20241121 23:34:19.955"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:19.962" endtime="20241121 23:34:19.962"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:19.942" endtime="20241121 23:34:19.962"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:20.153" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:19.970" endtime="20241121 23:34:20.153"/>
</kw>
<msg timestamp="20241121 23:34:20.154" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.970" endtime="20241121 23:34:20.154"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:20.154" endtime="20241121 23:34:20.154"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.969" endtime="20241121 23:34:20.154"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.155" endtime="20241121 23:34:20.155"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.155" endtime="20241121 23:34:20.155"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.154" endtime="20241121 23:34:20.155"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.969" endtime="20241121 23:34:20.156"/>
</try>
<msg timestamp="20241121 23:34:20.156" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.968" endtime="20241121 23:34:20.156"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:20.156" endtime="20241121 23:34:20.156"/>
</return>
<status status="PASS" starttime="20241121 23:34:19.965" endtime="20241121 23:34:20.156"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:20.157" endtime="20241121 23:34:20.157"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:20.157" endtime="20241121 23:34:20.157"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.964" endtime="20241121 23:34:20.158"/>
</try>
<msg timestamp="20241121 23:34:20.158" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:34:19.964" endtime="20241121 23:34:20.158"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.962" endtime="20241121 23:34:20.158"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.163" endtime="20241121 23:34:20.163"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.159" endtime="20241121 23:34:20.163"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:20.171" endtime="20241121 23:34:20.171"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.171" endtime="20241121 23:34:20.171"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.163" endtime="20241121 23:34:20.171"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.899" endtime="20241121 23:34:20.172"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:20.172" endtime="20241121 23:34:20.173"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:20.174" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:20.173" endtime="20241121 23:34:20.174"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.899" endtime="20241121 23:34:20.174"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.899" endtime="20241121 23:34:20.174"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.175" endtime="20241121 23:34:20.175"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.174" endtime="20241121 23:34:20.175"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.899" endtime="20241121 23:34:20.175"/>
</try>
<status status="PASS" starttime="20241121 23:34:19.884" endtime="20241121 23:34:20.175"/>
</iter>
<status status="PASS" starttime="20241121 23:34:19.408" endtime="20241121 23:34:20.175"/>
</for>
<status status="PASS" starttime="20241121 23:34:19.408" endtime="20241121 23:34:20.175"/>
</branch>
<status status="PASS" starttime="20241121 23:34:19.408" endtime="20241121 23:34:20.175"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:20.176" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:34:20.176" endtime="20241121 23:34:20.176"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:34:20.178" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:34:20.177" endtime="20241121 23:34:20.178"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:34:20.198" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:34:20.198" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:34:20.178" endtime="20241121 23:34:20.198"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:20.198" endtime="20241121 23:34:20.199"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:34:20.199" endtime="20241121 23:34:20.199"/>
</return>
<status status="PASS" starttime="20241121 23:34:20.177" endtime="20241121 23:34:20.200"/>
</kw>
<status status="PASS" starttime="20241121 23:34:19.394" endtime="20241121 23:34:20.200"/>
</iter>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:20.200"/>
</for>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:20.200"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.710" endtime="20241121 23:34:20.200"/>
</if>
<status status="PASS" starttime="20241121 23:34:01.678" endtime="20241121 23:34:20.200"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.201" endtime="20241121 23:34:20.201"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.200" endtime="20241121 23:34:20.201"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.678" endtime="20241121 23:34:20.201"/>
</if>
<status status="PASS" starttime="20241121 23:34:01.658" endtime="20241121 23:34:20.201"/>
</kw>
<status status="PASS" starttime="20241121 23:34:01.658" endtime="20241121 23:34:20.201"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.202" endtime="20241121 23:34:20.202"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.201" endtime="20241121 23:34:20.202"/>
</branch>
<status status="PASS" starttime="20241121 23:34:01.658" endtime="20241121 23:34:20.202"/>
</try>
<status status="PASS" starttime="20241121 23:34:01.571" endtime="20241121 23:34:20.202"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:20.203" endtime="20241121 23:34:20.203"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:34:20.261" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '55', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:51:59.334Z', 'createdAt': '2024-11-21T17:51:59.334Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:34:20.203" endtime="20241121 23:34:20.261"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:20.262" endtime="20241121 23:34:20.266"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:20.269" endtime="20241121 23:34:20.270"/>
</kw>
<msg timestamp="20241121 23:34:20.270" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.269" endtime="20241121 23:34:20.270"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.272" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:34:20.272" endtime="20241121 23:34:20.272"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.274" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.273" endtime="20241121 23:34:20.274"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.273" endtime="20241121 23:34:20.274"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.274" endtime="20241121 23:34:20.274"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.274" endtime="20241121 23:34:20.274"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.273" endtime="20241121 23:34:20.274"/>
</if>
<status status="PASS" starttime="20241121 23:34:20.271" endtime="20241121 23:34:20.274"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.270" endtime="20241121 23:34:20.274"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:20.275" endtime="20241121 23:34:20.275"/>
</return>
<msg timestamp="20241121 23:34:20.275" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.268" endtime="20241121 23:34:20.275"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.275" endtime="20241121 23:34:20.276"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:34:20.276" endtime="20241121 23:34:20.276"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:20.275" endtime="20241121 23:34:20.276"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.275" endtime="20241121 23:34:20.276"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:20.279" endtime="20241121 23:34:20.279"/>
</kw>
<msg timestamp="20241121 23:34:20.280" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.279" endtime="20241121 23:34:20.280"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.281" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:34:20.280" endtime="20241121 23:34:20.281"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.282" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.281" endtime="20241121 23:34:20.282"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.281" endtime="20241121 23:34:20.282"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.282" endtime="20241121 23:34:20.282"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.282" endtime="20241121 23:34:20.282"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.281" endtime="20241121 23:34:20.282"/>
</if>
<status status="PASS" starttime="20241121 23:34:20.280" endtime="20241121 23:34:20.282"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.280" endtime="20241121 23:34:20.282"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:20.282" endtime="20241121 23:34:20.282"/>
</return>
<msg timestamp="20241121 23:34:20.284" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.278" endtime="20241121 23:34:20.284"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:20.287" endtime="20241121 23:34:20.287"/>
</kw>
<msg timestamp="20241121 23:34:20.287" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.286" endtime="20241121 23:34:20.287"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.288" level="INFO">${values} = {'id': '55', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:51:59.334Z', 'createdAt': '2024-11-21T17:51:59.334Z'}</msg>
<status status="PASS" starttime="20241121 23:34:20.288" endtime="20241121 23:34:20.288"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.290" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.289" endtime="20241121 23:34:20.290"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.288" endtime="20241121 23:34:20.290"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.290" endtime="20241121 23:34:20.290"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.290" endtime="20241121 23:34:20.291"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.288" endtime="20241121 23:34:20.291"/>
</if>
<status status="PASS" starttime="20241121 23:34:20.287" endtime="20241121 23:34:20.291"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.287" endtime="20241121 23:34:20.291"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</return>
<msg timestamp="20241121 23:34:20.291" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.286" endtime="20241121 23:34:20.291"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.291" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.291" level="INFO">${testCaseRun} = {'id': '55', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:51:59.334Z', 'createdAt': '2024-11-21T17:51:59.334Z'}</msg>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<msg timestamp="20241121 23:34:20.291" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.291" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.291" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</if>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</return>
<msg timestamp="20241121 23:34:20.291" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.291" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:20.291"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:20.307" endtime="20241121 23:34:20.308"/>
</kw>
<msg timestamp="20241121 23:34:20.308" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.307" endtime="20241121 23:34:20.308"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.308" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:34:20.308" endtime="20241121 23:34:20.310"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.310" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.310" endtime="20241121 23:34:20.310"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.310" endtime="20241121 23:34:20.310"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.311"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.311"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.310" endtime="20241121 23:34:20.311"/>
</if>
<status status="PASS" starttime="20241121 23:34:20.308" endtime="20241121 23:34:20.311"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.308" endtime="20241121 23:34:20.311"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.311"/>
</return>
<msg timestamp="20241121 23:34:20.311" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:20.306" endtime="20241121 23:34:20.311"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.311" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.311"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.311"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:20.311" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.311"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.315"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:20.315" endtime="20241121 23:34:20.315"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.315"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:20.315"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:20.316" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:34:20.316" endtime="20241121 23:34:20.316"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:34:20.318" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:34:20.320" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:34:20.320" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:34:20.317" endtime="20241121 23:34:20.320"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:34:20.320" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:34:20.324" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:34:20.324" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:34:20.320" endtime="20241121 23:34:20.324"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:34:20.324" endtime="20241121 23:34:20.324"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:34:27.694" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:34:27.695" level="INFO">${page_id} = {'page_id': 'page=b71059ea-f586-4d91-b1ac-f5aeb5a6a87c', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:34:20.324" endtime="20241121 23:34:27.695"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:34:27.696" level="INFO">Switching to page {'page_id': 'page=b71059ea-f586-4d91-b1ac-f5aeb5a6a87c', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:34:27.720" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "activePage": "page=15027322-8285-41ba-97b1-eb050df04d00",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/profile",
            "id": "page=15027322-8285-41ba-97b1-eb050df04d00",
            "timestamp": 1732212242.933
          }
        ]
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "activePage": "page=b71059ea-f586-4d91-b1ac-f5aeb5a6a87c",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=b71059ea-f586-4d91-b1ac-f5aeb5a6a87c",
            "timestamp": 1732212260.5
          }
        ]
      }
    ],
    "activeContext": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:34:27.726" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:34:27.695" endtime="20241121 23:34:27.726"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.317" endtime="20241121 23:34:27.726"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.316" endtime="20241121 23:34:27.726"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.727" endtime="20241121 23:34:27.727"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.727" endtime="20241121 23:34:27.727"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.730" endtime="20241121 23:34:27.730"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.727" endtime="20241121 23:34:27.730"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.732" endtime="20241121 23:34:27.732"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.735" endtime="20241121 23:34:27.735"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.730" endtime="20241121 23:34:27.735"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.737" endtime="20241121 23:34:27.737"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.735" endtime="20241121 23:34:27.737"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.740" endtime="20241121 23:34:27.740"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.737" endtime="20241121 23:34:27.740"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.742" endtime="20241121 23:34:27.742"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.740" endtime="20241121 23:34:27.743"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.744" endtime="20241121 23:34:27.744"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.743" endtime="20241121 23:34:27.744"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.745" endtime="20241121 23:34:27.745"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.746" endtime="20241121 23:34:27.746"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.746" endtime="20241121 23:34:27.746"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.746" endtime="20241121 23:34:27.746"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.746" endtime="20241121 23:34:27.746"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:27.745" endtime="20241121 23:34:27.747"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:27.744" endtime="20241121 23:34:27.747"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:27.755" endtime="20241121 23:34:27.756"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.761" endtime="20241121 23:34:27.761"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.747" endtime="20241121 23:34:27.761"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.763" endtime="20241121 23:34:27.763"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.764" endtime="20241121 23:34:27.764"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.764" endtime="20241121 23:34:27.764"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.765" endtime="20241121 23:34:27.765"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.765" endtime="20241121 23:34:27.765"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:27.763" endtime="20241121 23:34:27.765"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:27.761" endtime="20241121 23:34:27.765"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:27.772" endtime="20241121 23:34:27.772"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.776" endtime="20241121 23:34:27.777"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.765" endtime="20241121 23:34:27.777"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.779" endtime="20241121 23:34:27.779"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.777" endtime="20241121 23:34:27.779"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.782" endtime="20241121 23:34:27.782"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.779" endtime="20241121 23:34:27.782"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:27.791" endtime="20241121 23:34:27.791"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:27.791" endtime="20241121 23:34:27.791"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:27.782" endtime="20241121 23:34:27.791"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.316" endtime="20241121 23:34:27.791"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:27.792" endtime="20241121 23:34:27.793"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:28.793" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:27.793" endtime="20241121 23:34:28.793"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.315" endtime="20241121 23:34:28.793"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.315" endtime="20241121 23:34:28.793"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.315" endtime="20241121 23:34:28.793"/>
</try>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:28.793"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:28.793" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:28.793" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:28.793" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.793"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.809" endtime="20241121 23:34:28.809"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.793" endtime="20241121 23:34:28.809"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.812" endtime="20241121 23:34:28.812"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.816"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.809" endtime="20241121 23:34:28.816"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.816"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.816"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.816"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.816"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:28.850" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:28.830" endtime="20241121 23:34:28.850"/>
</kw>
<msg timestamp="20241121 23:34:28.850" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.829" endtime="20241121 23:34:28.850"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.829" endtime="20241121 23:34:28.850"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.850"/>
</try>
<msg timestamp="20241121 23:34:28.850" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.850"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.850"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.850"/>
</try>
<msg timestamp="20241121 23:34:28.850" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.850"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</if>
<status status="PASS" starttime="20241121 23:34:28.850" endtime="20241121 23:34:28.850"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.850"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:28.876" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:28.870" endtime="20241121 23:34:28.876"/>
</kw>
<msg timestamp="20241121 23:34:28.877" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.870" endtime="20241121 23:34:28.877"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:28.877" endtime="20241121 23:34:28.877"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.869" endtime="20241121 23:34:28.877"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.877" endtime="20241121 23:34:28.877"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.878" endtime="20241121 23:34:28.878"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.877" endtime="20241121 23:34:28.878"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.869" endtime="20241121 23:34:28.878"/>
</try>
<msg timestamp="20241121 23:34:28.878" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.869" endtime="20241121 23:34:28.878"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:28.878" endtime="20241121 23:34:28.878"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.868" endtime="20241121 23:34:28.878"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:28.879" endtime="20241121 23:34:28.879"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:28.879" endtime="20241121 23:34:28.879"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.868" endtime="20241121 23:34:28.879"/>
</try>
<msg timestamp="20241121 23:34:28.879" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.867" endtime="20241121 23:34:28.879"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.882" endtime="20241121 23:34:28.882"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.882" endtime="20241121 23:34:28.882"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.881" endtime="20241121 23:34:28.882"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.881" endtime="20241121 23:34:28.882"/>
</if>
<status status="PASS" starttime="20241121 23:34:28.880" endtime="20241121 23:34:28.882"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.867" endtime="20241121 23:34:28.882"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:28.897" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:28.897" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:28.883" endtime="20241121 23:34:28.897"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.883" endtime="20241121 23:34:28.897"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.883" endtime="20241121 23:34:28.897"/>
</try>
<msg timestamp="20241121 23:34:28.897" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:28.865" endtime="20241121 23:34:28.897"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</if>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.863" endtime="20241121 23:34:28.897"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.897"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.863" endtime="20241121 23:34:28.897"/>
</try>
<status status="PASS" starttime="20241121 23:34:28.863" endtime="20241121 23:34:28.897"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:28.913" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.913"/>
</kw>
<msg timestamp="20241121 23:34:28.913" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.913"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.913"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.913"/>
</try>
<msg timestamp="20241121 23:34:28.913" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.913"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</return>
<msg timestamp="20241121 23:34:28.913" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.913"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</if>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.913"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.897" endtime="20241121 23:34:28.913"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:28.913"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:28.944" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:34:28.928" endtime="20241121 23:34:28.944"/>
</kw>
<msg timestamp="20241121 23:34:28.944" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.944"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.944"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.944"/>
</try>
<msg timestamp="20241121 23:34:28.944" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.944"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</return>
<msg timestamp="20241121 23:34:28.944" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.944"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</if>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.913" endtime="20241121 23:34:28.944"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:28.944" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.944"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:34:28.944" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.986"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.986"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.986" endtime="20241121 23:34:28.987"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:28.987" endtime="20241121 23:34:28.987"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:28.986" endtime="20241121 23:34:28.987"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:28.987"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:28.999" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:28.994" endtime="20241121 23:34:28.999"/>
</kw>
<msg timestamp="20241121 23:34:28.999" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.993" endtime="20241121 23:34:28.999"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.000" endtime="20241121 23:34:29.000"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.993" endtime="20241121 23:34:29.000"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.000" endtime="20241121 23:34:29.000"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.001" endtime="20241121 23:34:29.001"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.000" endtime="20241121 23:34:29.001"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.993" endtime="20241121 23:34:29.001"/>
</try>
<msg timestamp="20241121 23:34:29.001" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.993" endtime="20241121 23:34:29.001"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.001" endtime="20241121 23:34:29.002"/>
</return>
<status status="PASS" starttime="20241121 23:34:28.992" endtime="20241121 23:34:29.002"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:29.002" endtime="20241121 23:34:29.002"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:29.002" endtime="20241121 23:34:29.002"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.991" endtime="20241121 23:34:29.002"/>
</try>
<msg timestamp="20241121 23:34:29.003" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:28.991" endtime="20241121 23:34:29.003"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.005" endtime="20241121 23:34:29.006"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.006" endtime="20241121 23:34:29.006"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.005" endtime="20241121 23:34:29.006"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.005" endtime="20241121 23:34:29.006"/>
</if>
<status status="PASS" starttime="20241121 23:34:29.004" endtime="20241121 23:34:29.006"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.991" endtime="20241121 23:34:29.006"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:29.024" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:29.017" endtime="20241121 23:34:29.024"/>
</kw>
<msg timestamp="20241121 23:34:29.024" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.016" endtime="20241121 23:34:29.024"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.024" endtime="20241121 23:34:29.024"/>
</return>
<status status="PASS" starttime="20241121 23:34:29.016" endtime="20241121 23:34:29.025"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.025" endtime="20241121 23:34:29.025"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.025" endtime="20241121 23:34:29.025"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.025" endtime="20241121 23:34:29.026"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.016" endtime="20241121 23:34:29.026"/>
</try>
<msg timestamp="20241121 23:34:29.026" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.015" endtime="20241121 23:34:29.026"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.026" endtime="20241121 23:34:29.026"/>
</return>
<status status="PASS" starttime="20241121 23:34:29.014" endtime="20241121 23:34:29.026"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:29.027" endtime="20241121 23:34:29.027"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:29.026" endtime="20241121 23:34:29.027"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.014" endtime="20241121 23:34:29.027"/>
</try>
<msg timestamp="20241121 23:34:29.027" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.014" endtime="20241121 23:34:29.027"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.030"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.030"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.030"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.030"/>
</if>
<status status="PASS" starttime="20241121 23:34:29.029" endtime="20241121 23:34:29.030"/>
</kw>
<status status="PASS" starttime="20241121 23:34:29.013" endtime="20241121 23:34:29.030"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:29.030" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:29.030" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.030"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.030"/>
</return>
<status status="PASS" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.030"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.030"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.045"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.045"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.030" endtime="20241121 23:34:29.045"/>
</try>
<msg timestamp="20241121 23:34:29.045" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:29.010" endtime="20241121 23:34:29.045"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.045"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.045"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.045"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.045"/>
</if>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.045"/>
</kw>
<status status="PASS" starttime="20241121 23:34:29.009" endtime="20241121 23:34:29.045"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.045"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.045"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.009" endtime="20241121 23:34:29.045"/>
</try>
<status status="PASS" starttime="20241121 23:34:29.008" endtime="20241121 23:34:29.045"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:29.061" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.061"/>
</kw>
<msg timestamp="20241121 23:34:29.061" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.061"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</return>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.061"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.061"/>
</try>
<msg timestamp="20241121 23:34:29.061" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.061"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</return>
<msg timestamp="20241121 23:34:29.061" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.061"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</if>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.061"/>
</kw>
<status status="PASS" starttime="20241121 23:34:29.045" endtime="20241121 23:34:29.061"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.989" endtime="20241121 23:34:29.061"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:29.077" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</kw>
<msg timestamp="20241121 23:34:29.077" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</return>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</try>
<msg timestamp="20241121 23:34:29.077" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</return>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</try>
<msg timestamp="20241121 23:34:29.077" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</if>
<status status="PASS" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.077"/>
</kw>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.077"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:29.092" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:34:29.092" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.092"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:29.092" endtime="20241121 23:34:29.092"/>
</return>
<status status="PASS" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.092"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.092" endtime="20241121 23:34:29.092"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.092" endtime="20241121 23:34:29.092"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.092" endtime="20241121 23:34:29.092"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.077" endtime="20241121 23:34:29.092"/>
</try>
<msg timestamp="20241121 23:34:29.092" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:29.061" endtime="20241121 23:34:29.092"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:34:29.092" endtime="20241121 23:34:29.092"/>
</return>
<msg timestamp="20241121 23:34:29.092" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:28.988" endtime="20241121 23:34:29.092"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:34:29.108" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.092" endtime="20241121 23:34:29.108"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</return>
<msg timestamp="20241121 23:34:29.108" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:34:29.092" endtime="20241121 23:34:29.108"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</branch>
<status status="PASS" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</if>
<status status="PASS" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.987" endtime="20241121 23:34:29.108"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:29.108"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:29.108"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:29.108"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.944" endtime="20241121 23:34:29.108"/>
</try>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:29.108"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.816" endtime="20241121 23:34:29.108"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.108"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.124"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.124"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.124"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:29.108" endtime="20241121 23:34:29.124"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.124"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:29.139" endtime="20241121 23:34:29.139"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.139" endtime="20241121 23:34:29.139"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.124" endtime="20241121 23:34:29.139"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.139" endtime="20241121 23:34:29.139"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.139" endtime="20241121 23:34:29.139"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.155" endtime="20241121 23:34:29.155"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.139" endtime="20241121 23:34:29.155"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:29.155" endtime="20241121 23:34:29.155"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:29.155" endtime="20241121 23:34:29.155"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:29.155" endtime="20241121 23:34:29.155"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:29.155"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:29.155" endtime="20241121 23:34:29.155"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:30.160" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:29.155" endtime="20241121 23:34:30.160"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:30.160"/>
</kw>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:30.160"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</branch>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:30.160"/>
</try>
<status status="PASS" starttime="20241121 23:34:28.793" endtime="20241121 23:34:30.160"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:30.160" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:30.160" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.160" endtime="20241121 23:34:30.160"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:30.180" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:30.178" endtime="20241121 23:34:30.180"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:30.182" endtime="20241121 23:34:30.182"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.181" endtime="20241121 23:34:30.182"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.184" endtime="20241121 23:34:30.184"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.183" endtime="20241121 23:34:30.184"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.194" endtime="20241121 23:34:30.194"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.185" endtime="20241121 23:34:30.195"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.196" endtime="20241121 23:34:30.196"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.196" endtime="20241121 23:34:30.211"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.196" endtime="20241121 23:34:30.211"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.216" endtime="20241121 23:34:30.216"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.212" endtime="20241121 23:34:30.216"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.219" endtime="20241121 23:34:30.219"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.217" endtime="20241121 23:34:30.219"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:30.246" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</kw>
<msg timestamp="20241121 23:34:30.246" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</try>
<msg timestamp="20241121 23:34:30.246" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</try>
<msg timestamp="20241121 23:34:30.246" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.246" endtime="20241121 23:34:30.246"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.233" endtime="20241121 23:34:30.246"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:30.276" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:30.268" endtime="20241121 23:34:30.276"/>
</kw>
<msg timestamp="20241121 23:34:30.277" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.268" endtime="20241121 23:34:30.277"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.277" endtime="20241121 23:34:30.277"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.268" endtime="20241121 23:34:30.277"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.278" endtime="20241121 23:34:30.278"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.278" endtime="20241121 23:34:30.278"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.277" endtime="20241121 23:34:30.278"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.267" endtime="20241121 23:34:30.278"/>
</try>
<msg timestamp="20241121 23:34:30.279" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.267" endtime="20241121 23:34:30.279"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.279" endtime="20241121 23:34:30.279"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.266" endtime="20241121 23:34:30.279"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:30.279" endtime="20241121 23:34:30.279"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:30.279" endtime="20241121 23:34:30.279"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.266" endtime="20241121 23:34:30.279"/>
</try>
<msg timestamp="20241121 23:34:30.280" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.265" endtime="20241121 23:34:30.280"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.282" endtime="20241121 23:34:30.282"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.283" endtime="20241121 23:34:30.283"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.282" endtime="20241121 23:34:30.283"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.282" endtime="20241121 23:34:30.283"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.281" endtime="20241121 23:34:30.283"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.265" endtime="20241121 23:34:30.283"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:30.295" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:30.295" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:30.284" endtime="20241121 23:34:30.295"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.283" endtime="20241121 23:34:30.295"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.283" endtime="20241121 23:34:30.295"/>
</try>
<msg timestamp="20241121 23:34:30.295" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:30.263" endtime="20241121 23:34:30.295"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.261" endtime="20241121 23:34:30.295"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.295" endtime="20241121 23:34:30.295"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.261" endtime="20241121 23:34:30.295"/>
</try>
<status status="PASS" starttime="20241121 23:34:30.261" endtime="20241121 23:34:30.295"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:30.326" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:30.311" endtime="20241121 23:34:30.326"/>
</kw>
<msg timestamp="20241121 23:34:30.326" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.311" endtime="20241121 23:34:30.326"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.311" endtime="20241121 23:34:30.326"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.311" endtime="20241121 23:34:30.326"/>
</try>
<msg timestamp="20241121 23:34:30.326" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.311" endtime="20241121 23:34:30.326"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</return>
<msg timestamp="20241121 23:34:30.326" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.311" endtime="20241121 23:34:30.326"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.326"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.311" endtime="20241121 23:34:30.326"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.231" endtime="20241121 23:34:30.326"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:30.358" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:34:30.345" endtime="20241121 23:34:30.358"/>
</kw>
<msg timestamp="20241121 23:34:30.358" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.345" endtime="20241121 23:34:30.358"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.345" endtime="20241121 23:34:30.358"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.345" endtime="20241121 23:34:30.358"/>
</try>
<msg timestamp="20241121 23:34:30.358" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.344" endtime="20241121 23:34:30.358"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</return>
<msg timestamp="20241121 23:34:30.358" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.342" endtime="20241121 23:34:30.358"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.326" endtime="20241121 23:34:30.358"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:30.358" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.358"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.373"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.373"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.373"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.373"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.373"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.373"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:34:30.373" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.405"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.406"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.406" endtime="20241121 23:34:30.406"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.406" endtime="20241121 23:34:30.406"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.406" endtime="20241121 23:34:30.406"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.373" endtime="20241121 23:34:30.407"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:30.419" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:30.414" endtime="20241121 23:34:30.419"/>
</kw>
<msg timestamp="20241121 23:34:30.420" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.413" endtime="20241121 23:34:30.420"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.420" endtime="20241121 23:34:30.420"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.413" endtime="20241121 23:34:30.420"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.420" endtime="20241121 23:34:30.420"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.421" endtime="20241121 23:34:30.421"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.420" endtime="20241121 23:34:30.421"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.413" endtime="20241121 23:34:30.421"/>
</try>
<msg timestamp="20241121 23:34:30.421" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.413" endtime="20241121 23:34:30.421"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.421" endtime="20241121 23:34:30.421"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.411" endtime="20241121 23:34:30.421"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:30.421" endtime="20241121 23:34:30.422"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:30.421" endtime="20241121 23:34:30.422"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.411" endtime="20241121 23:34:30.422"/>
</try>
<msg timestamp="20241121 23:34:30.422" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.410" endtime="20241121 23:34:30.422"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.424" endtime="20241121 23:34:30.425"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.425" endtime="20241121 23:34:30.425"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.424" endtime="20241121 23:34:30.425"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.424" endtime="20241121 23:34:30.425"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.423" endtime="20241121 23:34:30.425"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.410" endtime="20241121 23:34:30.425"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:30.439" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:30.434" endtime="20241121 23:34:30.439"/>
</kw>
<msg timestamp="20241121 23:34:30.440" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.434" endtime="20241121 23:34:30.440"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.440" endtime="20241121 23:34:30.440"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.434" endtime="20241121 23:34:30.440"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.440" endtime="20241121 23:34:30.440"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.441" endtime="20241121 23:34:30.441"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.440" endtime="20241121 23:34:30.441"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.433" endtime="20241121 23:34:30.441"/>
</try>
<msg timestamp="20241121 23:34:30.441" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.433" endtime="20241121 23:34:30.441"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.441" endtime="20241121 23:34:30.441"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.432" endtime="20241121 23:34:30.441"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:30.441" endtime="20241121 23:34:30.442"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:30.441" endtime="20241121 23:34:30.442"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.432" endtime="20241121 23:34:30.442"/>
</try>
<msg timestamp="20241121 23:34:30.442" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.432" endtime="20241121 23:34:30.442"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.445" endtime="20241121 23:34:30.445"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.445" endtime="20241121 23:34:30.445"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.445" endtime="20241121 23:34:30.445"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.444" endtime="20241121 23:34:30.445"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.443" endtime="20241121 23:34:30.446"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.431" endtime="20241121 23:34:30.446"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:30.457" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:30.457" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:30.446" endtime="20241121 23:34:30.457"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:30.457" endtime="20241121 23:34:30.457"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.446" endtime="20241121 23:34:30.457"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.458" endtime="20241121 23:34:30.458"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.458" endtime="20241121 23:34:30.458"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.457" endtime="20241121 23:34:30.458"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.446" endtime="20241121 23:34:30.458"/>
</try>
<msg timestamp="20241121 23:34:30.458" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:30.429" endtime="20241121 23:34:30.459"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.461" endtime="20241121 23:34:30.461"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.461" endtime="20241121 23:34:30.462"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.461" endtime="20241121 23:34:30.462"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.461" endtime="20241121 23:34:30.462"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.460" endtime="20241121 23:34:30.462"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.428" endtime="20241121 23:34:30.462"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.428" endtime="20241121 23:34:30.462"/>
</try>
<status status="PASS" starttime="20241121 23:34:30.425" endtime="20241121 23:34:30.462"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:30.462" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</kw>
<msg timestamp="20241121 23:34:30.462" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</try>
<msg timestamp="20241121 23:34:30.462" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</return>
<msg timestamp="20241121 23:34:30.462" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.462"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.477"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.477"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.462" endtime="20241121 23:34:30.477"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.408" endtime="20241121 23:34:30.477"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:30.477" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</kw>
<msg timestamp="20241121 23:34:30.477" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</try>
<msg timestamp="20241121 23:34:30.477" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</try>
<msg timestamp="20241121 23:34:30.477" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.477"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.493"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:30.493" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:34:30.493" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</return>
<status status="PASS" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</try>
<msg timestamp="20241121 23:34:30.493" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:30.477" endtime="20241121 23:34:30.493"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:34:30.493" endtime="20241121 23:34:30.493"/>
</return>
<msg timestamp="20241121 23:34:30.493" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:30.407" endtime="20241121 23:34:30.493"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:34:30.509" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</return>
<msg timestamp="20241121 23:34:30.509" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</if>
<status status="PASS" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.407" endtime="20241121 23:34:30.509"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.509"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.509"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.509"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.358" endtime="20241121 23:34:30.509"/>
</try>
<status status="PASS" starttime="20241121 23:34:30.229" endtime="20241121 23:34:30.509"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.219" endtime="20241121 23:34:30.509"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.509"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:30.509" endtime="20241121 23:34:30.524"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.524"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:30.540" endtime="20241121 23:34:30.540"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.540" endtime="20241121 23:34:30.540"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.524" endtime="20241121 23:34:30.540"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.540" endtime="20241121 23:34:30.540"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.540" endtime="20241121 23:34:30.540"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.540" endtime="20241121 23:34:30.540"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.540" endtime="20241121 23:34:30.540"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:30.540" endtime="20241121 23:34:30.540"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:30.555" endtime="20241121 23:34:30.555"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:30.540" endtime="20241121 23:34:30.555"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.180" endtime="20241121 23:34:30.555"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:30.555" endtime="20241121 23:34:30.555"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:31.558" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:30.555" endtime="20241121 23:34:31.558"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.175" endtime="20241121 23:34:31.558"/>
</kw>
<status status="PASS" starttime="20241121 23:34:30.175" endtime="20241121 23:34:31.558"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</branch>
<status status="PASS" starttime="20241121 23:34:30.175" endtime="20241121 23:34:31.558"/>
</try>
<status status="PASS" starttime="20241121 23:34:30.160" endtime="20241121 23:34:31.558"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:31.558" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:31.558" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:31.558" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.558"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:31.596" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:31.586" endtime="20241121 23:34:31.596"/>
</kw>
<msg timestamp="20241121 23:34:31.597" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.585" endtime="20241121 23:34:31.597"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</return>
<status status="PASS" starttime="20241121 23:34:31.585" endtime="20241121 23:34:31.597"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.585" endtime="20241121 23:34:31.597"/>
</try>
<msg timestamp="20241121 23:34:31.597" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.584" endtime="20241121 23:34:31.597"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</return>
<status status="PASS" starttime="20241121 23:34:31.582" endtime="20241121 23:34:31.597"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.582" endtime="20241121 23:34:31.597"/>
</try>
<msg timestamp="20241121 23:34:31.597" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.581" endtime="20241121 23:34:31.597"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</if>
<status status="PASS" starttime="20241121 23:34:31.597" endtime="20241121 23:34:31.597"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.579" endtime="20241121 23:34:31.597"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:31.612" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</kw>
<msg timestamp="20241121 23:34:31.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</return>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</try>
<msg timestamp="20241121 23:34:31.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</return>
<msg timestamp="20241121 23:34:31.612" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.612"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.627" endtime="20241121 23:34:31.627"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.627" endtime="20241121 23:34:31.627"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.627" endtime="20241121 23:34:31.627"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.627" endtime="20241121 23:34:31.627"/>
</if>
<status status="PASS" starttime="20241121 23:34:31.612" endtime="20241121 23:34:31.627"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.611" endtime="20241121 23:34:31.628"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:31.646" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:31.633" endtime="20241121 23:34:31.646"/>
</kw>
<msg timestamp="20241121 23:34:31.647" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.632" endtime="20241121 23:34:31.647"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:31.647" endtime="20241121 23:34:31.647"/>
</return>
<status status="PASS" starttime="20241121 23:34:31.632" endtime="20241121 23:34:31.647"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.647" endtime="20241121 23:34:31.647"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.648" endtime="20241121 23:34:31.648"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.647" endtime="20241121 23:34:31.648"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.632" endtime="20241121 23:34:31.648"/>
</try>
<msg timestamp="20241121 23:34:31.648" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.631" endtime="20241121 23:34:31.648"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:31.648" endtime="20241121 23:34:31.648"/>
</return>
<msg timestamp="20241121 23:34:31.649" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:31.630" endtime="20241121 23:34:31.649"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.651" endtime="20241121 23:34:31.651"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.651" endtime="20241121 23:34:31.651"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.651" endtime="20241121 23:34:31.651"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.651" endtime="20241121 23:34:31.651"/>
</if>
<status status="PASS" starttime="20241121 23:34:31.650" endtime="20241121 23:34:31.652"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.630" endtime="20241121 23:34:31.652"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.574" endtime="20241121 23:34:31.652"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:31.652" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:31.652" endtime="20241121 23:34:31.652"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.654" endtime="20241121 23:34:31.654"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.654" endtime="20241121 23:34:31.654"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:31.654" endtime="20241121 23:34:31.655"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.654" endtime="20241121 23:34:31.655"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.654" endtime="20241121 23:34:31.655"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:31.655" endtime="20241121 23:34:31.743"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.655" endtime="20241121 23:34:31.743"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.743" endtime="20241121 23:34:31.744"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.744" endtime="20241121 23:34:31.744"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.743" endtime="20241121 23:34:31.744"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.655" endtime="20241121 23:34:31.744"/>
</try>
<status status="PASS" starttime="20241121 23:34:31.653" endtime="20241121 23:34:31.744"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.653" endtime="20241121 23:34:31.745"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.653" endtime="20241121 23:34:31.745"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.745" endtime="20241121 23:34:31.745"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.745" endtime="20241121 23:34:31.745"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.652" endtime="20241121 23:34:31.745"/>
</try>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.746"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.746"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.748" endtime="20241121 23:34:31.748"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.750" endtime="20241121 23:34:31.750"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.746" endtime="20241121 23:34:31.750"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.751" endtime="20241121 23:34:31.752"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.750" endtime="20241121 23:34:31.752"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.754" endtime="20241121 23:34:31.754"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.752" endtime="20241121 23:34:31.755"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.757" endtime="20241121 23:34:31.757"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.755" endtime="20241121 23:34:31.757"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.758" endtime="20241121 23:34:31.758"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.757" endtime="20241121 23:34:31.758"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.759" endtime="20241121 23:34:31.759"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.760" endtime="20241121 23:34:31.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.760" endtime="20241121 23:34:31.760"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.760" endtime="20241121 23:34:31.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.760" endtime="20241121 23:34:31.760"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:31.759" endtime="20241121 23:34:31.760"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:31.758" endtime="20241121 23:34:31.760"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:31.765" endtime="20241121 23:34:31.766"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.768" endtime="20241121 23:34:31.768"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.761" endtime="20241121 23:34:31.768"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.769" endtime="20241121 23:34:31.770"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.770" endtime="20241121 23:34:31.770"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.770" endtime="20241121 23:34:31.770"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.770" endtime="20241121 23:34:31.770"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.770" endtime="20241121 23:34:31.770"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:31.770" endtime="20241121 23:34:31.771"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:31.768" endtime="20241121 23:34:31.771"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:31.776" endtime="20241121 23:34:31.776"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.771" endtime="20241121 23:34:31.778"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:31.778"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:31.778" endtime="20241121 23:34:31.778"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:36.782" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:34:31.778" endtime="20241121 23:34:36.782"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:36.782"/>
</kw>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:36.782"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.782" endtime="20241121 23:34:36.782"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.782" endtime="20241121 23:34:36.782"/>
</branch>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:36.782"/>
</try>
<status status="PASS" starttime="20241121 23:34:31.558" endtime="20241121 23:34:36.782"/>
</iter>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:36.782"/>
</for>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:36.782"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.311" endtime="20241121 23:34:36.782"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:36.782" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:34:36.782" endtime="20241121 23:34:36.782"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:34:36.782" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:34:36.782" endtime="20241121 23:34:36.782"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:34:36.828" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:34:36.828" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:34:36.782" endtime="20241121 23:34:36.828"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:36.828" endtime="20241121 23:34:36.828"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:34:36.828" endtime="20241121 23:34:36.828"/>
</return>
<status status="PASS" starttime="20241121 23:34:36.782" endtime="20241121 23:34:36.828"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:36.828"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:36.828" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:34:36.828" endtime="20241121 23:34:36.828"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:36.828" endtime="20241121 23:34:36.828"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:36.828" endtime="20241121 23:34:36.828"/>
</kw>
<msg timestamp="20241121 23:34:36.844" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.828" endtime="20241121 23:34:36.844"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:36.844" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:34:36.844" endtime="20241121 23:34:36.844"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:36.847" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.846" endtime="20241121 23:34:36.847"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.846" endtime="20241121 23:34:36.847"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.848" endtime="20241121 23:34:36.848"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.847" endtime="20241121 23:34:36.848"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.846" endtime="20241121 23:34:36.848"/>
</if>
<status status="PASS" starttime="20241121 23:34:36.844" endtime="20241121 23:34:36.848"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.844" endtime="20241121 23:34:36.848"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:36.849" endtime="20241121 23:34:36.849"/>
</return>
<msg timestamp="20241121 23:34:36.849" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.828" endtime="20241121 23:34:36.849"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:36.849" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:34:36.849" endtime="20241121 23:34:36.849"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:36.849" endtime="20241121 23:34:36.849"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:36.855" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:34:36.849" endtime="20241121 23:34:36.855"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.856" endtime="20241121 23:34:36.857"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.857" endtime="20241121 23:34:36.857"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.856" endtime="20241121 23:34:36.858"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.855" endtime="20241121 23:34:36.858"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:36.861" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:36.860" endtime="20241121 23:34:36.861"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:36.863" endtime="20241121 23:34:36.863"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.862" endtime="20241121 23:34:36.863"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.864" endtime="20241121 23:34:36.864"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.863" endtime="20241121 23:34:36.864"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:36.893" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:34:36.882" endtime="20241121 23:34:36.893"/>
</kw>
<msg timestamp="20241121 23:34:36.893" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.881" endtime="20241121 23:34:36.893"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</return>
<status status="PASS" starttime="20241121 23:34:36.881" endtime="20241121 23:34:36.893"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.880" endtime="20241121 23:34:36.893"/>
</try>
<msg timestamp="20241121 23:34:36.893" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.880" endtime="20241121 23:34:36.893"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</return>
<status status="PASS" starttime="20241121 23:34:36.878" endtime="20241121 23:34:36.893"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.877" endtime="20241121 23:34:36.893"/>
</try>
<msg timestamp="20241121 23:34:36.893" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.877" endtime="20241121 23:34:36.893"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.893"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.905"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.905"/>
</if>
<status status="PASS" starttime="20241121 23:34:36.893" endtime="20241121 23:34:36.905"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.874" endtime="20241121 23:34:36.905"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:36.926" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:34:36.907" endtime="20241121 23:34:36.926"/>
</kw>
<msg timestamp="20241121 23:34:36.926" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.907" endtime="20241121 23:34:36.926"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:36.927" endtime="20241121 23:34:36.927"/>
</return>
<status status="PASS" starttime="20241121 23:34:36.907" endtime="20241121 23:34:36.927"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.928" endtime="20241121 23:34:36.928"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.928" endtime="20241121 23:34:36.928"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.927" endtime="20241121 23:34:36.928"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.907" endtime="20241121 23:34:36.928"/>
</try>
<msg timestamp="20241121 23:34:36.929" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.907" endtime="20241121 23:34:36.929"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:36.929" endtime="20241121 23:34:36.929"/>
</return>
<msg timestamp="20241121 23:34:36.930" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.907" endtime="20241121 23:34:36.930"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.934" endtime="20241121 23:34:36.934"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.934" endtime="20241121 23:34:36.935"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.934" endtime="20241121 23:34:36.935"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.934" endtime="20241121 23:34:36.935"/>
</if>
<status status="PASS" starttime="20241121 23:34:36.932" endtime="20241121 23:34:36.935"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.907" endtime="20241121 23:34:36.935"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:36.956" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:36.943" endtime="20241121 23:34:36.956"/>
</kw>
<msg timestamp="20241121 23:34:36.956" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.942" endtime="20241121 23:34:36.956"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</return>
<status status="PASS" starttime="20241121 23:34:36.942" endtime="20241121 23:34:36.956"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.942" endtime="20241121 23:34:36.956"/>
</try>
<msg timestamp="20241121 23:34:36.956" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.941" endtime="20241121 23:34:36.956"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</return>
<msg timestamp="20241121 23:34:36.956" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:36.940" endtime="20241121 23:34:36.956"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</if>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.939" endtime="20241121 23:34:36.956"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.868" endtime="20241121 23:34:36.956"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:36.956" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:36.956"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:37.005"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:37.005"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.005" endtime="20241121 23:34:37.005"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.006" endtime="20241121 23:34:37.006"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.005" endtime="20241121 23:34:37.006"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:37.006"/>
</try>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:37.006"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:37.006"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:37.006"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.006" endtime="20241121 23:34:37.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.006" endtime="20241121 23:34:37.007"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.956" endtime="20241121 23:34:37.007"/>
</try>
<status status="PASS" starttime="20241121 23:34:36.868" endtime="20241121 23:34:37.007"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.864" endtime="20241121 23:34:37.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.021" endtime="20241121 23:34:37.021"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.022" endtime="20241121 23:34:37.022"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.022" endtime="20241121 23:34:37.022"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.022" endtime="20241121 23:34:37.022"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.022" endtime="20241121 23:34:37.022"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:37.022" endtime="20241121 23:34:37.022"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:37.008" endtime="20241121 23:34:37.023"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.023" endtime="20241121 23:34:37.025"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.025"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:37.039" endtime="20241121 23:34:37.039"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.041" endtime="20241121 23:34:37.042"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.025" endtime="20241121 23:34:37.042"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.043" endtime="20241121 23:34:37.043"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.042" endtime="20241121 23:34:37.043"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.045" endtime="20241121 23:34:37.045"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.043" endtime="20241121 23:34:37.045"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:37.051" endtime="20241121 23:34:37.051"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.052" endtime="20241121 23:34:37.052"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.045" endtime="20241121 23:34:37.052"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.861" endtime="20241121 23:34:37.052"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.052" endtime="20241121 23:34:37.053"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:37.053" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:37.053" endtime="20241121 23:34:37.053"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.859" endtime="20241121 23:34:37.053"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.858" endtime="20241121 23:34:37.054"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.054" endtime="20241121 23:34:37.054"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.054" endtime="20241121 23:34:37.054"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.858" endtime="20241121 23:34:37.054"/>
</try>
<status status="PASS" starttime="20241121 23:34:36.849" endtime="20241121 23:34:37.054"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.055" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:34:37.055" endtime="20241121 23:34:37.055"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.055" endtime="20241121 23:34:37.056"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:37.056" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:34:37.056" endtime="20241121 23:34:37.056"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.057" endtime="20241121 23:34:37.057"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.057" endtime="20241121 23:34:37.057"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.057" endtime="20241121 23:34:37.057"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.056" endtime="20241121 23:34:37.057"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.058" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:37.058" endtime="20241121 23:34:37.058"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:37.059" endtime="20241121 23:34:37.059"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.059" endtime="20241121 23:34:37.059"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.059" endtime="20241121 23:34:37.059"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.059" endtime="20241121 23:34:37.060"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:37.075" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:37.068" endtime="20241121 23:34:37.076"/>
</kw>
<msg timestamp="20241121 23:34:37.076" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.067" endtime="20241121 23:34:37.076"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:37.076" endtime="20241121 23:34:37.076"/>
</return>
<status status="PASS" starttime="20241121 23:34:37.067" endtime="20241121 23:34:37.076"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.077" endtime="20241121 23:34:37.077"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.077" endtime="20241121 23:34:37.077"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.076" endtime="20241121 23:34:37.077"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.067" endtime="20241121 23:34:37.078"/>
</try>
<msg timestamp="20241121 23:34:37.078" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.067" endtime="20241121 23:34:37.078"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:37.078" endtime="20241121 23:34:37.078"/>
</return>
<status status="PASS" starttime="20241121 23:34:37.065" endtime="20241121 23:34:37.078"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:37.078" endtime="20241121 23:34:37.078"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:37.078" endtime="20241121 23:34:37.079"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.065" endtime="20241121 23:34:37.079"/>
</try>
<msg timestamp="20241121 23:34:37.079" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.065" endtime="20241121 23:34:37.079"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.079"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.079"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.079"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.079"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.079"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.065" endtime="20241121 23:34:37.079"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:37.094" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:37.088" endtime="20241121 23:34:37.094"/>
</kw>
<msg timestamp="20241121 23:34:37.094" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.094"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:37.094" endtime="20241121 23:34:37.094"/>
</return>
<status status="PASS" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.094"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.095" endtime="20241121 23:34:37.095"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.095" endtime="20241121 23:34:37.095"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.094" endtime="20241121 23:34:37.095"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.095"/>
</try>
<msg timestamp="20241121 23:34:37.096" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.096"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.096"/>
</return>
<msg timestamp="20241121 23:34:37.096" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.096"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.096"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.096"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.096"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.096"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.096"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.079" endtime="20241121 23:34:37.096"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:37.107" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.107"/>
</kw>
<msg timestamp="20241121 23:34:37.107" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.107"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:37.107" endtime="20241121 23:34:37.107"/>
</return>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.107"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.107" endtime="20241121 23:34:37.107"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.107" endtime="20241121 23:34:37.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.107" endtime="20241121 23:34:37.107"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.107"/>
</try>
<msg timestamp="20241121 23:34:37.107" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.107"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:37.107" endtime="20241121 23:34:37.107"/>
</return>
<msg timestamp="20241121 23:34:37.121" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.121"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.096" endtime="20241121 23:34:37.123"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.062" endtime="20241121 23:34:37.123"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:37.123" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.123"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.264"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.264"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.264" endtime="20241121 23:34:37.264"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.264" endtime="20241121 23:34:37.264"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.264" endtime="20241121 23:34:37.264"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.264"/>
</try>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.271"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.271"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.271"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.272" endtime="20241121 23:34:37.272"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.271" endtime="20241121 23:34:37.272"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.123" endtime="20241121 23:34:37.272"/>
</try>
<status status="PASS" starttime="20241121 23:34:37.062" endtime="20241121 23:34:37.272"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.060" endtime="20241121 23:34:37.273"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.275" endtime="20241121 23:34:37.276"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.278" endtime="20241121 23:34:37.279"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.273" endtime="20241121 23:34:37.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.281" endtime="20241121 23:34:37.281"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.279" endtime="20241121 23:34:37.281"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.288" endtime="20241121 23:34:37.288"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.281" endtime="20241121 23:34:37.288"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.289"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:37.304" endtime="20241121 23:34:37.304"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.305"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.289" endtime="20241121 23:34:37.305"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.305"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.305"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.305"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.305"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.305"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.305"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.305"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:37.322" endtime="20241121 23:34:37.322"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.322" endtime="20241121 23:34:37.322"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.305" endtime="20241121 23:34:37.322"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.322" endtime="20241121 23:34:37.322"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.322" endtime="20241121 23:34:37.322"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.337" endtime="20241121 23:34:37.338"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.322" endtime="20241121 23:34:37.338"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.338" endtime="20241121 23:34:37.339"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.058" endtime="20241121 23:34:37.339"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:37.339" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.058" endtime="20241121 23:34:37.339"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.057" endtime="20241121 23:34:37.339"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.057" endtime="20241121 23:34:37.339"/>
</try>
<status status="PASS" starttime="20241121 23:34:37.055" endtime="20241121 23:34:37.339"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.339" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:37.339" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.339"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.354" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:37.354" endtime="20241121 23:34:37.354"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.376" endtime="20241121 23:34:37.376"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.355" endtime="20241121 23:34:37.376"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.377"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.392"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.392"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.377" endtime="20241121 23:34:37.392"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.392"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.392"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.392"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.392"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.392"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.404"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:37.392" endtime="20241121 23:34:37.404"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:37.407" endtime="20241121 23:34:37.407"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.407" endtime="20241121 23:34:37.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.405" endtime="20241121 23:34:37.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:37.492" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:37.428" endtime="20241121 23:34:37.492"/>
</kw>
<msg timestamp="20241121 23:34:37.492" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.427" endtime="20241121 23:34:37.492"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:37.492" endtime="20241121 23:34:37.493"/>
</return>
<status status="PASS" starttime="20241121 23:34:37.426" endtime="20241121 23:34:37.493"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.493" endtime="20241121 23:34:37.493"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.494" endtime="20241121 23:34:37.494"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.493" endtime="20241121 23:34:37.494"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.426" endtime="20241121 23:34:37.494"/>
</try>
<msg timestamp="20241121 23:34:37.494" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.425" endtime="20241121 23:34:37.494"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:37.494" endtime="20241121 23:34:37.495"/>
</return>
<status status="PASS" starttime="20241121 23:34:37.421" endtime="20241121 23:34:37.495"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:37.495" endtime="20241121 23:34:37.495"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:37.495" endtime="20241121 23:34:37.495"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.421" endtime="20241121 23:34:37.495"/>
</try>
<msg timestamp="20241121 23:34:37.496" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.407" endtime="20241121 23:34:37.496"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.407" endtime="20241121 23:34:37.496"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.499" endtime="20241121 23:34:37.499"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.496" endtime="20241121 23:34:37.499"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:37.510" endtime="20241121 23:34:37.510"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.510" endtime="20241121 23:34:37.511"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.499" endtime="20241121 23:34:37.511"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.354" endtime="20241121 23:34:37.511"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.511" endtime="20241121 23:34:37.512"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:37.512" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:37.512" endtime="20241121 23:34:37.512"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.354" endtime="20241121 23:34:37.512"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.512"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.512" endtime="20241121 23:34:37.512"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.512" endtime="20241121 23:34:37.512"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.512"/>
</try>
<status status="PASS" starttime="20241121 23:34:37.339" endtime="20241121 23:34:37.512"/>
</iter>
<status status="PASS" starttime="20241121 23:34:36.849" endtime="20241121 23:34:37.512"/>
</for>
<status status="PASS" starttime="20241121 23:34:36.849" endtime="20241121 23:34:37.512"/>
</branch>
<status status="PASS" starttime="20241121 23:34:36.849" endtime="20241121 23:34:37.512"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:37.512" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:34:37.512" endtime="20241121 23:34:37.512"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:34:37.512" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:34:37.512" endtime="20241121 23:34:37.512"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:34:37.527" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:34:37.527" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:34:37.512" endtime="20241121 23:34:37.527"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.528" endtime="20241121 23:34:37.528"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:34:37.529" endtime="20241121 23:34:37.529"/>
</return>
<status status="PASS" starttime="20241121 23:34:37.512" endtime="20241121 23:34:37.530"/>
</kw>
<status status="PASS" starttime="20241121 23:34:36.828" endtime="20241121 23:34:37.530"/>
</iter>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:37.530"/>
</for>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:37.530"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.291" endtime="20241121 23:34:37.530"/>
</if>
<status status="PASS" starttime="20241121 23:34:20.276" endtime="20241121 23:34:37.530"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.530" endtime="20241121 23:34:37.530"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.530" endtime="20241121 23:34:37.531"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.276" endtime="20241121 23:34:37.531"/>
</if>
<status status="PASS" starttime="20241121 23:34:20.262" endtime="20241121 23:34:37.531"/>
</kw>
<status status="PASS" starttime="20241121 23:34:20.262" endtime="20241121 23:34:37.532"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.532" endtime="20241121 23:34:37.533"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.532" endtime="20241121 23:34:37.533"/>
</branch>
<status status="PASS" starttime="20241121 23:34:20.262" endtime="20241121 23:34:37.533"/>
</try>
<status status="PASS" starttime="20241121 23:34:20.203" endtime="20241121 23:34:37.533"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.533" endtime="20241121 23:34:37.534"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:34:37.575" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '56', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:52:55.964Z', 'createdAt': '2024-11-21T17:52:55.964Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:34:37.534" endtime="20241121 23:34:37.575"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.575" endtime="20241121 23:34:37.588"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:37.594" endtime="20241121 23:34:37.594"/>
</kw>
<msg timestamp="20241121 23:34:37.595" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.594" endtime="20241121 23:34:37.595"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.596" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:34:37.595" endtime="20241121 23:34:37.596"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.597" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.596" endtime="20241121 23:34:37.597"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.595" endtime="20241121 23:34:37.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.595" endtime="20241121 23:34:37.597"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</return>
<msg timestamp="20241121 23:34:37.597" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.593" endtime="20241121 23:34:37.597"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.597"/>
</kw>
<msg timestamp="20241121 23:34:37.607" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.607"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.609" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:34:37.608" endtime="20241121 23:34:37.609"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.611" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.610" endtime="20241121 23:34:37.611"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.610" endtime="20241121 23:34:37.611"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.611" endtime="20241121 23:34:37.611"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.611" endtime="20241121 23:34:37.612"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.609" endtime="20241121 23:34:37.612"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.608" endtime="20241121 23:34:37.612"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.607" endtime="20241121 23:34:37.612"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:37.612" endtime="20241121 23:34:37.612"/>
</return>
<msg timestamp="20241121 23:34:37.613" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:37.613"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</kw>
<msg timestamp="20241121 23:34:37.617" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.617" level="INFO">${values} = {'id': '56', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:52:55.964Z', 'createdAt': '2024-11-21T17:52:55.964Z'}</msg>
<status status="PASS" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.617" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.617" endtime="20241121 23:34:37.617"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:37.623" endtime="20241121 23:34:37.623"/>
</return>
<msg timestamp="20241121 23:34:37.623" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.615" endtime="20241121 23:34:37.623"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.624" endtime="20241121 23:34:37.624"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.624" endtime="20241121 23:34:37.625"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.624" endtime="20241121 23:34:37.625"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.626" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:34:37.625" endtime="20241121 23:34:37.626"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.626" level="INFO">${testCaseRun} = {'id': '56', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:52:55.964Z', 'createdAt': '2024-11-21T17:52:55.964Z'}</msg>
<status status="PASS" starttime="20241121 23:34:37.626" endtime="20241121 23:34:37.626"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.627" endtime="20241121 23:34:37.627"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:37.631" endtime="20241121 23:34:37.632"/>
</kw>
<msg timestamp="20241121 23:34:37.632" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.631" endtime="20241121 23:34:37.632"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.633" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:34:37.632" endtime="20241121 23:34:37.633"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.634" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.634" endtime="20241121 23:34:37.634"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.634" endtime="20241121 23:34:37.634"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.635" endtime="20241121 23:34:37.635"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.635" endtime="20241121 23:34:37.635"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.633" endtime="20241121 23:34:37.635"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.632" endtime="20241121 23:34:37.635"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.632" endtime="20241121 23:34:37.635"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:37.635" endtime="20241121 23:34:37.636"/>
</return>
<msg timestamp="20241121 23:34:37.636" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.630" endtime="20241121 23:34:37.636"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.638" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:34:37.637" endtime="20241121 23:34:37.638"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.638" endtime="20241121 23:34:37.639"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:37.643" endtime="20241121 23:34:37.644"/>
</kw>
<msg timestamp="20241121 23:34:37.644" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.643" endtime="20241121 23:34:37.644"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.644" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:34:37.644" endtime="20241121 23:34:37.644"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.647" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.646" endtime="20241121 23:34:37.647"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.646" endtime="20241121 23:34:37.647"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.647" endtime="20241121 23:34:37.647"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.647" endtime="20241121 23:34:37.647"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.646" endtime="20241121 23:34:37.647"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.644" endtime="20241121 23:34:37.648"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.644" endtime="20241121 23:34:37.648"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:37.648" endtime="20241121 23:34:37.648"/>
</return>
<msg timestamp="20241121 23:34:37.648" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:37.642" endtime="20241121 23:34:37.648"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.650" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:34:37.649" endtime="20241121 23:34:37.650"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:37.650" endtime="20241121 23:34:37.651"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:37.653" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:34:37.651" endtime="20241121 23:34:37.653"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.654" endtime="20241121 23:34:37.654"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:37.654" endtime="20241121 23:34:37.654"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:37.654" endtime="20241121 23:34:37.654"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.653" endtime="20241121 23:34:37.654"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:37.656" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:34:37.656" endtime="20241121 23:34:37.656"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:34:37.660" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:34:37.662" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:34:37.662" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:34:37.659" endtime="20241121 23:34:37.662"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:34:37.663" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:34:37.677" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:34:37.678" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:34:37.662" endtime="20241121 23:34:37.678"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:34:37.679" endtime="20241121 23:34:37.679"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:34:44.970" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:34:44.970" level="INFO">${page_id} = {'page_id': 'page=a4c69041-415c-451f-b7cb-0126a1121015', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:34:37.679" endtime="20241121 23:34:44.970"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:34:44.971" level="INFO">Switching to page {'page_id': 'page=a4c69041-415c-451f-b7cb-0126a1121015', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:34:44.997" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "activePage": "page=15027322-8285-41ba-97b1-eb050df04d00",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/profile",
            "id": "page=15027322-8285-41ba-97b1-eb050df04d00",
            "timestamp": 1732212242.933
          }
        ]
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "activePage": "page=b71059ea-f586-4d91-b1ac-f5aeb5a6a87c",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/profile",
            "id": "page=b71059ea-f586-4d91-b1ac-f5aeb5a6a87c",
            "timestamp": 1732212260.5
          }
        ]
      },
      {
        "type": "context",
        "id": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
        "activePage": "page=a4c69041-415c-451f-b7cb-0126a1121015",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=a4c69041-415c-451f-b7cb-0126a1121015",
            "timestamp": 1732212277.838
          }
        ]
      }
    ],
    "activeContext": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:34:45.001" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:34:44.971" endtime="20241121 23:34:45.001"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.656" endtime="20241121 23:34:45.002"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.656" endtime="20241121 23:34:45.002"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.002" endtime="20241121 23:34:45.004"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.002" endtime="20241121 23:34:45.004"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.006" endtime="20241121 23:34:45.006"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.004" endtime="20241121 23:34:45.006"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.008" endtime="20241121 23:34:45.008"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.010" endtime="20241121 23:34:45.011"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.006" endtime="20241121 23:34:45.011"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.012" endtime="20241121 23:34:45.012"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.011" endtime="20241121 23:34:45.012"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.015" endtime="20241121 23:34:45.015"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.012" endtime="20241121 23:34:45.015"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.018" endtime="20241121 23:34:45.018"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.016" endtime="20241121 23:34:45.018"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.019" endtime="20241121 23:34:45.019"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.018" endtime="20241121 23:34:45.019"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.020" endtime="20241121 23:34:45.020"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.021" endtime="20241121 23:34:45.021"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.020" endtime="20241121 23:34:45.021"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.021" endtime="20241121 23:34:45.021"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.021" endtime="20241121 23:34:45.021"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:45.020" endtime="20241121 23:34:45.021"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:45.019" endtime="20241121 23:34:45.021"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:45.028" endtime="20241121 23:34:45.028"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.032" endtime="20241121 23:34:45.032"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.021" endtime="20241121 23:34:45.032"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.034" endtime="20241121 23:34:45.034"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.034" endtime="20241121 23:34:45.034"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.034" endtime="20241121 23:34:45.035"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.035" endtime="20241121 23:34:45.035"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.035" endtime="20241121 23:34:45.035"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:45.034" endtime="20241121 23:34:45.035"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:45.033" endtime="20241121 23:34:45.035"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:45.041" endtime="20241121 23:34:45.042"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.045" endtime="20241121 23:34:45.045"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.035" endtime="20241121 23:34:45.045"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.046" endtime="20241121 23:34:45.046"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.045" endtime="20241121 23:34:45.047"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.049" endtime="20241121 23:34:45.049"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.047" endtime="20241121 23:34:45.049"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:45.056" endtime="20241121 23:34:45.056"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:45.056" endtime="20241121 23:34:45.056"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:45.049" endtime="20241121 23:34:45.056"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.656" endtime="20241121 23:34:45.057"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:45.057" endtime="20241121 23:34:45.058"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:46.062" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:45.058" endtime="20241121 23:34:46.062"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.654" endtime="20241121 23:34:46.062"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.654" endtime="20241121 23:34:46.062"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.062"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.062"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.654" endtime="20241121 23:34:46.062"/>
</try>
<status status="PASS" starttime="20241121 23:34:37.649" endtime="20241121 23:34:46.062"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:46.062" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.062"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.062"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:46.062" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.062"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.062"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.062"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.078"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.062" endtime="20241121 23:34:46.078"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:46.082" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:46.081" endtime="20241121 23:34:46.083"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:46.084" endtime="20241121 23:34:46.084"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.084" endtime="20241121 23:34:46.086"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.086" endtime="20241121 23:34:46.086"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.086" endtime="20241121 23:34:46.086"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.097" endtime="20241121 23:34:46.098"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.086" endtime="20241121 23:34:46.098"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.103" endtime="20241121 23:34:46.103"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.107" endtime="20241121 23:34:46.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.098" endtime="20241121 23:34:46.107"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.107" endtime="20241121 23:34:46.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.107" endtime="20241121 23:34:46.107"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.117" endtime="20241121 23:34:46.117"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.107" endtime="20241121 23:34:46.117"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:46.169" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:46.132" endtime="20241121 23:34:46.170"/>
</kw>
<msg timestamp="20241121 23:34:46.170" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.132" endtime="20241121 23:34:46.170"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.170" endtime="20241121 23:34:46.170"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.132" endtime="20241121 23:34:46.170"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.171" endtime="20241121 23:34:46.171"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.171" endtime="20241121 23:34:46.171"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.170" endtime="20241121 23:34:46.171"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.132" endtime="20241121 23:34:46.171"/>
</try>
<msg timestamp="20241121 23:34:46.172" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.132" endtime="20241121 23:34:46.172"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.172" endtime="20241121 23:34:46.172"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.130" endtime="20241121 23:34:46.172"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:46.172" endtime="20241121 23:34:46.172"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:46.172" endtime="20241121 23:34:46.172"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.119" endtime="20241121 23:34:46.173"/>
</try>
<msg timestamp="20241121 23:34:46.173" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.119" endtime="20241121 23:34:46.173"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.176" endtime="20241121 23:34:46.176"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.176" endtime="20241121 23:34:46.177"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.176" endtime="20241121 23:34:46.177"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.176" endtime="20241121 23:34:46.177"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.174" endtime="20241121 23:34:46.177"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.119" endtime="20241121 23:34:46.177"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:46.181" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.181"/>
</kw>
<msg timestamp="20241121 23:34:46.181" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.181"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.181"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.181"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.181"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.181"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.181"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.197"/>
</try>
<msg timestamp="20241121 23:34:46.197" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.197"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.197"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.197"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.197"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.197"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.197"/>
</try>
<msg timestamp="20241121 23:34:46.197" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.197"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.197"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.197"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.197"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.197"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.197"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.197"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:46.212" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:46.212" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.212"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.212"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.197" endtime="20241121 23:34:46.212"/>
</try>
<msg timestamp="20241121 23:34:46.212" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:46.181" endtime="20241121 23:34:46.212"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.180" endtime="20241121 23:34:46.212"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.212"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.180" endtime="20241121 23:34:46.212"/>
</try>
<status status="PASS" starttime="20241121 23:34:46.180" endtime="20241121 23:34:46.212"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:46.228" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</kw>
<msg timestamp="20241121 23:34:46.228" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</try>
<msg timestamp="20241121 23:34:46.228" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.228"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</return>
<msg timestamp="20241121 23:34:46.228" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.228"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.228"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.212" endtime="20241121 23:34:46.228"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.119" endtime="20241121 23:34:46.228"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:46.259" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:34:46.244" endtime="20241121 23:34:46.259"/>
</kw>
<msg timestamp="20241121 23:34:46.259" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.244" endtime="20241121 23:34:46.259"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.244" endtime="20241121 23:34:46.259"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.244" endtime="20241121 23:34:46.259"/>
</try>
<msg timestamp="20241121 23:34:46.259" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.259"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</return>
<msg timestamp="20241121 23:34:46.259" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.259"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.228" endtime="20241121 23:34:46.259"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:46.259" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.259"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:34:46.259" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.301"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.302"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.302" endtime="20241121 23:34:46.302"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.302" endtime="20241121 23:34:46.302"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.302" endtime="20241121 23:34:46.302"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.302"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:46.314" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:46.309" endtime="20241121 23:34:46.314"/>
</kw>
<msg timestamp="20241121 23:34:46.315" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.309" endtime="20241121 23:34:46.315"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.315" endtime="20241121 23:34:46.315"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.308" endtime="20241121 23:34:46.315"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.315" endtime="20241121 23:34:46.315"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.316" endtime="20241121 23:34:46.316"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.315" endtime="20241121 23:34:46.316"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.308" endtime="20241121 23:34:46.316"/>
</try>
<msg timestamp="20241121 23:34:46.316" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.308" endtime="20241121 23:34:46.316"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.316" endtime="20241121 23:34:46.316"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.307" endtime="20241121 23:34:46.316"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:46.317" endtime="20241121 23:34:46.317"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:46.317" endtime="20241121 23:34:46.317"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.307" endtime="20241121 23:34:46.317"/>
</try>
<msg timestamp="20241121 23:34:46.317" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.307" endtime="20241121 23:34:46.317"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.319" endtime="20241121 23:34:46.320"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.320" endtime="20241121 23:34:46.320"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.319" endtime="20241121 23:34:46.320"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.319" endtime="20241121 23:34:46.320"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.318" endtime="20241121 23:34:46.320"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.306" endtime="20241121 23:34:46.320"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:46.334" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:46.329" endtime="20241121 23:34:46.335"/>
</kw>
<msg timestamp="20241121 23:34:46.335" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.328" endtime="20241121 23:34:46.335"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.335" endtime="20241121 23:34:46.335"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.328" endtime="20241121 23:34:46.335"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.335" endtime="20241121 23:34:46.336"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.336" endtime="20241121 23:34:46.336"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.335" endtime="20241121 23:34:46.336"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.328" endtime="20241121 23:34:46.336"/>
</try>
<msg timestamp="20241121 23:34:46.336" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.328" endtime="20241121 23:34:46.336"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.336" endtime="20241121 23:34:46.337"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.327" endtime="20241121 23:34:46.337"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:46.337" endtime="20241121 23:34:46.337"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:46.337" endtime="20241121 23:34:46.337"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.327" endtime="20241121 23:34:46.337"/>
</try>
<msg timestamp="20241121 23:34:46.337" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.326" endtime="20241121 23:34:46.337"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.340" endtime="20241121 23:34:46.340"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.340" endtime="20241121 23:34:46.340"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.340" endtime="20241121 23:34:46.340"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.340" endtime="20241121 23:34:46.341"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.339" endtime="20241121 23:34:46.341"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.326" endtime="20241121 23:34:46.341"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:46.347" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:46.347" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:46.341" endtime="20241121 23:34:46.347"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.341" endtime="20241121 23:34:46.347"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.341" endtime="20241121 23:34:46.347"/>
</try>
<msg timestamp="20241121 23:34:46.347" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:46.324" endtime="20241121 23:34:46.347"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.323" endtime="20241121 23:34:46.347"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.347"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.322" endtime="20241121 23:34:46.347"/>
</try>
<status status="PASS" starttime="20241121 23:34:46.322" endtime="20241121 23:34:46.347"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:46.363" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<msg timestamp="20241121 23:34:46.363" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</try>
<msg timestamp="20241121 23:34:46.363" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</return>
<msg timestamp="20241121 23:34:46.363" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.363" endtime="20241121 23:34:46.363"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.347" endtime="20241121 23:34:46.363"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.304" endtime="20241121 23:34:46.363"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:46.378" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</kw>
<msg timestamp="20241121 23:34:46.378" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</try>
<msg timestamp="20241121 23:34:46.378" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</try>
<msg timestamp="20241121 23:34:46.378" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.378"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.394"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.394"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.394"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.394"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.394"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.394"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:46.394" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:34:46.394" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.394"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.394"/>
</return>
<status status="PASS" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.410"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.394" endtime="20241121 23:34:46.410"/>
</try>
<msg timestamp="20241121 23:34:46.410" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:46.378" endtime="20241121 23:34:46.410"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</return>
<msg timestamp="20241121 23:34:46.410" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:34:46.304" endtime="20241121 23:34:46.410"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:34:46.410" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</return>
<msg timestamp="20241121 23:34:46.410" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</if>
<status status="PASS" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.303" endtime="20241121 23:34:46.410"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.410"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.410"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.410"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.410"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.259" endtime="20241121 23:34:46.410"/>
</try>
<status status="PASS" starttime="20241121 23:34:46.119" endtime="20241121 23:34:46.410"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.118" endtime="20241121 23:34:46.410"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.410" endtime="20241121 23:34:46.425"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.425"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.441"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.441"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.441"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:46.425" endtime="20241121 23:34:46.441"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.441"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:46.456" endtime="20241121 23:34:46.456"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:46.456" endtime="20241121 23:34:46.456"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:46.441" endtime="20241121 23:34:46.456"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.083" endtime="20241121 23:34:46.456"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:46.456" endtime="20241121 23:34:46.456"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:47.460" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:46.456" endtime="20241121 23:34:47.460"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.080" endtime="20241121 23:34:47.460"/>
</kw>
<status status="PASS" starttime="20241121 23:34:46.078" endtime="20241121 23:34:47.460"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.460" endtime="20241121 23:34:47.460"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.460" endtime="20241121 23:34:47.460"/>
</branch>
<status status="PASS" starttime="20241121 23:34:46.078" endtime="20241121 23:34:47.460"/>
</try>
<status status="PASS" starttime="20241121 23:34:46.062" endtime="20241121 23:34:47.460"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:47.460" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:34:47.460" endtime="20241121 23:34:47.460"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:47.460" endtime="20241121 23:34:47.460"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:47.460" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:34:47.460" endtime="20241121 23:34:47.460"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.475"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.475"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.475"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.460" endtime="20241121 23:34:47.475"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:47.475" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.475"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.475"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.475"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.475"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.475"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.496" endtime="20241121 23:34:47.496"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.496"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.505" endtime="20241121 23:34:47.505"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.507" endtime="20241121 23:34:47.507"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.498" endtime="20241121 23:34:47.507"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.507" endtime="20241121 23:34:47.512"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.507" endtime="20241121 23:34:47.512"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.518" endtime="20241121 23:34:47.519"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.512" endtime="20241121 23:34:47.519"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:47.546" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:47.529" endtime="20241121 23:34:47.546"/>
</kw>
<msg timestamp="20241121 23:34:47.546" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.529" endtime="20241121 23:34:47.546"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.529" endtime="20241121 23:34:47.546"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.529" endtime="20241121 23:34:47.546"/>
</try>
<msg timestamp="20241121 23:34:47.546" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.529" endtime="20241121 23:34:47.546"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.529" endtime="20241121 23:34:47.546"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.529" endtime="20241121 23:34:47.546"/>
</try>
<msg timestamp="20241121 23:34:47.546" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.529" endtime="20241121 23:34:47.546"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.546" endtime="20241121 23:34:47.546"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.528" endtime="20241121 23:34:47.546"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:47.580" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:47.574" endtime="20241121 23:34:47.580"/>
</kw>
<msg timestamp="20241121 23:34:47.580" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.573" endtime="20241121 23:34:47.580"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.580" endtime="20241121 23:34:47.581"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.573" endtime="20241121 23:34:47.581"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.581" endtime="20241121 23:34:47.581"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.581" endtime="20241121 23:34:47.581"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.581" endtime="20241121 23:34:47.581"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.573" endtime="20241121 23:34:47.582"/>
</try>
<msg timestamp="20241121 23:34:47.582" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.572" endtime="20241121 23:34:47.582"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.582" endtime="20241121 23:34:47.582"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.570" endtime="20241121 23:34:47.582"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:47.582" endtime="20241121 23:34:47.582"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:47.582" endtime="20241121 23:34:47.583"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.570" endtime="20241121 23:34:47.583"/>
</try>
<msg timestamp="20241121 23:34:47.583" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.570" endtime="20241121 23:34:47.583"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.586" endtime="20241121 23:34:47.586"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.586" endtime="20241121 23:34:47.586"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.585" endtime="20241121 23:34:47.586"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.585" endtime="20241121 23:34:47.586"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.584" endtime="20241121 23:34:47.586"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.569" endtime="20241121 23:34:47.587"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:47.597" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:47.597" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:47.587" endtime="20241121 23:34:47.597"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.587" endtime="20241121 23:34:47.597"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.587" endtime="20241121 23:34:47.597"/>
</try>
<msg timestamp="20241121 23:34:47.597" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:47.565" endtime="20241121 23:34:47.597"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.563" endtime="20241121 23:34:47.597"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.597"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.563" endtime="20241121 23:34:47.597"/>
</try>
<status status="PASS" starttime="20241121 23:34:47.562" endtime="20241121 23:34:47.597"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:47.612" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.612"/>
</kw>
<msg timestamp="20241121 23:34:47.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.612"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.612"/>
</try>
<msg timestamp="20241121 23:34:47.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</return>
<msg timestamp="20241121 23:34:47.612" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.612"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.612"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.597" endtime="20241121 23:34:47.612"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.523" endtime="20241121 23:34:47.612"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:47.659" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:34:47.628" endtime="20241121 23:34:47.659"/>
</kw>
<msg timestamp="20241121 23:34:47.659" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.659"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.659"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.659"/>
</try>
<msg timestamp="20241121 23:34:47.659" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.659"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</return>
<msg timestamp="20241121 23:34:47.659" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.659"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.659" endtime="20241121 23:34:47.659"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.612" endtime="20241121 23:34:47.675"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:47.675" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.675"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.675"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.675"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.675"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.675"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.675"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.675"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:34:47.675" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.721"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.721"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.721" endtime="20241121 23:34:47.721"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.721" endtime="20241121 23:34:47.721"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.721" endtime="20241121 23:34:47.721"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.722"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:47.734" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:47.728" endtime="20241121 23:34:47.734"/>
</kw>
<msg timestamp="20241121 23:34:47.734" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.728" endtime="20241121 23:34:47.734"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.734" endtime="20241121 23:34:47.734"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.728" endtime="20241121 23:34:47.734"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.735" endtime="20241121 23:34:47.735"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.735" endtime="20241121 23:34:47.735"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.734" endtime="20241121 23:34:47.735"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.728" endtime="20241121 23:34:47.735"/>
</try>
<msg timestamp="20241121 23:34:47.736" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.727" endtime="20241121 23:34:47.736"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.736" endtime="20241121 23:34:47.736"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.726" endtime="20241121 23:34:47.736"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:47.736" endtime="20241121 23:34:47.736"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:47.736" endtime="20241121 23:34:47.736"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.726" endtime="20241121 23:34:47.736"/>
</try>
<msg timestamp="20241121 23:34:47.736" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.726" endtime="20241121 23:34:47.737"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.739" endtime="20241121 23:34:47.739"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.739" endtime="20241121 23:34:47.739"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.739" endtime="20241121 23:34:47.740"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.739" endtime="20241121 23:34:47.740"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.738" endtime="20241121 23:34:47.740"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.725" endtime="20241121 23:34:47.740"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:47.754" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:47.749" endtime="20241121 23:34:47.755"/>
</kw>
<msg timestamp="20241121 23:34:47.755" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.748" endtime="20241121 23:34:47.755"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.755" endtime="20241121 23:34:47.755"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.748" endtime="20241121 23:34:47.755"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.756" endtime="20241121 23:34:47.756"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.756" endtime="20241121 23:34:47.756"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.755" endtime="20241121 23:34:47.756"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.748" endtime="20241121 23:34:47.756"/>
</try>
<msg timestamp="20241121 23:34:47.756" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.748" endtime="20241121 23:34:47.756"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.756" endtime="20241121 23:34:47.757"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.747" endtime="20241121 23:34:47.757"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:47.757" endtime="20241121 23:34:47.757"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:47.757" endtime="20241121 23:34:47.757"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.747" endtime="20241121 23:34:47.757"/>
</try>
<msg timestamp="20241121 23:34:47.757" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.746" endtime="20241121 23:34:47.757"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.760" endtime="20241121 23:34:47.760"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.760" endtime="20241121 23:34:47.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.760" endtime="20241121 23:34:47.760"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.759" endtime="20241121 23:34:47.760"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.758" endtime="20241121 23:34:47.760"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.746" endtime="20241121 23:34:47.761"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:47.762" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:34:47.762" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:47.761" endtime="20241121 23:34:47.762"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.761" endtime="20241121 23:34:47.762"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.761" endtime="20241121 23:34:47.762"/>
</try>
<msg timestamp="20241121 23:34:47.762" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:34:47.743" endtime="20241121 23:34:47.762"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.742" endtime="20241121 23:34:47.762"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.762" endtime="20241121 23:34:47.762"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.742" endtime="20241121 23:34:47.762"/>
</try>
<status status="PASS" starttime="20241121 23:34:47.742" endtime="20241121 23:34:47.762"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:47.778" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<msg timestamp="20241121 23:34:47.778" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</try>
<msg timestamp="20241121 23:34:47.778" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</return>
<msg timestamp="20241121 23:34:47.778" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.778" endtime="20241121 23:34:47.778"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.723" endtime="20241121 23:34:47.778"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:47.794" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</kw>
<msg timestamp="20241121 23:34:47.794" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</try>
<msg timestamp="20241121 23:34:47.794" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</try>
<msg timestamp="20241121 23:34:47.794" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.794"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.809"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.809"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:34:47.809" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:34:47.809" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</return>
<status status="PASS" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</try>
<msg timestamp="20241121 23:34:47.809" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:47.794" endtime="20241121 23:34:47.809"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:34:47.809" endtime="20241121 23:34:47.809"/>
</return>
<msg timestamp="20241121 23:34:47.809" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:34:47.723" endtime="20241121 23:34:47.809"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:34:47.825" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</return>
<msg timestamp="20241121 23:34:47.825" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</if>
<status status="PASS" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.722" endtime="20241121 23:34:47.825"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.825"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.825"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.825"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.675" endtime="20241121 23:34:47.825"/>
</try>
<status status="PASS" starttime="20241121 23:34:47.522" endtime="20241121 23:34:47.825"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.519" endtime="20241121 23:34:47.825"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.825"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:47.825" endtime="20241121 23:34:47.841"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.841"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:47.856" endtime="20241121 23:34:47.856"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.856" endtime="20241121 23:34:47.856"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.841" endtime="20241121 23:34:47.856"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.856" endtime="20241121 23:34:47.856"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.856" endtime="20241121 23:34:47.856"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.856" endtime="20241121 23:34:47.856"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.856" endtime="20241121 23:34:47.856"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:47.872" endtime="20241121 23:34:47.872"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:47.872" endtime="20241121 23:34:47.872"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:47.856" endtime="20241121 23:34:47.872"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.475" endtime="20241121 23:34:47.872"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:47.872" endtime="20241121 23:34:47.872"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:48.874" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:34:47.872" endtime="20241121 23:34:48.874"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.475" endtime="20241121 23:34:48.874"/>
</kw>
<status status="PASS" starttime="20241121 23:34:47.475" endtime="20241121 23:34:48.874"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.874" endtime="20241121 23:34:48.874"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.874" endtime="20241121 23:34:48.874"/>
</branch>
<status status="PASS" starttime="20241121 23:34:47.475" endtime="20241121 23:34:48.874"/>
</try>
<status status="PASS" starttime="20241121 23:34:47.460" endtime="20241121 23:34:48.874"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:48.874" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:34:48.874" endtime="20241121 23:34:48.874"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:48.874" endtime="20241121 23:34:48.874"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:48.874" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:34:48.874" endtime="20241121 23:34:48.874"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.874" endtime="20241121 23:34:48.874"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.889" endtime="20241121 23:34:48.889"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.874" endtime="20241121 23:34:48.889"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.874" endtime="20241121 23:34:48.891"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:48.894" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:48.893" endtime="20241121 23:34:48.895"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:48.898" endtime="20241121 23:34:48.898"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.897" endtime="20241121 23:34:48.898"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.902" endtime="20241121 23:34:48.902"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.898" endtime="20241121 23:34:48.902"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:48.929" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.929"/>
</kw>
<msg timestamp="20241121 23:34:48.929" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.929"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:48.929" endtime="20241121 23:34:48.929"/>
</return>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.929"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.929" endtime="20241121 23:34:48.929"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.929" endtime="20241121 23:34:48.929"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.929" endtime="20241121 23:34:48.929"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.929"/>
</try>
<msg timestamp="20241121 23:34:48.929" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.929"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:48.944" endtime="20241121 23:34:48.944"/>
</return>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.944"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:48.944" endtime="20241121 23:34:48.944"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:48.944" endtime="20241121 23:34:48.945"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.945"/>
</try>
<msg timestamp="20241121 23:34:48.945" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.945"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.950" endtime="20241121 23:34:48.950"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.950" endtime="20241121 23:34:48.950"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.949" endtime="20241121 23:34:48.950"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.949" endtime="20241121 23:34:48.950"/>
</if>
<status status="PASS" starttime="20241121 23:34:48.948" endtime="20241121 23:34:48.951"/>
</kw>
<status status="PASS" starttime="20241121 23:34:48.916" endtime="20241121 23:34:48.951"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:48.966" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:48.958" endtime="20241121 23:34:48.966"/>
</kw>
<msg timestamp="20241121 23:34:48.966" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.958" endtime="20241121 23:34:48.966"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:48.966" endtime="20241121 23:34:48.966"/>
</return>
<status status="PASS" starttime="20241121 23:34:48.957" endtime="20241121 23:34:48.967"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.967" endtime="20241121 23:34:48.967"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.967" endtime="20241121 23:34:48.968"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.967" endtime="20241121 23:34:48.968"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.957" endtime="20241121 23:34:48.968"/>
</try>
<msg timestamp="20241121 23:34:48.968" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.957" endtime="20241121 23:34:48.968"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:48.968" endtime="20241121 23:34:48.968"/>
</return>
<msg timestamp="20241121 23:34:48.969" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.955" endtime="20241121 23:34:48.969"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.973" endtime="20241121 23:34:48.973"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.973" endtime="20241121 23:34:48.973"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.972" endtime="20241121 23:34:48.973"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.972" endtime="20241121 23:34:48.973"/>
</if>
<status status="PASS" starttime="20241121 23:34:48.971" endtime="20241121 23:34:48.974"/>
</kw>
<status status="PASS" starttime="20241121 23:34:48.954" endtime="20241121 23:34:48.974"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:48.994" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:48.983" endtime="20241121 23:34:48.994"/>
</kw>
<msg timestamp="20241121 23:34:48.994" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.983" endtime="20241121 23:34:48.994"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</return>
<status status="PASS" starttime="20241121 23:34:48.982" endtime="20241121 23:34:48.994"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.982" endtime="20241121 23:34:48.994"/>
</try>
<msg timestamp="20241121 23:34:48.994" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.982" endtime="20241121 23:34:48.994"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</return>
<msg timestamp="20241121 23:34:48.994" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:48.978" endtime="20241121 23:34:48.994"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</if>
<status status="PASS" starttime="20241121 23:34:48.994" endtime="20241121 23:34:48.994"/>
</kw>
<status status="PASS" starttime="20241121 23:34:48.977" endtime="20241121 23:34:48.994"/>
</kw>
<status status="PASS" starttime="20241121 23:34:48.913" endtime="20241121 23:34:48.994"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:49.010" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.010"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.010"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.010"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.010"/>
</kw>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.010"/>
</branch>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.010"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.054"/>
</kw>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.054"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.054" endtime="20241121 23:34:49.054"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.054" endtime="20241121 23:34:49.054"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.054" endtime="20241121 23:34:49.054"/>
</branch>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.054"/>
</try>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.054"/>
</kw>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.054"/>
</kw>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.054"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.054" endtime="20241121 23:34:49.054"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.054" endtime="20241121 23:34:49.054"/>
</branch>
<status status="PASS" starttime="20241121 23:34:49.010" endtime="20241121 23:34:49.054"/>
</try>
<status status="PASS" starttime="20241121 23:34:48.907" endtime="20241121 23:34:49.054"/>
</kw>
<status status="PASS" starttime="20241121 23:34:48.903" endtime="20241121 23:34:49.054"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.061" endtime="20241121 23:34:49.061"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.063" endtime="20241121 23:34:49.063"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.054" endtime="20241121 23:34:49.063"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.064" endtime="20241121 23:34:49.064"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.063" endtime="20241121 23:34:49.064"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.067" endtime="20241121 23:34:49.067"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.064" endtime="20241121 23:34:49.067"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.069" endtime="20241121 23:34:49.070"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.067" endtime="20241121 23:34:49.070"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.071" endtime="20241121 23:34:49.071"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.070" endtime="20241121 23:34:49.071"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.072" endtime="20241121 23:34:49.072"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.073" endtime="20241121 23:34:49.073"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.073" endtime="20241121 23:34:49.073"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.073" endtime="20241121 23:34:49.073"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.073" endtime="20241121 23:34:49.073"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:49.072" endtime="20241121 23:34:49.073"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:49.071" endtime="20241121 23:34:49.073"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:49.079" endtime="20241121 23:34:49.079"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.082" endtime="20241121 23:34:49.082"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.074" endtime="20241121 23:34:49.082"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.083" endtime="20241121 23:34:49.083"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.084" endtime="20241121 23:34:49.084"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.083" endtime="20241121 23:34:49.084"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.084" endtime="20241121 23:34:49.084"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.084" endtime="20241121 23:34:49.084"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:49.083" endtime="20241121 23:34:49.084"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:49.082" endtime="20241121 23:34:49.084"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:49.089" endtime="20241121 23:34:49.090"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.092" endtime="20241121 23:34:49.092"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.084" endtime="20241121 23:34:49.093"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.094" endtime="20241121 23:34:49.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.093" endtime="20241121 23:34:49.094"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.094" endtime="20241121 23:34:49.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.094" endtime="20241121 23:34:49.094"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:49.094" endtime="20241121 23:34:49.094"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:49.094" endtime="20241121 23:34:49.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:49.094" endtime="20241121 23:34:49.094"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.895" endtime="20241121 23:34:49.094"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:49.094" endtime="20241121 23:34:49.094"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:54.106" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:34:49.094" endtime="20241121 23:34:54.106"/>
</kw>
<status status="PASS" starttime="20241121 23:34:48.892" endtime="20241121 23:34:54.106"/>
</kw>
<status status="PASS" starttime="20241121 23:34:48.891" endtime="20241121 23:34:54.106"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.106" endtime="20241121 23:34:54.106"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.106" endtime="20241121 23:34:54.106"/>
</branch>
<status status="PASS" starttime="20241121 23:34:48.891" endtime="20241121 23:34:54.106"/>
</try>
<status status="PASS" starttime="20241121 23:34:48.874" endtime="20241121 23:34:54.106"/>
</iter>
<status status="PASS" starttime="20241121 23:34:37.649" endtime="20241121 23:34:54.106"/>
</for>
<status status="PASS" starttime="20241121 23:34:37.649" endtime="20241121 23:34:54.106"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.649" endtime="20241121 23:34:54.106"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:54.106" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:34:54.106" endtime="20241121 23:34:54.106"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:34:54.106" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:34:54.106" endtime="20241121 23:34:54.106"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:34:54.138" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:34:54.138" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:34:54.106" endtime="20241121 23:34:54.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.138"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.138"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.106" endtime="20241121 23:34:54.138"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.637" endtime="20241121 23:34:54.138"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.138" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.138"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.138"/>
</kw>
<msg timestamp="20241121 23:34:54.138" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.138"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.153" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:34:54.153" endtime="20241121 23:34:54.153"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.155" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.153" endtime="20241121 23:34:54.155"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.153" endtime="20241121 23:34:54.155"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.156" endtime="20241121 23:34:54.156"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.155" endtime="20241121 23:34:54.156"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.153" endtime="20241121 23:34:54.156"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.156"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.156"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:54.156" endtime="20241121 23:34:54.156"/>
</return>
<msg timestamp="20241121 23:34:54.156" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.156"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.159" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:34:54.158" endtime="20241121 23:34:54.159"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.159" endtime="20241121 23:34:54.161"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:54.161" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:34:54.161" endtime="20241121 23:34:54.161"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.163" endtime="20241121 23:34:54.163"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.163" endtime="20241121 23:34:54.164"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.163" endtime="20241121 23:34:54.164"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.161" endtime="20241121 23:34:54.164"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.166" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:54.165" endtime="20241121 23:34:54.166"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.168"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.168"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.168"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.168"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:54.196" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:34:54.184" endtime="20241121 23:34:54.197"/>
</kw>
<msg timestamp="20241121 23:34:54.197" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.184" endtime="20241121 23:34:54.197"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.197" endtime="20241121 23:34:54.197"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.184" endtime="20241121 23:34:54.197"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.197" endtime="20241121 23:34:54.198"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.184" endtime="20241121 23:34:54.198"/>
</try>
<msg timestamp="20241121 23:34:54.198" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.198"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.198"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.198"/>
</try>
<msg timestamp="20241121 23:34:54.198" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.198"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.198"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.198"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:54.208" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</kw>
<msg timestamp="20241121 23:34:54.208" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</try>
<msg timestamp="20241121 23:34:54.208" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.208"/>
</return>
<msg timestamp="20241121 23:34:54.208" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.208"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.223"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.223"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.223"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.223"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.208" endtime="20241121 23:34:54.223"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.198" endtime="20241121 23:34:54.223"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:54.239" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.239"/>
</kw>
<msg timestamp="20241121 23:34:54.239" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.239"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.239"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.239"/>
</try>
<msg timestamp="20241121 23:34:54.239" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.239"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</return>
<msg timestamp="20241121 23:34:54.239" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.239"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.223" endtime="20241121 23:34:54.239"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.239"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:54.239" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.239"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.299"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.299"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.299" endtime="20241121 23:34:54.299"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.299" endtime="20241121 23:34:54.299"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.299" endtime="20241121 23:34:54.299"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.299"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.299"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.299"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.299"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.299" endtime="20241121 23:34:54.299"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.299" endtime="20241121 23:34:54.299"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.239" endtime="20241121 23:34:54.299"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.299"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.168" endtime="20241121 23:34:54.299"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.306" endtime="20241121 23:34:54.307"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.310" endtime="20241121 23:34:54.310"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.299" endtime="20241121 23:34:54.310"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.311" endtime="20241121 23:34:54.311"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.310" endtime="20241121 23:34:54.312"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.314"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.312" endtime="20241121 23:34:54.314"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.314"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.314"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.314"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.314"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.314"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.314"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.314"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.322" endtime="20241121 23:34:54.322"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.322"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.322"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:54.314" endtime="20241121 23:34:54.322"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:54.327" endtime="20241121 23:34:54.327"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.330" endtime="20241121 23:34:54.330"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.322" endtime="20241121 23:34:54.330"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.331" endtime="20241121 23:34:54.331"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.331" endtime="20241121 23:34:54.331"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.331" endtime="20241121 23:34:54.331"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.333" endtime="20241121 23:34:54.333"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.331" endtime="20241121 23:34:54.333"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:54.331" endtime="20241121 23:34:54.333"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:54.330" endtime="20241121 23:34:54.333"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:54.337" endtime="20241121 23:34:54.337"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.340" endtime="20241121 23:34:54.340"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.333" endtime="20241121 23:34:54.340"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.341" endtime="20241121 23:34:54.341"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.340" endtime="20241121 23:34:54.341"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.343" endtime="20241121 23:34:54.343"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.341" endtime="20241121 23:34:54.343"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:54.349" endtime="20241121 23:34:54.349"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.349" endtime="20241121 23:34:54.349"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.344" endtime="20241121 23:34:54.349"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.166" endtime="20241121 23:34:54.349"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.350" endtime="20241121 23:34:54.351"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:54.351" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:54.351" endtime="20241121 23:34:54.351"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.164" endtime="20241121 23:34:54.351"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.164" endtime="20241121 23:34:54.351"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.352" endtime="20241121 23:34:54.352"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.351" endtime="20241121 23:34:54.352"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.164" endtime="20241121 23:34:54.352"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.158" endtime="20241121 23:34:54.352"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.353" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:34:54.352" endtime="20241121 23:34:54.353"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.353" endtime="20241121 23:34:54.353"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:54.353" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:34:54.353" endtime="20241121 23:34:54.353"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.354" endtime="20241121 23:34:54.354"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.354" endtime="20241121 23:34:54.354"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.353" endtime="20241121 23:34:54.354"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.353" endtime="20241121 23:34:54.354"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.355" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:54.355" endtime="20241121 23:34:54.355"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.355" endtime="20241121 23:34:54.356"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:54.356" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</kw>
<msg timestamp="20241121 23:34:54.356" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.356"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.372"/>
</try>
<msg timestamp="20241121 23:34:54.372" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.372"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.372" endtime="20241121 23:34:54.372"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.372"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:54.372" endtime="20241121 23:34:54.372"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:54.372" endtime="20241121 23:34:54.372"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.372"/>
</try>
<msg timestamp="20241121 23:34:54.374" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.374"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.377" endtime="20241121 23:34:54.378"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.378" endtime="20241121 23:34:54.378"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.377" endtime="20241121 23:34:54.378"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.377" endtime="20241121 23:34:54.378"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.375" endtime="20241121 23:34:54.378"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.378"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:54.388" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:34:54.379" endtime="20241121 23:34:54.389"/>
</kw>
<msg timestamp="20241121 23:34:54.389" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.379" endtime="20241121 23:34:54.389"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.389" endtime="20241121 23:34:54.389"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.379" endtime="20241121 23:34:54.389"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.390" endtime="20241121 23:34:54.390"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.390" endtime="20241121 23:34:54.390"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.389" endtime="20241121 23:34:54.390"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.379" endtime="20241121 23:34:54.390"/>
</try>
<msg timestamp="20241121 23:34:54.391" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.379" endtime="20241121 23:34:54.391"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.391" endtime="20241121 23:34:54.392"/>
</return>
<msg timestamp="20241121 23:34:54.392" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.379" endtime="20241121 23:34:54.392"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.392"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.392"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.392"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.392"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.392"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.379" endtime="20241121 23:34:54.392"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:54.413" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.413"/>
</kw>
<msg timestamp="20241121 23:34:54.413" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.413"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.413"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.413"/>
</try>
<msg timestamp="20241121 23:34:54.413" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.413"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</return>
<msg timestamp="20241121 23:34:54.413" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.413"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.392" endtime="20241121 23:34:54.413"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.413"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:54.413" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:34:54.413" endtime="20241121 23:34:54.413"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.423" endtime="20241121 23:34:54.423"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.423" endtime="20241121 23:34:54.423"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:54.423" endtime="20241121 23:34:54.423"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.423" endtime="20241121 23:34:54.423"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.423" endtime="20241121 23:34:54.423"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:34:54.423" endtime="20241121 23:34:54.541"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.423" endtime="20241121 23:34:54.541"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.423" endtime="20241121 23:34:54.541"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.422" endtime="20241121 23:34:54.541"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.422" endtime="20241121 23:34:54.541"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.422" endtime="20241121 23:34:54.541"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.422" endtime="20241121 23:34:54.541"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.541"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.356" endtime="20241121 23:34:54.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.541" endtime="20241121 23:34:54.555"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.555" endtime="20241121 23:34:54.556"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.556"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.556" endtime="20241121 23:34:54.573"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.573"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:54.590" endtime="20241121 23:34:54.590"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.590" endtime="20241121 23:34:54.590"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.573" endtime="20241121 23:34:54.590"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.590" endtime="20241121 23:34:54.590"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.590" endtime="20241121 23:34:54.590"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.590" endtime="20241121 23:34:54.590"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.590" endtime="20241121 23:34:54.590"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.590" endtime="20241121 23:34:54.606"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.355" endtime="20241121 23:34:54.606"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:54.606" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.354" endtime="20241121 23:34:54.606"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.354" endtime="20241121 23:34:54.606"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.354" endtime="20241121 23:34:54.606"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.352" endtime="20241121 23:34:54.606"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.606" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:54.606" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.606" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.606"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.621" endtime="20241121 23:34:54.622"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.621" endtime="20241121 23:34:54.622"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.625" endtime="20241121 23:34:54.625"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.622" endtime="20241121 23:34:54.625"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.629" endtime="20241121 23:34:54.629"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.629" endtime="20241121 23:34:54.629"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.626" endtime="20241121 23:34:54.629"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.629" endtime="20241121 23:34:54.629"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.629" endtime="20241121 23:34:54.629"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.629" endtime="20241121 23:34:54.629"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.629" endtime="20241121 23:34:54.629"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.640" endtime="20241121 23:34:54.641"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.629" endtime="20241121 23:34:54.642"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.643"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:54.655" endtime="20241121 23:34:54.656"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.657"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.643" endtime="20241121 23:34:54.657"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.657"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.657"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.657"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.657"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.657"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.657"/>
</if>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.657"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.672"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.676" endtime="20241121 23:34:54.676"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.657" endtime="20241121 23:34:54.676"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:34:54.806" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:34:54.682" endtime="20241121 23:34:54.806"/>
</kw>
<msg timestamp="20241121 23:34:54.806" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.682" endtime="20241121 23:34:54.806"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.806" endtime="20241121 23:34:54.806"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.681" endtime="20241121 23:34:54.806"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.807" endtime="20241121 23:34:54.807"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.807" endtime="20241121 23:34:54.807"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.807" endtime="20241121 23:34:54.808"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.681" endtime="20241121 23:34:54.808"/>
</try>
<msg timestamp="20241121 23:34:54.808" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.681" endtime="20241121 23:34:54.808"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:34:54.808" endtime="20241121 23:34:54.808"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.679" endtime="20241121 23:34:54.808"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:34:54.809" endtime="20241121 23:34:54.809"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:54.809" endtime="20241121 23:34:54.809"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.679" endtime="20241121 23:34:54.809"/>
</try>
<msg timestamp="20241121 23:34:54.810" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.678" endtime="20241121 23:34:54.810"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.677" endtime="20241121 23:34:54.810"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.810" endtime="20241121 23:34:54.810"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.810" endtime="20241121 23:34:54.810"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:34:54.821" endtime="20241121 23:34:54.822"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.822" endtime="20241121 23:34:54.822"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.810" endtime="20241121 23:34:54.822"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.822"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.823" endtime="20241121 23:34:54.824"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:34:54.825" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:34:54.824" endtime="20241121 23:34:54.825"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.825"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.825"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.827" endtime="20241121 23:34:54.827"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.825" endtime="20241121 23:34:54.827"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.827"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.606" endtime="20241121 23:34:54.827"/>
</iter>
<status status="PASS" starttime="20241121 23:34:54.158" endtime="20241121 23:34:54.827"/>
</for>
<status status="PASS" starttime="20241121 23:34:54.156" endtime="20241121 23:34:54.827"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.156" endtime="20241121 23:34:54.827"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:34:54.828" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:34:54.827" endtime="20241121 23:34:54.828"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:34:54.829" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:34:54.829" endtime="20241121 23:34:54.829"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:34:54.858" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:34:54.859" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:34:54.829" endtime="20241121 23:34:54.859"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.859" endtime="20241121 23:34:54.860"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:34:54.860" endtime="20241121 23:34:54.860"/>
</return>
<status status="PASS" starttime="20241121 23:34:54.828" endtime="20241121 23:34:54.861"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.138" endtime="20241121 23:34:54.861"/>
</iter>
<status status="PASS" starttime="20241121 23:34:37.636" endtime="20241121 23:34:54.861"/>
</for>
<status status="PASS" starttime="20241121 23:34:37.636" endtime="20241121 23:34:54.862"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.636" endtime="20241121 23:34:54.862"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:54.862"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.862" endtime="20241121 23:34:54.862"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.862" endtime="20241121 23:34:54.862"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.597" endtime="20241121 23:34:54.862"/>
</if>
<status status="PASS" starttime="20241121 23:34:37.575" endtime="20241121 23:34:54.862"/>
</kw>
<status status="PASS" starttime="20241121 23:34:37.575" endtime="20241121 23:34:54.862"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.862" endtime="20241121 23:34:54.863"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.862" endtime="20241121 23:34:54.863"/>
</branch>
<status status="PASS" starttime="20241121 23:34:37.575" endtime="20241121 23:34:54.863"/>
</try>
<status status="PASS" starttime="20241121 23:34:37.533" endtime="20241121 23:34:54.863"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.863" endtime="20241121 23:34:54.864"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:34:54.908" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '57', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:58:46.313Z', 'createdAt': '2024-11-21T17:58:46.313Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:34:54.864" endtime="20241121 23:34:54.908"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.908" endtime="20241121 23:34:54.919"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:54.923" endtime="20241121 23:34:54.923"/>
</kw>
<msg timestamp="20241121 23:34:54.924" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.923" endtime="20241121 23:34:54.924"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.925" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:34:54.924" endtime="20241121 23:34:54.925"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.926" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.926" endtime="20241121 23:34:54.926"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.925" endtime="20241121 23:34:54.926"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.927" endtime="20241121 23:34:54.927"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.926" endtime="20241121 23:34:54.927"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.925" endtime="20241121 23:34:54.927"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.924" endtime="20241121 23:34:54.927"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.924" endtime="20241121 23:34:54.927"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:54.927" endtime="20241121 23:34:54.927"/>
</return>
<msg timestamp="20241121 23:34:54.928" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.921" endtime="20241121 23:34:54.928"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.928" endtime="20241121 23:34:54.928"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:34:54.928" endtime="20241121 23:34:54.928"/>
</return>
<status status="NOT RUN" starttime="20241121 23:34:54.928" endtime="20241121 23:34:54.929"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.928" endtime="20241121 23:34:54.929"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</kw>
<msg timestamp="20241121 23:34:54.929" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.929" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.929" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.929"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.936"/>
</return>
<msg timestamp="20241121 23:34:54.936" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:34:54.936"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:54.940" endtime="20241121 23:34:54.941"/>
</kw>
<msg timestamp="20241121 23:34:54.941" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.940" endtime="20241121 23:34:54.941"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.942" level="INFO">${values} = {'id': '57', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:58:46.313Z', 'createdAt': '2024-11-21T17:58:46.313Z'}</msg>
<status status="PASS" starttime="20241121 23:34:54.942" endtime="20241121 23:34:54.942"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.944" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.944" endtime="20241121 23:34:54.944"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.943" endtime="20241121 23:34:54.944"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.945" endtime="20241121 23:34:54.945"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.944" endtime="20241121 23:34:54.945"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.943" endtime="20241121 23:34:54.945"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.942" endtime="20241121 23:34:54.945"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.941" endtime="20241121 23:34:54.945"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:54.945" endtime="20241121 23:34:54.946"/>
</return>
<msg timestamp="20241121 23:34:54.946" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.938" endtime="20241121 23:34:54.946"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.947" endtime="20241121 23:34:54.947"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.947" endtime="20241121 23:34:54.947"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.946" endtime="20241121 23:34:54.947"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.948" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:34:54.948" endtime="20241121 23:34:54.948"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.949" level="INFO">${testCaseRun} = {'id': '57', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:58:46.313Z', 'createdAt': '2024-11-21T17:58:46.313Z'}</msg>
<status status="PASS" starttime="20241121 23:34:54.948" endtime="20241121 23:34:54.949"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.949" endtime="20241121 23:34:54.950"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:54.953" endtime="20241121 23:34:54.953"/>
</kw>
<msg timestamp="20241121 23:34:54.953" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.953" endtime="20241121 23:34:54.953"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.955" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:34:54.954" endtime="20241121 23:34:54.955"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.956" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.955" endtime="20241121 23:34:54.956"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.955" endtime="20241121 23:34:54.956"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.957" endtime="20241121 23:34:54.957"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.956" endtime="20241121 23:34:54.957"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.955" endtime="20241121 23:34:54.957"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.954" endtime="20241121 23:34:54.957"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.953" endtime="20241121 23:34:54.957"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:54.957" endtime="20241121 23:34:54.957"/>
</return>
<msg timestamp="20241121 23:34:54.958" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.952" endtime="20241121 23:34:54.958"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.959" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:34:54.958" endtime="20241121 23:34:54.959"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.959" endtime="20241121 23:34:54.960"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:34:54.963" endtime="20241121 23:34:54.963"/>
</kw>
<msg timestamp="20241121 23:34:54.963" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.963" endtime="20241121 23:34:54.963"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.964" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:34:54.964" endtime="20241121 23:34:54.964"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.965" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.965" endtime="20241121 23:34:54.965"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.964" endtime="20241121 23:34:54.965"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.965" endtime="20241121 23:34:54.965"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.965" endtime="20241121 23:34:54.965"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.964" endtime="20241121 23:34:54.966"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.964" endtime="20241121 23:34:54.966"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.963" endtime="20241121 23:34:54.966"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:34:54.966" endtime="20241121 23:34:54.966"/>
</return>
<msg timestamp="20241121 23:34:54.966" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:34:54.962" endtime="20241121 23:34:54.966"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.967" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:34:54.967" endtime="20241121 23:34:54.967"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:34:54.967" endtime="20241121 23:34:54.968"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:34:54.968" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:34:54.968" endtime="20241121 23:34:54.968"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.970" endtime="20241121 23:34:54.970"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:34:54.970" endtime="20241121 23:34:54.970"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:34:54.968" endtime="20241121 23:34:54.970"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.968" endtime="20241121 23:34:54.970"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:34:54.971" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:34:54.971" endtime="20241121 23:34:54.971"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:34:54.974" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:34:54.977" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:34:54.977" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:34:54.973" endtime="20241121 23:34:54.977"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:34:54.978" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:34:54.983" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:34:54.983" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:34:54.977" endtime="20241121 23:34:54.983"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:34:54.983" endtime="20241121 23:34:54.988"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:35:02.600" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:35:02.600" level="INFO">${page_id} = {'page_id': 'page=297245b9-acf4-4d5e-903a-513b33f44b8e', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:34:54.988" endtime="20241121 23:35:02.600"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:35:02.601" level="INFO">Switching to page {'page_id': 'page=297245b9-acf4-4d5e-903a-513b33f44b8e', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:35:02.641" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "activePage": "page=15027322-8285-41ba-97b1-eb050df04d00",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/profile",
            "id": "page=15027322-8285-41ba-97b1-eb050df04d00",
            "timestamp": 1732212242.933
          }
        ]
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "activePage": "page=b71059ea-f586-4d91-b1ac-f5aeb5a6a87c",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/profile",
            "id": "page=b71059ea-f586-4d91-b1ac-f5aeb5a6a87c",
            "timestamp": 1732212260.5
          }
        ]
      },
      {
        "type": "context",
        "id": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
        "activePage": "page=a4c69041-415c-451f-b7cb-0126a1121015",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/profile",
            "id": "page=a4c69041-415c-451f-b7cb-0126a1121015",
            "timestamp": 1732212277.838
          }
        ]
      },
      {
        "type": "context",
        "id": "context=a124a82d-d86e-4075-90dc-c1a459a017fd",
        "activePage": "page=297245b9-acf4-4d5e-903a-513b33f44b8e",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=297245b9-acf4-4d5e-903a-513b33f44b8e",
            "timestamp": 1732212295.15
          }
        ]
      }
    ],
    "activeContext": "context=a124a82d-d86e-4075-90dc-c1a459a017fd",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:35:02.650" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:35:02.601" endtime="20241121 23:35:02.650"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.971" endtime="20241121 23:35:02.651"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.971" endtime="20241121 23:35:02.651"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.652" endtime="20241121 23:35:02.653"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.652" endtime="20241121 23:35:02.653"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.660" endtime="20241121 23:35:02.660"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.654" endtime="20241121 23:35:02.660"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.666" endtime="20241121 23:35:02.666"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.673" endtime="20241121 23:35:02.673"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.661" endtime="20241121 23:35:02.673"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.677" endtime="20241121 23:35:02.677"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.673" endtime="20241121 23:35:02.677"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.684" endtime="20241121 23:35:02.684"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.678" endtime="20241121 23:35:02.684"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.688" endtime="20241121 23:35:02.689"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.684" endtime="20241121 23:35:02.689"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.691" endtime="20241121 23:35:02.691"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.689" endtime="20241121 23:35:02.691"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.693" endtime="20241121 23:35:02.694"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.694" endtime="20241121 23:35:02.694"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.694" endtime="20241121 23:35:02.694"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.695" endtime="20241121 23:35:02.695"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.695" endtime="20241121 23:35:02.695"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:02.694" endtime="20241121 23:35:02.695"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:02.691" endtime="20241121 23:35:02.695"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:02.707" endtime="20241121 23:35:02.707"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.712" endtime="20241121 23:35:02.713"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.696" endtime="20241121 23:35:02.713"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.715" endtime="20241121 23:35:02.715"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.716" endtime="20241121 23:35:02.716"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.716" endtime="20241121 23:35:02.716"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.717" endtime="20241121 23:35:02.717"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.716" endtime="20241121 23:35:02.717"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:02.715" endtime="20241121 23:35:02.717"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:02.713" endtime="20241121 23:35:02.717"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:02.727" endtime="20241121 23:35:02.728"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.733" endtime="20241121 23:35:02.733"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.718" endtime="20241121 23:35:02.733"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.735" endtime="20241121 23:35:02.736"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.733" endtime="20241121 23:35:02.736"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.739" endtime="20241121 23:35:02.740"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.736" endtime="20241121 23:35:02.740"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:02.750" endtime="20241121 23:35:02.751"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:02.751" endtime="20241121 23:35:02.751"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:02.740" endtime="20241121 23:35:02.751"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.971" endtime="20241121 23:35:02.751"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:02.752" endtime="20241121 23:35:02.753"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:03.758" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:02.753" endtime="20241121 23:35:03.758"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.971" endtime="20241121 23:35:03.758"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.970" endtime="20241121 23:35:03.758"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.758" endtime="20241121 23:35:03.758"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.758" endtime="20241121 23:35:03.758"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.970" endtime="20241121 23:35:03.758"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.967" endtime="20241121 23:35:03.758"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:03.758" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:35:03.758" endtime="20241121 23:35:03.758"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:03.758" endtime="20241121 23:35:03.758"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:03.758" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:35:03.758" endtime="20241121 23:35:03.758"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.758" endtime="20241121 23:35:03.758"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.774" endtime="20241121 23:35:03.774"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.758" endtime="20241121 23:35:03.774"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.758" endtime="20241121 23:35:03.774"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:03.781" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:03.779" endtime="20241121 23:35:03.781"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:03.785" endtime="20241121 23:35:03.785"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.783" endtime="20241121 23:35:03.785"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.788" endtime="20241121 23:35:03.789"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.787" endtime="20241121 23:35:03.789"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.793" endtime="20241121 23:35:03.793"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.790" endtime="20241121 23:35:03.793"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.801" endtime="20241121 23:35:03.801"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.801" endtime="20241121 23:35:03.801"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.797" endtime="20241121 23:35:03.801"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.801" endtime="20241121 23:35:03.801"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.801" endtime="20241121 23:35:03.801"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.816" endtime="20241121 23:35:03.816"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.801" endtime="20241121 23:35:03.816"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:03.876" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:03.838" endtime="20241121 23:35:03.876"/>
</kw>
<msg timestamp="20241121 23:35:03.877" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.837" endtime="20241121 23:35:03.877"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:03.877" endtime="20241121 23:35:03.877"/>
</return>
<status status="PASS" starttime="20241121 23:35:03.837" endtime="20241121 23:35:03.877"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.878" endtime="20241121 23:35:03.878"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.878" endtime="20241121 23:35:03.879"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.877" endtime="20241121 23:35:03.879"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.837" endtime="20241121 23:35:03.879"/>
</try>
<msg timestamp="20241121 23:35:03.880" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.836" endtime="20241121 23:35:03.880"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:03.880" endtime="20241121 23:35:03.880"/>
</return>
<status status="PASS" starttime="20241121 23:35:03.834" endtime="20241121 23:35:03.880"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:03.880" endtime="20241121 23:35:03.880"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:03.880" endtime="20241121 23:35:03.881"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.834" endtime="20241121 23:35:03.881"/>
</try>
<msg timestamp="20241121 23:35:03.881" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.833" endtime="20241121 23:35:03.881"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.886" endtime="20241121 23:35:03.886"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.886" endtime="20241121 23:35:03.886"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.885" endtime="20241121 23:35:03.887"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.885" endtime="20241121 23:35:03.887"/>
</if>
<status status="PASS" starttime="20241121 23:35:03.883" endtime="20241121 23:35:03.887"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.832" endtime="20241121 23:35:03.887"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:03.897" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.897"/>
</kw>
<msg timestamp="20241121 23:35:03.897" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.897"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.897"/>
</return>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.897"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.912"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.912"/>
</try>
<msg timestamp="20241121 23:35:03.912" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.912"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</return>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.912"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.912"/>
</try>
<msg timestamp="20241121 23:35:03.912" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.912"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</if>
<status status="PASS" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.912"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.897" endtime="20241121 23:35:03.912"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:03.928" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:03.928" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.928"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:03.928" endtime="20241121 23:35:03.928"/>
</return>
<status status="PASS" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.928"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.928" endtime="20241121 23:35:03.928"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.928" endtime="20241121 23:35:03.928"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.928" endtime="20241121 23:35:03.943"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.912" endtime="20241121 23:35:03.943"/>
</try>
<msg timestamp="20241121 23:35:03.943" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:03.893" endtime="20241121 23:35:03.943"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.943"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.943"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.943"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.943"/>
</if>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.943"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.891" endtime="20241121 23:35:03.943"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.943"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.943"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.891" endtime="20241121 23:35:03.943"/>
</try>
<status status="PASS" starttime="20241121 23:35:03.891" endtime="20241121 23:35:03.943"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:03.959" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.959"/>
</kw>
<msg timestamp="20241121 23:35:03.959" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.959"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</return>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.959"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.959"/>
</try>
<msg timestamp="20241121 23:35:03.959" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.959"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</return>
<msg timestamp="20241121 23:35:03.959" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.959"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</if>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.959"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.943" endtime="20241121 23:35:03.959"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.816" endtime="20241121 23:35:03.959"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:03.975" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.975"/>
</kw>
<msg timestamp="20241121 23:35:03.975" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.975"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:03.975" endtime="20241121 23:35:03.975"/>
</return>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.990"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.990"/>
</try>
<msg timestamp="20241121 23:35:03.990" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.990"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</return>
<msg timestamp="20241121 23:35:03.990" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.990"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</if>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.959" endtime="20241121 23:35:03.990"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:03.990" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:03.990"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:35:03.990" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:04.028"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:04.028"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.029" endtime="20241121 23:35:04.029"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.029" endtime="20241121 23:35:04.029"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.028" endtime="20241121 23:35:04.029"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:04.029"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:04.042" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:04.036" endtime="20241121 23:35:04.042"/>
</kw>
<msg timestamp="20241121 23:35:04.042" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.035" endtime="20241121 23:35:04.042"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.042" endtime="20241121 23:35:04.043"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.035" endtime="20241121 23:35:04.043"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.043" endtime="20241121 23:35:04.043"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.043" endtime="20241121 23:35:04.043"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.043" endtime="20241121 23:35:04.043"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.035" endtime="20241121 23:35:04.044"/>
</try>
<msg timestamp="20241121 23:35:04.044" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.035" endtime="20241121 23:35:04.044"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.044" endtime="20241121 23:35:04.044"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.034" endtime="20241121 23:35:04.044"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:04.044" endtime="20241121 23:35:04.044"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:04.044" endtime="20241121 23:35:04.044"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.034" endtime="20241121 23:35:04.044"/>
</try>
<msg timestamp="20241121 23:35:04.045" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.033" endtime="20241121 23:35:04.045"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.047" endtime="20241121 23:35:04.047"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.048" endtime="20241121 23:35:04.048"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.047" endtime="20241121 23:35:04.048"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.047" endtime="20241121 23:35:04.048"/>
</if>
<status status="PASS" starttime="20241121 23:35:04.046" endtime="20241121 23:35:04.048"/>
</kw>
<status status="PASS" starttime="20241121 23:35:04.033" endtime="20241121 23:35:04.048"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:04.062" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:04.056" endtime="20241121 23:35:04.062"/>
</kw>
<msg timestamp="20241121 23:35:04.062" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.056" endtime="20241121 23:35:04.062"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.056" endtime="20241121 23:35:04.063"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.056" endtime="20241121 23:35:04.063"/>
</try>
<msg timestamp="20241121 23:35:04.063" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.055" endtime="20241121 23:35:04.063"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.054" endtime="20241121 23:35:04.063"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.054" endtime="20241121 23:35:04.063"/>
</try>
<msg timestamp="20241121 23:35:04.063" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.054" endtime="20241121 23:35:04.063"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</if>
<status status="PASS" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.063"/>
</kw>
<status status="PASS" starttime="20241121 23:35:04.053" endtime="20241121 23:35:04.063"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:04.079" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:04.079" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.079"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.079"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.063" endtime="20241121 23:35:04.079"/>
</try>
<msg timestamp="20241121 23:35:04.079" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:04.051" endtime="20241121 23:35:04.079"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</if>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</kw>
<status status="PASS" starttime="20241121 23:35:04.050" endtime="20241121 23:35:04.079"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.079"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.050" endtime="20241121 23:35:04.079"/>
</try>
<status status="PASS" starttime="20241121 23:35:04.050" endtime="20241121 23:35:04.079"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:04.094" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.094"/>
</kw>
<msg timestamp="20241121 23:35:04.094" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.094"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.094"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.094"/>
</try>
<msg timestamp="20241121 23:35:04.094" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.094"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</return>
<msg timestamp="20241121 23:35:04.094" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.094"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</if>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.094"/>
</kw>
<status status="PASS" starttime="20241121 23:35:04.079" endtime="20241121 23:35:04.094"/>
</kw>
<status status="PASS" starttime="20241121 23:35:04.031" endtime="20241121 23:35:04.094"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:04.110" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</kw>
<msg timestamp="20241121 23:35:04.110" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</try>
<msg timestamp="20241121 23:35:04.110" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</try>
<msg timestamp="20241121 23:35:04.110" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</if>
<status status="PASS" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.110"/>
</kw>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.110"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:04.126" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:35:04.126" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.126"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.126"/>
</return>
<status status="PASS" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.126"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.126"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.126"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.126"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.110" endtime="20241121 23:35:04.126"/>
</try>
<msg timestamp="20241121 23:35:04.126" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:04.094" endtime="20241121 23:35:04.126"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.126"/>
</return>
<msg timestamp="20241121 23:35:04.126" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:04.030" endtime="20241121 23:35:04.126"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:35:04.126" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.126"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.126"/>
</return>
<msg timestamp="20241121 23:35:04.126" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.126"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</branch>
<status status="PASS" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</if>
<status status="PASS" starttime="20241121 23:35:04.126" endtime="20241121 23:35:04.141"/>
</kw>
<status status="PASS" starttime="20241121 23:35:04.030" endtime="20241121 23:35:04.141"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:04.141"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:04.141"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:04.141"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.990" endtime="20241121 23:35:04.141"/>
</try>
<status status="PASS" starttime="20241121 23:35:03.816" endtime="20241121 23:35:04.141"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.816" endtime="20241121 23:35:04.141"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.141"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:04.141" endtime="20241121 23:35:04.157"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.157"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:04.173" endtime="20241121 23:35:04.173"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:04.173" endtime="20241121 23:35:04.173"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:04.157" endtime="20241121 23:35:04.173"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.782" endtime="20241121 23:35:04.173"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:04.173" endtime="20241121 23:35:04.173"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:05.177" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:04.173" endtime="20241121 23:35:05.177"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.776" endtime="20241121 23:35:05.177"/>
</kw>
<status status="PASS" starttime="20241121 23:35:03.776" endtime="20241121 23:35:05.177"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.177" endtime="20241121 23:35:05.177"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.177" endtime="20241121 23:35:05.177"/>
</branch>
<status status="PASS" starttime="20241121 23:35:03.774" endtime="20241121 23:35:05.177"/>
</try>
<status status="PASS" starttime="20241121 23:35:03.758" endtime="20241121 23:35:05.177"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:05.177" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:35:05.177" endtime="20241121 23:35:05.177"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:05.177" endtime="20241121 23:35:05.177"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:05.177" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:35:05.177" endtime="20241121 23:35:05.177"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.177" endtime="20241121 23:35:05.177"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.192" endtime="20241121 23:35:05.192"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.177" endtime="20241121 23:35:05.192"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.177" endtime="20241121 23:35:05.192"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:05.198" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:05.196" endtime="20241121 23:35:05.198"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:05.200" endtime="20241121 23:35:05.200"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.199" endtime="20241121 23:35:05.200"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.202" endtime="20241121 23:35:05.202"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.201" endtime="20241121 23:35:05.202"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.211" endtime="20241121 23:35:05.211"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.203" endtime="20241121 23:35:05.211"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.213" endtime="20241121 23:35:05.213"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.213" endtime="20241121 23:35:05.213"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.212" endtime="20241121 23:35:05.213"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.232" endtime="20241121 23:35:05.232"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.230" endtime="20241121 23:35:05.232"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.236" endtime="20241121 23:35:05.236"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.233" endtime="20241121 23:35:05.236"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:05.248" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:05.247" endtime="20241121 23:35:05.248"/>
</kw>
<msg timestamp="20241121 23:35:05.248" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.247" endtime="20241121 23:35:05.248"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.248" endtime="20241121 23:35:05.248"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.247" endtime="20241121 23:35:05.248"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.248" endtime="20241121 23:35:05.248"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.248" endtime="20241121 23:35:05.248"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.248" endtime="20241121 23:35:05.248"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.246" endtime="20241121 23:35:05.248"/>
</try>
<msg timestamp="20241121 23:35:05.248" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.246" endtime="20241121 23:35:05.248"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.248" endtime="20241121 23:35:05.248"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.236" endtime="20241121 23:35:05.248"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:05.248" endtime="20241121 23:35:05.248"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:05.248" endtime="20241121 23:35:05.248"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.236" endtime="20241121 23:35:05.248"/>
</try>
<msg timestamp="20241121 23:35:05.248" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.236" endtime="20241121 23:35:05.248"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.262" endtime="20241121 23:35:05.262"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.263"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.262" endtime="20241121 23:35:05.263"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.262" endtime="20241121 23:35:05.263"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.248" endtime="20241121 23:35:05.263"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.236" endtime="20241121 23:35:05.263"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:05.263" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.263"/>
</kw>
<msg timestamp="20241121 23:35:05.263" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.263"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.278"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.278"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.278" endtime="20241121 23:35:05.278"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.278" endtime="20241121 23:35:05.278"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.278" endtime="20241121 23:35:05.278"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.278"/>
</try>
<msg timestamp="20241121 23:35:05.280" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.280"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.280" endtime="20241121 23:35:05.280"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.280"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:05.280" endtime="20241121 23:35:05.280"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:05.280" endtime="20241121 23:35:05.280"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.280"/>
</try>
<msg timestamp="20241121 23:35:05.281" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.281"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.282" endtime="20241121 23:35:05.282"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.282" endtime="20241121 23:35:05.282"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.282" endtime="20241121 23:35:05.282"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.282" endtime="20241121 23:35:05.282"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.282" endtime="20241121 23:35:05.284"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.284"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:05.294" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:05.294" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:05.284" endtime="20241121 23:35:05.294"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:05.294" endtime="20241121 23:35:05.294"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.284" endtime="20241121 23:35:05.295"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.295" endtime="20241121 23:35:05.295"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.295" endtime="20241121 23:35:05.295"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.295" endtime="20241121 23:35:05.295"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.284" endtime="20241121 23:35:05.295"/>
</try>
<msg timestamp="20241121 23:35:05.296" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.296"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.298" endtime="20241121 23:35:05.298"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.298" endtime="20241121 23:35:05.298"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.298" endtime="20241121 23:35:05.298"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.298" endtime="20241121 23:35:05.298"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.297" endtime="20241121 23:35:05.299"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.299"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.299" endtime="20241121 23:35:05.299"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.299" endtime="20241121 23:35:05.299"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.299"/>
</try>
<status status="PASS" starttime="20241121 23:35:05.263" endtime="20241121 23:35:05.299"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:05.309" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:05.304" endtime="20241121 23:35:05.309"/>
</kw>
<msg timestamp="20241121 23:35:05.309" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.303" endtime="20241121 23:35:05.309"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.309" endtime="20241121 23:35:05.309"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.303" endtime="20241121 23:35:05.310"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.310" endtime="20241121 23:35:05.310"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.310" endtime="20241121 23:35:05.310"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.310" endtime="20241121 23:35:05.310"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.303" endtime="20241121 23:35:05.310"/>
</try>
<msg timestamp="20241121 23:35:05.311" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.303" endtime="20241121 23:35:05.311"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.311" endtime="20241121 23:35:05.311"/>
</return>
<msg timestamp="20241121 23:35:05.311" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.302" endtime="20241121 23:35:05.311"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.312"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.312"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.312"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.312"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.312"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.301" endtime="20241121 23:35:05.312"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.236" endtime="20241121 23:35:05.312"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:05.328" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.328"/>
</kw>
<msg timestamp="20241121 23:35:05.328" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.328"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.328"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.328"/>
</try>
<msg timestamp="20241121 23:35:05.328" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.328"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</return>
<msg timestamp="20241121 23:35:05.328" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.328"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.312" endtime="20241121 23:35:05.328"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:05.328" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.328"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:05.344" endtime="20241121 23:35:05.344"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.344"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.344"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:35:05.344" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:35:05.344" endtime="20241121 23:35:05.367"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.344" endtime="20241121 23:35:05.367"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.368" endtime="20241121 23:35:05.368"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.368" endtime="20241121 23:35:05.368"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.367" endtime="20241121 23:35:05.368"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.344" endtime="20241121 23:35:05.368"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:05.379" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:05.375" endtime="20241121 23:35:05.380"/>
</kw>
<msg timestamp="20241121 23:35:05.380" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.374" endtime="20241121 23:35:05.380"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.380" endtime="20241121 23:35:05.380"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.374" endtime="20241121 23:35:05.380"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.380" endtime="20241121 23:35:05.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.381" endtime="20241121 23:35:05.381"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.380" endtime="20241121 23:35:05.381"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.374" endtime="20241121 23:35:05.381"/>
</try>
<msg timestamp="20241121 23:35:05.381" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.373" endtime="20241121 23:35:05.381"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.381" endtime="20241121 23:35:05.381"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.372" endtime="20241121 23:35:05.381"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:05.382" endtime="20241121 23:35:05.382"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:05.382" endtime="20241121 23:35:05.382"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.372" endtime="20241121 23:35:05.382"/>
</try>
<msg timestamp="20241121 23:35:05.382" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.372" endtime="20241121 23:35:05.382"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.385" endtime="20241121 23:35:05.385"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.385" endtime="20241121 23:35:05.385"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.384" endtime="20241121 23:35:05.385"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.384" endtime="20241121 23:35:05.385"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.383" endtime="20241121 23:35:05.385"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.372" endtime="20241121 23:35:05.385"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:05.400" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:05.394" endtime="20241121 23:35:05.400"/>
</kw>
<msg timestamp="20241121 23:35:05.400" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.393" endtime="20241121 23:35:05.400"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.400" endtime="20241121 23:35:05.400"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.393" endtime="20241121 23:35:05.401"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.401" endtime="20241121 23:35:05.401"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.401" endtime="20241121 23:35:05.401"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.401" endtime="20241121 23:35:05.401"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.393" endtime="20241121 23:35:05.401"/>
</try>
<msg timestamp="20241121 23:35:05.402" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.393" endtime="20241121 23:35:05.402"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.402" endtime="20241121 23:35:05.402"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.392" endtime="20241121 23:35:05.402"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:05.402" endtime="20241121 23:35:05.402"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:05.402" endtime="20241121 23:35:05.402"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.392" endtime="20241121 23:35:05.402"/>
</try>
<msg timestamp="20241121 23:35:05.403" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.391" endtime="20241121 23:35:05.403"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.405" endtime="20241121 23:35:05.405"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.405" endtime="20241121 23:35:05.405"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.405" endtime="20241121 23:35:05.405"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.405" endtime="20241121 23:35:05.406"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.404" endtime="20241121 23:35:05.406"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.391" endtime="20241121 23:35:05.406"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:05.412" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:05.412" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:05.406" endtime="20241121 23:35:05.412"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.406" endtime="20241121 23:35:05.412"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.406" endtime="20241121 23:35:05.412"/>
</try>
<msg timestamp="20241121 23:35:05.412" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:05.389" endtime="20241121 23:35:05.412"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.388" endtime="20241121 23:35:05.412"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.412"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.387" endtime="20241121 23:35:05.412"/>
</try>
<status status="PASS" starttime="20241121 23:35:05.387" endtime="20241121 23:35:05.412"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:05.427" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.427"/>
</kw>
<msg timestamp="20241121 23:35:05.427" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.427"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.427"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.427"/>
</try>
<msg timestamp="20241121 23:35:05.427" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.427"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</return>
<msg timestamp="20241121 23:35:05.427" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.427"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.427"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.412" endtime="20241121 23:35:05.427"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.370" endtime="20241121 23:35:05.427"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:05.443" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</kw>
<msg timestamp="20241121 23:35:05.443" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</try>
<msg timestamp="20241121 23:35:05.443" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.443"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.443"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.443"/>
</try>
<msg timestamp="20241121 23:35:05.443" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.443"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.443"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.443"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:05.458" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:35:05.458" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.458"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:05.458" endtime="20241121 23:35:05.458"/>
</return>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.458"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.458" endtime="20241121 23:35:05.458"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.458" endtime="20241121 23:35:05.458"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.458" endtime="20241121 23:35:05.458"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.443" endtime="20241121 23:35:05.458"/>
</try>
<msg timestamp="20241121 23:35:05.458" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:05.427" endtime="20241121 23:35:05.458"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:35:05.458" endtime="20241121 23:35:05.458"/>
</return>
<msg timestamp="20241121 23:35:05.458" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:05.369" endtime="20241121 23:35:05.458"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:35:05.474" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.458" endtime="20241121 23:35:05.474"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</return>
<msg timestamp="20241121 23:35:05.474" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:35:05.458" endtime="20241121 23:35:05.474"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</if>
<status status="PASS" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.369" endtime="20241121 23:35:05.474"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.474"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.474"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.474"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.328" endtime="20241121 23:35:05.474"/>
</try>
<status status="PASS" starttime="20241121 23:35:05.236" endtime="20241121 23:35:05.474"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.236" endtime="20241121 23:35:05.474"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.474"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.474" endtime="20241121 23:35:05.490"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.490"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.505" endtime="20241121 23:35:05.505"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.490" endtime="20241121 23:35:05.505"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:05.512" endtime="20241121 23:35:05.512"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:05.512" endtime="20241121 23:35:05.512"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:05.505" endtime="20241121 23:35:05.512"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.198" endtime="20241121 23:35:05.512"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:05.512" endtime="20241121 23:35:05.513"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:06.525" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:05.513" endtime="20241121 23:35:06.525"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.195" endtime="20241121 23:35:06.525"/>
</kw>
<status status="PASS" starttime="20241121 23:35:05.194" endtime="20241121 23:35:06.525"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.525" endtime="20241121 23:35:06.525"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.525" endtime="20241121 23:35:06.525"/>
</branch>
<status status="PASS" starttime="20241121 23:35:05.194" endtime="20241121 23:35:06.525"/>
</try>
<status status="PASS" starttime="20241121 23:35:05.177" endtime="20241121 23:35:06.525"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:06.525" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:35:06.525" endtime="20241121 23:35:06.525"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:06.525" endtime="20241121 23:35:06.525"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:06.525" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:35:06.525" endtime="20241121 23:35:06.525"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.525" endtime="20241121 23:35:06.525"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.541" endtime="20241121 23:35:06.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.525" endtime="20241121 23:35:06.541"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.525" endtime="20241121 23:35:06.541"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:06.541" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:06.541" endtime="20241121 23:35:06.541"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:06.541" endtime="20241121 23:35:06.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.541" endtime="20241121 23:35:06.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.541" endtime="20241121 23:35:06.541"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.541" endtime="20241121 23:35:06.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:06.600" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:06.586" endtime="20241121 23:35:06.600"/>
</kw>
<msg timestamp="20241121 23:35:06.600" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.585" endtime="20241121 23:35:06.600"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</return>
<status status="PASS" starttime="20241121 23:35:06.584" endtime="20241121 23:35:06.600"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.584" endtime="20241121 23:35:06.600"/>
</try>
<msg timestamp="20241121 23:35:06.600" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.582" endtime="20241121 23:35:06.600"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</return>
<status status="PASS" starttime="20241121 23:35:06.577" endtime="20241121 23:35:06.600"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.577" endtime="20241121 23:35:06.600"/>
</try>
<msg timestamp="20241121 23:35:06.600" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.564" endtime="20241121 23:35:06.600"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</if>
<status status="PASS" starttime="20241121 23:35:06.600" endtime="20241121 23:35:06.600"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.564" endtime="20241121 23:35:06.610"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:06.612" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</kw>
<msg timestamp="20241121 23:35:06.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</return>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</try>
<msg timestamp="20241121 23:35:06.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</return>
<msg timestamp="20241121 23:35:06.612" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.612"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.627" endtime="20241121 23:35:06.627"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.628" endtime="20241121 23:35:06.628"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.627" endtime="20241121 23:35:06.628"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.627" endtime="20241121 23:35:06.628"/>
</if>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.628"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.612" endtime="20241121 23:35:06.628"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:06.649" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:06.633" endtime="20241121 23:35:06.649"/>
</kw>
<msg timestamp="20241121 23:35:06.650" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.633" endtime="20241121 23:35:06.650"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:06.650" endtime="20241121 23:35:06.650"/>
</return>
<status status="PASS" starttime="20241121 23:35:06.633" endtime="20241121 23:35:06.650"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.650" endtime="20241121 23:35:06.650"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.651" endtime="20241121 23:35:06.651"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.650" endtime="20241121 23:35:06.651"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.633" endtime="20241121 23:35:06.651"/>
</try>
<msg timestamp="20241121 23:35:06.651" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.632" endtime="20241121 23:35:06.651"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:06.651" endtime="20241121 23:35:06.651"/>
</return>
<msg timestamp="20241121 23:35:06.651" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:06.631" endtime="20241121 23:35:06.651"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.654" endtime="20241121 23:35:06.654"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.654" endtime="20241121 23:35:06.654"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.654" endtime="20241121 23:35:06.654"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.654" endtime="20241121 23:35:06.654"/>
</if>
<status status="PASS" starttime="20241121 23:35:06.653" endtime="20241121 23:35:06.654"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.630" endtime="20241121 23:35:06.655"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.564" endtime="20241121 23:35:06.655"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:06.655" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:06.655" endtime="20241121 23:35:06.655"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.657" endtime="20241121 23:35:06.657"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.657" endtime="20241121 23:35:06.657"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:06.657" endtime="20241121 23:35:06.658"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.657" endtime="20241121 23:35:06.658"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.657" endtime="20241121 23:35:06.658"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:06.658" endtime="20241121 23:35:06.700"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.658" endtime="20241121 23:35:06.700"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.700"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.700"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.700"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.658" endtime="20241121 23:35:06.700"/>
</try>
<status status="PASS" starttime="20241121 23:35:06.656" endtime="20241121 23:35:06.700"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.656" endtime="20241121 23:35:06.700"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.655" endtime="20241121 23:35:06.700"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.700"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.700"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.655" endtime="20241121 23:35:06.700"/>
</try>
<status status="PASS" starttime="20241121 23:35:06.560" endtime="20241121 23:35:06.700"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.541" endtime="20241121 23:35:06.700"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.700"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.700"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.700"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.710"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.700" endtime="20241121 23:35:06.710"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.715" endtime="20241121 23:35:06.715"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.710" endtime="20241121 23:35:06.715"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.718" endtime="20241121 23:35:06.718"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.715" endtime="20241121 23:35:06.718"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.720" endtime="20241121 23:35:06.720"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.719" endtime="20241121 23:35:06.721"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.722" endtime="20241121 23:35:06.722"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.722" endtime="20241121 23:35:06.722"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.722" endtime="20241121 23:35:06.722"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.723" endtime="20241121 23:35:06.723"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.722" endtime="20241121 23:35:06.723"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:06.722" endtime="20241121 23:35:06.723"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:06.721" endtime="20241121 23:35:06.723"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:06.728" endtime="20241121 23:35:06.728"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.731" endtime="20241121 23:35:06.731"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.723" endtime="20241121 23:35:06.731"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.732" endtime="20241121 23:35:06.732"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.732" endtime="20241121 23:35:06.732"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.732" endtime="20241121 23:35:06.733"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.733" endtime="20241121 23:35:06.733"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.733" endtime="20241121 23:35:06.733"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:06.732" endtime="20241121 23:35:06.733"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:06.731" endtime="20241121 23:35:06.733"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:06.738" endtime="20241121 23:35:06.738"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.741" endtime="20241121 23:35:06.741"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.733" endtime="20241121 23:35:06.741"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.742" endtime="20241121 23:35:06.742"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.741" endtime="20241121 23:35:06.742"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.744" endtime="20241121 23:35:06.744"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.742" endtime="20241121 23:35:06.744"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:06.745" endtime="20241121 23:35:06.745"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:06.745" endtime="20241121 23:35:06.745"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:06.744" endtime="20241121 23:35:06.745"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.541" endtime="20241121 23:35:06.745"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:06.745" endtime="20241121 23:35:06.745"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:11.760" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:35:06.745" endtime="20241121 23:35:11.760"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.541" endtime="20241121 23:35:11.760"/>
</kw>
<status status="PASS" starttime="20241121 23:35:06.541" endtime="20241121 23:35:11.760"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.760" endtime="20241121 23:35:11.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.760" endtime="20241121 23:35:11.760"/>
</branch>
<status status="PASS" starttime="20241121 23:35:06.541" endtime="20241121 23:35:11.760"/>
</try>
<status status="PASS" starttime="20241121 23:35:06.525" endtime="20241121 23:35:11.760"/>
</iter>
<status status="PASS" starttime="20241121 23:34:54.967" endtime="20241121 23:35:11.760"/>
</for>
<status status="PASS" starttime="20241121 23:34:54.966" endtime="20241121 23:35:11.760"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.966" endtime="20241121 23:35:11.760"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:11.760" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:35:11.760" endtime="20241121 23:35:11.760"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:35:11.773" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:35:11.760" endtime="20241121 23:35:11.773"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:35:11.789" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:35:11.789" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:35:11.774" endtime="20241121 23:35:11.790"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:11.790" endtime="20241121 23:35:11.792"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:35:11.793" endtime="20241121 23:35:11.793"/>
</return>
<status status="PASS" starttime="20241121 23:35:11.760" endtime="20241121 23:35:11.794"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.958" endtime="20241121 23:35:11.795"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:11.798" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:35:11.797" endtime="20241121 23:35:11.798"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:11.800" endtime="20241121 23:35:11.800"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:11.810" endtime="20241121 23:35:11.811"/>
</kw>
<msg timestamp="20241121 23:35:11.811" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.808" endtime="20241121 23:35:11.811"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:11.811" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:11.811" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</if>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:11.811"/>
</return>
<msg timestamp="20241121 23:35:11.811" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.807" endtime="20241121 23:35:11.811"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:11.823" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:35:11.822" endtime="20241121 23:35:11.823"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:11.824" endtime="20241121 23:35:11.825"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:11.826" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:35:11.825" endtime="20241121 23:35:11.826"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.828" endtime="20241121 23:35:11.828"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.829" endtime="20241121 23:35:11.829"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.827" endtime="20241121 23:35:11.829"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.826" endtime="20241121 23:35:11.829"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:11.832" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:11.831" endtime="20241121 23:35:11.832"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:11.833" endtime="20241121 23:35:11.834"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.833" endtime="20241121 23:35:11.834"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.834" endtime="20241121 23:35:11.834"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.834" endtime="20241121 23:35:11.835"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:11.849" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:35:11.847" endtime="20241121 23:35:11.849"/>
</kw>
<msg timestamp="20241121 23:35:11.849" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.847" endtime="20241121 23:35:11.849"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:11.849" endtime="20241121 23:35:11.849"/>
</return>
<status status="PASS" starttime="20241121 23:35:11.847" endtime="20241121 23:35:11.849"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.857" endtime="20241121 23:35:11.857"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.857" endtime="20241121 23:35:11.857"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.849" endtime="20241121 23:35:11.858"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.847" endtime="20241121 23:35:11.858"/>
</try>
<msg timestamp="20241121 23:35:11.858" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.846" endtime="20241121 23:35:11.858"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:11.858" endtime="20241121 23:35:11.858"/>
</return>
<status status="PASS" starttime="20241121 23:35:11.845" endtime="20241121 23:35:11.858"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:11.859" endtime="20241121 23:35:11.859"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:11.858" endtime="20241121 23:35:11.859"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.845" endtime="20241121 23:35:11.859"/>
</try>
<msg timestamp="20241121 23:35:11.859" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.845" endtime="20241121 23:35:11.859"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.862" endtime="20241121 23:35:11.862"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.862" endtime="20241121 23:35:11.862"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.862" endtime="20241121 23:35:11.862"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.862" endtime="20241121 23:35:11.862"/>
</if>
<status status="PASS" starttime="20241121 23:35:11.861" endtime="20241121 23:35:11.863"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.842" endtime="20241121 23:35:11.863"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:11.874" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:35:11.868" endtime="20241121 23:35:11.874"/>
</kw>
<msg timestamp="20241121 23:35:11.874" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.867" endtime="20241121 23:35:11.874"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</return>
<status status="PASS" starttime="20241121 23:35:11.867" endtime="20241121 23:35:11.874"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.867" endtime="20241121 23:35:11.874"/>
</try>
<msg timestamp="20241121 23:35:11.874" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.867" endtime="20241121 23:35:11.874"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</return>
<msg timestamp="20241121 23:35:11.874" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.865" endtime="20241121 23:35:11.874"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</if>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.874"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.865" endtime="20241121 23:35:11.874"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:11.905" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.905"/>
</kw>
<msg timestamp="20241121 23:35:11.906" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.906"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:11.906" endtime="20241121 23:35:11.906"/>
</return>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.906"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.907" endtime="20241121 23:35:11.907"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.907" endtime="20241121 23:35:11.907"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.906" endtime="20241121 23:35:11.908"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.908"/>
</try>
<msg timestamp="20241121 23:35:11.908" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.908"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:11.908" endtime="20241121 23:35:11.908"/>
</return>
<msg timestamp="20241121 23:35:11.909" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.909"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.913" endtime="20241121 23:35:11.913"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.914" endtime="20241121 23:35:11.914"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.913" endtime="20241121 23:35:11.914"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.913" endtime="20241121 23:35:11.914"/>
</if>
<status status="PASS" starttime="20241121 23:35:11.911" endtime="20241121 23:35:11.914"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.874" endtime="20241121 23:35:11.915"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.839" endtime="20241121 23:35:11.915"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:11.916" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:11.915" endtime="20241121 23:35:11.916"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.918" endtime="20241121 23:35:11.918"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.918" endtime="20241121 23:35:11.918"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:11.918" endtime="20241121 23:35:11.919"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.918" endtime="20241121 23:35:11.919"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.918" endtime="20241121 23:35:11.919"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:11.919" endtime="20241121 23:35:11.958"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.919" endtime="20241121 23:35:11.958"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.958" endtime="20241121 23:35:11.958"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.958" endtime="20241121 23:35:11.958"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.958" endtime="20241121 23:35:11.959"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.919" endtime="20241121 23:35:11.959"/>
</try>
<status status="PASS" starttime="20241121 23:35:11.917" endtime="20241121 23:35:11.959"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.916" endtime="20241121 23:35:11.959"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.916" endtime="20241121 23:35:11.959"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.959" endtime="20241121 23:35:11.959"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.959" endtime="20241121 23:35:11.960"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.916" endtime="20241121 23:35:11.960"/>
</try>
<status status="PASS" starttime="20241121 23:35:11.838" endtime="20241121 23:35:11.960"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.835" endtime="20241121 23:35:11.960"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.962" endtime="20241121 23:35:11.962"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.964" endtime="20241121 23:35:11.964"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.960" endtime="20241121 23:35:11.965"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.966" endtime="20241121 23:35:11.967"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.965" endtime="20241121 23:35:11.967"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.970" endtime="20241121 23:35:11.970"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.967" endtime="20241121 23:35:11.970"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.973" endtime="20241121 23:35:11.973"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.970" endtime="20241121 23:35:11.973"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.976" endtime="20241121 23:35:11.976"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.973" endtime="20241121 23:35:11.976"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.977" endtime="20241121 23:35:11.977"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.979" endtime="20241121 23:35:11.979"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.977" endtime="20241121 23:35:11.979"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.980" endtime="20241121 23:35:11.980"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.979" endtime="20241121 23:35:11.980"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:11.977" endtime="20241121 23:35:11.980"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:11.976" endtime="20241121 23:35:11.980"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:11.986" endtime="20241121 23:35:11.986"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.989" endtime="20241121 23:35:11.990"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.980" endtime="20241121 23:35:11.990"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.991" endtime="20241121 23:35:11.992"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.992" endtime="20241121 23:35:11.992"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.992" endtime="20241121 23:35:11.992"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:11.992" endtime="20241121 23:35:11.993"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.992" endtime="20241121 23:35:11.993"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:11.992" endtime="20241121 23:35:11.993"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:11.990" endtime="20241121 23:35:11.993"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:11.999" endtime="20241121 23:35:11.999"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.002" endtime="20241121 23:35:12.002"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:11.993" endtime="20241121 23:35:12.002"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.004" endtime="20241121 23:35:12.004"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.003" endtime="20241121 23:35:12.004"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.007" endtime="20241121 23:35:12.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.004" endtime="20241121 23:35:12.007"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:12.013" endtime="20241121 23:35:12.014"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.014" endtime="20241121 23:35:12.014"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.007" endtime="20241121 23:35:12.014"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.832" endtime="20241121 23:35:12.014"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.014" endtime="20241121 23:35:12.016"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:12.016" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:12.016" endtime="20241121 23:35:12.016"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.830" endtime="20241121 23:35:12.016"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.830" endtime="20241121 23:35:12.017"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.017" endtime="20241121 23:35:12.017"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.017" endtime="20241121 23:35:12.017"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.829" endtime="20241121 23:35:12.017"/>
</try>
<status status="PASS" starttime="20241121 23:35:11.822" endtime="20241121 23:35:12.017"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.018" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:35:12.018" endtime="20241121 23:35:12.018"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.018" endtime="20241121 23:35:12.019"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:12.019" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:35:12.019" endtime="20241121 23:35:12.019"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.020" endtime="20241121 23:35:12.020"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.020" endtime="20241121 23:35:12.020"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.020" endtime="20241121 23:35:12.020"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.019" endtime="20241121 23:35:12.021"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.022" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:12.021" endtime="20241121 23:35:12.022"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:12.023" endtime="20241121 23:35:12.023"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.022" endtime="20241121 23:35:12.023"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.023" endtime="20241121 23:35:12.023"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.023" endtime="20241121 23:35:12.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:12.039" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:12.033" endtime="20241121 23:35:12.039"/>
</kw>
<msg timestamp="20241121 23:35:12.039" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.033" endtime="20241121 23:35:12.039"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:12.039" endtime="20241121 23:35:12.039"/>
</return>
<status status="PASS" starttime="20241121 23:35:12.033" endtime="20241121 23:35:12.039"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.040" endtime="20241121 23:35:12.040"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.041" endtime="20241121 23:35:12.041"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.039" endtime="20241121 23:35:12.041"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.032" endtime="20241121 23:35:12.041"/>
</try>
<msg timestamp="20241121 23:35:12.041" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.031" endtime="20241121 23:35:12.041"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:12.042" endtime="20241121 23:35:12.042"/>
</return>
<status status="PASS" starttime="20241121 23:35:12.030" endtime="20241121 23:35:12.042"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:12.042" endtime="20241121 23:35:12.042"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:12.042" endtime="20241121 23:35:12.042"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.030" endtime="20241121 23:35:12.042"/>
</try>
<msg timestamp="20241121 23:35:12.043" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.030" endtime="20241121 23:35:12.043"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.046" endtime="20241121 23:35:12.046"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.046" endtime="20241121 23:35:12.046"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.045" endtime="20241121 23:35:12.046"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.045" endtime="20241121 23:35:12.046"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.044" endtime="20241121 23:35:12.046"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.029" endtime="20241121 23:35:12.046"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:12.058" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:12.051" endtime="20241121 23:35:12.058"/>
</kw>
<msg timestamp="20241121 23:35:12.058" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.050" endtime="20241121 23:35:12.058"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</return>
<status status="PASS" starttime="20241121 23:35:12.050" endtime="20241121 23:35:12.058"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.050" endtime="20241121 23:35:12.058"/>
</try>
<msg timestamp="20241121 23:35:12.058" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.050" endtime="20241121 23:35:12.058"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</return>
<msg timestamp="20241121 23:35:12.058" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.049" endtime="20241121 23:35:12.058"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.058"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.048" endtime="20241121 23:35:12.058"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:12.089" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.090"/>
</kw>
<msg timestamp="20241121 23:35:12.090" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.090"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:12.090" endtime="20241121 23:35:12.090"/>
</return>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.090"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.090" endtime="20241121 23:35:12.091"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.091" endtime="20241121 23:35:12.091"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.090" endtime="20241121 23:35:12.091"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.091"/>
</try>
<msg timestamp="20241121 23:35:12.091" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.091"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:12.091" endtime="20241121 23:35:12.092"/>
</return>
<msg timestamp="20241121 23:35:12.092" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.092"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.094" endtime="20241121 23:35:12.095"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.095" endtime="20241121 23:35:12.095"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.094" endtime="20241121 23:35:12.095"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.094" endtime="20241121 23:35:12.095"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.093" endtime="20241121 23:35:12.095"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.058" endtime="20241121 23:35:12.095"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.027" endtime="20241121 23:35:12.096"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:12.096" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:12.096" endtime="20241121 23:35:12.096"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.098" endtime="20241121 23:35:12.098"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.098" endtime="20241121 23:35:12.098"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:12.099" endtime="20241121 23:35:12.099"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.098" endtime="20241121 23:35:12.099"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.098" endtime="20241121 23:35:12.099"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:12.100" endtime="20241121 23:35:12.249"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.099" endtime="20241121 23:35:12.249"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.249" endtime="20241121 23:35:12.249"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.250" endtime="20241121 23:35:12.250"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.249" endtime="20241121 23:35:12.250"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.099" endtime="20241121 23:35:12.250"/>
</try>
<status status="PASS" starttime="20241121 23:35:12.097" endtime="20241121 23:35:12.251"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.097" endtime="20241121 23:35:12.251"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.096" endtime="20241121 23:35:12.251"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.251" endtime="20241121 23:35:12.251"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.251" endtime="20241121 23:35:12.252"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.096" endtime="20241121 23:35:12.252"/>
</try>
<status status="PASS" starttime="20241121 23:35:12.026" endtime="20241121 23:35:12.252"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.024" endtime="20241121 23:35:12.252"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.256" endtime="20241121 23:35:12.256"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.260" endtime="20241121 23:35:12.260"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.252" endtime="20241121 23:35:12.261"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.263" endtime="20241121 23:35:12.263"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.261" endtime="20241121 23:35:12.263"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.268" endtime="20241121 23:35:12.268"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.264" endtime="20241121 23:35:12.268"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.271" endtime="20241121 23:35:12.272"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.269" endtime="20241121 23:35:12.272"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.274" endtime="20241121 23:35:12.274"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.272" endtime="20241121 23:35:12.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.276" endtime="20241121 23:35:12.277"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.277" endtime="20241121 23:35:12.277"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.277" endtime="20241121 23:35:12.277"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.278" endtime="20241121 23:35:12.278"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.278" endtime="20241121 23:35:12.278"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:12.277" endtime="20241121 23:35:12.278"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:12.275" endtime="20241121 23:35:12.278"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:12.288" endtime="20241121 23:35:12.288"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.295" endtime="20241121 23:35:12.296"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.278" endtime="20241121 23:35:12.296"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.299" endtime="20241121 23:35:12.299"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.300" endtime="20241121 23:35:12.300"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.300" endtime="20241121 23:35:12.300"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.301" endtime="20241121 23:35:12.301"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.301" endtime="20241121 23:35:12.301"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:12.299" endtime="20241121 23:35:12.302"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:12.296" endtime="20241121 23:35:12.302"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:12.308" endtime="20241121 23:35:12.308"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.308" endtime="20241121 23:35:12.308"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.302" endtime="20241121 23:35:12.308"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.308" endtime="20241121 23:35:12.308"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.308" endtime="20241121 23:35:12.308"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.326" endtime="20241121 23:35:12.326"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.324" endtime="20241121 23:35:12.326"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:12.338" endtime="20241121 23:35:12.338"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.339" endtime="20241121 23:35:12.339"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.326" endtime="20241121 23:35:12.339"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.022" endtime="20241121 23:35:12.339"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.340" endtime="20241121 23:35:12.341"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:12.342" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:12.341" endtime="20241121 23:35:12.342"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.021" endtime="20241121 23:35:12.342"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.021" endtime="20241121 23:35:12.342"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.343" endtime="20241121 23:35:12.343"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.342" endtime="20241121 23:35:12.343"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.021" endtime="20241121 23:35:12.343"/>
</try>
<status status="PASS" starttime="20241121 23:35:12.018" endtime="20241121 23:35:12.343"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.344" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:35:12.344" endtime="20241121 23:35:12.344"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.344" endtime="20241121 23:35:12.345"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:12.346" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:35:12.345" endtime="20241121 23:35:12.346"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.347" endtime="20241121 23:35:12.347"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.347" endtime="20241121 23:35:12.347"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.346" endtime="20241121 23:35:12.348"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.346" endtime="20241121 23:35:12.348"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.350" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:12.349" endtime="20241121 23:35:12.350"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:12.350" endtime="20241121 23:35:12.350"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.350" endtime="20241121 23:35:12.351"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.351" endtime="20241121 23:35:12.351"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.351" endtime="20241121 23:35:12.351"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.354" endtime="20241121 23:35:12.355"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.352" endtime="20241121 23:35:12.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.359" endtime="20241121 23:35:12.359"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.362" endtime="20241121 23:35:12.362"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.355" endtime="20241121 23:35:12.362"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.364" endtime="20241121 23:35:12.365"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.363" endtime="20241121 23:35:12.365"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.369" endtime="20241121 23:35:12.369"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.365" endtime="20241121 23:35:12.369"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.373" endtime="20241121 23:35:12.373"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.369" endtime="20241121 23:35:12.376"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.378" endtime="20241121 23:35:12.378"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.376" endtime="20241121 23:35:12.378"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.381" endtime="20241121 23:35:12.381"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.382" endtime="20241121 23:35:12.382"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.381" endtime="20241121 23:35:12.382"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.382" endtime="20241121 23:35:12.382"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.382" endtime="20241121 23:35:12.382"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:12.381" endtime="20241121 23:35:12.382"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:12.379" endtime="20241121 23:35:12.382"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:12.393" endtime="20241121 23:35:12.393"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.393" endtime="20241121 23:35:12.393"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.382" endtime="20241121 23:35:12.393"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.393" endtime="20241121 23:35:12.393"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.405" endtime="20241121 23:35:12.406"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.405" endtime="20241121 23:35:12.406"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.407" endtime="20241121 23:35:12.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.406" endtime="20241121 23:35:12.407"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:12.405" endtime="20241121 23:35:12.407"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:12.393" endtime="20241121 23:35:12.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:12.407" endtime="20241121 23:35:12.407"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.407" endtime="20241121 23:35:12.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.407" endtime="20241121 23:35:12.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:12.531" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:12.430" endtime="20241121 23:35:12.531"/>
</kw>
<msg timestamp="20241121 23:35:12.531" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.429" endtime="20241121 23:35:12.531"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:12.532" endtime="20241121 23:35:12.532"/>
</return>
<status status="PASS" starttime="20241121 23:35:12.429" endtime="20241121 23:35:12.532"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.533" endtime="20241121 23:35:12.533"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.533" endtime="20241121 23:35:12.533"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.533" endtime="20241121 23:35:12.533"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.429" endtime="20241121 23:35:12.533"/>
</try>
<msg timestamp="20241121 23:35:12.533" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.428" endtime="20241121 23:35:12.533"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:12.533" endtime="20241121 23:35:12.533"/>
</return>
<status status="PASS" starttime="20241121 23:35:12.426" endtime="20241121 23:35:12.533"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:12.533" endtime="20241121 23:35:12.533"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:12.533" endtime="20241121 23:35:12.533"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.426" endtime="20241121 23:35:12.533"/>
</try>
<msg timestamp="20241121 23:35:12.533" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.425" endtime="20241121 23:35:12.533"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.407" endtime="20241121 23:35:12.533"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.542" endtime="20241121 23:35:12.542"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.533" endtime="20241121 23:35:12.543"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:12.552" endtime="20241121 23:35:12.553"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.553" endtime="20241121 23:35:12.553"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.543" endtime="20241121 23:35:12.553"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.350" endtime="20241121 23:35:12.554"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.554" endtime="20241121 23:35:12.555"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:12.556" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:12.555" endtime="20241121 23:35:12.556"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.348" endtime="20241121 23:35:12.556"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.348" endtime="20241121 23:35:12.557"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.557" endtime="20241121 23:35:12.557"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.557" endtime="20241121 23:35:12.557"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.348" endtime="20241121 23:35:12.558"/>
</try>
<status status="PASS" starttime="20241121 23:35:12.343" endtime="20241121 23:35:12.558"/>
</iter>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:12.558"/>
</for>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:12.558"/>
</branch>
<status status="PASS" starttime="20241121 23:35:11.811" endtime="20241121 23:35:12.558"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:12.559" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:35:12.558" endtime="20241121 23:35:12.559"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:35:12.563" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:35:12.562" endtime="20241121 23:35:12.563"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:35:12.572" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:35:12.573" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:35:12.564" endtime="20241121 23:35:12.573"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.575" endtime="20241121 23:35:12.578"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:35:12.578" endtime="20241121 23:35:12.579"/>
</return>
<status status="PASS" starttime="20241121 23:35:12.560" endtime="20241121 23:35:12.579"/>
</kw>
<status status="PASS" starttime="20241121 23:35:11.796" endtime="20241121 23:35:12.579"/>
</iter>
<status status="PASS" starttime="20241121 23:34:54.958" endtime="20241121 23:35:12.580"/>
</for>
<status status="PASS" starttime="20241121 23:34:54.958" endtime="20241121 23:35:12.580"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.958" endtime="20241121 23:35:12.580"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:35:12.580"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.581" endtime="20241121 23:35:12.581"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.580" endtime="20241121 23:35:12.581"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.929" endtime="20241121 23:35:12.581"/>
</if>
<status status="PASS" starttime="20241121 23:34:54.908" endtime="20241121 23:35:12.581"/>
</kw>
<status status="PASS" starttime="20241121 23:34:54.908" endtime="20241121 23:35:12.581"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.582" endtime="20241121 23:35:12.582"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.581" endtime="20241121 23:35:12.582"/>
</branch>
<status status="PASS" starttime="20241121 23:34:54.908" endtime="20241121 23:35:12.582"/>
</try>
<status status="PASS" starttime="20241121 23:34:54.863" endtime="20241121 23:35:12.582"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.583" endtime="20241121 23:35:12.583"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:35:12.616" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '58', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:00:11.708Z', 'createdAt': '2024-11-21T18:00:11.708Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:35:12.584" endtime="20241121 23:35:12.616"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.617" endtime="20241121 23:35:12.622"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:12.627" endtime="20241121 23:35:12.627"/>
</kw>
<msg timestamp="20241121 23:35:12.627" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.626" endtime="20241121 23:35:12.627"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.629" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:35:12.628" endtime="20241121 23:35:12.629"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.630" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.630" endtime="20241121 23:35:12.630"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.630" endtime="20241121 23:35:12.630"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.631" endtime="20241121 23:35:12.631"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.631" endtime="20241121 23:35:12.631"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.629" endtime="20241121 23:35:12.631"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.628" endtime="20241121 23:35:12.631"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.627" endtime="20241121 23:35:12.632"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:12.632" endtime="20241121 23:35:12.632"/>
</return>
<msg timestamp="20241121 23:35:12.632" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.626" endtime="20241121 23:35:12.632"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.633" endtime="20241121 23:35:12.633"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:35:12.633" endtime="20241121 23:35:12.633"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:12.633" endtime="20241121 23:35:12.633"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.632" endtime="20241121 23:35:12.633"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:12.637" endtime="20241121 23:35:12.637"/>
</kw>
<msg timestamp="20241121 23:35:12.637" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.636" endtime="20241121 23:35:12.637"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.640" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:35:12.639" endtime="20241121 23:35:12.640"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.643" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.642" endtime="20241121 23:35:12.643"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.641" endtime="20241121 23:35:12.643"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.643" endtime="20241121 23:35:12.643"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.643" endtime="20241121 23:35:12.644"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.641" endtime="20241121 23:35:12.644"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.638" endtime="20241121 23:35:12.644"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.637" endtime="20241121 23:35:12.644"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:12.644" endtime="20241121 23:35:12.644"/>
</return>
<msg timestamp="20241121 23:35:12.645" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.636" endtime="20241121 23:35:12.645"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:12.648" endtime="20241121 23:35:12.649"/>
</kw>
<msg timestamp="20241121 23:35:12.649" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.648" endtime="20241121 23:35:12.649"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.650" level="INFO">${values} = {'id': '58', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:00:11.708Z', 'createdAt': '2024-11-21T18:00:11.708Z'}</msg>
<status status="PASS" starttime="20241121 23:35:12.650" endtime="20241121 23:35:12.650"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.651" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.651" endtime="20241121 23:35:12.652"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.651" endtime="20241121 23:35:12.652"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.652" endtime="20241121 23:35:12.652"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.652" endtime="20241121 23:35:12.652"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.650" endtime="20241121 23:35:12.652"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.650" endtime="20241121 23:35:12.652"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.649" endtime="20241121 23:35:12.652"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:12.652" endtime="20241121 23:35:12.653"/>
</return>
<msg timestamp="20241121 23:35:12.653" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.647" endtime="20241121 23:35:12.653"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.653" endtime="20241121 23:35:12.654"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.653" endtime="20241121 23:35:12.654"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.653" endtime="20241121 23:35:12.654"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.655" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:35:12.655" endtime="20241121 23:35:12.655"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.656" level="INFO">${testCaseRun} = {'id': '58', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:00:11.708Z', 'createdAt': '2024-11-21T18:00:11.708Z'}</msg>
<status status="PASS" starttime="20241121 23:35:12.656" endtime="20241121 23:35:12.656"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.656" endtime="20241121 23:35:12.657"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:12.661" endtime="20241121 23:35:12.661"/>
</kw>
<msg timestamp="20241121 23:35:12.661" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.660" endtime="20241121 23:35:12.661"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.662" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:35:12.662" endtime="20241121 23:35:12.662"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.663" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.663" endtime="20241121 23:35:12.663"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.662" endtime="20241121 23:35:12.663"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.663" endtime="20241121 23:35:12.663"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.663" endtime="20241121 23:35:12.663"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.662" endtime="20241121 23:35:12.664"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.661" endtime="20241121 23:35:12.664"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.661" endtime="20241121 23:35:12.664"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:12.664" endtime="20241121 23:35:12.664"/>
</return>
<msg timestamp="20241121 23:35:12.664" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.660" endtime="20241121 23:35:12.664"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.666" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:35:12.665" endtime="20241121 23:35:12.666"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.666" endtime="20241121 23:35:12.667"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:12.670" endtime="20241121 23:35:12.670"/>
</kw>
<msg timestamp="20241121 23:35:12.670" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.669" endtime="20241121 23:35:12.670"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.671" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:35:12.671" endtime="20241121 23:35:12.671"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.672" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.671" endtime="20241121 23:35:12.672"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.671" endtime="20241121 23:35:12.672"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.673" endtime="20241121 23:35:12.673"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.672" endtime="20241121 23:35:12.674"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.671" endtime="20241121 23:35:12.674"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.670" endtime="20241121 23:35:12.674"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.670" endtime="20241121 23:35:12.674"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:12.674" endtime="20241121 23:35:12.674"/>
</return>
<msg timestamp="20241121 23:35:12.676" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:12.669" endtime="20241121 23:35:12.676"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.677" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:35:12.677" endtime="20241121 23:35:12.677"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:12.678" endtime="20241121 23:35:12.678"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:12.679" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:35:12.678" endtime="20241121 23:35:12.679"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.679" endtime="20241121 23:35:12.679"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:12.679" endtime="20241121 23:35:12.680"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:12.679" endtime="20241121 23:35:12.680"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.679" endtime="20241121 23:35:12.680"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:12.681" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:35:12.681" endtime="20241121 23:35:12.681"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:35:12.681" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:35:12.681" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:35:12.681" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:35:12.681" endtime="20241121 23:35:12.681"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:35:12.681" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:35:12.698" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:35:12.698" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:35:12.681" endtime="20241121 23:35:12.698"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:35:12.699" endtime="20241121 23:35:12.699"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:35:20.357" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:35:20.358" level="INFO">${page_id} = {'page_id': 'page=9eb7a3d4-13c5-4507-adf1-fcf9f202d978', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:35:12.699" endtime="20241121 23:35:20.358"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:35:20.359" level="INFO">Switching to page {'page_id': 'page=9eb7a3d4-13c5-4507-adf1-fcf9f202d978', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:35:20.384" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "activePage": "page=15027322-8285-41ba-97b1-eb050df04d00",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/profile",
            "id": "page=15027322-8285-41ba-97b1-eb050df04d00",
            "timestamp": 1732212242.933
          }
        ]
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=a124a82d-d86e-4075-90dc-c1a459a017fd",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=75b84b73-7ea3-407c-8055-c3cfa95050da",
        "activePage": "page=9eb7a3d4-13c5-4507-adf1-fcf9f202d978",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=9eb7a3d4-13c5-4507-adf1-fcf9f202d978",
            "timestamp": 1732212312.88
          }
        ]
      }
    ],
    "activeContext": "context=75b84b73-7ea3-407c-8055-c3cfa95050da",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:35:20.391" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:35:20.358" endtime="20241121 23:35:20.391"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.681" endtime="20241121 23:35:20.392"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.681" endtime="20241121 23:35:20.392"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.393" endtime="20241121 23:35:20.393"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.392" endtime="20241121 23:35:20.393"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.396" endtime="20241121 23:35:20.396"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.393" endtime="20241121 23:35:20.397"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.400" endtime="20241121 23:35:20.400"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.402" endtime="20241121 23:35:20.402"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.397" endtime="20241121 23:35:20.402"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.404" endtime="20241121 23:35:20.404"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.402" endtime="20241121 23:35:20.404"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.408" endtime="20241121 23:35:20.408"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.404" endtime="20241121 23:35:20.408"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.410" endtime="20241121 23:35:20.410"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.408" endtime="20241121 23:35:20.410"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.412" endtime="20241121 23:35:20.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.411" endtime="20241121 23:35:20.412"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.413" endtime="20241121 23:35:20.413"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.414" endtime="20241121 23:35:20.414"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.413" endtime="20241121 23:35:20.414"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.414" endtime="20241121 23:35:20.415"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.414" endtime="20241121 23:35:20.415"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:20.413" endtime="20241121 23:35:20.415"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:20.412" endtime="20241121 23:35:20.415"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:20.421" endtime="20241121 23:35:20.421"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.425" endtime="20241121 23:35:20.425"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.415" endtime="20241121 23:35:20.425"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.426" endtime="20241121 23:35:20.426"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.427" endtime="20241121 23:35:20.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.427" endtime="20241121 23:35:20.427"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.427" endtime="20241121 23:35:20.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.427" endtime="20241121 23:35:20.427"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:20.427" endtime="20241121 23:35:20.428"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:20.425" endtime="20241121 23:35:20.428"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:20.434" endtime="20241121 23:35:20.435"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.438" endtime="20241121 23:35:20.438"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.428" endtime="20241121 23:35:20.438"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.439" endtime="20241121 23:35:20.439"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.438" endtime="20241121 23:35:20.440"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.442" endtime="20241121 23:35:20.442"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.440" endtime="20241121 23:35:20.442"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:20.449" endtime="20241121 23:35:20.449"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:20.449" endtime="20241121 23:35:20.449"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:20.442" endtime="20241121 23:35:20.449"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.681" endtime="20241121 23:35:20.449"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:20.450" endtime="20241121 23:35:20.450"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:21.463" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:20.450" endtime="20241121 23:35:21.464"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.680" endtime="20241121 23:35:21.464"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.680" endtime="20241121 23:35:21.464"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.464" endtime="20241121 23:35:21.464"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.464" endtime="20241121 23:35:21.464"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.680" endtime="20241121 23:35:21.464"/>
</try>
<status status="PASS" starttime="20241121 23:35:12.677" endtime="20241121 23:35:21.464"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:21.464" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:35:21.464" endtime="20241121 23:35:21.464"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:21.464" endtime="20241121 23:35:21.464"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:21.464" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:35:21.464" endtime="20241121 23:35:21.464"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.479" endtime="20241121 23:35:21.479"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.479" endtime="20241121 23:35:21.479"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.464" endtime="20241121 23:35:21.479"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.464" endtime="20241121 23:35:21.479"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:21.489" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:21.479" endtime="20241121 23:35:21.489"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:21.492" endtime="20241121 23:35:21.492"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.491" endtime="20241121 23:35:21.492"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.492" endtime="20241121 23:35:21.493"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.492" endtime="20241121 23:35:21.493"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.497" endtime="20241121 23:35:21.497"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.493" endtime="20241121 23:35:21.497"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.502" endtime="20241121 23:35:21.502"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.504" endtime="20241121 23:35:21.504"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.497" endtime="20241121 23:35:21.505"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.506" endtime="20241121 23:35:21.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.505" endtime="20241121 23:35:21.506"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.506" endtime="20241121 23:35:21.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.506" endtime="20241121 23:35:21.506"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:21.537" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:21.517" endtime="20241121 23:35:21.537"/>
</kw>
<msg timestamp="20241121 23:35:21.537" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.517" endtime="20241121 23:35:21.537"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.537" endtime="20241121 23:35:21.537"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.517" endtime="20241121 23:35:21.537"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.537" endtime="20241121 23:35:21.537"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.537" endtime="20241121 23:35:21.537"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.537" endtime="20241121 23:35:21.537"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.517" endtime="20241121 23:35:21.537"/>
</try>
<msg timestamp="20241121 23:35:21.537" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.517" endtime="20241121 23:35:21.537"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.537" endtime="20241121 23:35:21.537"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.517" endtime="20241121 23:35:21.537"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:21.537" endtime="20241121 23:35:21.537"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:21.537" endtime="20241121 23:35:21.537"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.517" endtime="20241121 23:35:21.537"/>
</try>
<msg timestamp="20241121 23:35:21.537" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.517" endtime="20241121 23:35:21.537"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.547" endtime="20241121 23:35:21.547"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.547" endtime="20241121 23:35:21.547"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.547" endtime="20241121 23:35:21.548"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.547" endtime="20241121 23:35:21.548"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.546" endtime="20241121 23:35:21.548"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.515" endtime="20241121 23:35:21.548"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:21.562" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:21.557" endtime="20241121 23:35:21.562"/>
</kw>
<msg timestamp="20241121 23:35:21.563" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.556" endtime="20241121 23:35:21.563"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.563" endtime="20241121 23:35:21.563"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.556" endtime="20241121 23:35:21.563"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.563" endtime="20241121 23:35:21.563"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.564" endtime="20241121 23:35:21.564"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.563" endtime="20241121 23:35:21.564"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.556" endtime="20241121 23:35:21.564"/>
</try>
<msg timestamp="20241121 23:35:21.564" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.556" endtime="20241121 23:35:21.564"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.564" endtime="20241121 23:35:21.564"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.555" endtime="20241121 23:35:21.564"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:21.565" endtime="20241121 23:35:21.565"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:21.565" endtime="20241121 23:35:21.565"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.554" endtime="20241121 23:35:21.565"/>
</try>
<msg timestamp="20241121 23:35:21.565" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.554" endtime="20241121 23:35:21.565"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.568" endtime="20241121 23:35:21.568"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.568" endtime="20241121 23:35:21.568"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.567" endtime="20241121 23:35:21.568"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.567" endtime="20241121 23:35:21.568"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.566" endtime="20241121 23:35:21.568"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.554" endtime="20241121 23:35:21.568"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:21.580" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:21.580" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:21.569" endtime="20241121 23:35:21.580"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.569" endtime="20241121 23:35:21.580"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.569" endtime="20241121 23:35:21.580"/>
</try>
<msg timestamp="20241121 23:35:21.580" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:21.551" endtime="20241121 23:35:21.580"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.550" endtime="20241121 23:35:21.580"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.580" endtime="20241121 23:35:21.580"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.550" endtime="20241121 23:35:21.580"/>
</try>
<status status="PASS" starttime="20241121 23:35:21.550" endtime="20241121 23:35:21.580"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:21.595" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</kw>
<msg timestamp="20241121 23:35:21.595" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</try>
<msg timestamp="20241121 23:35:21.595" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</return>
<msg timestamp="20241121 23:35:21.595" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.595"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.609" endtime="20241121 23:35:21.609"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.609" endtime="20241121 23:35:21.609"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.608" endtime="20241121 23:35:21.609"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.608" endtime="20241121 23:35:21.609"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.609"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.595" endtime="20241121 23:35:21.609"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.513" endtime="20241121 23:35:21.609"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:21.630" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:35:21.614" endtime="20241121 23:35:21.630"/>
</kw>
<msg timestamp="20241121 23:35:21.630" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.614" endtime="20241121 23:35:21.630"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.614" endtime="20241121 23:35:21.630"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.614" endtime="20241121 23:35:21.630"/>
</try>
<msg timestamp="20241121 23:35:21.630" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.613" endtime="20241121 23:35:21.630"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</return>
<msg timestamp="20241121 23:35:21.630" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.612" endtime="20241121 23:35:21.630"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.611" endtime="20241121 23:35:21.630"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:21.630" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.630"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:35:21.630" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.670"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.670"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.671" endtime="20241121 23:35:21.671"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.671" endtime="20241121 23:35:21.671"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.670" endtime="20241121 23:35:21.671"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.671"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:21.684" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:21.678" endtime="20241121 23:35:21.685"/>
</kw>
<msg timestamp="20241121 23:35:21.685" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.677" endtime="20241121 23:35:21.685"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.685" endtime="20241121 23:35:21.685"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.677" endtime="20241121 23:35:21.685"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.686" endtime="20241121 23:35:21.686"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.686" endtime="20241121 23:35:21.686"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.685" endtime="20241121 23:35:21.686"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.677" endtime="20241121 23:35:21.686"/>
</try>
<msg timestamp="20241121 23:35:21.686" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.677" endtime="20241121 23:35:21.687"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.687" endtime="20241121 23:35:21.687"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.676" endtime="20241121 23:35:21.687"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:21.687" endtime="20241121 23:35:21.687"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:21.687" endtime="20241121 23:35:21.687"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.675" endtime="20241121 23:35:21.687"/>
</try>
<msg timestamp="20241121 23:35:21.687" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.675" endtime="20241121 23:35:21.688"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.690" endtime="20241121 23:35:21.690"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.690" endtime="20241121 23:35:21.690"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.690" endtime="20241121 23:35:21.690"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.690" endtime="20241121 23:35:21.691"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.689" endtime="20241121 23:35:21.691"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.675" endtime="20241121 23:35:21.691"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:21.707" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:21.702" endtime="20241121 23:35:21.707"/>
</kw>
<msg timestamp="20241121 23:35:21.707" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.701" endtime="20241121 23:35:21.707"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.707" endtime="20241121 23:35:21.707"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.701" endtime="20241121 23:35:21.707"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.708" endtime="20241121 23:35:21.708"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.708" endtime="20241121 23:35:21.708"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.708" endtime="20241121 23:35:21.708"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.701" endtime="20241121 23:35:21.708"/>
</try>
<msg timestamp="20241121 23:35:21.709" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.700" endtime="20241121 23:35:21.709"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.709" endtime="20241121 23:35:21.709"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.699" endtime="20241121 23:35:21.709"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:21.709" endtime="20241121 23:35:21.709"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:21.709" endtime="20241121 23:35:21.709"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.699" endtime="20241121 23:35:21.709"/>
</try>
<msg timestamp="20241121 23:35:21.710" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.698" endtime="20241121 23:35:21.710"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.712" endtime="20241121 23:35:21.713"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.713" endtime="20241121 23:35:21.713"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.712" endtime="20241121 23:35:21.713"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.712" endtime="20241121 23:35:21.713"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.711" endtime="20241121 23:35:21.713"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.698" endtime="20241121 23:35:21.714"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:21.714" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:21.714" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:21.714" endtime="20241121 23:35:21.714"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:21.714" endtime="20241121 23:35:21.714"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.714" endtime="20241121 23:35:21.714"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.714" endtime="20241121 23:35:21.714"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.714" endtime="20241121 23:35:21.714"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.714" endtime="20241121 23:35:21.714"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.714" endtime="20241121 23:35:21.714"/>
</try>
<msg timestamp="20241121 23:35:21.714" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:21.695" endtime="20241121 23:35:21.714"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.730" endtime="20241121 23:35:21.730"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.730" endtime="20241121 23:35:21.730"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.729" endtime="20241121 23:35:21.730"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.729" endtime="20241121 23:35:21.730"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.714" endtime="20241121 23:35:21.731"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.694" endtime="20241121 23:35:21.731"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.731" endtime="20241121 23:35:21.731"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.731" endtime="20241121 23:35:21.732"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.694" endtime="20241121 23:35:21.732"/>
</try>
<status status="PASS" starttime="20241121 23:35:21.693" endtime="20241121 23:35:21.732"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:21.732" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</kw>
<msg timestamp="20241121 23:35:21.732" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</try>
<msg timestamp="20241121 23:35:21.732" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</return>
<msg timestamp="20241121 23:35:21.732" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.732"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.747"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.747"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.747"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.747"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.747"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.732" endtime="20241121 23:35:21.747"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.672" endtime="20241121 23:35:21.747"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:21.764" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</kw>
<msg timestamp="20241121 23:35:21.764" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</try>
<msg timestamp="20241121 23:35:21.764" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</try>
<msg timestamp="20241121 23:35:21.764" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.764"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.764"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:21.782" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:35:21.782" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.782"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:21.782" endtime="20241121 23:35:21.782"/>
</return>
<status status="PASS" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.782"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.782" endtime="20241121 23:35:21.782"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.782" endtime="20241121 23:35:21.782"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.782" endtime="20241121 23:35:21.782"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.764" endtime="20241121 23:35:21.782"/>
</try>
<msg timestamp="20241121 23:35:21.782" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:21.747" endtime="20241121 23:35:21.782"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:35:21.782" endtime="20241121 23:35:21.782"/>
</return>
<msg timestamp="20241121 23:35:21.782" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:21.672" endtime="20241121 23:35:21.782"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:35:21.782" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.782" endtime="20241121 23:35:21.782"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:21.782" endtime="20241121 23:35:21.782"/>
</return>
<msg timestamp="20241121 23:35:21.782" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:35:21.782" endtime="20241121 23:35:21.782"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.802" endtime="20241121 23:35:21.802"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.803" endtime="20241121 23:35:21.803"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.802" endtime="20241121 23:35:21.803"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.802" endtime="20241121 23:35:21.803"/>
</if>
<status status="PASS" starttime="20241121 23:35:21.800" endtime="20241121 23:35:21.803"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.671" endtime="20241121 23:35:21.803"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.803"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.804"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.804"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.804" endtime="20241121 23:35:21.804"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.804" endtime="20241121 23:35:21.804"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.630" endtime="20241121 23:35:21.804"/>
</try>
<status status="PASS" starttime="20241121 23:35:21.506" endtime="20241121 23:35:21.804"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.506" endtime="20241121 23:35:21.805"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.806" endtime="20241121 23:35:21.806"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.805" endtime="20241121 23:35:21.806"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.807" endtime="20241121 23:35:21.807"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.808" endtime="20241121 23:35:21.808"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.807" endtime="20241121 23:35:21.808"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.808" endtime="20241121 23:35:21.808"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.808" endtime="20241121 23:35:21.808"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:21.807" endtime="20241121 23:35:21.808"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:21.806" endtime="20241121 23:35:21.808"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:21.814" endtime="20241121 23:35:21.814"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.817" endtime="20241121 23:35:21.817"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.809" endtime="20241121 23:35:21.817"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.819" endtime="20241121 23:35:21.819"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.819" endtime="20241121 23:35:21.819"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.819" endtime="20241121 23:35:21.820"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.820" endtime="20241121 23:35:21.820"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.820" endtime="20241121 23:35:21.820"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:21.819" endtime="20241121 23:35:21.820"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:21.817" endtime="20241121 23:35:21.820"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:21.826" endtime="20241121 23:35:21.826"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.830" endtime="20241121 23:35:21.830"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.820" endtime="20241121 23:35:21.830"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.831" endtime="20241121 23:35:21.832"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.830" endtime="20241121 23:35:21.832"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.834" endtime="20241121 23:35:21.834"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.832" endtime="20241121 23:35:21.834"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:21.842" endtime="20241121 23:35:21.842"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:21.842" endtime="20241121 23:35:21.843"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:21.835" endtime="20241121 23:35:21.843"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.489" endtime="20241121 23:35:21.843"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:21.843" endtime="20241121 23:35:21.844"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:22.857" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:21.844" endtime="20241121 23:35:22.857"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.479" endtime="20241121 23:35:22.857"/>
</kw>
<status status="PASS" starttime="20241121 23:35:21.479" endtime="20241121 23:35:22.857"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.857" endtime="20241121 23:35:22.857"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.857" endtime="20241121 23:35:22.857"/>
</branch>
<status status="PASS" starttime="20241121 23:35:21.479" endtime="20241121 23:35:22.857"/>
</try>
<status status="PASS" starttime="20241121 23:35:21.464" endtime="20241121 23:35:22.857"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:22.857" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:35:22.857" endtime="20241121 23:35:22.857"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:22.857" endtime="20241121 23:35:22.857"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:22.857" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:35:22.857" endtime="20241121 23:35:22.857"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.857" endtime="20241121 23:35:22.857"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.873" endtime="20241121 23:35:22.873"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.857" endtime="20241121 23:35:22.873"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.857" endtime="20241121 23:35:22.873"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:22.881" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:22.878" endtime="20241121 23:35:22.881"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:22.884" endtime="20241121 23:35:22.884"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.882" endtime="20241121 23:35:22.884"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.888" endtime="20241121 23:35:22.889"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.886" endtime="20241121 23:35:22.889"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.900" endtime="20241121 23:35:22.900"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.890" endtime="20241121 23:35:22.901"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.902" endtime="20241121 23:35:22.902"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.902" endtime="20241121 23:35:22.902"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.902" endtime="20241121 23:35:22.902"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.913" endtime="20241121 23:35:22.913"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.913" endtime="20241121 23:35:22.913"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.913" endtime="20241121 23:35:22.913"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.913" endtime="20241121 23:35:22.913"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:22.948" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:22.941" endtime="20241121 23:35:22.949"/>
</kw>
<msg timestamp="20241121 23:35:22.949" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:22.940" endtime="20241121 23:35:22.949"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:22.949" endtime="20241121 23:35:22.950"/>
</return>
<status status="PASS" starttime="20241121 23:35:22.940" endtime="20241121 23:35:22.950"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.951" endtime="20241121 23:35:22.951"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.951" endtime="20241121 23:35:22.951"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.950" endtime="20241121 23:35:22.951"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.940" endtime="20241121 23:35:22.951"/>
</try>
<msg timestamp="20241121 23:35:22.952" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:22.939" endtime="20241121 23:35:22.952"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:22.952" endtime="20241121 23:35:22.952"/>
</return>
<status status="PASS" starttime="20241121 23:35:22.938" endtime="20241121 23:35:22.952"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:22.952" endtime="20241121 23:35:22.952"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:22.952" endtime="20241121 23:35:22.953"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.937" endtime="20241121 23:35:22.953"/>
</try>
<msg timestamp="20241121 23:35:22.953" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:22.937" endtime="20241121 23:35:22.953"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.956" endtime="20241121 23:35:22.956"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.957" endtime="20241121 23:35:22.957"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.956" endtime="20241121 23:35:22.957"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.956" endtime="20241121 23:35:22.957"/>
</if>
<status status="PASS" starttime="20241121 23:35:22.955" endtime="20241121 23:35:22.957"/>
</kw>
<status status="PASS" starttime="20241121 23:35:22.936" endtime="20241121 23:35:22.957"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:22.979" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:22.971" endtime="20241121 23:35:22.979"/>
</kw>
<msg timestamp="20241121 23:35:22.979" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:22.970" endtime="20241121 23:35:22.979"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:22.979" endtime="20241121 23:35:22.980"/>
</return>
<status status="PASS" starttime="20241121 23:35:22.970" endtime="20241121 23:35:22.980"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.970" endtime="20241121 23:35:22.980"/>
</try>
<msg timestamp="20241121 23:35:22.980" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:22.969" endtime="20241121 23:35:22.980"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</return>
<status status="PASS" starttime="20241121 23:35:22.967" endtime="20241121 23:35:22.980"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.967" endtime="20241121 23:35:22.980"/>
</try>
<msg timestamp="20241121 23:35:22.980" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:22.967" endtime="20241121 23:35:22.980"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</if>
<status status="PASS" starttime="20241121 23:35:22.980" endtime="20241121 23:35:22.980"/>
</kw>
<status status="PASS" starttime="20241121 23:35:22.966" endtime="20241121 23:35:22.980"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:22.996" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:23.011" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:22.980" endtime="20241121 23:35:23.011"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:23.011" endtime="20241121 23:35:23.011"/>
</return>
<status status="PASS" starttime="20241121 23:35:22.980" endtime="20241121 23:35:23.011"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.011" endtime="20241121 23:35:23.011"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.011" endtime="20241121 23:35:23.011"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.011" endtime="20241121 23:35:23.011"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.980" endtime="20241121 23:35:23.011"/>
</try>
<msg timestamp="20241121 23:35:23.011" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:22.963" endtime="20241121 23:35:23.011"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.011" endtime="20241121 23:35:23.011"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.027"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.011" endtime="20241121 23:35:23.027"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.011" endtime="20241121 23:35:23.027"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.011" endtime="20241121 23:35:23.027"/>
</kw>
<status status="PASS" starttime="20241121 23:35:22.962" endtime="20241121 23:35:23.027"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.027"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.027"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.961" endtime="20241121 23:35:23.027"/>
</try>
<status status="PASS" starttime="20241121 23:35:22.960" endtime="20241121 23:35:23.027"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:23.043" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.043"/>
</kw>
<msg timestamp="20241121 23:35:23.043" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.043"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.043" endtime="20241121 23:35:23.043"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.043"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.043" endtime="20241121 23:35:23.043"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.043" endtime="20241121 23:35:23.043"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.043" endtime="20241121 23:35:23.043"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.043"/>
</try>
<msg timestamp="20241121 23:35:23.043" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.043"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.043" endtime="20241121 23:35:23.043"/>
</return>
<msg timestamp="20241121 23:35:23.043" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.043"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.058"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.058"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.058"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.058"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.043" endtime="20241121 23:35:23.058"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.027" endtime="20241121 23:35:23.058"/>
</kw>
<status status="PASS" starttime="20241121 23:35:22.933" endtime="20241121 23:35:23.058"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:23.089" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.089"/>
</kw>
<msg timestamp="20241121 23:35:23.089" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.089"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.089"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.089"/>
</try>
<msg timestamp="20241121 23:35:23.089" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.089"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</return>
<msg timestamp="20241121 23:35:23.089" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.089"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.089" endtime="20241121 23:35:23.089"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.058" endtime="20241121 23:35:23.105"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:23.105" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.105"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.105"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.105"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.105"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.105"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.105"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.105"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:35:23.105" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.141"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.141"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.141" endtime="20241121 23:35:23.141"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.142" endtime="20241121 23:35:23.142"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.141" endtime="20241121 23:35:23.142"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.142"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:23.157" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:23.151" endtime="20241121 23:35:23.157"/>
</kw>
<msg timestamp="20241121 23:35:23.157" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.150" endtime="20241121 23:35:23.157"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.157" endtime="20241121 23:35:23.157"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.150" endtime="20241121 23:35:23.158"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.158" endtime="20241121 23:35:23.158"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.158" endtime="20241121 23:35:23.158"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.158" endtime="20241121 23:35:23.158"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.150" endtime="20241121 23:35:23.159"/>
</try>
<msg timestamp="20241121 23:35:23.159" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.149" endtime="20241121 23:35:23.159"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.159" endtime="20241121 23:35:23.159"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.148" endtime="20241121 23:35:23.159"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:23.159" endtime="20241121 23:35:23.159"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:23.159" endtime="20241121 23:35:23.159"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.148" endtime="20241121 23:35:23.159"/>
</try>
<msg timestamp="20241121 23:35:23.159" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.147" endtime="20241121 23:35:23.159"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.163" endtime="20241121 23:35:23.163"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.163" endtime="20241121 23:35:23.163"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.162" endtime="20241121 23:35:23.163"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.162" endtime="20241121 23:35:23.163"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.159" endtime="20241121 23:35:23.163"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.146" endtime="20241121 23:35:23.164"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:23.179" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:23.173" endtime="20241121 23:35:23.179"/>
</kw>
<msg timestamp="20241121 23:35:23.179" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.173" endtime="20241121 23:35:23.180"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.180" endtime="20241121 23:35:23.180"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.173" endtime="20241121 23:35:23.180"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.180" endtime="20241121 23:35:23.180"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.181" endtime="20241121 23:35:23.181"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.180" endtime="20241121 23:35:23.181"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.173" endtime="20241121 23:35:23.181"/>
</try>
<msg timestamp="20241121 23:35:23.181" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.172" endtime="20241121 23:35:23.181"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.181" endtime="20241121 23:35:23.181"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.171" endtime="20241121 23:35:23.181"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:23.182" endtime="20241121 23:35:23.182"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:23.182" endtime="20241121 23:35:23.182"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.171" endtime="20241121 23:35:23.182"/>
</try>
<msg timestamp="20241121 23:35:23.182" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.171" endtime="20241121 23:35:23.182"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.185" endtime="20241121 23:35:23.185"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.185" endtime="20241121 23:35:23.185"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.185" endtime="20241121 23:35:23.185"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.184" endtime="20241121 23:35:23.185"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.183" endtime="20241121 23:35:23.186"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.170" endtime="20241121 23:35:23.186"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:23.195" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:23.195" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:23.186" endtime="20241121 23:35:23.195"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.186" endtime="20241121 23:35:23.195"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.186" endtime="20241121 23:35:23.195"/>
</try>
<msg timestamp="20241121 23:35:23.195" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:23.168" endtime="20241121 23:35:23.195"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.166" endtime="20241121 23:35:23.195"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.195"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.166" endtime="20241121 23:35:23.195"/>
</try>
<status status="PASS" starttime="20241121 23:35:23.166" endtime="20241121 23:35:23.195"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:23.211" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.211"/>
</kw>
<msg timestamp="20241121 23:35:23.211" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.211"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.211"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.211"/>
</try>
<msg timestamp="20241121 23:35:23.211" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.211"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</return>
<msg timestamp="20241121 23:35:23.211" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.211"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.211"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.195" endtime="20241121 23:35:23.211"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.144" endtime="20241121 23:35:23.211"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:23.227" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</kw>
<msg timestamp="20241121 23:35:23.227" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.227"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.227"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.227"/>
</try>
<msg timestamp="20241121 23:35:23.227" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.227"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.227"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.227"/>
</try>
<msg timestamp="20241121 23:35:23.227" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.227"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.227"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.227"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:23.242" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:35:23.242" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.242"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:23.242" endtime="20241121 23:35:23.242"/>
</return>
<status status="PASS" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.242"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.242" endtime="20241121 23:35:23.242"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.242" endtime="20241121 23:35:23.242"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.242" endtime="20241121 23:35:23.242"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.227" endtime="20241121 23:35:23.242"/>
</try>
<msg timestamp="20241121 23:35:23.242" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:23.211" endtime="20241121 23:35:23.242"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:35:23.242" endtime="20241121 23:35:23.242"/>
</return>
<msg timestamp="20241121 23:35:23.242" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:23.143" endtime="20241121 23:35:23.242"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:35:23.258" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.242" endtime="20241121 23:35:23.258"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</return>
<msg timestamp="20241121 23:35:23.258" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:35:23.242" endtime="20241121 23:35:23.258"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</if>
<status status="PASS" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.142" endtime="20241121 23:35:23.258"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.258"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.258"/>
</kw>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.258"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</branch>
<status status="PASS" starttime="20241121 23:35:23.105" endtime="20241121 23:35:23.258"/>
</try>
<status status="PASS" starttime="20241121 23:35:22.932" endtime="20241121 23:35:23.258"/>
</kw>
<status status="PASS" starttime="20241121 23:35:22.913" endtime="20241121 23:35:23.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.258"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.258" endtime="20241121 23:35:23.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.289" endtime="20241121 23:35:23.289"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.274" endtime="20241121 23:35:23.289"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:23.289" endtime="20241121 23:35:23.289"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:23.289" endtime="20241121 23:35:23.289"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:23.289" endtime="20241121 23:35:23.289"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.881" endtime="20241121 23:35:23.289"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:23.289" endtime="20241121 23:35:23.289"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:24.293" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:23.289" endtime="20241121 23:35:24.293"/>
</kw>
<status status="PASS" starttime="20241121 23:35:22.876" endtime="20241121 23:35:24.293"/>
</kw>
<status status="PASS" starttime="20241121 23:35:22.875" endtime="20241121 23:35:24.293"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.293"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.293"/>
</branch>
<status status="PASS" starttime="20241121 23:35:22.875" endtime="20241121 23:35:24.293"/>
</try>
<status status="PASS" starttime="20241121 23:35:22.857" endtime="20241121 23:35:24.293"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:24.293" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.293"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.293"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:24.293" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.293"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.293"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.308"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.309"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.293" endtime="20241121 23:35:24.309"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:24.312" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:24.312" endtime="20241121 23:35:24.312"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:24.314" endtime="20241121 23:35:24.315"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.314" endtime="20241121 23:35:24.315"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.316" endtime="20241121 23:35:24.316"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.315" endtime="20241121 23:35:24.316"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:24.351" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:24.335" endtime="20241121 23:35:24.351"/>
</kw>
<msg timestamp="20241121 23:35:24.352" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.335" endtime="20241121 23:35:24.352"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:24.352" endtime="20241121 23:35:24.352"/>
</return>
<status status="PASS" starttime="20241121 23:35:24.335" endtime="20241121 23:35:24.353"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.354" endtime="20241121 23:35:24.354"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.354" endtime="20241121 23:35:24.354"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.353" endtime="20241121 23:35:24.354"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.335" endtime="20241121 23:35:24.354"/>
</try>
<msg timestamp="20241121 23:35:24.354" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.332" endtime="20241121 23:35:24.354"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:24.354" endtime="20241121 23:35:24.354"/>
</return>
<status status="PASS" starttime="20241121 23:35:24.320" endtime="20241121 23:35:24.354"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:24.354" endtime="20241121 23:35:24.354"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:24.354" endtime="20241121 23:35:24.354"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.320" endtime="20241121 23:35:24.354"/>
</try>
<msg timestamp="20241121 23:35:24.354" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.320" endtime="20241121 23:35:24.354"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.362" endtime="20241121 23:35:24.362"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.363" endtime="20241121 23:35:24.363"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.362" endtime="20241121 23:35:24.363"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.362" endtime="20241121 23:35:24.363"/>
</if>
<status status="PASS" starttime="20241121 23:35:24.360" endtime="20241121 23:35:24.364"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.320" endtime="20241121 23:35:24.364"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:24.364" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:24.364" endtime="20241121 23:35:24.364"/>
</kw>
<msg timestamp="20241121 23:35:24.377" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.364" endtime="20241121 23:35:24.377"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:24.377" endtime="20241121 23:35:24.377"/>
</return>
<status status="PASS" starttime="20241121 23:35:24.364" endtime="20241121 23:35:24.377"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.377" endtime="20241121 23:35:24.377"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.378"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.377" endtime="20241121 23:35:24.378"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.364" endtime="20241121 23:35:24.378"/>
</try>
<msg timestamp="20241121 23:35:24.378" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.364" endtime="20241121 23:35:24.378"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.378"/>
</return>
<msg timestamp="20241121 23:35:24.378" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.364" endtime="20241121 23:35:24.378"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.378"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.378"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.378"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.378"/>
</if>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.378"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.364" endtime="20241121 23:35:24.378"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:24.402" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.403"/>
</kw>
<msg timestamp="20241121 23:35:24.403" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.403"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:24.403" endtime="20241121 23:35:24.403"/>
</return>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.403"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.404" endtime="20241121 23:35:24.404"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.404" endtime="20241121 23:35:24.404"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.403" endtime="20241121 23:35:24.404"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.404"/>
</try>
<msg timestamp="20241121 23:35:24.404" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.404"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:24.404" endtime="20241121 23:35:24.405"/>
</return>
<msg timestamp="20241121 23:35:24.405" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.405"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.407" endtime="20241121 23:35:24.407"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.408" endtime="20241121 23:35:24.408"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.407" endtime="20241121 23:35:24.408"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.407" endtime="20241121 23:35:24.408"/>
</if>
<status status="PASS" starttime="20241121 23:35:24.406" endtime="20241121 23:35:24.408"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.378" endtime="20241121 23:35:24.408"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.320" endtime="20241121 23:35:24.408"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:24.409" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:24.408" endtime="20241121 23:35:24.409"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.411" endtime="20241121 23:35:24.411"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.411" endtime="20241121 23:35:24.411"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:24.411" endtime="20241121 23:35:24.412"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.411" endtime="20241121 23:35:24.412"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.410" endtime="20241121 23:35:24.412"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:24.412" endtime="20241121 23:35:24.449"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.412" endtime="20241121 23:35:24.449"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.412" endtime="20241121 23:35:24.449"/>
</try>
<status status="PASS" starttime="20241121 23:35:24.410" endtime="20241121 23:35:24.449"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.409" endtime="20241121 23:35:24.449"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.409" endtime="20241121 23:35:24.449"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.409" endtime="20241121 23:35:24.449"/>
</try>
<status status="PASS" starttime="20241121 23:35:24.320" endtime="20241121 23:35:24.449"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.316" endtime="20241121 23:35:24.449"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.449"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.462" endtime="20241121 23:35:24.462"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.449" endtime="20241121 23:35:24.462"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.464" endtime="20241121 23:35:24.465"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.462" endtime="20241121 23:35:24.465"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.466" endtime="20241121 23:35:24.466"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.465" endtime="20241121 23:35:24.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.467" endtime="20241121 23:35:24.468"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.468" endtime="20241121 23:35:24.468"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.468" endtime="20241121 23:35:24.468"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.468" endtime="20241121 23:35:24.468"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.468" endtime="20241121 23:35:24.469"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:24.468" endtime="20241121 23:35:24.469"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:24.466" endtime="20241121 23:35:24.469"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:24.474" endtime="20241121 23:35:24.474"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.477" endtime="20241121 23:35:24.477"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.469" endtime="20241121 23:35:24.478"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.479" endtime="20241121 23:35:24.479"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.479" endtime="20241121 23:35:24.479"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.479" endtime="20241121 23:35:24.479"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.479" endtime="20241121 23:35:24.480"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.479" endtime="20241121 23:35:24.480"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:24.479" endtime="20241121 23:35:24.480"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:24.478" endtime="20241121 23:35:24.480"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:24.485" endtime="20241121 23:35:24.485"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.488" endtime="20241121 23:35:24.488"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.480" endtime="20241121 23:35:24.488"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.489" endtime="20241121 23:35:24.489"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.488" endtime="20241121 23:35:24.489"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.491" endtime="20241121 23:35:24.491"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.489" endtime="20241121 23:35:24.492"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:24.495" endtime="20241121 23:35:24.495"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:24.495" endtime="20241121 23:35:24.495"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:24.492" endtime="20241121 23:35:24.495"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.314" endtime="20241121 23:35:24.495"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:24.495" endtime="20241121 23:35:24.495"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:29.509" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:35:24.495" endtime="20241121 23:35:29.509"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.310" endtime="20241121 23:35:29.509"/>
</kw>
<status status="PASS" starttime="20241121 23:35:24.310" endtime="20241121 23:35:29.509"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.509" endtime="20241121 23:35:29.509"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.509" endtime="20241121 23:35:29.509"/>
</branch>
<status status="PASS" starttime="20241121 23:35:24.309" endtime="20241121 23:35:29.509"/>
</try>
<status status="PASS" starttime="20241121 23:35:24.293" endtime="20241121 23:35:29.509"/>
</iter>
<status status="PASS" starttime="20241121 23:35:12.676" endtime="20241121 23:35:29.509"/>
</for>
<status status="PASS" starttime="20241121 23:35:12.676" endtime="20241121 23:35:29.509"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.676" endtime="20241121 23:35:29.509"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:29.509" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:35:29.509" endtime="20241121 23:35:29.509"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:35:29.509" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:35:29.509" endtime="20241121 23:35:29.509"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:35:29.524" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:35:29.524" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:35:29.509" endtime="20241121 23:35:29.524"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:29.524" endtime="20241121 23:35:29.524"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:35:29.524" endtime="20241121 23:35:29.539"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.509" endtime="20241121 23:35:29.539"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.665" endtime="20241121 23:35:29.539"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:29.539" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:35:29.539" endtime="20241121 23:35:29.539"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:29.539" endtime="20241121 23:35:29.539"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:29.549" endtime="20241121 23:35:29.549"/>
</kw>
<msg timestamp="20241121 23:35:29.549" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.549" endtime="20241121 23:35:29.549"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:29.549" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:35:29.549" endtime="20241121 23:35:29.552"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:29.552" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.552" endtime="20241121 23:35:29.552"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.552" endtime="20241121 23:35:29.552"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.552" endtime="20241121 23:35:29.552"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.552" endtime="20241121 23:35:29.552"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.552" endtime="20241121 23:35:29.552"/>
</if>
<status status="PASS" starttime="20241121 23:35:29.549" endtime="20241121 23:35:29.552"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.549" endtime="20241121 23:35:29.552"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:29.552" endtime="20241121 23:35:29.556"/>
</return>
<msg timestamp="20241121 23:35:29.556" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.547" endtime="20241121 23:35:29.556"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:29.557" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:35:29.557" endtime="20241121 23:35:29.557"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:29.557" endtime="20241121 23:35:29.560"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:29.561" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:35:29.561" endtime="20241121 23:35:29.561"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.562" endtime="20241121 23:35:29.562"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.563" endtime="20241121 23:35:29.563"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.562" endtime="20241121 23:35:29.563"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.562" endtime="20241121 23:35:29.563"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:29.565" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:29.565" endtime="20241121 23:35:29.565"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:29.566" endtime="20241121 23:35:29.566"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.566" endtime="20241121 23:35:29.566"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.566" endtime="20241121 23:35:29.566"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.566" endtime="20241121 23:35:29.566"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:29.592" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:35:29.581" endtime="20241121 23:35:29.592"/>
</kw>
<msg timestamp="20241121 23:35:29.592" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.581" endtime="20241121 23:35:29.592"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.595" endtime="20241121 23:35:29.595"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.581" endtime="20241121 23:35:29.595"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.595" endtime="20241121 23:35:29.595"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.596" endtime="20241121 23:35:29.596"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.595" endtime="20241121 23:35:29.596"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.580" endtime="20241121 23:35:29.596"/>
</try>
<msg timestamp="20241121 23:35:29.597" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.580" endtime="20241121 23:35:29.597"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.597" endtime="20241121 23:35:29.597"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.578" endtime="20241121 23:35:29.597"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:29.597" endtime="20241121 23:35:29.597"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:29.597" endtime="20241121 23:35:29.597"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.578" endtime="20241121 23:35:29.598"/>
</try>
<msg timestamp="20241121 23:35:29.598" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.577" endtime="20241121 23:35:29.598"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.600" endtime="20241121 23:35:29.600"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.600" endtime="20241121 23:35:29.600"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.600" endtime="20241121 23:35:29.600"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.600" endtime="20241121 23:35:29.600"/>
</if>
<status status="PASS" starttime="20241121 23:35:29.600" endtime="20241121 23:35:29.600"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.576" endtime="20241121 23:35:29.600"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:29.610" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</kw>
<msg timestamp="20241121 23:35:29.610" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</try>
<msg timestamp="20241121 23:35:29.610" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.609" endtime="20241121 23:35:29.610"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.610" endtime="20241121 23:35:29.610"/>
</return>
<msg timestamp="20241121 23:35:29.622" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.607" endtime="20241121 23:35:29.622"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.624"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.624"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.624"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.624"/>
</if>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.624"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.606" endtime="20241121 23:35:29.624"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:29.654" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.654"/>
</kw>
<msg timestamp="20241121 23:35:29.654" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.654"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.654" endtime="20241121 23:35:29.655"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.655"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.655" endtime="20241121 23:35:29.655"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.656" endtime="20241121 23:35:29.656"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.655" endtime="20241121 23:35:29.656"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.656"/>
</try>
<msg timestamp="20241121 23:35:29.656" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.656"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.656" endtime="20241121 23:35:29.656"/>
</return>
<msg timestamp="20241121 23:35:29.656" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.656"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.659" endtime="20241121 23:35:29.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.659" endtime="20241121 23:35:29.659"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.659" endtime="20241121 23:35:29.659"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.659" endtime="20241121 23:35:29.659"/>
</if>
<status status="PASS" starttime="20241121 23:35:29.658" endtime="20241121 23:35:29.660"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.624" endtime="20241121 23:35:29.660"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.566" endtime="20241121 23:35:29.660"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:29.660" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:29.660" endtime="20241121 23:35:29.660"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.662" endtime="20241121 23:35:29.662"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.662" endtime="20241121 23:35:29.662"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:29.662" endtime="20241121 23:35:29.663"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.662" endtime="20241121 23:35:29.663"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.661" endtime="20241121 23:35:29.663"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:29.663" endtime="20241121 23:35:29.710"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.663" endtime="20241121 23:35:29.710"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.663" endtime="20241121 23:35:29.710"/>
</try>
<status status="PASS" starttime="20241121 23:35:29.661" endtime="20241121 23:35:29.710"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.661" endtime="20241121 23:35:29.710"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.661" endtime="20241121 23:35:29.710"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.660" endtime="20241121 23:35:29.710"/>
</try>
<status status="PASS" starttime="20241121 23:35:29.566" endtime="20241121 23:35:29.710"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.566" endtime="20241121 23:35:29.710"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.710"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.723" endtime="20241121 23:35:29.723"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.710" endtime="20241121 23:35:29.724"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.724" endtime="20241121 23:35:29.726"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.726"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.740" endtime="20241121 23:35:29.740"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.740" endtime="20241121 23:35:29.740"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.740" endtime="20241121 23:35:29.740"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.740" endtime="20241121 23:35:29.741"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.740" endtime="20241121 23:35:29.741"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:29.740" endtime="20241121 23:35:29.741"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:29.726" endtime="20241121 23:35:29.741"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:29.746" endtime="20241121 23:35:29.746"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.749" endtime="20241121 23:35:29.749"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.741" endtime="20241121 23:35:29.749"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.750" endtime="20241121 23:35:29.750"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.749" endtime="20241121 23:35:29.750"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.752" endtime="20241121 23:35:29.752"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.750" endtime="20241121 23:35:29.753"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:29.757" endtime="20241121 23:35:29.757"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.769" endtime="20241121 23:35:29.769"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.753" endtime="20241121 23:35:29.769"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.565" endtime="20241121 23:35:29.769"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:29.769" endtime="20241121 23:35:29.770"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:29.770" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:29.770" endtime="20241121 23:35:29.770"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.564" endtime="20241121 23:35:29.770"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.564" endtime="20241121 23:35:29.770"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.771" endtime="20241121 23:35:29.771"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.770" endtime="20241121 23:35:29.771"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.563" endtime="20241121 23:35:29.771"/>
</try>
<status status="PASS" starttime="20241121 23:35:29.557" endtime="20241121 23:35:29.771"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:29.772" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:35:29.771" endtime="20241121 23:35:29.772"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:29.772" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:29.772" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.772"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:29.792" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.792"/>
</kw>
<msg timestamp="20241121 23:35:29.793" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.793"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.793" endtime="20241121 23:35:29.793"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.793"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.793" endtime="20241121 23:35:29.793"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.794" endtime="20241121 23:35:29.794"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.793" endtime="20241121 23:35:29.794"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.794"/>
</try>
<msg timestamp="20241121 23:35:29.794" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.794"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.794" endtime="20241121 23:35:29.794"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.794"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.795"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.795"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.795"/>
</try>
<msg timestamp="20241121 23:35:29.795" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.795"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.795"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.795"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.795"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.795"/>
</if>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.795"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.795"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:29.809" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.810"/>
</kw>
<msg timestamp="20241121 23:35:29.810" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.810"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.810" endtime="20241121 23:35:29.810"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.810"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.811" endtime="20241121 23:35:29.811"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.811" endtime="20241121 23:35:29.811"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.810" endtime="20241121 23:35:29.811"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.811"/>
</try>
<msg timestamp="20241121 23:35:29.811" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.811"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.811" endtime="20241121 23:35:29.812"/>
</return>
<msg timestamp="20241121 23:35:29.812" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.812"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.814"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.814"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.814"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.814"/>
</if>
<status status="PASS" starttime="20241121 23:35:29.813" endtime="20241121 23:35:29.814"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.795" endtime="20241121 23:35:29.814"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:29.825" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.839"/>
</kw>
<msg timestamp="20241121 23:35:29.839" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.839"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.839" endtime="20241121 23:35:29.839"/>
</return>
<status status="PASS" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.840"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.840" endtime="20241121 23:35:29.840"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.841" endtime="20241121 23:35:29.841"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.840" endtime="20241121 23:35:29.841"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.841"/>
</try>
<msg timestamp="20241121 23:35:29.841" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.842"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:29.842" endtime="20241121 23:35:29.842"/>
</return>
<msg timestamp="20241121 23:35:29.842" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.842"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.846" endtime="20241121 23:35:29.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.847" endtime="20241121 23:35:29.847"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.846" endtime="20241121 23:35:29.847"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.846" endtime="20241121 23:35:29.847"/>
</if>
<status status="PASS" starttime="20241121 23:35:29.844" endtime="20241121 23:35:29.848"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.814" endtime="20241121 23:35:29.848"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:29.848"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:29.849" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:29.848" endtime="20241121 23:35:29.849"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:29.849" endtime="20241121 23:35:29.849"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:29.849" endtime="20241121 23:35:29.849"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:29.849"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:29.849"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:29.849"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:30.007"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:30.007"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:30.007"/>
</try>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:30.007"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:30.007"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:30.007"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.849" endtime="20241121 23:35:30.007"/>
</try>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:30.007"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:30.007"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.007" endtime="20241121 23:35:30.022"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.022" endtime="20241121 23:35:30.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.024" endtime="20241121 23:35:30.039"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.039"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:30.056" endtime="20241121 23:35:30.056"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.056" endtime="20241121 23:35:30.056"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.039" endtime="20241121 23:35:30.056"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.056" endtime="20241121 23:35:30.056"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.056" endtime="20241121 23:35:30.056"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.056" endtime="20241121 23:35:30.056"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.056" endtime="20241121 23:35:30.056"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.056" endtime="20241121 23:35:30.073"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:30.073"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:30.073" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:30.073"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:30.073"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.772" endtime="20241121 23:35:30.073"/>
</try>
<status status="PASS" starttime="20241121 23:35:29.771" endtime="20241121 23:35:30.073"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.073" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:30.073" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.073" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.073"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.089" endtime="20241121 23:35:30.091"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.091"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.094" endtime="20241121 23:35:30.094"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.094" endtime="20241121 23:35:30.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.091" endtime="20241121 23:35:30.094"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.094" endtime="20241121 23:35:30.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.094" endtime="20241121 23:35:30.094"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.094" endtime="20241121 23:35:30.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.094" endtime="20241121 23:35:30.094"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.108" endtime="20241121 23:35:30.108"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.094" endtime="20241121 23:35:30.108"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.109"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.109" endtime="20241121 23:35:30.123"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.123"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.142" endtime="20241121 23:35:30.142"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.123" endtime="20241121 23:35:30.142"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:30.197" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:30.147" endtime="20241121 23:35:30.197"/>
</kw>
<msg timestamp="20241121 23:35:30.197" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.146" endtime="20241121 23:35:30.197"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:30.197" endtime="20241121 23:35:30.197"/>
</return>
<status status="PASS" starttime="20241121 23:35:30.146" endtime="20241121 23:35:30.197"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.197" endtime="20241121 23:35:30.197"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.197" endtime="20241121 23:35:30.197"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.197" endtime="20241121 23:35:30.197"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.146" endtime="20241121 23:35:30.197"/>
</try>
<msg timestamp="20241121 23:35:30.197" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.145" endtime="20241121 23:35:30.205"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:30.205" endtime="20241121 23:35:30.205"/>
</return>
<status status="PASS" starttime="20241121 23:35:30.144" endtime="20241121 23:35:30.205"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:30.205" endtime="20241121 23:35:30.205"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:30.205" endtime="20241121 23:35:30.205"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.144" endtime="20241121 23:35:30.205"/>
</try>
<msg timestamp="20241121 23:35:30.206" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.144" endtime="20241121 23:35:30.206"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.143" endtime="20241121 23:35:30.206"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.209" endtime="20241121 23:35:30.209"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.206" endtime="20241121 23:35:30.209"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:30.217" endtime="20241121 23:35:30.217"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.218" endtime="20241121 23:35:30.218"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.209" endtime="20241121 23:35:30.218"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.218"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.218" endtime="20241121 23:35:30.219"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:30.220" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:30.219" endtime="20241121 23:35:30.220"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.220"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.220"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.221" endtime="20241121 23:35:30.221"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.220" endtime="20241121 23:35:30.221"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.221"/>
</try>
<status status="PASS" starttime="20241121 23:35:30.073" endtime="20241121 23:35:30.221"/>
</iter>
<status status="PASS" starttime="20241121 23:35:29.557" endtime="20241121 23:35:30.221"/>
</for>
<status status="PASS" starttime="20241121 23:35:29.557" endtime="20241121 23:35:30.221"/>
</branch>
<status status="PASS" starttime="20241121 23:35:29.556" endtime="20241121 23:35:30.222"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:30.223" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:35:30.222" endtime="20241121 23:35:30.223"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:35:30.223" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:35:30.223" endtime="20241121 23:35:30.223"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:35:30.223" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:35:30.223" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:35:30.223" endtime="20241121 23:35:30.223"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.223" endtime="20241121 23:35:30.223"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:35:30.223" endtime="20241121 23:35:30.223"/>
</return>
<status status="PASS" starttime="20241121 23:35:30.223" endtime="20241121 23:35:30.223"/>
</kw>
<status status="PASS" starttime="20241121 23:35:29.539" endtime="20241121 23:35:30.223"/>
</iter>
<status status="PASS" starttime="20241121 23:35:12.665" endtime="20241121 23:35:30.236"/>
</for>
<status status="PASS" starttime="20241121 23:35:12.665" endtime="20241121 23:35:30.236"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.664" endtime="20241121 23:35:30.236"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.634" endtime="20241121 23:35:30.236"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.237" endtime="20241121 23:35:30.238"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.236" endtime="20241121 23:35:30.238"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.633" endtime="20241121 23:35:30.238"/>
</if>
<status status="PASS" starttime="20241121 23:35:12.617" endtime="20241121 23:35:30.238"/>
</kw>
<status status="PASS" starttime="20241121 23:35:12.617" endtime="20241121 23:35:30.238"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.240" endtime="20241121 23:35:30.240"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.239" endtime="20241121 23:35:30.240"/>
</branch>
<status status="PASS" starttime="20241121 23:35:12.616" endtime="20241121 23:35:30.240"/>
</try>
<status status="PASS" starttime="20241121 23:35:12.582" endtime="20241121 23:35:30.241"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.241" endtime="20241121 23:35:30.241"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:35:30.295" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '59', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:00:36.211Z', 'createdAt': '2024-11-21T18:00:36.211Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:35:30.241" endtime="20241121 23:35:30.296"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.297" endtime="20241121 23:35:30.302"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<msg timestamp="20241121 23:35:30.306" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.306" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.306" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</if>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</return>
<msg timestamp="20241121 23:35:30.306" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.304" endtime="20241121 23:35:30.306"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<msg timestamp="20241121 23:35:30.306" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.306" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.306" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</if>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</return>
<msg timestamp="20241121 23:35:30.306" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:30.306"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:30.322" endtime="20241121 23:35:30.323"/>
</kw>
<msg timestamp="20241121 23:35:30.323" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.322" endtime="20241121 23:35:30.323"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.324" level="INFO">${values} = {'id': '59', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:00:36.211Z', 'createdAt': '2024-11-21T18:00:36.211Z'}</msg>
<status status="PASS" starttime="20241121 23:35:30.324" endtime="20241121 23:35:30.324"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.325" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.325" endtime="20241121 23:35:30.325"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.324" endtime="20241121 23:35:30.325"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.326" endtime="20241121 23:35:30.326"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.325" endtime="20241121 23:35:30.326"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.324" endtime="20241121 23:35:30.326"/>
</if>
<status status="PASS" starttime="20241121 23:35:30.323" endtime="20241121 23:35:30.326"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.323" endtime="20241121 23:35:30.326"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:30.326" endtime="20241121 23:35:30.326"/>
</return>
<msg timestamp="20241121 23:35:30.327" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.321" endtime="20241121 23:35:30.327"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.327" endtime="20241121 23:35:30.327"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.327" endtime="20241121 23:35:30.327"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.327" endtime="20241121 23:35:30.327"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.328" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.328" level="INFO">${testCaseRun} = {'id': '59', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:00:36.211Z', 'createdAt': '2024-11-21T18:00:36.211Z'}</msg>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<msg timestamp="20241121 23:35:30.328" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.328" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.328" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</if>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</return>
<msg timestamp="20241121 23:35:30.328" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.328" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.328"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:30.338"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:30.343" endtime="20241121 23:35:30.343"/>
</kw>
<msg timestamp="20241121 23:35:30.343" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.340" endtime="20241121 23:35:30.343"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.344" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:35:30.344" endtime="20241121 23:35:30.344"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.345" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.345" endtime="20241121 23:35:30.345"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.344" endtime="20241121 23:35:30.345"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.345" endtime="20241121 23:35:30.345"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.345" endtime="20241121 23:35:30.345"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.344" endtime="20241121 23:35:30.345"/>
</if>
<status status="PASS" starttime="20241121 23:35:30.343" endtime="20241121 23:35:30.346"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.343" endtime="20241121 23:35:30.346"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:30.346" endtime="20241121 23:35:30.346"/>
</return>
<msg timestamp="20241121 23:35:30.346" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:30.340" endtime="20241121 23:35:30.346"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.347" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:35:30.347" endtime="20241121 23:35:30.347"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:30.347" endtime="20241121 23:35:30.348"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:30.348" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:30.348"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.348" endtime="20241121 23:35:30.348"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:30.348" endtime="20241121 23:35:30.348"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:30.348" endtime="20241121 23:35:30.348"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:30.348"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:30.348" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:30.348"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:35:30.348" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:35:30.348" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:35:30.355" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:30.355"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:35:30.356" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:35:30.366" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:35:30.366" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:35:30.356" endtime="20241121 23:35:30.366"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:35:30.366" endtime="20241121 23:35:30.366"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:35:37.802" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:35:37.802" level="INFO">${page_id} = {'page_id': 'page=af791879-ae3f-4477-9be0-b5def4c2097d', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:35:30.366" endtime="20241121 23:35:37.802"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:35:37.803" level="INFO">Switching to page {'page_id': 'page=af791879-ae3f-4477-9be0-b5def4c2097d', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:35:37.830" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=a124a82d-d86e-4075-90dc-c1a459a017fd",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=75b84b73-7ea3-407c-8055-c3cfa95050da",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=203ad8f9-0f8a-4fa1-b7a2-cb91c9228608",
        "activePage": "page=af791879-ae3f-4477-9be0-b5def4c2097d",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=af791879-ae3f-4477-9be0-b5def4c2097d",
            "timestamp": 1732212330.522
          }
        ]
      }
    ],
    "activeContext": "context=203ad8f9-0f8a-4fa1-b7a2-cb91c9228608",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:35:37.836" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:35:37.803" endtime="20241121 23:35:37.836"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:37.836"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:37.837"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.837" endtime="20241121 23:35:37.837"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.837" endtime="20241121 23:35:37.837"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.840" endtime="20241121 23:35:37.840"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.837" endtime="20241121 23:35:37.840"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.842" endtime="20241121 23:35:37.842"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.844" endtime="20241121 23:35:37.844"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.840" endtime="20241121 23:35:37.844"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.845" endtime="20241121 23:35:37.845"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.844" endtime="20241121 23:35:37.846"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.849" endtime="20241121 23:35:37.849"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.846" endtime="20241121 23:35:37.849"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.851" endtime="20241121 23:35:37.851"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.849" endtime="20241121 23:35:37.851"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.853" endtime="20241121 23:35:37.853"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.851" endtime="20241121 23:35:37.853"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.855" endtime="20241121 23:35:37.855"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.855" endtime="20241121 23:35:37.856"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.855" endtime="20241121 23:35:37.856"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.856" endtime="20241121 23:35:37.856"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.856" endtime="20241121 23:35:37.856"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:37.855" endtime="20241121 23:35:37.857"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:37.853" endtime="20241121 23:35:37.857"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:37.863" endtime="20241121 23:35:37.863"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.867" endtime="20241121 23:35:37.867"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.857" endtime="20241121 23:35:37.867"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.869" endtime="20241121 23:35:37.869"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.869" endtime="20241121 23:35:37.869"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.869" endtime="20241121 23:35:37.869"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.870" endtime="20241121 23:35:37.870"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.870" endtime="20241121 23:35:37.870"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:37.869" endtime="20241121 23:35:37.870"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:37.867" endtime="20241121 23:35:37.870"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:37.877" endtime="20241121 23:35:37.877"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.880" endtime="20241121 23:35:37.881"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.870" endtime="20241121 23:35:37.881"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.882" endtime="20241121 23:35:37.882"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.881" endtime="20241121 23:35:37.882"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.885" endtime="20241121 23:35:37.885"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.883" endtime="20241121 23:35:37.885"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:37.893" endtime="20241121 23:35:37.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:37.893" endtime="20241121 23:35:37.893"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:37.885" endtime="20241121 23:35:37.893"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:37.893"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:37.894" endtime="20241121 23:35:37.894"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:38.897" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:37.894" endtime="20241121 23:35:38.897"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:38.897"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:38.897"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.348" endtime="20241121 23:35:38.897"/>
</try>
<status status="PASS" starttime="20241121 23:35:30.347" endtime="20241121 23:35:38.897"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:38.897" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:38.897" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:38.897" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.897"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.914" endtime="20241121 23:35:38.914"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.917" endtime="20241121 23:35:38.917"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.897" endtime="20241121 23:35:38.917"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.919" endtime="20241121 23:35:38.919"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.917" endtime="20241121 23:35:38.919"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.922" endtime="20241121 23:35:38.923"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.919" endtime="20241121 23:35:38.923"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:38.950" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:38.931" endtime="20241121 23:35:38.950"/>
</kw>
<msg timestamp="20241121 23:35:38.950" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:38.931" endtime="20241121 23:35:38.950"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</return>
<status status="PASS" starttime="20241121 23:35:38.931" endtime="20241121 23:35:38.950"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.931" endtime="20241121 23:35:38.950"/>
</try>
<msg timestamp="20241121 23:35:38.950" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:38.930" endtime="20241121 23:35:38.950"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</return>
<status status="PASS" starttime="20241121 23:35:38.929" endtime="20241121 23:35:38.950"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.929" endtime="20241121 23:35:38.950"/>
</try>
<msg timestamp="20241121 23:35:38.950" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:38.928" endtime="20241121 23:35:38.950"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</if>
<status status="PASS" starttime="20241121 23:35:38.950" endtime="20241121 23:35:38.950"/>
</kw>
<status status="PASS" starttime="20241121 23:35:38.928" endtime="20241121 23:35:38.950"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:38.977" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:38.971" endtime="20241121 23:35:38.977"/>
</kw>
<msg timestamp="20241121 23:35:38.978" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:38.971" endtime="20241121 23:35:38.978"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:38.978" endtime="20241121 23:35:38.978"/>
</return>
<status status="PASS" starttime="20241121 23:35:38.971" endtime="20241121 23:35:38.978"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.978" endtime="20241121 23:35:38.978"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.979" endtime="20241121 23:35:38.979"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.978" endtime="20241121 23:35:38.979"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.971" endtime="20241121 23:35:38.979"/>
</try>
<msg timestamp="20241121 23:35:38.979" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:38.971" endtime="20241121 23:35:38.979"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:38.979" endtime="20241121 23:35:38.979"/>
</return>
<status status="PASS" starttime="20241121 23:35:38.970" endtime="20241121 23:35:38.980"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:38.980" endtime="20241121 23:35:38.980"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:38.980" endtime="20241121 23:35:38.980"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.970" endtime="20241121 23:35:38.980"/>
</try>
<msg timestamp="20241121 23:35:38.980" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:38.970" endtime="20241121 23:35:38.980"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.983" endtime="20241121 23:35:38.983"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:38.983" endtime="20241121 23:35:38.983"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:38.983" endtime="20241121 23:35:38.983"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.982" endtime="20241121 23:35:38.983"/>
</if>
<status status="PASS" starttime="20241121 23:35:38.981" endtime="20241121 23:35:38.983"/>
</kw>
<status status="PASS" starttime="20241121 23:35:38.969" endtime="20241121 23:35:38.984"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:39.003" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:39.003" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:38.984" endtime="20241121 23:35:39.003"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:39.003" endtime="20241121 23:35:39.004"/>
</return>
<status status="PASS" starttime="20241121 23:35:38.984" endtime="20241121 23:35:39.004"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.004" endtime="20241121 23:35:39.004"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.004" endtime="20241121 23:35:39.004"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.004" endtime="20241121 23:35:39.004"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.984" endtime="20241121 23:35:39.004"/>
</try>
<msg timestamp="20241121 23:35:39.005" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:38.966" endtime="20241121 23:35:39.005"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.006" endtime="20241121 23:35:39.006"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.007" endtime="20241121 23:35:39.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.006" endtime="20241121 23:35:39.007"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.006" endtime="20241121 23:35:39.007"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.006" endtime="20241121 23:35:39.007"/>
</kw>
<status status="PASS" starttime="20241121 23:35:38.964" endtime="20241121 23:35:39.007"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.007" endtime="20241121 23:35:39.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.007" endtime="20241121 23:35:39.008"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.964" endtime="20241121 23:35:39.008"/>
</try>
<status status="PASS" starttime="20241121 23:35:38.964" endtime="20241121 23:35:39.008"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:39.015" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:35:39.013" endtime="20241121 23:35:39.015"/>
</kw>
<msg timestamp="20241121 23:35:39.015" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.012" endtime="20241121 23:35:39.015"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.012" endtime="20241121 23:35:39.015"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.012" endtime="20241121 23:35:39.015"/>
</try>
<msg timestamp="20241121 23:35:39.015" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.011" endtime="20241121 23:35:39.015"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</return>
<msg timestamp="20241121 23:35:39.015" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.010" endtime="20241121 23:35:39.015"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.015"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.010" endtime="20241121 23:35:39.015"/>
</kw>
<status status="PASS" starttime="20241121 23:35:38.926" endtime="20241121 23:35:39.015"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:39.030" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.030"/>
</kw>
<msg timestamp="20241121 23:35:39.030" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.030"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.030" endtime="20241121 23:35:39.046"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.046"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.046"/>
</try>
<msg timestamp="20241121 23:35:39.046" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.046"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</return>
<msg timestamp="20241121 23:35:39.046" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.046"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.015" endtime="20241121 23:35:39.046"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:39.046" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.046"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:35:39.046" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.085"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.086"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.086" endtime="20241121 23:35:39.086"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.086" endtime="20241121 23:35:39.086"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.086" endtime="20241121 23:35:39.086"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.086"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:39.099" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:39.093" endtime="20241121 23:35:39.099"/>
</kw>
<msg timestamp="20241121 23:35:39.099" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.093" endtime="20241121 23:35:39.099"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.099" endtime="20241121 23:35:39.099"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.093" endtime="20241121 23:35:39.099"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.100" endtime="20241121 23:35:39.100"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.101" endtime="20241121 23:35:39.101"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.100" endtime="20241121 23:35:39.101"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.093" endtime="20241121 23:35:39.101"/>
</try>
<msg timestamp="20241121 23:35:39.101" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.092" endtime="20241121 23:35:39.101"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.101" endtime="20241121 23:35:39.101"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.091" endtime="20241121 23:35:39.101"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:39.102" endtime="20241121 23:35:39.102"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:39.101" endtime="20241121 23:35:39.102"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.091" endtime="20241121 23:35:39.102"/>
</try>
<msg timestamp="20241121 23:35:39.102" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.091" endtime="20241121 23:35:39.102"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.104" endtime="20241121 23:35:39.104"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.105" endtime="20241121 23:35:39.105"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.104" endtime="20241121 23:35:39.105"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.104" endtime="20241121 23:35:39.105"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.103" endtime="20241121 23:35:39.105"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.090" endtime="20241121 23:35:39.105"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:39.119" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:39.113" endtime="20241121 23:35:39.119"/>
</kw>
<msg timestamp="20241121 23:35:39.119" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.113" endtime="20241121 23:35:39.119"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.119" endtime="20241121 23:35:39.119"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.112" endtime="20241121 23:35:39.119"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.121" endtime="20241121 23:35:39.121"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.121" endtime="20241121 23:35:39.121"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.121" endtime="20241121 23:35:39.121"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.112" endtime="20241121 23:35:39.121"/>
</try>
<msg timestamp="20241121 23:35:39.122" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.112" endtime="20241121 23:35:39.122"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.122" endtime="20241121 23:35:39.122"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.111" endtime="20241121 23:35:39.122"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:39.122" endtime="20241121 23:35:39.122"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:39.122" endtime="20241121 23:35:39.122"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.111" endtime="20241121 23:35:39.122"/>
</try>
<msg timestamp="20241121 23:35:39.122" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.111" endtime="20241121 23:35:39.123"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.125" endtime="20241121 23:35:39.125"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.125" endtime="20241121 23:35:39.125"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.125" endtime="20241121 23:35:39.125"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.125" endtime="20241121 23:35:39.125"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.124" endtime="20241121 23:35:39.126"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.110" endtime="20241121 23:35:39.126"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:39.130" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:39.130" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:39.126" endtime="20241121 23:35:39.130"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.126" endtime="20241121 23:35:39.130"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.126" endtime="20241121 23:35:39.130"/>
</try>
<msg timestamp="20241121 23:35:39.130" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:39.108" endtime="20241121 23:35:39.130"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.107" endtime="20241121 23:35:39.130"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.130"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.107" endtime="20241121 23:35:39.130"/>
</try>
<status status="PASS" starttime="20241121 23:35:39.107" endtime="20241121 23:35:39.130"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:39.146" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</kw>
<msg timestamp="20241121 23:35:39.146" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</try>
<msg timestamp="20241121 23:35:39.146" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</return>
<msg timestamp="20241121 23:35:39.146" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.146"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.146"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.130" endtime="20241121 23:35:39.146"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.088" endtime="20241121 23:35:39.146"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:39.162" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<msg timestamp="20241121 23:35:39.162" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</try>
<msg timestamp="20241121 23:35:39.162" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</try>
<msg timestamp="20241121 23:35:39.162" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.162"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:39.177" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:35:39.177" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.177"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:39.177" endtime="20241121 23:35:39.177"/>
</return>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.177"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.177" endtime="20241121 23:35:39.177"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.177" endtime="20241121 23:35:39.177"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.177" endtime="20241121 23:35:39.177"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.162" endtime="20241121 23:35:39.177"/>
</try>
<msg timestamp="20241121 23:35:39.177" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:39.146" endtime="20241121 23:35:39.177"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:35:39.177" endtime="20241121 23:35:39.177"/>
</return>
<msg timestamp="20241121 23:35:39.177" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:39.088" endtime="20241121 23:35:39.177"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:35:39.193" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</return>
<msg timestamp="20241121 23:35:39.193" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:35:39.177" endtime="20241121 23:35:39.193"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</if>
<status status="PASS" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.087" endtime="20241121 23:35:39.193"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.193"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.193"/>
</kw>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.193"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</branch>
<status status="PASS" starttime="20241121 23:35:39.046" endtime="20241121 23:35:39.193"/>
</try>
<status status="PASS" starttime="20241121 23:35:38.925" endtime="20241121 23:35:39.193"/>
</kw>
<status status="PASS" starttime="20241121 23:35:38.923" endtime="20241121 23:35:39.193"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.193"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.193" endtime="20241121 23:35:39.208"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.208"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.208" endtime="20241121 23:35:39.226"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:39.226"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:39.226" endtime="20241121 23:35:39.226"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:40.228" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:39.226" endtime="20241121 23:35:40.228"/>
</kw>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:40.228"/>
</kw>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:40.228"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.228"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.228"/>
</branch>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:40.228"/>
</try>
<status status="PASS" starttime="20241121 23:35:38.897" endtime="20241121 23:35:40.228"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:40.228" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.228"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.228"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:40.228" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.228"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.228"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.228"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.243"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.228" endtime="20241121 23:35:40.243"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:40.249" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:40.247" endtime="20241121 23:35:40.249"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:40.251" endtime="20241121 23:35:40.251"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.250" endtime="20241121 23:35:40.251"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.253" endtime="20241121 23:35:40.253"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.252" endtime="20241121 23:35:40.253"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.262" endtime="20241121 23:35:40.262"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.254" endtime="20241121 23:35:40.262"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.263" endtime="20241121 23:35:40.263"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.280" endtime="20241121 23:35:40.280"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.263" endtime="20241121 23:35:40.280"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.284" endtime="20241121 23:35:40.285"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.282" endtime="20241121 23:35:40.285"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.287" endtime="20241121 23:35:40.287"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.285" endtime="20241121 23:35:40.287"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:40.314" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:40.312" endtime="20241121 23:35:40.314"/>
</kw>
<msg timestamp="20241121 23:35:40.314" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.301" endtime="20241121 23:35:40.314"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.314" endtime="20241121 23:35:40.314"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.301" endtime="20241121 23:35:40.314"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.314" endtime="20241121 23:35:40.314"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.314" endtime="20241121 23:35:40.314"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.314" endtime="20241121 23:35:40.314"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.301" endtime="20241121 23:35:40.314"/>
</try>
<msg timestamp="20241121 23:35:40.314" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.301" endtime="20241121 23:35:40.314"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.314" endtime="20241121 23:35:40.314"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.301" endtime="20241121 23:35:40.314"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:40.314" endtime="20241121 23:35:40.314"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:40.314" endtime="20241121 23:35:40.314"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.301" endtime="20241121 23:35:40.314"/>
</try>
<msg timestamp="20241121 23:35:40.314" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.301" endtime="20241121 23:35:40.314"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.331" endtime="20241121 23:35:40.331"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.331" endtime="20241121 23:35:40.331"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.331" endtime="20241121 23:35:40.331"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.330" endtime="20241121 23:35:40.332"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.329" endtime="20241121 23:35:40.332"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.301" endtime="20241121 23:35:40.332"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:40.348" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:40.342" endtime="20241121 23:35:40.348"/>
</kw>
<msg timestamp="20241121 23:35:40.348" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.342" endtime="20241121 23:35:40.348"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.348" endtime="20241121 23:35:40.348"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.342" endtime="20241121 23:35:40.348"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.349" endtime="20241121 23:35:40.349"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.349" endtime="20241121 23:35:40.349"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.348" endtime="20241121 23:35:40.349"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.342" endtime="20241121 23:35:40.349"/>
</try>
<msg timestamp="20241121 23:35:40.350" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.341" endtime="20241121 23:35:40.350"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.350" endtime="20241121 23:35:40.350"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.340" endtime="20241121 23:35:40.350"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:40.350" endtime="20241121 23:35:40.350"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:40.350" endtime="20241121 23:35:40.350"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.340" endtime="20241121 23:35:40.350"/>
</try>
<msg timestamp="20241121 23:35:40.350" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.339" endtime="20241121 23:35:40.350"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.353" endtime="20241121 23:35:40.353"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.353" endtime="20241121 23:35:40.353"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.353" endtime="20241121 23:35:40.353"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.353" endtime="20241121 23:35:40.353"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.352" endtime="20241121 23:35:40.353"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.339" endtime="20241121 23:35:40.354"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:40.364" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:40.364" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:40.354" endtime="20241121 23:35:40.364"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.354" endtime="20241121 23:35:40.364"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.354" endtime="20241121 23:35:40.364"/>
</try>
<msg timestamp="20241121 23:35:40.364" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:40.336" endtime="20241121 23:35:40.364"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.335" endtime="20241121 23:35:40.364"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.364"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.335" endtime="20241121 23:35:40.364"/>
</try>
<status status="PASS" starttime="20241121 23:35:40.335" endtime="20241121 23:35:40.364"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:40.380" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.381"/>
</kw>
<msg timestamp="20241121 23:35:40.382" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.382"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.382" endtime="20241121 23:35:40.382"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.382"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.382" endtime="20241121 23:35:40.382"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.383" endtime="20241121 23:35:40.383"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.382" endtime="20241121 23:35:40.383"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.383"/>
</try>
<msg timestamp="20241121 23:35:40.383" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.383"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.383" endtime="20241121 23:35:40.383"/>
</return>
<msg timestamp="20241121 23:35:40.383" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.383"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.386" endtime="20241121 23:35:40.386"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.386" endtime="20241121 23:35:40.386"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.385" endtime="20241121 23:35:40.386"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.385" endtime="20241121 23:35:40.386"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.384" endtime="20241121 23:35:40.386"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.364" endtime="20241121 23:35:40.386"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.300" endtime="20241121 23:35:40.386"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:40.395" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:35:40.390" endtime="20241121 23:35:40.395"/>
</kw>
<msg timestamp="20241121 23:35:40.395" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.390" endtime="20241121 23:35:40.395"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.395"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.390" endtime="20241121 23:35:40.395"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.395"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.395"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.395"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.390" endtime="20241121 23:35:40.395"/>
</try>
<msg timestamp="20241121 23:35:40.395" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.390" endtime="20241121 23:35:40.395"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.395"/>
</return>
<msg timestamp="20241121 23:35:40.395" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.388" endtime="20241121 23:35:40.395"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.395"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.411"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.411"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.411"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.395" endtime="20241121 23:35:40.411"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.388" endtime="20241121 23:35:40.411"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:40.411" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.411"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.411"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.411"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.411"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.411"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.411"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.411"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:35:40.411" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.439"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.439"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.439" endtime="20241121 23:35:40.439"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.440" endtime="20241121 23:35:40.440"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.439" endtime="20241121 23:35:40.440"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.440"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:40.452" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:40.447" endtime="20241121 23:35:40.452"/>
</kw>
<msg timestamp="20241121 23:35:40.453" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.446" endtime="20241121 23:35:40.453"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.453" endtime="20241121 23:35:40.453"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.446" endtime="20241121 23:35:40.453"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.453" endtime="20241121 23:35:40.453"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.454" endtime="20241121 23:35:40.454"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.453" endtime="20241121 23:35:40.454"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.446" endtime="20241121 23:35:40.454"/>
</try>
<msg timestamp="20241121 23:35:40.454" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.445" endtime="20241121 23:35:40.454"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.454" endtime="20241121 23:35:40.454"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.444" endtime="20241121 23:35:40.454"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:40.455" endtime="20241121 23:35:40.455"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:40.454" endtime="20241121 23:35:40.455"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.444" endtime="20241121 23:35:40.455"/>
</try>
<msg timestamp="20241121 23:35:40.455" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.444" endtime="20241121 23:35:40.455"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.457" endtime="20241121 23:35:40.458"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.458" endtime="20241121 23:35:40.458"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.457" endtime="20241121 23:35:40.458"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.457" endtime="20241121 23:35:40.458"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.456" endtime="20241121 23:35:40.458"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.443" endtime="20241121 23:35:40.458"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:40.472" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:40.467" endtime="20241121 23:35:40.472"/>
</kw>
<msg timestamp="20241121 23:35:40.473" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.467" endtime="20241121 23:35:40.473"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.473" endtime="20241121 23:35:40.473"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.467" endtime="20241121 23:35:40.473"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.473" endtime="20241121 23:35:40.473"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.473" endtime="20241121 23:35:40.474"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.473" endtime="20241121 23:35:40.474"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.467" endtime="20241121 23:35:40.474"/>
</try>
<msg timestamp="20241121 23:35:40.474" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.466" endtime="20241121 23:35:40.474"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.474" endtime="20241121 23:35:40.474"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.465" endtime="20241121 23:35:40.474"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:40.474" endtime="20241121 23:35:40.474"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:40.474" endtime="20241121 23:35:40.475"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.465" endtime="20241121 23:35:40.475"/>
</try>
<msg timestamp="20241121 23:35:40.475" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.465" endtime="20241121 23:35:40.475"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.477" endtime="20241121 23:35:40.477"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.478" endtime="20241121 23:35:40.478"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.477" endtime="20241121 23:35:40.478"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.477" endtime="20241121 23:35:40.478"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.476" endtime="20241121 23:35:40.478"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.464" endtime="20241121 23:35:40.478"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:40.490" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:40.490" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:40.479" endtime="20241121 23:35:40.490"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:40.490" endtime="20241121 23:35:40.490"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.478" endtime="20241121 23:35:40.490"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.491" endtime="20241121 23:35:40.491"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.491" endtime="20241121 23:35:40.491"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.490" endtime="20241121 23:35:40.491"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.478" endtime="20241121 23:35:40.491"/>
</try>
<msg timestamp="20241121 23:35:40.491" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:40.462" endtime="20241121 23:35:40.491"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.494" endtime="20241121 23:35:40.494"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.494" endtime="20241121 23:35:40.494"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.494" endtime="20241121 23:35:40.494"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.494" endtime="20241121 23:35:40.494"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.493" endtime="20241121 23:35:40.495"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.458" endtime="20241121 23:35:40.495"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.495" endtime="20241121 23:35:40.495"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.495" endtime="20241121 23:35:40.495"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.458" endtime="20241121 23:35:40.495"/>
</try>
<status status="PASS" starttime="20241121 23:35:40.458" endtime="20241121 23:35:40.495"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:40.496" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<msg timestamp="20241121 23:35:40.496" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</try>
<msg timestamp="20241121 23:35:40.496" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</return>
<msg timestamp="20241121 23:35:40.496" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.496" endtime="20241121 23:35:40.496"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.441" endtime="20241121 23:35:40.496"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:40.512" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</kw>
<msg timestamp="20241121 23:35:40.512" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</try>
<msg timestamp="20241121 23:35:40.512" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</try>
<msg timestamp="20241121 23:35:40.512" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.512"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.527"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:40.527" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:35:40.527" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</return>
<status status="PASS" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</try>
<msg timestamp="20241121 23:35:40.527" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:40.512" endtime="20241121 23:35:40.527"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:35:40.527" endtime="20241121 23:35:40.527"/>
</return>
<msg timestamp="20241121 23:35:40.527" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:40.441" endtime="20241121 23:35:40.527"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:35:40.543" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</return>
<msg timestamp="20241121 23:35:40.543" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</if>
<status status="PASS" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.440" endtime="20241121 23:35:40.543"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.543"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.543"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.543"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.411" endtime="20241121 23:35:40.543"/>
</try>
<status status="PASS" starttime="20241121 23:35:40.298" endtime="20241121 23:35:40.543"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.287" endtime="20241121 23:35:40.543"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.543"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.559"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.559"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:40.543" endtime="20241121 23:35:40.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.559" endtime="20241121 23:35:40.574"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.249" endtime="20241121 23:35:40.574"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:40.574" endtime="20241121 23:35:40.574"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:41.577" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:40.574" endtime="20241121 23:35:41.577"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.245" endtime="20241121 23:35:41.577"/>
</kw>
<status status="PASS" starttime="20241121 23:35:40.245" endtime="20241121 23:35:41.577"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.577" endtime="20241121 23:35:41.577"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.577" endtime="20241121 23:35:41.577"/>
</branch>
<status status="PASS" starttime="20241121 23:35:40.243" endtime="20241121 23:35:41.577"/>
</try>
<status status="PASS" starttime="20241121 23:35:40.228" endtime="20241121 23:35:41.577"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:41.577" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:35:41.577" endtime="20241121 23:35:41.577"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:41.577" endtime="20241121 23:35:41.577"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:41.592" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:35:41.577" endtime="20241121 23:35:41.592"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:41.592" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.592"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:41.622" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:41.615" endtime="20241121 23:35:41.622"/>
</kw>
<msg timestamp="20241121 23:35:41.622" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.614" endtime="20241121 23:35:41.622"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:41.622" endtime="20241121 23:35:41.622"/>
</return>
<status status="PASS" starttime="20241121 23:35:41.614" endtime="20241121 23:35:41.622"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.622" endtime="20241121 23:35:41.622"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.622" endtime="20241121 23:35:41.622"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.622" endtime="20241121 23:35:41.622"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.613" endtime="20241121 23:35:41.622"/>
</try>
<msg timestamp="20241121 23:35:41.622" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.612" endtime="20241121 23:35:41.622"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:41.622" endtime="20241121 23:35:41.622"/>
</return>
<status status="PASS" starttime="20241121 23:35:41.610" endtime="20241121 23:35:41.622"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:41.622" endtime="20241121 23:35:41.622"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:41.622" endtime="20241121 23:35:41.622"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.610" endtime="20241121 23:35:41.622"/>
</try>
<msg timestamp="20241121 23:35:41.628" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.609" endtime="20241121 23:35:41.628"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.632"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.632"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.632"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.632"/>
</if>
<status status="PASS" starttime="20241121 23:35:41.630" endtime="20241121 23:35:41.632"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.608" endtime="20241121 23:35:41.632"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:41.647" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.647"/>
</kw>
<msg timestamp="20241121 23:35:41.647" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.647"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</return>
<status status="PASS" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.647"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.647"/>
</try>
<msg timestamp="20241121 23:35:41.647" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.647"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</return>
<msg timestamp="20241121 23:35:41.647" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.647"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</if>
<status status="PASS" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.647"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.632" endtime="20241121 23:35:41.647"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:41.680" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:41.665" endtime="20241121 23:35:41.680"/>
</kw>
<msg timestamp="20241121 23:35:41.680" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.663" endtime="20241121 23:35:41.680"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:41.680" endtime="20241121 23:35:41.680"/>
</return>
<status status="PASS" starttime="20241121 23:35:41.663" endtime="20241121 23:35:41.680"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.681" endtime="20241121 23:35:41.681"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.681" endtime="20241121 23:35:41.681"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.681" endtime="20241121 23:35:41.681"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.663" endtime="20241121 23:35:41.681"/>
</try>
<msg timestamp="20241121 23:35:41.682" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.663" endtime="20241121 23:35:41.682"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:41.682" endtime="20241121 23:35:41.682"/>
</return>
<msg timestamp="20241121 23:35:41.682" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:41.661" endtime="20241121 23:35:41.682"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.685" endtime="20241121 23:35:41.685"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.685" endtime="20241121 23:35:41.685"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.684" endtime="20241121 23:35:41.685"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.684" endtime="20241121 23:35:41.685"/>
</if>
<status status="PASS" starttime="20241121 23:35:41.683" endtime="20241121 23:35:41.685"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.647" endtime="20241121 23:35:41.685"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.686"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:41.686" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:41.686" endtime="20241121 23:35:41.686"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.688" endtime="20241121 23:35:41.688"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.687" endtime="20241121 23:35:41.688"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:41.688" endtime="20241121 23:35:41.689"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.688" endtime="20241121 23:35:41.689"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.687" endtime="20241121 23:35:41.689"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:41.689" endtime="20241121 23:35:41.736"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.689" endtime="20241121 23:35:41.736"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.736" endtime="20241121 23:35:41.736"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.736" endtime="20241121 23:35:41.736"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.736" endtime="20241121 23:35:41.736"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.689" endtime="20241121 23:35:41.736"/>
</try>
<status status="PASS" starttime="20241121 23:35:41.687" endtime="20241121 23:35:41.736"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.686" endtime="20241121 23:35:41.736"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.686" endtime="20241121 23:35:41.736"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.736" endtime="20241121 23:35:41.736"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.736" endtime="20241121 23:35:41.736"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.686" endtime="20241121 23:35:41.736"/>
</try>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.736"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.736"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.736" endtime="20241121 23:35:41.736"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.744" endtime="20241121 23:35:41.744"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.736" endtime="20241121 23:35:41.744"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.745" endtime="20241121 23:35:41.745"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.744" endtime="20241121 23:35:41.745"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.748" endtime="20241121 23:35:41.748"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.746" endtime="20241121 23:35:41.748"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.750" endtime="20241121 23:35:41.751"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.749" endtime="20241121 23:35:41.751"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.752" endtime="20241121 23:35:41.752"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.751" endtime="20241121 23:35:41.752"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.753" endtime="20241121 23:35:41.753"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.754" endtime="20241121 23:35:41.754"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.753" endtime="20241121 23:35:41.754"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.754" endtime="20241121 23:35:41.754"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.754" endtime="20241121 23:35:41.754"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:41.753" endtime="20241121 23:35:41.754"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:41.752" endtime="20241121 23:35:41.754"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:41.759" endtime="20241121 23:35:41.759"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.762" endtime="20241121 23:35:41.762"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.754" endtime="20241121 23:35:41.763"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.764" endtime="20241121 23:35:41.764"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.764" endtime="20241121 23:35:41.764"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.764" endtime="20241121 23:35:41.764"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.764" endtime="20241121 23:35:41.765"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.764" endtime="20241121 23:35:41.765"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:41.764" endtime="20241121 23:35:41.765"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:41.763" endtime="20241121 23:35:41.765"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:41.770" endtime="20241121 23:35:41.770"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.773" endtime="20241121 23:35:41.773"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.765" endtime="20241121 23:35:41.773"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.774" endtime="20241121 23:35:41.774"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.773" endtime="20241121 23:35:41.774"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.776" endtime="20241121 23:35:41.776"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.774" endtime="20241121 23:35:41.776"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:41.778" endtime="20241121 23:35:41.778"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:41.778" endtime="20241121 23:35:41.778"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:41.776" endtime="20241121 23:35:41.778"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:41.778"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:41.778" endtime="20241121 23:35:41.778"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:46.783" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:35:41.778" endtime="20241121 23:35:46.783"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:46.783"/>
</kw>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:46.783"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.783" endtime="20241121 23:35:46.783"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.783" endtime="20241121 23:35:46.783"/>
</branch>
<status status="PASS" starttime="20241121 23:35:41.592" endtime="20241121 23:35:46.783"/>
</try>
<status status="PASS" starttime="20241121 23:35:41.577" endtime="20241121 23:35:46.783"/>
</iter>
<status status="PASS" starttime="20241121 23:35:30.346" endtime="20241121 23:35:46.783"/>
</for>
<status status="PASS" starttime="20241121 23:35:30.346" endtime="20241121 23:35:46.783"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.346" endtime="20241121 23:35:46.783"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:46.783" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:35:46.783" endtime="20241121 23:35:46.783"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:35:46.783" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:35:46.783" endtime="20241121 23:35:46.783"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:35:46.814" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:35:46.814" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:35:46.783" endtime="20241121 23:35:46.814"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:46.814" endtime="20241121 23:35:46.814"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:35:46.814" endtime="20241121 23:35:46.814"/>
</return>
<status status="PASS" starttime="20241121 23:35:46.783" endtime="20241121 23:35:46.814"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:46.814"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:46.814" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:35:46.814" endtime="20241121 23:35:46.814"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:46.814" endtime="20241121 23:35:46.814"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:46.834" endtime="20241121 23:35:46.834"/>
</kw>
<msg timestamp="20241121 23:35:46.835" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.833" endtime="20241121 23:35:46.835"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:46.835" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:35:46.835" endtime="20241121 23:35:46.835"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:46.838" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.835" endtime="20241121 23:35:46.838"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.835" endtime="20241121 23:35:46.838"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.840" endtime="20241121 23:35:46.840"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.838" endtime="20241121 23:35:46.840"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.835" endtime="20241121 23:35:46.840"/>
</if>
<status status="PASS" starttime="20241121 23:35:46.835" endtime="20241121 23:35:46.841"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.835" endtime="20241121 23:35:46.841"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:46.842" endtime="20241121 23:35:46.842"/>
</return>
<msg timestamp="20241121 23:35:46.843" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.832" endtime="20241121 23:35:46.843"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:46.845" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:35:46.844" endtime="20241121 23:35:46.845"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:46.846" endtime="20241121 23:35:46.847"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:46.848" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:35:46.847" endtime="20241121 23:35:46.848"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:46.848" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.848" endtime="20241121 23:35:46.848"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:46.894" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:35:46.877" endtime="20241121 23:35:46.894"/>
</kw>
<msg timestamp="20241121 23:35:46.894" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.877" endtime="20241121 23:35:46.894"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:46.894" endtime="20241121 23:35:46.894"/>
</return>
<status status="PASS" starttime="20241121 23:35:46.877" endtime="20241121 23:35:46.894"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.894" endtime="20241121 23:35:46.894"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.894" endtime="20241121 23:35:46.894"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.894" endtime="20241121 23:35:46.894"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.877" endtime="20241121 23:35:46.894"/>
</try>
<msg timestamp="20241121 23:35:46.894" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.877" endtime="20241121 23:35:46.894"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:46.894" endtime="20241121 23:35:46.894"/>
</return>
<status status="PASS" starttime="20241121 23:35:46.874" endtime="20241121 23:35:46.894"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:46.894" endtime="20241121 23:35:46.894"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:46.894" endtime="20241121 23:35:46.894"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.874" endtime="20241121 23:35:46.894"/>
</try>
<msg timestamp="20241121 23:35:46.894" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.869" endtime="20241121 23:35:46.894"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.908" endtime="20241121 23:35:46.908"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.909" endtime="20241121 23:35:46.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.907" endtime="20241121 23:35:46.909"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.907" endtime="20241121 23:35:46.909"/>
</if>
<status status="PASS" starttime="20241121 23:35:46.894" endtime="20241121 23:35:46.910"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.869" endtime="20241121 23:35:46.910"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:46.934" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:35:46.921" endtime="20241121 23:35:46.934"/>
</kw>
<msg timestamp="20241121 23:35:46.935" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.920" endtime="20241121 23:35:46.935"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:46.935" endtime="20241121 23:35:46.935"/>
</return>
<status status="PASS" starttime="20241121 23:35:46.920" endtime="20241121 23:35:46.935"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.936" endtime="20241121 23:35:46.936"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.936" endtime="20241121 23:35:46.936"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.935" endtime="20241121 23:35:46.936"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.920" endtime="20241121 23:35:46.937"/>
</try>
<msg timestamp="20241121 23:35:46.937" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.919" endtime="20241121 23:35:46.937"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:46.937" endtime="20241121 23:35:46.937"/>
</return>
<msg timestamp="20241121 23:35:46.938" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.916" endtime="20241121 23:35:46.938"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.942" endtime="20241121 23:35:46.942"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.942" endtime="20241121 23:35:46.943"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.942" endtime="20241121 23:35:46.943"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.942" endtime="20241121 23:35:46.943"/>
</if>
<status status="PASS" starttime="20241121 23:35:46.940" endtime="20241121 23:35:46.943"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.915" endtime="20241121 23:35:46.943"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:46.957" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:46.949" endtime="20241121 23:35:46.957"/>
</kw>
<msg timestamp="20241121 23:35:46.957" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.949" endtime="20241121 23:35:46.957"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</return>
<status status="PASS" starttime="20241121 23:35:46.948" endtime="20241121 23:35:46.957"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.948" endtime="20241121 23:35:46.957"/>
</try>
<msg timestamp="20241121 23:35:46.957" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.948" endtime="20241121 23:35:46.957"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</return>
<msg timestamp="20241121 23:35:46.957" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:46.946" endtime="20241121 23:35:46.957"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</if>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.946" endtime="20241121 23:35:46.957"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.866" endtime="20241121 23:35:46.957"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:46.957" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.957"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:46.973" endtime="20241121 23:35:46.973"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:46.973" endtime="20241121 23:35:46.973"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:46.973" endtime="20241121 23:35:46.973"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.973" endtime="20241121 23:35:46.973"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:46.973"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:46.973" endtime="20241121 23:35:47.025"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.973" endtime="20241121 23:35:47.025"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.973" endtime="20241121 23:35:47.025"/>
</try>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:47.025"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:47.025"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:47.025"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.957" endtime="20241121 23:35:47.025"/>
</try>
<status status="PASS" starttime="20241121 23:35:46.864" endtime="20241121 23:35:47.025"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.857" endtime="20241121 23:35:47.025"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.025"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.041" endtime="20241121 23:35:47.041"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.025" endtime="20241121 23:35:47.041"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.041" endtime="20241121 23:35:47.043"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.043"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.056" endtime="20241121 23:35:47.056"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.043" endtime="20241121 23:35:47.056"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.057" endtime="20241121 23:35:47.057"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.057" endtime="20241121 23:35:47.058"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.057" endtime="20241121 23:35:47.058"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.058" endtime="20241121 23:35:47.058"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.058" endtime="20241121 23:35:47.058"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:47.057" endtime="20241121 23:35:47.058"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:47.056" endtime="20241121 23:35:47.058"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:47.063" endtime="20241121 23:35:47.063"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.066" endtime="20241121 23:35:47.066"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.058" endtime="20241121 23:35:47.066"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.067" endtime="20241121 23:35:47.067"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.066" endtime="20241121 23:35:47.067"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.069" endtime="20241121 23:35:47.069"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.067" endtime="20241121 23:35:47.069"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:47.075" endtime="20241121 23:35:47.075"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.075" endtime="20241121 23:35:47.075"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.069" endtime="20241121 23:35:47.075"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.848" endtime="20241121 23:35:47.075"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.075" endtime="20241121 23:35:47.076"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:47.076" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:47.076" endtime="20241121 23:35:47.076"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.848" endtime="20241121 23:35:47.076"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.848" endtime="20241121 23:35:47.076"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.077" endtime="20241121 23:35:47.077"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.076" endtime="20241121 23:35:47.077"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.848" endtime="20241121 23:35:47.077"/>
</try>
<status status="PASS" starttime="20241121 23:35:46.844" endtime="20241121 23:35:47.077"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.078" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:35:47.077" endtime="20241121 23:35:47.078"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.078" endtime="20241121 23:35:47.079"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:47.079" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:35:47.079" endtime="20241121 23:35:47.079"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.080" endtime="20241121 23:35:47.080"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.080" endtime="20241121 23:35:47.080"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.079" endtime="20241121 23:35:47.080"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.079" endtime="20241121 23:35:47.080"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.081" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:47.081" endtime="20241121 23:35:47.081"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:47.082" endtime="20241121 23:35:47.082"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.081" endtime="20241121 23:35:47.082"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.082" endtime="20241121 23:35:47.082"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.082" endtime="20241121 23:35:47.082"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:47.097" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:47.091" endtime="20241121 23:35:47.097"/>
</kw>
<msg timestamp="20241121 23:35:47.097" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.091" endtime="20241121 23:35:47.097"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:47.098" endtime="20241121 23:35:47.098"/>
</return>
<status status="PASS" starttime="20241121 23:35:47.091" endtime="20241121 23:35:47.098"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.098" endtime="20241121 23:35:47.098"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.098" endtime="20241121 23:35:47.098"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.098" endtime="20241121 23:35:47.098"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.091" endtime="20241121 23:35:47.099"/>
</try>
<msg timestamp="20241121 23:35:47.099" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.089" endtime="20241121 23:35:47.099"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:47.099" endtime="20241121 23:35:47.099"/>
</return>
<status status="PASS" starttime="20241121 23:35:47.089" endtime="20241121 23:35:47.099"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:47.099" endtime="20241121 23:35:47.099"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:47.099" endtime="20241121 23:35:47.099"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.088" endtime="20241121 23:35:47.100"/>
</try>
<msg timestamp="20241121 23:35:47.100" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.088" endtime="20241121 23:35:47.100"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.102" endtime="20241121 23:35:47.102"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.102" endtime="20241121 23:35:47.102"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.102" endtime="20241121 23:35:47.103"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.102" endtime="20241121 23:35:47.103"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.101" endtime="20241121 23:35:47.103"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.087" endtime="20241121 23:35:47.103"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:47.113" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:47.109" endtime="20241121 23:35:47.113"/>
</kw>
<msg timestamp="20241121 23:35:47.113" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.108" endtime="20241121 23:35:47.113"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</return>
<status status="PASS" starttime="20241121 23:35:47.108" endtime="20241121 23:35:47.113"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.108" endtime="20241121 23:35:47.113"/>
</try>
<msg timestamp="20241121 23:35:47.113" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.107" endtime="20241121 23:35:47.113"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</return>
<msg timestamp="20241121 23:35:47.113" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.106" endtime="20241121 23:35:47.113"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.113"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.104" endtime="20241121 23:35:47.113"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:47.171" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:47.126" endtime="20241121 23:35:47.171"/>
</kw>
<msg timestamp="20241121 23:35:47.171" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.125" endtime="20241121 23:35:47.171"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:47.171" endtime="20241121 23:35:47.171"/>
</return>
<status status="PASS" starttime="20241121 23:35:47.125" endtime="20241121 23:35:47.171"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.172" endtime="20241121 23:35:47.173"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.173" endtime="20241121 23:35:47.173"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.172" endtime="20241121 23:35:47.173"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.125" endtime="20241121 23:35:47.173"/>
</try>
<msg timestamp="20241121 23:35:47.173" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.124" endtime="20241121 23:35:47.173"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:47.173" endtime="20241121 23:35:47.173"/>
</return>
<msg timestamp="20241121 23:35:47.174" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.174"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.176" endtime="20241121 23:35:47.176"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.177" endtime="20241121 23:35:47.177"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.176" endtime="20241121 23:35:47.177"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.176" endtime="20241121 23:35:47.177"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.175" endtime="20241121 23:35:47.177"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.113" endtime="20241121 23:35:47.177"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.085" endtime="20241121 23:35:47.177"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:47.178" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:47.177" endtime="20241121 23:35:47.178"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.179" endtime="20241121 23:35:47.180"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.179" endtime="20241121 23:35:47.180"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:47.180" endtime="20241121 23:35:47.180"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.180" endtime="20241121 23:35:47.180"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.179" endtime="20241121 23:35:47.180"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:47.181" endtime="20241121 23:35:47.308"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.181" endtime="20241121 23:35:47.308"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.308"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.308"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.308"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.180" endtime="20241121 23:35:47.308"/>
</try>
<status status="PASS" starttime="20241121 23:35:47.179" endtime="20241121 23:35:47.308"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.178" endtime="20241121 23:35:47.308"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.178" endtime="20241121 23:35:47.308"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.308"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.308"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.178" endtime="20241121 23:35:47.308"/>
</try>
<status status="PASS" starttime="20241121 23:35:47.084" endtime="20241121 23:35:47.308"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.083" endtime="20241121 23:35:47.308"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.308"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.308"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.308"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.322" endtime="20241121 23:35:47.323"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.308" endtime="20241121 23:35:47.323"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.324"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.324" endtime="20241121 23:35:47.340"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.340"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:47.357" endtime="20241121 23:35:47.357"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.357" endtime="20241121 23:35:47.357"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.340" endtime="20241121 23:35:47.357"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.357" endtime="20241121 23:35:47.357"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.357" endtime="20241121 23:35:47.357"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.372" endtime="20241121 23:35:47.372"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.357" endtime="20241121 23:35:47.372"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.372" endtime="20241121 23:35:47.373"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.081" endtime="20241121 23:35:47.373"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:47.373" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.080" endtime="20241121 23:35:47.373"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.080" endtime="20241121 23:35:47.373"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.080" endtime="20241121 23:35:47.373"/>
</try>
<status status="PASS" starttime="20241121 23:35:47.077" endtime="20241121 23:35:47.373"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.373" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:47.373" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.373"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.389" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:47.389" endtime="20241121 23:35:47.391"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:47.392" endtime="20241121 23:35:47.392"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.392" endtime="20241121 23:35:47.392"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.394" endtime="20241121 23:35:47.394"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.394" endtime="20241121 23:35:47.394"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.397" endtime="20241121 23:35:47.397"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.394" endtime="20241121 23:35:47.397"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.400" endtime="20241121 23:35:47.400"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.400" endtime="20241121 23:35:47.400"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.398" endtime="20241121 23:35:47.400"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.400" endtime="20241121 23:35:47.400"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.400" endtime="20241121 23:35:47.400"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.400" endtime="20241121 23:35:47.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:47.425" endtime="20241121 23:35:47.425"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.430" endtime="20241121 23:35:47.430"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.407" endtime="20241121 23:35:47.431"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.433" endtime="20241121 23:35:47.433"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.433" endtime="20241121 23:35:47.433"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.433" endtime="20241121 23:35:47.434"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.434" endtime="20241121 23:35:47.434"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.434" endtime="20241121 23:35:47.434"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:47.433" endtime="20241121 23:35:47.434"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:47.431" endtime="20241121 23:35:47.434"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:47.442" endtime="20241121 23:35:47.442"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.446" endtime="20241121 23:35:47.446"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.435" endtime="20241121 23:35:47.446"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:47.552" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:47.452" endtime="20241121 23:35:47.552"/>
</kw>
<msg timestamp="20241121 23:35:47.552" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.451" endtime="20241121 23:35:47.552"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:47.552" endtime="20241121 23:35:47.552"/>
</return>
<status status="PASS" starttime="20241121 23:35:47.451" endtime="20241121 23:35:47.552"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.552" endtime="20241121 23:35:47.552"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.555" endtime="20241121 23:35:47.555"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.552" endtime="20241121 23:35:47.555"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.451" endtime="20241121 23:35:47.555"/>
</try>
<msg timestamp="20241121 23:35:47.556" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.450" endtime="20241121 23:35:47.556"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:47.556" endtime="20241121 23:35:47.556"/>
</return>
<status status="PASS" starttime="20241121 23:35:47.449" endtime="20241121 23:35:47.557"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:47.557" endtime="20241121 23:35:47.557"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:47.557" endtime="20241121 23:35:47.557"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.449" endtime="20241121 23:35:47.558"/>
</try>
<msg timestamp="20241121 23:35:47.558" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.448" endtime="20241121 23:35:47.558"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.446" endtime="20241121 23:35:47.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.563" endtime="20241121 23:35:47.563"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.559" endtime="20241121 23:35:47.564"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:47.575" endtime="20241121 23:35:47.575"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.575" endtime="20241121 23:35:47.575"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.564" endtime="20241121 23:35:47.575"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.391" endtime="20241121 23:35:47.575"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.576" endtime="20241121 23:35:47.576"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:47.577" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:35:47.577" endtime="20241121 23:35:47.577"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.389" endtime="20241121 23:35:47.577"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.389" endtime="20241121 23:35:47.577"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.578" endtime="20241121 23:35:47.578"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.577" endtime="20241121 23:35:47.578"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.578"/>
</try>
<status status="PASS" starttime="20241121 23:35:47.373" endtime="20241121 23:35:47.578"/>
</iter>
<status status="PASS" starttime="20241121 23:35:46.843" endtime="20241121 23:35:47.578"/>
</for>
<status status="PASS" starttime="20241121 23:35:46.843" endtime="20241121 23:35:47.578"/>
</branch>
<status status="PASS" starttime="20241121 23:35:46.843" endtime="20241121 23:35:47.578"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:47.579" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:35:47.579" endtime="20241121 23:35:47.579"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:35:47.580" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:35:47.580" endtime="20241121 23:35:47.580"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:35:47.625" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:35:47.625" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:35:47.580" endtime="20241121 23:35:47.625"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.625" endtime="20241121 23:35:47.625"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:35:47.625" endtime="20241121 23:35:47.625"/>
</return>
<status status="PASS" starttime="20241121 23:35:47.579" endtime="20241121 23:35:47.625"/>
</kw>
<status status="PASS" starttime="20241121 23:35:46.814" endtime="20241121 23:35:47.625"/>
</iter>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:47.625"/>
</for>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:47.625"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.328" endtime="20241121 23:35:47.625"/>
</if>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:47.625"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.625" endtime="20241121 23:35:47.625"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.625" endtime="20241121 23:35:47.625"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.306" endtime="20241121 23:35:47.625"/>
</if>
<status status="PASS" starttime="20241121 23:35:30.296" endtime="20241121 23:35:47.625"/>
</kw>
<status status="PASS" starttime="20241121 23:35:30.296" endtime="20241121 23:35:47.625"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.625" endtime="20241121 23:35:47.625"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.625" endtime="20241121 23:35:47.625"/>
</branch>
<status status="PASS" starttime="20241121 23:35:30.296" endtime="20241121 23:35:47.625"/>
</try>
<status status="PASS" starttime="20241121 23:35:30.241" endtime="20241121 23:35:47.625"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.625" endtime="20241121 23:35:47.625"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:35:47.676" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '60', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:02:43.129Z', 'createdAt': '2024-11-21T18:02:43.129Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:35:47.625" endtime="20241121 23:35:47.676"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.676" endtime="20241121 23:35:47.687"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:47.692" endtime="20241121 23:35:47.692"/>
</kw>
<msg timestamp="20241121 23:35:47.692" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.691" endtime="20241121 23:35:47.692"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.694" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:35:47.693" endtime="20241121 23:35:47.694"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.695" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.694" endtime="20241121 23:35:47.695"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.694" endtime="20241121 23:35:47.695"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.695" endtime="20241121 23:35:47.695"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.695" endtime="20241121 23:35:47.695"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.694" endtime="20241121 23:35:47.696"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.693" endtime="20241121 23:35:47.696"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.693" endtime="20241121 23:35:47.696"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:47.696" endtime="20241121 23:35:47.696"/>
</return>
<msg timestamp="20241121 23:35:47.696" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.690" endtime="20241121 23:35:47.696"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.696" endtime="20241121 23:35:47.696"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:35:47.696" endtime="20241121 23:35:47.696"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:47.696" endtime="20241121 23:35:47.696"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.696" endtime="20241121 23:35:47.696"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:47.701" endtime="20241121 23:35:47.701"/>
</kw>
<msg timestamp="20241121 23:35:47.701" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.701" endtime="20241121 23:35:47.702"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.702" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:35:47.702" endtime="20241121 23:35:47.702"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.703" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.703" endtime="20241121 23:35:47.703"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.703" endtime="20241121 23:35:47.703"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.704" endtime="20241121 23:35:47.704"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.703" endtime="20241121 23:35:47.704"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.703" endtime="20241121 23:35:47.704"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.702" endtime="20241121 23:35:47.704"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.702" endtime="20241121 23:35:47.704"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:47.704" endtime="20241121 23:35:47.704"/>
</return>
<msg timestamp="20241121 23:35:47.705" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.701" endtime="20241121 23:35:47.705"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:47.709" endtime="20241121 23:35:47.709"/>
</kw>
<msg timestamp="20241121 23:35:47.709" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.708" endtime="20241121 23:35:47.709"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.710" level="INFO">${values} = {'id': '60', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:02:43.129Z', 'createdAt': '2024-11-21T18:02:43.129Z'}</msg>
<status status="PASS" starttime="20241121 23:35:47.710" endtime="20241121 23:35:47.710"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.711" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.711" endtime="20241121 23:35:47.711"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.711" endtime="20241121 23:35:47.711"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.711" endtime="20241121 23:35:47.712"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.711" endtime="20241121 23:35:47.712"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.710" endtime="20241121 23:35:47.712"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.710" endtime="20241121 23:35:47.712"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.709" endtime="20241121 23:35:47.712"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:47.712" endtime="20241121 23:35:47.712"/>
</return>
<msg timestamp="20241121 23:35:47.712" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.707" endtime="20241121 23:35:47.712"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.713" endtime="20241121 23:35:47.713"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.713" endtime="20241121 23:35:47.714"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.713" endtime="20241121 23:35:47.714"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.714" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:35:47.714" endtime="20241121 23:35:47.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.715" level="INFO">${testCaseRun} = {'id': '60', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:02:43.129Z', 'createdAt': '2024-11-21T18:02:43.129Z'}</msg>
<status status="PASS" starttime="20241121 23:35:47.714" endtime="20241121 23:35:47.715"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.715" endtime="20241121 23:35:47.716"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:47.718" endtime="20241121 23:35:47.719"/>
</kw>
<msg timestamp="20241121 23:35:47.719" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.718" endtime="20241121 23:35:47.719"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.720" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:35:47.719" endtime="20241121 23:35:47.720"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.721" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.720" endtime="20241121 23:35:47.721"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.720" endtime="20241121 23:35:47.721"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.721" endtime="20241121 23:35:47.721"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.721" endtime="20241121 23:35:47.721"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.720" endtime="20241121 23:35:47.721"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.719" endtime="20241121 23:35:47.722"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.719" endtime="20241121 23:35:47.722"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:47.722" endtime="20241121 23:35:47.722"/>
</return>
<msg timestamp="20241121 23:35:47.722" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.718" endtime="20241121 23:35:47.722"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.724" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:35:47.724" endtime="20241121 23:35:47.724"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.724" endtime="20241121 23:35:47.726"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:47.729" endtime="20241121 23:35:47.729"/>
</kw>
<msg timestamp="20241121 23:35:47.729" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.729" endtime="20241121 23:35:47.729"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.730" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:35:47.730" endtime="20241121 23:35:47.730"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.731" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.731" endtime="20241121 23:35:47.731"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.731" endtime="20241121 23:35:47.731"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.731" endtime="20241121 23:35:47.731"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.731" endtime="20241121 23:35:47.732"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.730" endtime="20241121 23:35:47.732"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.730" endtime="20241121 23:35:47.732"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.729" endtime="20241121 23:35:47.732"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:35:47.732" endtime="20241121 23:35:47.732"/>
</return>
<msg timestamp="20241121 23:35:47.732" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:35:47.728" endtime="20241121 23:35:47.732"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.734" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:35:47.733" endtime="20241121 23:35:47.734"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:47.734" endtime="20241121 23:35:47.734"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:47.734" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:35:47.734" endtime="20241121 23:35:47.734"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.735" endtime="20241121 23:35:47.735"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:47.735" endtime="20241121 23:35:47.735"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:47.734" endtime="20241121 23:35:47.735"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.734" endtime="20241121 23:35:47.735"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:47.736" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:35:47.736" endtime="20241121 23:35:47.736"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:35:47.738" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:35:47.742" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:35:47.742" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:35:47.737" endtime="20241121 23:35:47.742"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:35:47.743" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:35:47.749" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:35:47.749" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:35:47.743" endtime="20241121 23:35:47.749"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:35:47.749" endtime="20241121 23:35:47.749"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:35:55.137" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:35:55.138" level="INFO">${page_id} = {'page_id': 'page=7cc5a24f-8135-43bc-9196-9a7665dca707', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:35:47.749" endtime="20241121 23:35:55.138"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:35:55.138" level="INFO">Switching to page {'page_id': 'page=7cc5a24f-8135-43bc-9196-9a7665dca707', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:35:55.164" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=a124a82d-d86e-4075-90dc-c1a459a017fd",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=75b84b73-7ea3-407c-8055-c3cfa95050da",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=203ad8f9-0f8a-4fa1-b7a2-cb91c9228608",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=f7d786f1-7687-4a76-8d25-c9b9507ddec7",
        "activePage": "page=7cc5a24f-8135-43bc-9196-9a7665dca707",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=7cc5a24f-8135-43bc-9196-9a7665dca707",
            "timestamp": 1732212347.899
          }
        ]
      }
    ],
    "activeContext": "context=f7d786f1-7687-4a76-8d25-c9b9507ddec7",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:35:55.172" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:35:55.138" endtime="20241121 23:35:55.172"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.737" endtime="20241121 23:35:55.172"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.737" endtime="20241121 23:35:55.172"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.173" endtime="20241121 23:35:55.173"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.172" endtime="20241121 23:35:55.173"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.175" endtime="20241121 23:35:55.175"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.173" endtime="20241121 23:35:55.176"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.178" endtime="20241121 23:35:55.178"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.180" endtime="20241121 23:35:55.180"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.176" endtime="20241121 23:35:55.180"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.182" endtime="20241121 23:35:55.182"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.180" endtime="20241121 23:35:55.182"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.187" endtime="20241121 23:35:55.188"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.182" endtime="20241121 23:35:55.188"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.191" endtime="20241121 23:35:55.191"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.188" endtime="20241121 23:35:55.191"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.194" endtime="20241121 23:35:55.194"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.192" endtime="20241121 23:35:55.194"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.197" endtime="20241121 23:35:55.197"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.197" endtime="20241121 23:35:55.198"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.197" endtime="20241121 23:35:55.198"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.198" endtime="20241121 23:35:55.198"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.198" endtime="20241121 23:35:55.198"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:55.197" endtime="20241121 23:35:55.198"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:55.194" endtime="20241121 23:35:55.199"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:55.205" endtime="20241121 23:35:55.205"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.209" endtime="20241121 23:35:55.209"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.199" endtime="20241121 23:35:55.209"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.210" endtime="20241121 23:35:55.211"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.211" endtime="20241121 23:35:55.211"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.211" endtime="20241121 23:35:55.211"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.211" endtime="20241121 23:35:55.211"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.211" endtime="20241121 23:35:55.212"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:55.211" endtime="20241121 23:35:55.212"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:55.209" endtime="20241121 23:35:55.212"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:55.218" endtime="20241121 23:35:55.219"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.222" endtime="20241121 23:35:55.222"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.212" endtime="20241121 23:35:55.222"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.223" endtime="20241121 23:35:55.224"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.222" endtime="20241121 23:35:55.224"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.226" endtime="20241121 23:35:55.226"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.224" endtime="20241121 23:35:55.226"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:55.233" endtime="20241121 23:35:55.233"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:55.233" endtime="20241121 23:35:55.233"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:55.226" endtime="20241121 23:35:55.233"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.736" endtime="20241121 23:35:55.233"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:55.234" endtime="20241121 23:35:55.234"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:56.245" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:55.234" endtime="20241121 23:35:56.245"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.735" endtime="20241121 23:35:56.245"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.735" endtime="20241121 23:35:56.245"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.245" endtime="20241121 23:35:56.245"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.245" endtime="20241121 23:35:56.245"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.735" endtime="20241121 23:35:56.245"/>
</try>
<status status="PASS" starttime="20241121 23:35:47.733" endtime="20241121 23:35:56.245"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:56.245" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:35:56.245" endtime="20241121 23:35:56.245"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:56.245" endtime="20241121 23:35:56.245"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:56.245" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:35:56.245" endtime="20241121 23:35:56.245"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.260"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.260"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.245" endtime="20241121 23:35:56.260"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.245" endtime="20241121 23:35:56.260"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:56.260" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.260"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.260"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.260"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.260"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.260"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.279" endtime="20241121 23:35:56.279"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.285" endtime="20241121 23:35:56.285"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.290" endtime="20241121 23:35:56.290"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.281" endtime="20241121 23:35:56.290"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.293" endtime="20241121 23:35:56.293"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.291" endtime="20241121 23:35:56.293"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.294" endtime="20241121 23:35:56.294"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.293" endtime="20241121 23:35:56.294"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:56.323" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.323"/>
</kw>
<msg timestamp="20241121 23:35:56.323" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.323"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.323" endtime="20241121 23:35:56.323"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.323"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.323" endtime="20241121 23:35:56.323"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.323" endtime="20241121 23:35:56.323"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.323" endtime="20241121 23:35:56.323"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.323"/>
</try>
<msg timestamp="20241121 23:35:56.323" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.323"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.323" endtime="20241121 23:35:56.323"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.323"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:56.323" endtime="20241121 23:35:56.331"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:56.323" endtime="20241121 23:35:56.331"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.331"/>
</try>
<msg timestamp="20241121 23:35:56.331" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.331"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.334" endtime="20241121 23:35:56.334"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.334" endtime="20241121 23:35:56.334"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.333" endtime="20241121 23:35:56.334"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.333" endtime="20241121 23:35:56.334"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.332" endtime="20241121 23:35:56.334"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.334"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:56.348" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:56.343" endtime="20241121 23:35:56.348"/>
</kw>
<msg timestamp="20241121 23:35:56.349" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.343" endtime="20241121 23:35:56.349"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.349" endtime="20241121 23:35:56.349"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.342" endtime="20241121 23:35:56.349"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.349" endtime="20241121 23:35:56.349"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.350" endtime="20241121 23:35:56.350"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.349" endtime="20241121 23:35:56.350"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.342" endtime="20241121 23:35:56.350"/>
</try>
<msg timestamp="20241121 23:35:56.350" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.342" endtime="20241121 23:35:56.350"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.350" endtime="20241121 23:35:56.350"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.341" endtime="20241121 23:35:56.350"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:56.351" endtime="20241121 23:35:56.351"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:56.351" endtime="20241121 23:35:56.351"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.341" endtime="20241121 23:35:56.351"/>
</try>
<msg timestamp="20241121 23:35:56.351" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.340" endtime="20241121 23:35:56.351"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.353" endtime="20241121 23:35:56.354"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.354" endtime="20241121 23:35:56.354"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.353" endtime="20241121 23:35:56.354"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.353" endtime="20241121 23:35:56.354"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.352" endtime="20241121 23:35:56.354"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.340" endtime="20241121 23:35:56.354"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:56.365" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:56.365" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:56.355" endtime="20241121 23:35:56.365"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.354" endtime="20241121 23:35:56.365"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.354" endtime="20241121 23:35:56.365"/>
</try>
<msg timestamp="20241121 23:35:56.365" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:56.338" endtime="20241121 23:35:56.365"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.337" endtime="20241121 23:35:56.365"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.365"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.337" endtime="20241121 23:35:56.365"/>
</try>
<status status="PASS" starttime="20241121 23:35:56.336" endtime="20241121 23:35:56.365"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:56.381" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</kw>
<msg timestamp="20241121 23:35:56.381" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</try>
<msg timestamp="20241121 23:35:56.381" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</return>
<msg timestamp="20241121 23:35:56.381" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.381"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.381"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.365" endtime="20241121 23:35:56.381"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.300" endtime="20241121 23:35:56.381"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:56.397" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:35:56.397" endtime="20241121 23:35:56.412"/>
</kw>
<msg timestamp="20241121 23:35:56.412" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.397" endtime="20241121 23:35:56.412"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.397" endtime="20241121 23:35:56.412"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.397" endtime="20241121 23:35:56.412"/>
</try>
<msg timestamp="20241121 23:35:56.412" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.397" endtime="20241121 23:35:56.412"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</return>
<msg timestamp="20241121 23:35:56.412" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.412"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.381" endtime="20241121 23:35:56.412"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:56.412" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.412"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:35:56.412" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.449"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.449"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.450" endtime="20241121 23:35:56.450"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.450" endtime="20241121 23:35:56.450"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.449" endtime="20241121 23:35:56.450"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.450"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:56.462" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:56.456" endtime="20241121 23:35:56.462"/>
</kw>
<msg timestamp="20241121 23:35:56.462" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.456" endtime="20241121 23:35:56.462"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.462" endtime="20241121 23:35:56.462"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.456" endtime="20241121 23:35:56.462"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.463" endtime="20241121 23:35:56.463"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.463" endtime="20241121 23:35:56.463"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.462" endtime="20241121 23:35:56.463"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.456" endtime="20241121 23:35:56.463"/>
</try>
<msg timestamp="20241121 23:35:56.464" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.455" endtime="20241121 23:35:56.464"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.464" endtime="20241121 23:35:56.464"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.454" endtime="20241121 23:35:56.464"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:56.464" endtime="20241121 23:35:56.464"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:56.464" endtime="20241121 23:35:56.464"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.454" endtime="20241121 23:35:56.464"/>
</try>
<msg timestamp="20241121 23:35:56.464" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.454" endtime="20241121 23:35:56.464"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.467" endtime="20241121 23:35:56.467"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.467" endtime="20241121 23:35:56.467"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.467" endtime="20241121 23:35:56.467"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.467" endtime="20241121 23:35:56.467"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.466" endtime="20241121 23:35:56.468"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.453" endtime="20241121 23:35:56.468"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:56.482" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:56.476" endtime="20241121 23:35:56.482"/>
</kw>
<msg timestamp="20241121 23:35:56.482" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.476" endtime="20241121 23:35:56.482"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.482" endtime="20241121 23:35:56.483"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.476" endtime="20241121 23:35:56.483"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.483" endtime="20241121 23:35:56.483"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.483" endtime="20241121 23:35:56.483"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.483" endtime="20241121 23:35:56.483"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.476" endtime="20241121 23:35:56.484"/>
</try>
<msg timestamp="20241121 23:35:56.484" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.475" endtime="20241121 23:35:56.484"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.484" endtime="20241121 23:35:56.484"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.474" endtime="20241121 23:35:56.484"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:56.484" endtime="20241121 23:35:56.484"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:56.484" endtime="20241121 23:35:56.484"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.474" endtime="20241121 23:35:56.484"/>
</try>
<msg timestamp="20241121 23:35:56.485" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.474" endtime="20241121 23:35:56.485"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.487" endtime="20241121 23:35:56.487"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.487" endtime="20241121 23:35:56.487"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.487" endtime="20241121 23:35:56.488"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.487" endtime="20241121 23:35:56.488"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.486" endtime="20241121 23:35:56.488"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.473" endtime="20241121 23:35:56.488"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:56.498" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:56.498" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:56.488" endtime="20241121 23:35:56.498"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.488" endtime="20241121 23:35:56.498"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.488" endtime="20241121 23:35:56.498"/>
</try>
<msg timestamp="20241121 23:35:56.498" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:56.471" endtime="20241121 23:35:56.498"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.470" endtime="20241121 23:35:56.498"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.498"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.470" endtime="20241121 23:35:56.498"/>
</try>
<status status="PASS" starttime="20241121 23:35:56.470" endtime="20241121 23:35:56.498"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:56.515" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.515"/>
</kw>
<msg timestamp="20241121 23:35:56.515" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.515"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.515" endtime="20241121 23:35:56.515"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.515"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.515" endtime="20241121 23:35:56.516"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.516" endtime="20241121 23:35:56.516"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.515" endtime="20241121 23:35:56.516"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.516"/>
</try>
<msg timestamp="20241121 23:35:56.516" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.516"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.516" endtime="20241121 23:35:56.516"/>
</return>
<msg timestamp="20241121 23:35:56.517" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.517"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.520" endtime="20241121 23:35:56.520"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.520" endtime="20241121 23:35:56.520"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.520" endtime="20241121 23:35:56.520"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.519" endtime="20241121 23:35:56.520"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.519" endtime="20241121 23:35:56.520"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.498" endtime="20241121 23:35:56.520"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.451" endtime="20241121 23:35:56.521"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:56.529" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:35:56.526" endtime="20241121 23:35:56.529"/>
</kw>
<msg timestamp="20241121 23:35:56.529" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.526" endtime="20241121 23:35:56.529"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.526" endtime="20241121 23:35:56.529"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.525" endtime="20241121 23:35:56.529"/>
</try>
<msg timestamp="20241121 23:35:56.529" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.525" endtime="20241121 23:35:56.529"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.524" endtime="20241121 23:35:56.529"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.524" endtime="20241121 23:35:56.529"/>
</try>
<msg timestamp="20241121 23:35:56.529" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.524" endtime="20241121 23:35:56.529"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.529"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.523" endtime="20241121 23:35:56.529"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:56.545" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:35:56.545" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.545"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:56.545" endtime="20241121 23:35:56.545"/>
</return>
<status status="PASS" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.545"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.545" endtime="20241121 23:35:56.545"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.545" endtime="20241121 23:35:56.545"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.545" endtime="20241121 23:35:56.545"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.529" endtime="20241121 23:35:56.545"/>
</try>
<msg timestamp="20241121 23:35:56.545" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:56.522" endtime="20241121 23:35:56.545"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:35:56.545" endtime="20241121 23:35:56.545"/>
</return>
<msg timestamp="20241121 23:35:56.545" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:35:56.451" endtime="20241121 23:35:56.545"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:35:56.545" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.545" endtime="20241121 23:35:56.545"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:56.545" endtime="20241121 23:35:56.545"/>
</return>
<msg timestamp="20241121 23:35:56.545" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:35:56.545" endtime="20241121 23:35:56.545"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</if>
<status status="PASS" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.450" endtime="20241121 23:35:56.560"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.560"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.560"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.560"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.412" endtime="20241121 23:35:56.560"/>
</try>
<status status="PASS" starttime="20241121 23:35:56.299" endtime="20241121 23:35:56.560"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.294" endtime="20241121 23:35:56.560"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.560"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.560" endtime="20241121 23:35:56.576"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.576"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:56.592" endtime="20241121 23:35:56.592"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:56.592" endtime="20241121 23:35:56.592"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:56.576" endtime="20241121 23:35:56.592"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.260" endtime="20241121 23:35:56.592"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:56.592" endtime="20241121 23:35:56.592"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:57.595" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:56.592" endtime="20241121 23:35:57.595"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.260" endtime="20241121 23:35:57.595"/>
</kw>
<status status="PASS" starttime="20241121 23:35:56.260" endtime="20241121 23:35:57.595"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</branch>
<status status="PASS" starttime="20241121 23:35:56.260" endtime="20241121 23:35:57.595"/>
</try>
<status status="PASS" starttime="20241121 23:35:56.245" endtime="20241121 23:35:57.595"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:57.595" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:57.595" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:57.595" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.595"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.611" endtime="20241121 23:35:57.611"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.612"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.616" endtime="20241121 23:35:57.617"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.620" endtime="20241121 23:35:57.620"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.612" endtime="20241121 23:35:57.620"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.623" endtime="20241121 23:35:57.623"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.621" endtime="20241121 23:35:57.623"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.629" endtime="20241121 23:35:57.629"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.624" endtime="20241121 23:35:57.630"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:57.647" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.647"/>
</kw>
<msg timestamp="20241121 23:35:57.647" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.647"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.647" endtime="20241121 23:35:57.647"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.647"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.647" endtime="20241121 23:35:57.647"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.647" endtime="20241121 23:35:57.647"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.647" endtime="20241121 23:35:57.647"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.647"/>
</try>
<msg timestamp="20241121 23:35:57.647" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.647"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.647" endtime="20241121 23:35:57.647"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.647"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:57.647" endtime="20241121 23:35:57.647"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:57.647" endtime="20241121 23:35:57.647"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.647"/>
</try>
<msg timestamp="20241121 23:35:57.647" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.647"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.664"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.664"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.664"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.664"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.663" endtime="20241121 23:35:57.664"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.664"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:57.690" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:57.683" endtime="20241121 23:35:57.690"/>
</kw>
<msg timestamp="20241121 23:35:57.690" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.683" endtime="20241121 23:35:57.690"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.690" endtime="20241121 23:35:57.691"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.682" endtime="20241121 23:35:57.691"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.691" endtime="20241121 23:35:57.691"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.691" endtime="20241121 23:35:57.692"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.691" endtime="20241121 23:35:57.692"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.682" endtime="20241121 23:35:57.692"/>
</try>
<msg timestamp="20241121 23:35:57.692" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.681" endtime="20241121 23:35:57.692"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.692" endtime="20241121 23:35:57.692"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.679" endtime="20241121 23:35:57.692"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:57.693" endtime="20241121 23:35:57.693"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:57.693" endtime="20241121 23:35:57.693"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.679" endtime="20241121 23:35:57.693"/>
</try>
<msg timestamp="20241121 23:35:57.693" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.693"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.697" endtime="20241121 23:35:57.697"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.697" endtime="20241121 23:35:57.698"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.697" endtime="20241121 23:35:57.698"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.696" endtime="20241121 23:35:57.698"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.695" endtime="20241121 23:35:57.698"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.698"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:57.711" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:57.711" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:57.699" endtime="20241121 23:35:57.712"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:57.712" endtime="20241121 23:35:57.712"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.698" endtime="20241121 23:35:57.712"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.712" endtime="20241121 23:35:57.713"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.713" endtime="20241121 23:35:57.713"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.712" endtime="20241121 23:35:57.713"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.698" endtime="20241121 23:35:57.713"/>
</try>
<msg timestamp="20241121 23:35:57.713" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.714"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.714"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.714"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.714"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.714"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.714"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.714"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.714"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.714"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.714"/>
</try>
<status status="PASS" starttime="20241121 23:35:57.664" endtime="20241121 23:35:57.714"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:57.730" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.730"/>
</kw>
<msg timestamp="20241121 23:35:57.730" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.730"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.730"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.730"/>
</try>
<msg timestamp="20241121 23:35:57.730" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.730"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</return>
<msg timestamp="20241121 23:35:57.730" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.730"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.730"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.714" endtime="20241121 23:35:57.730"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.730"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:57.759" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.759"/>
</kw>
<msg timestamp="20241121 23:35:57.759" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.760"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.760" endtime="20241121 23:35:57.760"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.760"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.760" endtime="20241121 23:35:57.760"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.760" endtime="20241121 23:35:57.761"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.760" endtime="20241121 23:35:57.761"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.761"/>
</try>
<msg timestamp="20241121 23:35:57.761" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.761"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.761" endtime="20241121 23:35:57.761"/>
</return>
<msg timestamp="20241121 23:35:57.761" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.761"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.764" endtime="20241121 23:35:57.764"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.764" endtime="20241121 23:35:57.764"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.764" endtime="20241121 23:35:57.764"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.764" endtime="20241121 23:35:57.764"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.763" endtime="20241121 23:35:57.765"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.730" endtime="20241121 23:35:57.765"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:57.765" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:57.765" endtime="20241121 23:35:57.765"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.768" endtime="20241121 23:35:57.768"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.769" endtime="20241121 23:35:57.769"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.768" endtime="20241121 23:35:57.769"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:57.769" endtime="20241121 23:35:57.769"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.769" endtime="20241121 23:35:57.769"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.768" endtime="20241121 23:35:57.769"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:35:57.769" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:35:57.769" endtime="20241121 23:35:57.793"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.769" endtime="20241121 23:35:57.794"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.794" endtime="20241121 23:35:57.794"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.794" endtime="20241121 23:35:57.794"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.794" endtime="20241121 23:35:57.794"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.769" endtime="20241121 23:35:57.794"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:57.807" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:57.802" endtime="20241121 23:35:57.807"/>
</kw>
<msg timestamp="20241121 23:35:57.807" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.801" endtime="20241121 23:35:57.807"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.807" endtime="20241121 23:35:57.807"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.801" endtime="20241121 23:35:57.807"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.808" endtime="20241121 23:35:57.808"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.808" endtime="20241121 23:35:57.808"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.807" endtime="20241121 23:35:57.808"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.801" endtime="20241121 23:35:57.808"/>
</try>
<msg timestamp="20241121 23:35:57.809" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.801" endtime="20241121 23:35:57.809"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.809" endtime="20241121 23:35:57.809"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.799" endtime="20241121 23:35:57.809"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:57.809" endtime="20241121 23:35:57.809"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:57.809" endtime="20241121 23:35:57.809"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.799" endtime="20241121 23:35:57.809"/>
</try>
<msg timestamp="20241121 23:35:57.809" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.799" endtime="20241121 23:35:57.809"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.812" endtime="20241121 23:35:57.812"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.812" endtime="20241121 23:35:57.812"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.812" endtime="20241121 23:35:57.813"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.812" endtime="20241121 23:35:57.813"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.811" endtime="20241121 23:35:57.813"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.798" endtime="20241121 23:35:57.813"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:57.828" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:57.822" endtime="20241121 23:35:57.828"/>
</kw>
<msg timestamp="20241121 23:35:57.829" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.821" endtime="20241121 23:35:57.829"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.829" endtime="20241121 23:35:57.829"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.821" endtime="20241121 23:35:57.829"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.829" endtime="20241121 23:35:57.830"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.830" endtime="20241121 23:35:57.830"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.829" endtime="20241121 23:35:57.830"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.821" endtime="20241121 23:35:57.830"/>
</try>
<msg timestamp="20241121 23:35:57.830" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.821" endtime="20241121 23:35:57.830"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.830" endtime="20241121 23:35:57.831"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.820" endtime="20241121 23:35:57.831"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:57.831" endtime="20241121 23:35:57.831"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:57.831" endtime="20241121 23:35:57.831"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.820" endtime="20241121 23:35:57.831"/>
</try>
<msg timestamp="20241121 23:35:57.831" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.819" endtime="20241121 23:35:57.831"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.834" endtime="20241121 23:35:57.834"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.834" endtime="20241121 23:35:57.834"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.834" endtime="20241121 23:35:57.834"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.834" endtime="20241121 23:35:57.834"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.833" endtime="20241121 23:35:57.835"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.819" endtime="20241121 23:35:57.835"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:57.845" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:35:57.845" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:57.835" endtime="20241121 23:35:57.845"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:57.845" endtime="20241121 23:35:57.845"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.835" endtime="20241121 23:35:57.845"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.846" endtime="20241121 23:35:57.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.845" endtime="20241121 23:35:57.847"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.835" endtime="20241121 23:35:57.847"/>
</try>
<msg timestamp="20241121 23:35:57.847" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:35:57.816" endtime="20241121 23:35:57.847"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.815" endtime="20241121 23:35:57.847"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.815" endtime="20241121 23:35:57.847"/>
</try>
<status status="PASS" starttime="20241121 23:35:57.815" endtime="20241121 23:35:57.847"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:57.847" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</kw>
<msg timestamp="20241121 23:35:57.847" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.847"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.862"/>
</try>
<msg timestamp="20241121 23:35:57.862" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.862"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</return>
<msg timestamp="20241121 23:35:57.862" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.862"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.862"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.847" endtime="20241121 23:35:57.862"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.796" endtime="20241121 23:35:57.862"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:57.878" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</kw>
<msg timestamp="20241121 23:35:57.878" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</try>
<msg timestamp="20241121 23:35:57.878" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</try>
<msg timestamp="20241121 23:35:57.878" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.878"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.878"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:35:57.893" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:35:57.893" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.893"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:35:57.893" endtime="20241121 23:35:57.893"/>
</return>
<status status="PASS" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.893"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.893" endtime="20241121 23:35:57.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.893" endtime="20241121 23:35:57.893"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.893" endtime="20241121 23:35:57.893"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.878" endtime="20241121 23:35:57.893"/>
</try>
<msg timestamp="20241121 23:35:57.893" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:57.862" endtime="20241121 23:35:57.893"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:35:57.893" endtime="20241121 23:35:57.893"/>
</return>
<msg timestamp="20241121 23:35:57.893" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:35:57.795" endtime="20241121 23:35:57.893"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:35:57.893" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.893" endtime="20241121 23:35:57.893"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:57.893" endtime="20241121 23:35:57.893"/>
</return>
<msg timestamp="20241121 23:35:57.893" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:35:57.893" endtime="20241121 23:35:57.893"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</if>
<status status="PASS" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.795" endtime="20241121 23:35:57.909"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.767" endtime="20241121 23:35:57.909"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.767" endtime="20241121 23:35:57.909"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.767" endtime="20241121 23:35:57.909"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.765" endtime="20241121 23:35:57.909"/>
</try>
<status status="PASS" starttime="20241121 23:35:57.631" endtime="20241121 23:35:57.909"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.630" endtime="20241121 23:35:57.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:57.909" endtime="20241121 23:35:57.925"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.925"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:57.940" endtime="20241121 23:35:57.940"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:57.940" endtime="20241121 23:35:57.940"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:57.925" endtime="20241121 23:35:57.940"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:57.940"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:57.940" endtime="20241121 23:35:57.940"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:35:58.941" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:35:57.940" endtime="20241121 23:35:58.941"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:58.942"/>
</kw>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:58.942"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:58.943" endtime="20241121 23:35:58.944"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:58.943" endtime="20241121 23:35:58.944"/>
</branch>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:58.945"/>
</try>
<status status="PASS" starttime="20241121 23:35:57.595" endtime="20241121 23:35:58.945"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:58.950" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:35:58.948" endtime="20241121 23:35:58.950"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:58.950" endtime="20241121 23:35:58.952"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:35:58.954" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:35:58.953" endtime="20241121 23:35:58.954"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:58.956" endtime="20241121 23:35:58.957"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:58.958" endtime="20241121 23:35:58.958"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:58.956" endtime="20241121 23:35:58.958"/>
</branch>
<status status="PASS" starttime="20241121 23:35:58.955" endtime="20241121 23:35:58.959"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:35:58.966" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:35:58.965" endtime="20241121 23:35:58.966"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:35:58.968" endtime="20241121 23:35:58.969"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:58.968" endtime="20241121 23:35:58.969"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:35:58.971" endtime="20241121 23:35:58.971"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:58.970" endtime="20241121 23:35:58.972"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:59.024" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:35:59.014" endtime="20241121 23:35:59.024"/>
</kw>
<msg timestamp="20241121 23:35:59.024" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.013" endtime="20241121 23:35:59.024"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:59.024" endtime="20241121 23:35:59.025"/>
</return>
<status status="PASS" starttime="20241121 23:35:59.013" endtime="20241121 23:35:59.025"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.025" endtime="20241121 23:35:59.026"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.026" endtime="20241121 23:35:59.026"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.025" endtime="20241121 23:35:59.026"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.013" endtime="20241121 23:35:59.027"/>
</try>
<msg timestamp="20241121 23:35:59.027" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.005" endtime="20241121 23:35:59.027"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:59.027" endtime="20241121 23:35:59.028"/>
</return>
<status status="PASS" starttime="20241121 23:35:59.004" endtime="20241121 23:35:59.028"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:35:59.028" endtime="20241121 23:35:59.028"/>
</return>
<status status="NOT RUN" starttime="20241121 23:35:59.028" endtime="20241121 23:35:59.029"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.002" endtime="20241121 23:35:59.029"/>
</try>
<msg timestamp="20241121 23:35:59.029" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.001" endtime="20241121 23:35:59.029"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.034" endtime="20241121 23:35:59.035"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.035" endtime="20241121 23:35:59.035"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.034" endtime="20241121 23:35:59.035"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.034" endtime="20241121 23:35:59.035"/>
</if>
<status status="PASS" starttime="20241121 23:35:59.032" endtime="20241121 23:35:59.036"/>
</kw>
<status status="PASS" starttime="20241121 23:35:58.998" endtime="20241121 23:35:59.036"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:59.054" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:35:59.046" endtime="20241121 23:35:59.054"/>
</kw>
<msg timestamp="20241121 23:35:59.054" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.045" endtime="20241121 23:35:59.054"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:59.055" endtime="20241121 23:35:59.055"/>
</return>
<status status="PASS" starttime="20241121 23:35:59.044" endtime="20241121 23:35:59.055"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.055" endtime="20241121 23:35:59.056"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.056" endtime="20241121 23:35:59.056"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.055" endtime="20241121 23:35:59.056"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.044" endtime="20241121 23:35:59.056"/>
</try>
<msg timestamp="20241121 23:35:59.057" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.043" endtime="20241121 23:35:59.057"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:59.057" endtime="20241121 23:35:59.057"/>
</return>
<msg timestamp="20241121 23:35:59.058" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.041" endtime="20241121 23:35:59.058"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.063" endtime="20241121 23:35:59.063"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.063" endtime="20241121 23:35:59.063"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.062" endtime="20241121 23:35:59.063"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.062" endtime="20241121 23:35:59.064"/>
</if>
<status status="PASS" starttime="20241121 23:35:59.060" endtime="20241121 23:35:59.064"/>
</kw>
<status status="PASS" starttime="20241121 23:35:59.040" endtime="20241121 23:35:59.064"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:35:59.090" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:35:59.073" endtime="20241121 23:35:59.090"/>
</kw>
<msg timestamp="20241121 23:35:59.090" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.073" endtime="20241121 23:35:59.090"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:59.090" endtime="20241121 23:35:59.090"/>
</return>
<status status="PASS" starttime="20241121 23:35:59.072" endtime="20241121 23:35:59.090"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.091" endtime="20241121 23:35:59.091"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.091" endtime="20241121 23:35:59.091"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.091" endtime="20241121 23:35:59.091"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.072" endtime="20241121 23:35:59.091"/>
</try>
<msg timestamp="20241121 23:35:59.092" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.071" endtime="20241121 23:35:59.092"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:35:59.092" endtime="20241121 23:35:59.092"/>
</return>
<msg timestamp="20241121 23:35:59.092" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:35:59.069" endtime="20241121 23:35:59.092"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.095" endtime="20241121 23:35:59.095"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.096" endtime="20241121 23:35:59.096"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.095" endtime="20241121 23:35:59.096"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.095" endtime="20241121 23:35:59.096"/>
</if>
<status status="PASS" starttime="20241121 23:35:59.093" endtime="20241121 23:35:59.096"/>
</kw>
<status status="PASS" starttime="20241121 23:35:59.068" endtime="20241121 23:35:59.096"/>
</kw>
<status status="PASS" starttime="20241121 23:35:58.987" endtime="20241121 23:35:59.096"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:35:59.097" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:35:59.097" endtime="20241121 23:35:59.097"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.099" endtime="20241121 23:35:59.099"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.098" endtime="20241121 23:35:59.099"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:35:59.099" endtime="20241121 23:35:59.099"/>
</kw>
<status status="PASS" starttime="20241121 23:35:59.099" endtime="20241121 23:35:59.099"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.098" endtime="20241121 23:35:59.100"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:35:59.100" endtime="20241121 23:35:59.134"/>
</kw>
<status status="PASS" starttime="20241121 23:35:59.100" endtime="20241121 23:35:59.134"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.135" endtime="20241121 23:35:59.135"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.135" endtime="20241121 23:35:59.135"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.134" endtime="20241121 23:35:59.135"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.100" endtime="20241121 23:35:59.135"/>
</try>
<status status="PASS" starttime="20241121 23:35:59.098" endtime="20241121 23:35:59.135"/>
</kw>
<status status="PASS" starttime="20241121 23:35:59.097" endtime="20241121 23:35:59.135"/>
</kw>
<status status="PASS" starttime="20241121 23:35:59.097" endtime="20241121 23:35:59.135"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.136" endtime="20241121 23:35:59.136"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.136" endtime="20241121 23:35:59.136"/>
</branch>
<status status="PASS" starttime="20241121 23:35:59.097" endtime="20241121 23:35:59.136"/>
</try>
<status status="PASS" starttime="20241121 23:35:58.982" endtime="20241121 23:35:59.136"/>
</kw>
<status status="PASS" starttime="20241121 23:35:58.973" endtime="20241121 23:35:59.136"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.138" endtime="20241121 23:35:59.138"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.140" endtime="20241121 23:35:59.140"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.136" endtime="20241121 23:35:59.140"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.141" endtime="20241121 23:35:59.141"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.140" endtime="20241121 23:35:59.141"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.145" endtime="20241121 23:35:59.145"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.142" endtime="20241121 23:35:59.145"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.147" endtime="20241121 23:35:59.147"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.146" endtime="20241121 23:35:59.147"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.149" endtime="20241121 23:35:59.149"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.147" endtime="20241121 23:35:59.149"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.150" endtime="20241121 23:35:59.151"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.151" endtime="20241121 23:35:59.151"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.151" endtime="20241121 23:35:59.151"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.151" endtime="20241121 23:35:59.151"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.151" endtime="20241121 23:35:59.151"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:59.151" endtime="20241121 23:35:59.151"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:59.149" endtime="20241121 23:35:59.151"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:59.156" endtime="20241121 23:35:59.156"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.159" endtime="20241121 23:35:59.159"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.151" endtime="20241121 23:35:59.159"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.160" endtime="20241121 23:35:59.161"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.161" endtime="20241121 23:35:59.161"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.161" endtime="20241121 23:35:59.161"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.162" endtime="20241121 23:35:59.162"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.162" endtime="20241121 23:35:59.162"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:35:59.161" endtime="20241121 23:35:59.162"/>
</if>
<status status="NOT RUN" starttime="20241121 23:35:59.159" endtime="20241121 23:35:59.162"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:35:59.167" endtime="20241121 23:35:59.167"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.170" endtime="20241121 23:35:59.170"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.162" endtime="20241121 23:35:59.170"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.172" endtime="20241121 23:35:59.172"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.170" endtime="20241121 23:35:59.172"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.174" endtime="20241121 23:35:59.174"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.172" endtime="20241121 23:35:59.174"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:35:59.181" endtime="20241121 23:35:59.181"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:35:59.181" endtime="20241121 23:35:59.181"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:35:59.174" endtime="20241121 23:35:59.181"/>
</branch>
<status status="PASS" starttime="20241121 23:35:58.967" endtime="20241121 23:35:59.181"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:35:59.182" endtime="20241121 23:35:59.182"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:04.198" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:35:59.182" endtime="20241121 23:36:04.198"/>
</kw>
<status status="PASS" starttime="20241121 23:35:58.960" endtime="20241121 23:36:04.198"/>
</kw>
<status status="PASS" starttime="20241121 23:35:58.960" endtime="20241121 23:36:04.198"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.198" endtime="20241121 23:36:04.198"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.198" endtime="20241121 23:36:04.198"/>
</branch>
<status status="PASS" starttime="20241121 23:35:58.959" endtime="20241121 23:36:04.198"/>
</try>
<status status="PASS" starttime="20241121 23:35:58.947" endtime="20241121 23:36:04.198"/>
</iter>
<status status="PASS" starttime="20241121 23:35:47.733" endtime="20241121 23:36:04.198"/>
</for>
<status status="PASS" starttime="20241121 23:35:47.733" endtime="20241121 23:36:04.198"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.732" endtime="20241121 23:36:04.198"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:04.198" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:36:04.198" endtime="20241121 23:36:04.198"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:36:04.198" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:36:04.198" endtime="20241121 23:36:04.198"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:36:04.213" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:36:04.213" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:36:04.198" endtime="20241121 23:36:04.213"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.198" endtime="20241121 23:36:04.229"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.723" endtime="20241121 23:36:04.229"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.229" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</kw>
<msg timestamp="20241121 23:36:04.229" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.229" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.229" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</if>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.229"/>
</return>
<msg timestamp="20241121 23:36:04.245" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:04.245"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.247" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:36:04.246" endtime="20241121 23:36:04.247"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:04.248" endtime="20241121 23:36:04.249"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:04.250" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:36:04.250" endtime="20241121 23:36:04.250"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.250" endtime="20241121 23:36:04.250"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.252" endtime="20241121 23:36:04.252"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.250" endtime="20241121 23:36:04.252"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.250" endtime="20241121 23:36:04.252"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.254" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:04.254" endtime="20241121 23:36:04.255"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:04.256" endtime="20241121 23:36:04.256"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.256" endtime="20241121 23:36:04.256"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.257" endtime="20241121 23:36:04.257"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.257" endtime="20241121 23:36:04.257"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:04.292" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:36:04.273" endtime="20241121 23:36:04.292"/>
</kw>
<msg timestamp="20241121 23:36:04.292" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.273" endtime="20241121 23:36:04.293"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.293" endtime="20241121 23:36:04.293"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.293"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.293" endtime="20241121 23:36:04.294"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.294"/>
</try>
<msg timestamp="20241121 23:36:04.294" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.294"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.294"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.294"/>
</try>
<msg timestamp="20241121 23:36:04.294" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.294"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</if>
<status status="PASS" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.294"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.294"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:04.309" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</kw>
<msg timestamp="20241121 23:36:04.309" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</try>
<msg timestamp="20241121 23:36:04.309" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.309" endtime="20241121 23:36:04.309"/>
</return>
<msg timestamp="20241121 23:36:04.309" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.306" endtime="20241121 23:36:04.309"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.325" endtime="20241121 23:36:04.325"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.325" endtime="20241121 23:36:04.325"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.324" endtime="20241121 23:36:04.325"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.324" endtime="20241121 23:36:04.325"/>
</if>
<status status="PASS" starttime="20241121 23:36:04.323" endtime="20241121 23:36:04.325"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.294" endtime="20241121 23:36:04.326"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:04.351" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:36:04.332" endtime="20241121 23:36:04.351"/>
</kw>
<msg timestamp="20241121 23:36:04.351" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.331" endtime="20241121 23:36:04.351"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.352" endtime="20241121 23:36:04.352"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.331" endtime="20241121 23:36:04.352"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.352" endtime="20241121 23:36:04.352"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.353" endtime="20241121 23:36:04.353"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.352" endtime="20241121 23:36:04.353"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.331" endtime="20241121 23:36:04.353"/>
</try>
<msg timestamp="20241121 23:36:04.353" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.330" endtime="20241121 23:36:04.353"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.353" endtime="20241121 23:36:04.353"/>
</return>
<msg timestamp="20241121 23:36:04.354" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.329" endtime="20241121 23:36:04.354"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</if>
<status status="PASS" starttime="20241121 23:36:04.355" endtime="20241121 23:36:04.357"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.328" endtime="20241121 23:36:04.357"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.357"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:04.357" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.357"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.407"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.407"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.409" endtime="20241121 23:36:04.409"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.409" endtime="20241121 23:36:04.409"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.407" endtime="20241121 23:36:04.409"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.409"/>
</try>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.409"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.409"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.409"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.410" endtime="20241121 23:36:04.410"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.409" endtime="20241121 23:36:04.410"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.357" endtime="20241121 23:36:04.410"/>
</try>
<status status="PASS" starttime="20241121 23:36:04.260" endtime="20241121 23:36:04.410"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.258" endtime="20241121 23:36:04.410"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.412" endtime="20241121 23:36:04.412"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.414" endtime="20241121 23:36:04.414"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.410" endtime="20241121 23:36:04.414"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.415" endtime="20241121 23:36:04.415"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.414" endtime="20241121 23:36:04.415"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.418" endtime="20241121 23:36:04.418"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.416" endtime="20241121 23:36:04.418"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.422" endtime="20241121 23:36:04.422"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.418" endtime="20241121 23:36:04.422"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.424" endtime="20241121 23:36:04.424"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.423" endtime="20241121 23:36:04.424"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.426" endtime="20241121 23:36:04.426"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.426" endtime="20241121 23:36:04.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.426" endtime="20241121 23:36:04.427"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.428" endtime="20241121 23:36:04.428"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.427" endtime="20241121 23:36:04.428"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:04.426" endtime="20241121 23:36:04.428"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:04.424" endtime="20241121 23:36:04.428"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:04.432" endtime="20241121 23:36:04.433"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.435" endtime="20241121 23:36:04.436"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.428" endtime="20241121 23:36:04.436"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.437" endtime="20241121 23:36:04.437"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.437" endtime="20241121 23:36:04.437"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.437" endtime="20241121 23:36:04.437"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.438" endtime="20241121 23:36:04.438"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.437" endtime="20241121 23:36:04.438"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:04.437" endtime="20241121 23:36:04.438"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:04.436" endtime="20241121 23:36:04.438"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:04.444" endtime="20241121 23:36:04.444"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.447" endtime="20241121 23:36:04.447"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.438" endtime="20241121 23:36:04.447"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.448" endtime="20241121 23:36:04.448"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.447" endtime="20241121 23:36:04.448"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.450" endtime="20241121 23:36:04.450"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.448" endtime="20241121 23:36:04.450"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:04.456" endtime="20241121 23:36:04.456"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.457" endtime="20241121 23:36:04.457"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.450" endtime="20241121 23:36:04.457"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.255" endtime="20241121 23:36:04.457"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:04.457" endtime="20241121 23:36:04.459"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:04.459" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:04.459" endtime="20241121 23:36:04.459"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.253" endtime="20241121 23:36:04.459"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.253" endtime="20241121 23:36:04.459"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.460" endtime="20241121 23:36:04.460"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.460" endtime="20241121 23:36:04.460"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.253" endtime="20241121 23:36:04.460"/>
</try>
<status status="PASS" starttime="20241121 23:36:04.246" endtime="20241121 23:36:04.460"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.461" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:36:04.461" endtime="20241121 23:36:04.461"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:04.461" endtime="20241121 23:36:04.462"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:04.462" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:36:04.462" endtime="20241121 23:36:04.462"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.463" endtime="20241121 23:36:04.463"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.463" endtime="20241121 23:36:04.463"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.463" endtime="20241121 23:36:04.463"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.463" endtime="20241121 23:36:04.464"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.465" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:04.464" endtime="20241121 23:36:04.465"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:04.465" endtime="20241121 23:36:04.465"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.465" endtime="20241121 23:36:04.465"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.466" endtime="20241121 23:36:04.466"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.466" endtime="20241121 23:36:04.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:04.480" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:04.474" endtime="20241121 23:36:04.480"/>
</kw>
<msg timestamp="20241121 23:36:04.480" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.474" endtime="20241121 23:36:04.480"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.473" endtime="20241121 23:36:04.480"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.473" endtime="20241121 23:36:04.480"/>
</try>
<msg timestamp="20241121 23:36:04.480" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.473" endtime="20241121 23:36:04.480"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.472" endtime="20241121 23:36:04.480"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.472" endtime="20241121 23:36:04.480"/>
</try>
<msg timestamp="20241121 23:36:04.480" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.471" endtime="20241121 23:36:04.480"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</if>
<status status="PASS" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.480"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.471" endtime="20241121 23:36:04.480"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:04.497" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:04.492" endtime="20241121 23:36:04.497"/>
</kw>
<msg timestamp="20241121 23:36:04.497" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.492" endtime="20241121 23:36:04.497"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.491" endtime="20241121 23:36:04.497"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.491" endtime="20241121 23:36:04.497"/>
</try>
<msg timestamp="20241121 23:36:04.497" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.491" endtime="20241121 23:36:04.497"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</return>
<msg timestamp="20241121 23:36:04.497" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.490" endtime="20241121 23:36:04.497"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</if>
<status status="PASS" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.497"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.480" endtime="20241121 23:36:04.497"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:04.508" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:36:04.508" endtime="20241121 23:36:04.523"/>
</kw>
<msg timestamp="20241121 23:36:04.523" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.508" endtime="20241121 23:36:04.523"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.523" endtime="20241121 23:36:04.523"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.508" endtime="20241121 23:36:04.523"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.524" endtime="20241121 23:36:04.524"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.524" endtime="20241121 23:36:04.525"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.523" endtime="20241121 23:36:04.525"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.508" endtime="20241121 23:36:04.525"/>
</try>
<msg timestamp="20241121 23:36:04.525" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.507" endtime="20241121 23:36:04.525"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</return>
<msg timestamp="20241121 23:36:04.525" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.506" endtime="20241121 23:36:04.525"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</if>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.497" endtime="20241121 23:36:04.525"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.469" endtime="20241121 23:36:04.525"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:04.525" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.525"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.670"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.670"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.670" endtime="20241121 23:36:04.670"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.671" endtime="20241121 23:36:04.671"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.670" endtime="20241121 23:36:04.671"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.671"/>
</try>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.671"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.671"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.671"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.672" endtime="20241121 23:36:04.672"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.671" endtime="20241121 23:36:04.672"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.525" endtime="20241121 23:36:04.672"/>
</try>
<status status="PASS" starttime="20241121 23:36:04.468" endtime="20241121 23:36:04.673"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.466" endtime="20241121 23:36:04.673"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.676" endtime="20241121 23:36:04.676"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.678" endtime="20241121 23:36:04.678"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.673" endtime="20241121 23:36:04.679"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.680" endtime="20241121 23:36:04.680"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.679" endtime="20241121 23:36:04.680"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.687" endtime="20241121 23:36:04.687"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.681" endtime="20241121 23:36:04.687"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.689" endtime="20241121 23:36:04.689"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.687" endtime="20241121 23:36:04.690"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.691" endtime="20241121 23:36:04.691"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.690" endtime="20241121 23:36:04.692"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.693" endtime="20241121 23:36:04.694"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.694" endtime="20241121 23:36:04.694"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.694" endtime="20241121 23:36:04.694"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.695" endtime="20241121 23:36:04.695"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.694" endtime="20241121 23:36:04.695"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:04.694" endtime="20241121 23:36:04.695"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:04.692" endtime="20241121 23:36:04.695"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:04.705" endtime="20241121 23:36:04.705"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.711" endtime="20241121 23:36:04.711"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.695" endtime="20241121 23:36:04.711"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.713" endtime="20241121 23:36:04.713"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.713" endtime="20241121 23:36:04.713"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.713" endtime="20241121 23:36:04.713"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.714" endtime="20241121 23:36:04.714"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.714" endtime="20241121 23:36:04.714"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:04.713" endtime="20241121 23:36:04.714"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:04.711" endtime="20241121 23:36:04.714"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:04.721" endtime="20241121 23:36:04.721"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.725" endtime="20241121 23:36:04.725"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.714" endtime="20241121 23:36:04.726"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.727" endtime="20241121 23:36:04.727"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.726" endtime="20241121 23:36:04.727"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.730" endtime="20241121 23:36:04.730"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.727" endtime="20241121 23:36:04.730"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:04.738" endtime="20241121 23:36:04.738"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.738" endtime="20241121 23:36:04.738"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.730" endtime="20241121 23:36:04.738"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.465" endtime="20241121 23:36:04.738"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:04.739" endtime="20241121 23:36:04.741"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:04.742" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:04.741" endtime="20241121 23:36:04.742"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.464" endtime="20241121 23:36:04.742"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.464" endtime="20241121 23:36:04.742"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.743" endtime="20241121 23:36:04.743"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.743" endtime="20241121 23:36:04.743"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.464" endtime="20241121 23:36:04.744"/>
</try>
<status status="PASS" starttime="20241121 23:36:04.460" endtime="20241121 23:36:04.744"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.745" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:36:04.745" endtime="20241121 23:36:04.745"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:04.746" endtime="20241121 23:36:04.746"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:04.746" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:36:04.746" endtime="20241121 23:36:04.746"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.748" endtime="20241121 23:36:04.748"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.748" endtime="20241121 23:36:04.748"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.748" endtime="20241121 23:36:04.748"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.746" endtime="20241121 23:36:04.749"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:04.750" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:04.749" endtime="20241121 23:36:04.750"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:04.750" endtime="20241121 23:36:04.751"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.750" endtime="20241121 23:36:04.751"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.751" endtime="20241121 23:36:04.751"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.751" endtime="20241121 23:36:04.751"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.754" endtime="20241121 23:36:04.754"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.751" endtime="20241121 23:36:04.754"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.758" endtime="20241121 23:36:04.758"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.760" endtime="20241121 23:36:04.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.754" endtime="20241121 23:36:04.760"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.760" endtime="20241121 23:36:04.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.760" endtime="20241121 23:36:04.760"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.760" endtime="20241121 23:36:04.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.760" endtime="20241121 23:36:04.760"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.760" endtime="20241121 23:36:04.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.760" endtime="20241121 23:36:04.760"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.776" endtime="20241121 23:36:04.776"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.773" endtime="20241121 23:36:04.776"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.777"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.777"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.777"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.777"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.777"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.777"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.777"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.777"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.777" endtime="20241121 23:36:04.792"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.792"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.810" endtime="20241121 23:36:04.810"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.792" endtime="20241121 23:36:04.810"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:04.961" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:04.816" endtime="20241121 23:36:04.961"/>
</kw>
<msg timestamp="20241121 23:36:04.961" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.815" endtime="20241121 23:36:04.961"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.961" endtime="20241121 23:36:04.961"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.815" endtime="20241121 23:36:04.962"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.963" endtime="20241121 23:36:04.963"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.964" endtime="20241121 23:36:04.964"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.962" endtime="20241121 23:36:04.964"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.815" endtime="20241121 23:36:04.964"/>
</try>
<msg timestamp="20241121 23:36:04.964" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.814" endtime="20241121 23:36:04.964"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:04.964" endtime="20241121 23:36:04.964"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.813" endtime="20241121 23:36:04.964"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:04.964" endtime="20241121 23:36:04.964"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:04.964" endtime="20241121 23:36:04.964"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.813" endtime="20241121 23:36:04.964"/>
</try>
<msg timestamp="20241121 23:36:04.964" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:36:04.812" endtime="20241121 23:36:04.964"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.811" endtime="20241121 23:36:04.964"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.964" endtime="20241121 23:36:04.964"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.964" endtime="20241121 23:36:04.964"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:04.982" endtime="20241121 23:36:04.982"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.983" endtime="20241121 23:36:04.983"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.964" endtime="20241121 23:36:04.983"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.750" endtime="20241121 23:36:04.983"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:04.983" endtime="20241121 23:36:04.984"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:04.985" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:04.984" endtime="20241121 23:36:04.985"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.749" endtime="20241121 23:36:04.986"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.749" endtime="20241121 23:36:04.986"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:04.987" endtime="20241121 23:36:04.987"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:04.986" endtime="20241121 23:36:04.987"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.749" endtime="20241121 23:36:04.987"/>
</try>
<status status="PASS" starttime="20241121 23:36:04.744" endtime="20241121 23:36:04.987"/>
</iter>
<status status="PASS" starttime="20241121 23:36:04.245" endtime="20241121 23:36:04.988"/>
</for>
<status status="PASS" starttime="20241121 23:36:04.245" endtime="20241121 23:36:04.988"/>
</branch>
<status status="PASS" starttime="20241121 23:36:04.245" endtime="20241121 23:36:04.988"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:04.989" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:36:04.988" endtime="20241121 23:36:04.989"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:36:04.992" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:36:04.991" endtime="20241121 23:36:04.992"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:36:04.999" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:36:05.000" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:36:04.992" endtime="20241121 23:36:05.000"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:05.000" endtime="20241121 23:36:05.001"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:36:05.001" endtime="20241121 23:36:05.001"/>
</return>
<status status="PASS" starttime="20241121 23:36:04.989" endtime="20241121 23:36:05.002"/>
</kw>
<status status="PASS" starttime="20241121 23:36:04.229" endtime="20241121 23:36:05.003"/>
</iter>
<status status="PASS" starttime="20241121 23:35:47.723" endtime="20241121 23:36:05.003"/>
</for>
<status status="PASS" starttime="20241121 23:35:47.723" endtime="20241121 23:36:05.003"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.722" endtime="20241121 23:36:05.004"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.696" endtime="20241121 23:36:05.004"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.004" endtime="20241121 23:36:05.004"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.004" endtime="20241121 23:36:05.005"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.696" endtime="20241121 23:36:05.005"/>
</if>
<status status="PASS" starttime="20241121 23:35:47.676" endtime="20241121 23:36:05.005"/>
</kw>
<status status="PASS" starttime="20241121 23:35:47.676" endtime="20241121 23:36:05.005"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.006" endtime="20241121 23:36:05.007"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.006" endtime="20241121 23:36:05.007"/>
</branch>
<status status="PASS" starttime="20241121 23:35:47.676" endtime="20241121 23:36:05.007"/>
</try>
<status status="PASS" starttime="20241121 23:35:47.625" endtime="20241121 23:36:05.007"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:05.007" endtime="20241121 23:36:05.010"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:36:05.060" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '61', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:03:42.494Z', 'createdAt': '2024-11-21T18:03:42.494Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:36:05.010" endtime="20241121 23:36:05.060"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:05.060" endtime="20241121 23:36:05.074"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:05.078" endtime="20241121 23:36:05.079"/>
</kw>
<msg timestamp="20241121 23:36:05.079" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.078" endtime="20241121 23:36:05.079"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.080" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:36:05.080" endtime="20241121 23:36:05.080"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.081" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.081" endtime="20241121 23:36:05.081"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.080" endtime="20241121 23:36:05.081"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.082" endtime="20241121 23:36:05.082"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.081" endtime="20241121 23:36:05.083"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.080" endtime="20241121 23:36:05.083"/>
</if>
<status status="PASS" starttime="20241121 23:36:05.079" endtime="20241121 23:36:05.083"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.079" endtime="20241121 23:36:05.083"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:05.083" endtime="20241121 23:36:05.083"/>
</return>
<msg timestamp="20241121 23:36:05.083" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.077" endtime="20241121 23:36:05.083"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.083" endtime="20241121 23:36:05.083"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:36:05.083" endtime="20241121 23:36:05.083"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:05.083" endtime="20241121 23:36:05.083"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.083" endtime="20241121 23:36:05.083"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:05.090" endtime="20241121 23:36:05.091"/>
</kw>
<msg timestamp="20241121 23:36:05.091" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.089" endtime="20241121 23:36:05.091"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.093" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:36:05.092" endtime="20241121 23:36:05.093"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.094" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.093" endtime="20241121 23:36:05.094"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.093" endtime="20241121 23:36:05.094"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.094" endtime="20241121 23:36:05.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.094" endtime="20241121 23:36:05.095"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.093" endtime="20241121 23:36:05.095"/>
</if>
<status status="PASS" starttime="20241121 23:36:05.092" endtime="20241121 23:36:05.095"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.091" endtime="20241121 23:36:05.095"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:05.095" endtime="20241121 23:36:05.095"/>
</return>
<msg timestamp="20241121 23:36:05.095" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.088" endtime="20241121 23:36:05.096"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</kw>
<msg timestamp="20241121 23:36:05.099" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.099" level="INFO">${values} = {'id': '61', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:03:42.494Z', 'createdAt': '2024-11-21T18:03:42.494Z'}</msg>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.099" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</if>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:05.099" endtime="20241121 23:36:05.099"/>
</return>
<msg timestamp="20241121 23:36:05.106" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.098" endtime="20241121 23:36:05.106"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.106" endtime="20241121 23:36:05.107"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.107" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.107" level="INFO">${testCaseRun} = {'id': '61', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:03:42.494Z', 'createdAt': '2024-11-21T18:03:42.494Z'}</msg>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<msg timestamp="20241121 23:36:05.107" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.107" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.107" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</if>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</return>
<msg timestamp="20241121 23:36:05.107" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.107" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:05.107"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:05.122" endtime="20241121 23:36:05.123"/>
</kw>
<msg timestamp="20241121 23:36:05.123" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.122" endtime="20241121 23:36:05.123"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.125" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:36:05.124" endtime="20241121 23:36:05.125"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.127" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.126" endtime="20241121 23:36:05.127"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.126" endtime="20241121 23:36:05.127"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.127" endtime="20241121 23:36:05.127"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.127" endtime="20241121 23:36:05.127"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.126" endtime="20241121 23:36:05.127"/>
</if>
<status status="PASS" starttime="20241121 23:36:05.124" endtime="20241121 23:36:05.127"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.124" endtime="20241121 23:36:05.127"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:05.127"/>
</return>
<msg timestamp="20241121 23:36:05.127" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:05.121" endtime="20241121 23:36:05.127"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.127" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:05.127"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:05.127"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:05.127" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:05.127"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.132" endtime="20241121 23:36:05.132"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:05.132" endtime="20241121 23:36:05.132"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:05.127" endtime="20241121 23:36:05.132"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:05.132"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:05.133" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:36:05.133" endtime="20241121 23:36:05.133"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:36:05.135" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:36:05.137" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:36:05.137" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:36:05.134" endtime="20241121 23:36:05.137"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:36:05.137" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:36:05.147" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:36:05.147" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:36:05.137" endtime="20241121 23:36:05.148"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:36:05.148" endtime="20241121 23:36:05.148"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:36:12.478" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:36:12.479" level="INFO">${page_id} = {'page_id': 'page=fc2cb49e-0162-4223-a063-6452bad76322', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:36:05.149" endtime="20241121 23:36:12.479"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:36:12.481" level="INFO">Switching to page {'page_id': 'page=fc2cb49e-0162-4223-a063-6452bad76322', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:36:12.523" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=a124a82d-d86e-4075-90dc-c1a459a017fd",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=75b84b73-7ea3-407c-8055-c3cfa95050da",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=203ad8f9-0f8a-4fa1-b7a2-cb91c9228608",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=f7d786f1-7687-4a76-8d25-c9b9507ddec7",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=27de9d44-735d-4442-9d59-d3187dbc6d78",
        "activePage": "page=fc2cb49e-0162-4223-a063-6452bad76322",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=fc2cb49e-0162-4223-a063-6452bad76322",
            "timestamp": 1732212365.303
          }
        ]
      }
    ],
    "activeContext": "context=27de9d44-735d-4442-9d59-d3187dbc6d78",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:36:12.531" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:36:12.480" endtime="20241121 23:36:12.531"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.134" endtime="20241121 23:36:12.532"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.134" endtime="20241121 23:36:12.532"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.534" endtime="20241121 23:36:12.534"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.533" endtime="20241121 23:36:12.534"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.540" endtime="20241121 23:36:12.540"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.534" endtime="20241121 23:36:12.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.545" endtime="20241121 23:36:12.545"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.549" endtime="20241121 23:36:12.549"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.541" endtime="20241121 23:36:12.549"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.551" endtime="20241121 23:36:12.551"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.549" endtime="20241121 23:36:12.551"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.555" endtime="20241121 23:36:12.555"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.551" endtime="20241121 23:36:12.555"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.558" endtime="20241121 23:36:12.558"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.556" endtime="20241121 23:36:12.558"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.560" endtime="20241121 23:36:12.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.558" endtime="20241121 23:36:12.560"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.562" endtime="20241121 23:36:12.562"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.562" endtime="20241121 23:36:12.562"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.562" endtime="20241121 23:36:12.562"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.563" endtime="20241121 23:36:12.563"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.562" endtime="20241121 23:36:12.563"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:12.562" endtime="20241121 23:36:12.563"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:12.560" endtime="20241121 23:36:12.563"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:12.569" endtime="20241121 23:36:12.569"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.573" endtime="20241121 23:36:12.573"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.563" endtime="20241121 23:36:12.573"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.575" endtime="20241121 23:36:12.575"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.575" endtime="20241121 23:36:12.575"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.575" endtime="20241121 23:36:12.575"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.576" endtime="20241121 23:36:12.576"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.575" endtime="20241121 23:36:12.576"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:12.575" endtime="20241121 23:36:12.576"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:12.573" endtime="20241121 23:36:12.576"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:12.581" endtime="20241121 23:36:12.581"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.584" endtime="20241121 23:36:12.584"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.576" endtime="20241121 23:36:12.585"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.586" endtime="20241121 23:36:12.586"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.585" endtime="20241121 23:36:12.586"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.588" endtime="20241121 23:36:12.588"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.586" endtime="20241121 23:36:12.588"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:12.594" endtime="20241121 23:36:12.594"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:12.595" endtime="20241121 23:36:12.595"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:12.589" endtime="20241121 23:36:12.595"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.133" endtime="20241121 23:36:12.595"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:12.595" endtime="20241121 23:36:12.596"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:13.611" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:36:12.596" endtime="20241121 23:36:13.611"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.133" endtime="20241121 23:36:13.611"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.132" endtime="20241121 23:36:13.611"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.132" endtime="20241121 23:36:13.611"/>
</try>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:13.611"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:13.611" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:13.611" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:13.611" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.611"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.625" endtime="20241121 23:36:13.625"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.625"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.625" endtime="20241121 23:36:13.625"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.625" endtime="20241121 23:36:13.625"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.630" endtime="20241121 23:36:13.631"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.628" endtime="20241121 23:36:13.631"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:13.659" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:13.640" endtime="20241121 23:36:13.659"/>
</kw>
<msg timestamp="20241121 23:36:13.664" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.640" endtime="20241121 23:36:13.664"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.664" endtime="20241121 23:36:13.664"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.640" endtime="20241121 23:36:13.664"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.664" endtime="20241121 23:36:13.665"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.665" endtime="20241121 23:36:13.665"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.664" endtime="20241121 23:36:13.665"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.640" endtime="20241121 23:36:13.665"/>
</try>
<msg timestamp="20241121 23:36:13.666" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.640" endtime="20241121 23:36:13.666"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.666" endtime="20241121 23:36:13.666"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.638" endtime="20241121 23:36:13.666"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:13.667" endtime="20241121 23:36:13.667"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:13.667" endtime="20241121 23:36:13.667"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.638" endtime="20241121 23:36:13.667"/>
</try>
<msg timestamp="20241121 23:36:13.667" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.638" endtime="20241121 23:36:13.667"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.670" endtime="20241121 23:36:13.670"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.670" endtime="20241121 23:36:13.670"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.669" endtime="20241121 23:36:13.670"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.669" endtime="20241121 23:36:13.670"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.668" endtime="20241121 23:36:13.670"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.638" endtime="20241121 23:36:13.671"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:13.686" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:13.680" endtime="20241121 23:36:13.686"/>
</kw>
<msg timestamp="20241121 23:36:13.686" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.680" endtime="20241121 23:36:13.686"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.687" endtime="20241121 23:36:13.687"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.679" endtime="20241121 23:36:13.687"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.687" endtime="20241121 23:36:13.687"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.687" endtime="20241121 23:36:13.687"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.687" endtime="20241121 23:36:13.687"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.678" endtime="20241121 23:36:13.688"/>
</try>
<msg timestamp="20241121 23:36:13.688" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.678" endtime="20241121 23:36:13.688"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.688" endtime="20241121 23:36:13.688"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.677" endtime="20241121 23:36:13.688"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:13.688" endtime="20241121 23:36:13.688"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:13.688" endtime="20241121 23:36:13.688"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.677" endtime="20241121 23:36:13.689"/>
</try>
<msg timestamp="20241121 23:36:13.689" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.677" endtime="20241121 23:36:13.689"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.692" endtime="20241121 23:36:13.692"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.692" endtime="20241121 23:36:13.692"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.691" endtime="20241121 23:36:13.692"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.691" endtime="20241121 23:36:13.692"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.690" endtime="20241121 23:36:13.693"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.676" endtime="20241121 23:36:13.693"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:13.712" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:36:13.712" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:13.693" endtime="20241121 23:36:13.712"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:13.712" endtime="20241121 23:36:13.712"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.693" endtime="20241121 23:36:13.712"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.713" endtime="20241121 23:36:13.713"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.713" endtime="20241121 23:36:13.713"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.712" endtime="20241121 23:36:13.713"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.693" endtime="20241121 23:36:13.713"/>
</try>
<msg timestamp="20241121 23:36:13.714" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:13.674" endtime="20241121 23:36:13.714"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.715" endtime="20241121 23:36:13.716"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.673" endtime="20241121 23:36:13.716"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.673" endtime="20241121 23:36:13.716"/>
</try>
<status status="PASS" starttime="20241121 23:36:13.672" endtime="20241121 23:36:13.716"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:13.716" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<msg timestamp="20241121 23:36:13.716" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</try>
<msg timestamp="20241121 23:36:13.716" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</return>
<msg timestamp="20241121 23:36:13.716" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.716"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.732"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.732"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.732"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.732"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.732"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.716" endtime="20241121 23:36:13.732"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.635" endtime="20241121 23:36:13.732"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:13.747" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.747"/>
</kw>
<msg timestamp="20241121 23:36:13.747" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.747"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.747"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.747"/>
</try>
<msg timestamp="20241121 23:36:13.747" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.747"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</return>
<msg timestamp="20241121 23:36:13.747" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.747"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.732" endtime="20241121 23:36:13.747"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:13.747" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.747"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.763" endtime="20241121 23:36:13.763"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.763" endtime="20241121 23:36:13.763"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.763"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:13.763" endtime="20241121 23:36:13.763"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.763" endtime="20241121 23:36:13.763"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.763"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:36:13.763" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:36:13.763" endtime="20241121 23:36:13.797"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.763" endtime="20241121 23:36:13.797"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.797" endtime="20241121 23:36:13.797"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.798" endtime="20241121 23:36:13.798"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.797" endtime="20241121 23:36:13.798"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.763" endtime="20241121 23:36:13.798"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:13.810" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:13.804" endtime="20241121 23:36:13.810"/>
</kw>
<msg timestamp="20241121 23:36:13.810" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.804" endtime="20241121 23:36:13.811"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.811" endtime="20241121 23:36:13.811"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.804" endtime="20241121 23:36:13.811"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.811" endtime="20241121 23:36:13.811"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.811" endtime="20241121 23:36:13.811"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.811" endtime="20241121 23:36:13.812"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.804" endtime="20241121 23:36:13.812"/>
</try>
<msg timestamp="20241121 23:36:13.812" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.803" endtime="20241121 23:36:13.812"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.812" endtime="20241121 23:36:13.812"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.802" endtime="20241121 23:36:13.812"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:13.812" endtime="20241121 23:36:13.812"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:13.812" endtime="20241121 23:36:13.813"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.802" endtime="20241121 23:36:13.813"/>
</try>
<msg timestamp="20241121 23:36:13.813" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.802" endtime="20241121 23:36:13.813"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.815" endtime="20241121 23:36:13.815"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.816" endtime="20241121 23:36:13.816"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.815" endtime="20241121 23:36:13.816"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.815" endtime="20241121 23:36:13.816"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.814" endtime="20241121 23:36:13.816"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.802" endtime="20241121 23:36:13.816"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:13.831" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:13.824" endtime="20241121 23:36:13.831"/>
</kw>
<msg timestamp="20241121 23:36:13.831" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.824" endtime="20241121 23:36:13.831"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.824" endtime="20241121 23:36:13.831"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.824" endtime="20241121 23:36:13.831"/>
</try>
<msg timestamp="20241121 23:36:13.831" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.823" endtime="20241121 23:36:13.831"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.822" endtime="20241121 23:36:13.831"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.822" endtime="20241121 23:36:13.831"/>
</try>
<msg timestamp="20241121 23:36:13.831" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.822" endtime="20241121 23:36:13.831"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.831"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.821" endtime="20241121 23:36:13.831"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:13.847" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:36:13.847" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.847"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.847"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.831" endtime="20241121 23:36:13.847"/>
</try>
<msg timestamp="20241121 23:36:13.847" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:13.819" endtime="20241121 23:36:13.847"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.818" endtime="20241121 23:36:13.847"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.847"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.818" endtime="20241121 23:36:13.847"/>
</try>
<status status="PASS" starttime="20241121 23:36:13.818" endtime="20241121 23:36:13.847"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:13.862" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.862"/>
</kw>
<msg timestamp="20241121 23:36:13.862" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.862"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.862"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.862"/>
</try>
<msg timestamp="20241121 23:36:13.862" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.862"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</return>
<msg timestamp="20241121 23:36:13.862" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.862"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.862"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.847" endtime="20241121 23:36:13.862"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.800" endtime="20241121 23:36:13.862"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:13.878" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</kw>
<msg timestamp="20241121 23:36:13.878" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</try>
<msg timestamp="20241121 23:36:13.878" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</try>
<msg timestamp="20241121 23:36:13.878" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.878"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.878"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:13.893" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:36:13.893" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.893"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:13.893" endtime="20241121 23:36:13.893"/>
</return>
<status status="PASS" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.893"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.893" endtime="20241121 23:36:13.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.893" endtime="20241121 23:36:13.893"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.893" endtime="20241121 23:36:13.893"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.878" endtime="20241121 23:36:13.893"/>
</try>
<msg timestamp="20241121 23:36:13.893" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:36:13.862" endtime="20241121 23:36:13.893"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:36:13.893" endtime="20241121 23:36:13.893"/>
</return>
<msg timestamp="20241121 23:36:13.893" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:36:13.799" endtime="20241121 23:36:13.893"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:36:13.893" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.893" endtime="20241121 23:36:13.893"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:13.893" endtime="20241121 23:36:13.893"/>
</return>
<msg timestamp="20241121 23:36:13.893" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:36:13.893" endtime="20241121 23:36:13.893"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</if>
<status status="PASS" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.798" endtime="20241121 23:36:13.909"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.909"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.909"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.909"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.747" endtime="20241121 23:36:13.909"/>
</try>
<status status="PASS" starttime="20241121 23:36:13.635" endtime="20241121 23:36:13.909"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.631" endtime="20241121 23:36:13.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:13.909" endtime="20241121 23:36:13.925"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.925"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:13.940" endtime="20241121 23:36:13.940"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:13.940" endtime="20241121 23:36:13.940"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:13.925" endtime="20241121 23:36:13.940"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:13.940"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:13.940" endtime="20241121 23:36:13.940"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:14.946" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:36:13.940" endtime="20241121 23:36:14.946"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:14.946"/>
</kw>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:14.946"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</branch>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:14.946"/>
</try>
<status status="PASS" starttime="20241121 23:36:13.611" endtime="20241121 23:36:14.946"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:14.946" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:14.946" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:14.946" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.946" endtime="20241121 23:36:14.946"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.965" endtime="20241121 23:36:14.966"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.969" endtime="20241121 23:36:14.969"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.962" endtime="20241121 23:36:14.969"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.971" endtime="20241121 23:36:14.972"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.970" endtime="20241121 23:36:14.972"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.977" endtime="20241121 23:36:14.977"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.972" endtime="20241121 23:36:14.977"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:14.981" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.981"/>
</kw>
<msg timestamp="20241121 23:36:14.981" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.981"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.981"/>
</return>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.981"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.981"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.981"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.981"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.981"/>
</try>
<msg timestamp="20241121 23:36:14.996" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.996"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:14.996" endtime="20241121 23:36:14.996"/>
</return>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.996"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:14.997" endtime="20241121 23:36:14.997"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:14.997" endtime="20241121 23:36:14.997"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.997"/>
</try>
<msg timestamp="20241121 23:36:14.997" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.997"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.997" endtime="20241121 23:36:14.997"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:14.997" endtime="20241121 23:36:14.997"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:14.997" endtime="20241121 23:36:14.997"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:14.997"/>
</if>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:14.997"/>
</kw>
<status status="PASS" starttime="20241121 23:36:14.981" endtime="20241121 23:36:14.997"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:15.014" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</kw>
<msg timestamp="20241121 23:36:15.014" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</return>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</try>
<msg timestamp="20241121 23:36:15.014" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</return>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</try>
<msg timestamp="20241121 23:36:15.014" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.014"/>
</kw>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.014"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:15.037" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:36:15.037" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.037"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:15.037" endtime="20241121 23:36:15.037"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.037"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.038" endtime="20241121 23:36:15.038"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.038" endtime="20241121 23:36:15.038"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.037" endtime="20241121 23:36:15.038"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.014" endtime="20241121 23:36:15.038"/>
</try>
<msg timestamp="20241121 23:36:15.039" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.039"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.041" endtime="20241121 23:36:15.042"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.042" endtime="20241121 23:36:15.042"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.041" endtime="20241121 23:36:15.042"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.041" endtime="20241121 23:36:15.042"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.040" endtime="20241121 23:36:15.042"/>
</kw>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.042"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.043" endtime="20241121 23:36:15.043"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.042" endtime="20241121 23:36:15.043"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.043"/>
</try>
<status status="PASS" starttime="20241121 23:36:14.997" endtime="20241121 23:36:15.043"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:15.056" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:15.050" endtime="20241121 23:36:15.056"/>
</kw>
<msg timestamp="20241121 23:36:15.056" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.049" endtime="20241121 23:36:15.056"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.056" endtime="20241121 23:36:15.057"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.049" endtime="20241121 23:36:15.057"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.057" endtime="20241121 23:36:15.057"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.058" endtime="20241121 23:36:15.058"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.057" endtime="20241121 23:36:15.058"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.049" endtime="20241121 23:36:15.058"/>
</try>
<msg timestamp="20241121 23:36:15.058" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.048" endtime="20241121 23:36:15.058"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.058" endtime="20241121 23:36:15.059"/>
</return>
<msg timestamp="20241121 23:36:15.059" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.047" endtime="20241121 23:36:15.059"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.062" endtime="20241121 23:36:15.062"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.063" endtime="20241121 23:36:15.063"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.062" endtime="20241121 23:36:15.063"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.062" endtime="20241121 23:36:15.063"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.061" endtime="20241121 23:36:15.063"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.046" endtime="20241121 23:36:15.064"/>
</kw>
<status status="PASS" starttime="20241121 23:36:14.980" endtime="20241121 23:36:15.064"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:15.080" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:36:15.065" endtime="20241121 23:36:15.080"/>
</kw>
<msg timestamp="20241121 23:36:15.080" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.065" endtime="20241121 23:36:15.080"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.065" endtime="20241121 23:36:15.080"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.065" endtime="20241121 23:36:15.080"/>
</try>
<msg timestamp="20241121 23:36:15.080" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.065" endtime="20241121 23:36:15.080"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</return>
<msg timestamp="20241121 23:36:15.080" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.065" endtime="20241121 23:36:15.080"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.065" endtime="20241121 23:36:15.080"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:15.080" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.080"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.096"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.096"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.096"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.096"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.096"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.096"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:36:15.096" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.130"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.130"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.131" endtime="20241121 23:36:15.131"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.131" endtime="20241121 23:36:15.132"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.130" endtime="20241121 23:36:15.132"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.096" endtime="20241121 23:36:15.132"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:15.147" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:15.141" endtime="20241121 23:36:15.148"/>
</kw>
<msg timestamp="20241121 23:36:15.148" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.141" endtime="20241121 23:36:15.148"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.148" endtime="20241121 23:36:15.148"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.140" endtime="20241121 23:36:15.149"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.149" endtime="20241121 23:36:15.149"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.150" endtime="20241121 23:36:15.150"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.149" endtime="20241121 23:36:15.150"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.140" endtime="20241121 23:36:15.150"/>
</try>
<msg timestamp="20241121 23:36:15.151" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.140" endtime="20241121 23:36:15.151"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.151" endtime="20241121 23:36:15.151"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.138" endtime="20241121 23:36:15.151"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:15.151" endtime="20241121 23:36:15.151"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:15.151" endtime="20241121 23:36:15.152"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.138" endtime="20241121 23:36:15.152"/>
</try>
<msg timestamp="20241121 23:36:15.152" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.138" endtime="20241121 23:36:15.152"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.155" endtime="20241121 23:36:15.155"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.155" endtime="20241121 23:36:15.156"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.155" endtime="20241121 23:36:15.156"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.155" endtime="20241121 23:36:15.156"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.153" endtime="20241121 23:36:15.156"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.137" endtime="20241121 23:36:15.156"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:15.175" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:15.168" endtime="20241121 23:36:15.176"/>
</kw>
<msg timestamp="20241121 23:36:15.176" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.168" endtime="20241121 23:36:15.176"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.176" endtime="20241121 23:36:15.176"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.167" endtime="20241121 23:36:15.176"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.177" endtime="20241121 23:36:15.177"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.177" endtime="20241121 23:36:15.177"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.177" endtime="20241121 23:36:15.178"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.167" endtime="20241121 23:36:15.178"/>
</try>
<msg timestamp="20241121 23:36:15.178" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.166" endtime="20241121 23:36:15.178"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.178" endtime="20241121 23:36:15.179"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.165" endtime="20241121 23:36:15.179"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:15.179" endtime="20241121 23:36:15.179"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:15.179" endtime="20241121 23:36:15.179"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.165" endtime="20241121 23:36:15.179"/>
</try>
<msg timestamp="20241121 23:36:15.180" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.164" endtime="20241121 23:36:15.180"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.181" endtime="20241121 23:36:15.181"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.181" endtime="20241121 23:36:15.181"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.181" endtime="20241121 23:36:15.181"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.181" endtime="20241121 23:36:15.181"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.181" endtime="20241121 23:36:15.181"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.164" endtime="20241121 23:36:15.181"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:15.196" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:36:15.196" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:15.181" endtime="20241121 23:36:15.196"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.181" endtime="20241121 23:36:15.196"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.181" endtime="20241121 23:36:15.196"/>
</try>
<msg timestamp="20241121 23:36:15.196" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:15.161" endtime="20241121 23:36:15.196"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.196"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.159" endtime="20241121 23:36:15.196"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.212" endtime="20241121 23:36:15.212"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.196" endtime="20241121 23:36:15.212"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.159" endtime="20241121 23:36:15.212"/>
</try>
<status status="PASS" starttime="20241121 23:36:15.159" endtime="20241121 23:36:15.212"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:15.227" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:15.212" endtime="20241121 23:36:15.227"/>
</kw>
<msg timestamp="20241121 23:36:15.227" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.212" endtime="20241121 23:36:15.227"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.227" endtime="20241121 23:36:15.227"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.212" endtime="20241121 23:36:15.227"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.227" endtime="20241121 23:36:15.227"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.227" endtime="20241121 23:36:15.227"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.227" endtime="20241121 23:36:15.227"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.212" endtime="20241121 23:36:15.227"/>
</try>
<msg timestamp="20241121 23:36:15.227" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.212" endtime="20241121 23:36:15.227"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.227" endtime="20241121 23:36:15.227"/>
</return>
<msg timestamp="20241121 23:36:15.227" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.212" endtime="20241121 23:36:15.227"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.243"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.243"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.243"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.243"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.227" endtime="20241121 23:36:15.243"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.212" endtime="20241121 23:36:15.243"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.134" endtime="20241121 23:36:15.243"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:15.259" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</kw>
<msg timestamp="20241121 23:36:15.259" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</try>
<msg timestamp="20241121 23:36:15.259" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</try>
<msg timestamp="20241121 23:36:15.259" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.259"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.259"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:15.274" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:36:15.274" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:36:15.274" endtime="20241121 23:36:15.274"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:15.274" endtime="20241121 23:36:15.274"/>
</return>
<status status="PASS" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.274"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.274" endtime="20241121 23:36:15.274"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.274" endtime="20241121 23:36:15.274"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.274" endtime="20241121 23:36:15.274"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.259" endtime="20241121 23:36:15.274"/>
</try>
<msg timestamp="20241121 23:36:15.274" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:36:15.243" endtime="20241121 23:36:15.274"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:36:15.274" endtime="20241121 23:36:15.274"/>
</return>
<msg timestamp="20241121 23:36:15.274" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:36:15.133" endtime="20241121 23:36:15.274"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:36:15.290" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.290"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.290"/>
</return>
<msg timestamp="20241121 23:36:15.290" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.290"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.290"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.290"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.290"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.290"/>
</if>
<status status="PASS" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.290"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.132" endtime="20241121 23:36:15.290"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.290"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.290"/>
</kw>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.290"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.290" endtime="20241121 23:36:15.306"/>
</branch>
<status status="PASS" starttime="20241121 23:36:15.080" endtime="20241121 23:36:15.306"/>
</try>
<status status="PASS" starttime="20241121 23:36:14.979" endtime="20241121 23:36:15.306"/>
</kw>
<status status="PASS" starttime="20241121 23:36:14.977" endtime="20241121 23:36:15.306"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.306"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.306" endtime="20241121 23:36:15.321"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.321"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.337"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.321" endtime="20241121 23:36:15.337"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.337"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.337"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.337"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.337"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.337"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.337"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.337"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:15.337"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:15.337" endtime="20241121 23:36:15.352"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:16.354" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:36:15.352" endtime="20241121 23:36:16.354"/>
</kw>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:16.354"/>
</kw>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:16.355"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.355" endtime="20241121 23:36:16.356"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.355" endtime="20241121 23:36:16.356"/>
</branch>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:16.356"/>
</try>
<status status="PASS" starttime="20241121 23:36:14.946" endtime="20241121 23:36:16.356"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:16.358" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:36:16.357" endtime="20241121 23:36:16.358"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:16.358" endtime="20241121 23:36:16.359"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:16.361" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:36:16.360" endtime="20241121 23:36:16.361"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.361" endtime="20241121 23:36:16.362"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.362" endtime="20241121 23:36:16.362"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.361" endtime="20241121 23:36:16.362"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.361" endtime="20241121 23:36:16.363"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:16.365" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:16.365" endtime="20241121 23:36:16.365"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:16.367" endtime="20241121 23:36:16.367"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.366" endtime="20241121 23:36:16.367"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.368" endtime="20241121 23:36:16.368"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.368" endtime="20241121 23:36:16.369"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:16.393" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:16.387" endtime="20241121 23:36:16.393"/>
</kw>
<msg timestamp="20241121 23:36:16.393" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.386" endtime="20241121 23:36:16.393"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:16.393" endtime="20241121 23:36:16.393"/>
</return>
<status status="PASS" starttime="20241121 23:36:16.386" endtime="20241121 23:36:16.395"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.395" endtime="20241121 23:36:16.395"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.395" endtime="20241121 23:36:16.395"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.395" endtime="20241121 23:36:16.395"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.386" endtime="20241121 23:36:16.396"/>
</try>
<msg timestamp="20241121 23:36:16.396" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.385" endtime="20241121 23:36:16.396"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:16.396" endtime="20241121 23:36:16.396"/>
</return>
<status status="PASS" starttime="20241121 23:36:16.383" endtime="20241121 23:36:16.396"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:16.396" endtime="20241121 23:36:16.396"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:16.396" endtime="20241121 23:36:16.396"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.383" endtime="20241121 23:36:16.396"/>
</try>
<msg timestamp="20241121 23:36:16.396" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.383" endtime="20241121 23:36:16.396"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.399" endtime="20241121 23:36:16.399"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.401" endtime="20241121 23:36:16.401"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.399" endtime="20241121 23:36:16.401"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.399" endtime="20241121 23:36:16.401"/>
</if>
<status status="PASS" starttime="20241121 23:36:16.396" endtime="20241121 23:36:16.401"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.382" endtime="20241121 23:36:16.401"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:16.411" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:16.404" endtime="20241121 23:36:16.411"/>
</kw>
<msg timestamp="20241121 23:36:16.411" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.404" endtime="20241121 23:36:16.411"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:16.411" endtime="20241121 23:36:16.411"/>
</return>
<status status="PASS" starttime="20241121 23:36:16.404" endtime="20241121 23:36:16.411"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.412" endtime="20241121 23:36:16.412"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.412" endtime="20241121 23:36:16.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.411" endtime="20241121 23:36:16.412"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.404" endtime="20241121 23:36:16.412"/>
</try>
<msg timestamp="20241121 23:36:16.412" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.404" endtime="20241121 23:36:16.412"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:16.412" endtime="20241121 23:36:16.413"/>
</return>
<msg timestamp="20241121 23:36:16.413" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.402" endtime="20241121 23:36:16.413"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.415" endtime="20241121 23:36:16.415"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.416" endtime="20241121 23:36:16.416"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.415" endtime="20241121 23:36:16.416"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.415" endtime="20241121 23:36:16.416"/>
</if>
<status status="PASS" starttime="20241121 23:36:16.414" endtime="20241121 23:36:16.416"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.402" endtime="20241121 23:36:16.416"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:16.436" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:36:16.421" endtime="20241121 23:36:16.436"/>
</kw>
<msg timestamp="20241121 23:36:16.436" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.421" endtime="20241121 23:36:16.436"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:16.436" endtime="20241121 23:36:16.437"/>
</return>
<status status="PASS" starttime="20241121 23:36:16.421" endtime="20241121 23:36:16.437"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.437" endtime="20241121 23:36:16.437"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.437" endtime="20241121 23:36:16.437"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.437" endtime="20241121 23:36:16.438"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.420" endtime="20241121 23:36:16.438"/>
</try>
<msg timestamp="20241121 23:36:16.438" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.420" endtime="20241121 23:36:16.438"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:16.438" endtime="20241121 23:36:16.438"/>
</return>
<msg timestamp="20241121 23:36:16.438" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:36:16.418" endtime="20241121 23:36:16.439"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.441" endtime="20241121 23:36:16.441"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.441" endtime="20241121 23:36:16.441"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.441" endtime="20241121 23:36:16.441"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.441" endtime="20241121 23:36:16.441"/>
</if>
<status status="PASS" starttime="20241121 23:36:16.440" endtime="20241121 23:36:16.441"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.418" endtime="20241121 23:36:16.441"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.377" endtime="20241121 23:36:16.441"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:16.442" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:16.442" endtime="20241121 23:36:16.442"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.444" endtime="20241121 23:36:16.444"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.443" endtime="20241121 23:36:16.444"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:16.444" endtime="20241121 23:36:16.444"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.444" endtime="20241121 23:36:16.444"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.443" endtime="20241121 23:36:16.445"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:36:16.445" endtime="20241121 23:36:16.487"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.445" endtime="20241121 23:36:16.487"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.489" endtime="20241121 23:36:16.489"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.489" endtime="20241121 23:36:16.489"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.487" endtime="20241121 23:36:16.489"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.445" endtime="20241121 23:36:16.489"/>
</try>
<status status="PASS" starttime="20241121 23:36:16.443" endtime="20241121 23:36:16.489"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.442" endtime="20241121 23:36:16.489"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.442" endtime="20241121 23:36:16.489"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.491" endtime="20241121 23:36:16.491"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.489" endtime="20241121 23:36:16.491"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.442" endtime="20241121 23:36:16.491"/>
</try>
<status status="PASS" starttime="20241121 23:36:16.375" endtime="20241121 23:36:16.491"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.369" endtime="20241121 23:36:16.491"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.492" endtime="20241121 23:36:16.492"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.495" endtime="20241121 23:36:16.496"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.491" endtime="20241121 23:36:16.496"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.497" endtime="20241121 23:36:16.497"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.496" endtime="20241121 23:36:16.497"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.499" endtime="20241121 23:36:16.501"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.497" endtime="20241121 23:36:16.501"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.503" endtime="20241121 23:36:16.503"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.501" endtime="20241121 23:36:16.503"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.504" endtime="20241121 23:36:16.504"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.503" endtime="20241121 23:36:16.504"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.506" endtime="20241121 23:36:16.506"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.506" endtime="20241121 23:36:16.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.506" endtime="20241121 23:36:16.506"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.507" endtime="20241121 23:36:16.507"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.506" endtime="20241121 23:36:16.507"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:16.506" endtime="20241121 23:36:16.507"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:16.504" endtime="20241121 23:36:16.507"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:16.512" endtime="20241121 23:36:16.512"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.516" endtime="20241121 23:36:16.516"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.507" endtime="20241121 23:36:16.516"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.517" endtime="20241121 23:36:16.517"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.518" endtime="20241121 23:36:16.518"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.518" endtime="20241121 23:36:16.518"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.518" endtime="20241121 23:36:16.518"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.518" endtime="20241121 23:36:16.518"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:16.517" endtime="20241121 23:36:16.519"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:16.516" endtime="20241121 23:36:16.519"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:16.525" endtime="20241121 23:36:16.525"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.528" endtime="20241121 23:36:16.528"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.519" endtime="20241121 23:36:16.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.529" endtime="20241121 23:36:16.529"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.528" endtime="20241121 23:36:16.529"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.532" endtime="20241121 23:36:16.532"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.529" endtime="20241121 23:36:16.532"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:16.537" endtime="20241121 23:36:16.539"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:16.539" endtime="20241121 23:36:16.539"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:16.532" endtime="20241121 23:36:16.539"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.366" endtime="20241121 23:36:16.539"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:16.539" endtime="20241121 23:36:16.539"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:21.543" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:36:16.539" endtime="20241121 23:36:21.543"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.363" endtime="20241121 23:36:21.543"/>
</kw>
<status status="PASS" starttime="20241121 23:36:16.363" endtime="20241121 23:36:21.543"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.546" endtime="20241121 23:36:21.546"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.543" endtime="20241121 23:36:21.546"/>
</branch>
<status status="PASS" starttime="20241121 23:36:16.363" endtime="20241121 23:36:21.546"/>
</try>
<status status="PASS" starttime="20241121 23:36:16.357" endtime="20241121 23:36:21.546"/>
</iter>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:21.546"/>
</for>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:21.546"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.127" endtime="20241121 23:36:21.546"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:21.548" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:36:21.548" endtime="20241121 23:36:21.548"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:36:21.553" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:36:21.551" endtime="20241121 23:36:21.553"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:36:21.566" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:36:21.568" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:36:21.553" endtime="20241121 23:36:21.568"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:21.568" endtime="20241121 23:36:21.568"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:36:21.571" endtime="20241121 23:36:21.571"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.548" endtime="20241121 23:36:21.571"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:21.571"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:21.573" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:36:21.571" endtime="20241121 23:36:21.573"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:21.573" endtime="20241121 23:36:21.573"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:21.581" endtime="20241121 23:36:21.582"/>
</kw>
<msg timestamp="20241121 23:36:21.582" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.581" endtime="20241121 23:36:21.582"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:21.584" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:36:21.582" endtime="20241121 23:36:21.584"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:21.586" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.586" endtime="20241121 23:36:21.586"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.584" endtime="20241121 23:36:21.586"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.587" endtime="20241121 23:36:21.587"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.586" endtime="20241121 23:36:21.587"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.584" endtime="20241121 23:36:21.587"/>
</if>
<status status="PASS" starttime="20241121 23:36:21.582" endtime="20241121 23:36:21.587"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.582" endtime="20241121 23:36:21.588"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:21.588" endtime="20241121 23:36:21.588"/>
</return>
<msg timestamp="20241121 23:36:21.588" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.579" endtime="20241121 23:36:21.588"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:21.591" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:36:21.590" endtime="20241121 23:36:21.591"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:21.591" endtime="20241121 23:36:21.592"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:21.593" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:36:21.592" endtime="20241121 23:36:21.593"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.595" endtime="20241121 23:36:21.595"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.595" endtime="20241121 23:36:21.595"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.595" endtime="20241121 23:36:21.595"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.594" endtime="20241121 23:36:21.595"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:21.597" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:21.597" endtime="20241121 23:36:21.597"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:21.600" endtime="20241121 23:36:21.600"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.600" endtime="20241121 23:36:21.600"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.601" endtime="20241121 23:36:21.601"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.601" endtime="20241121 23:36:21.601"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:21.631" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:36:21.617" endtime="20241121 23:36:21.631"/>
</kw>
<msg timestamp="20241121 23:36:21.631" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.617" endtime="20241121 23:36:21.631"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.632" endtime="20241121 23:36:21.632"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.617" endtime="20241121 23:36:21.632"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.632" endtime="20241121 23:36:21.632"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.632" endtime="20241121 23:36:21.632"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.632" endtime="20241121 23:36:21.632"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.617" endtime="20241121 23:36:21.632"/>
</try>
<msg timestamp="20241121 23:36:21.632" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.616" endtime="20241121 23:36:21.635"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.635" endtime="20241121 23:36:21.635"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.614" endtime="20241121 23:36:21.635"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:21.635" endtime="20241121 23:36:21.635"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:21.635" endtime="20241121 23:36:21.635"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.614" endtime="20241121 23:36:21.635"/>
</try>
<msg timestamp="20241121 23:36:21.635" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.614" endtime="20241121 23:36:21.635"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.642" endtime="20241121 23:36:21.642"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.642" endtime="20241121 23:36:21.642"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.641" endtime="20241121 23:36:21.642"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.641" endtime="20241121 23:36:21.642"/>
</if>
<status status="PASS" starttime="20241121 23:36:21.637" endtime="20241121 23:36:21.642"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.612" endtime="20241121 23:36:21.642"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:21.664" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:36:21.652" endtime="20241121 23:36:21.664"/>
</kw>
<msg timestamp="20241121 23:36:21.664" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.651" endtime="20241121 23:36:21.664"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.664" endtime="20241121 23:36:21.665"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.651" endtime="20241121 23:36:21.665"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.665" endtime="20241121 23:36:21.665"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.666" endtime="20241121 23:36:21.666"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.665" endtime="20241121 23:36:21.666"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.651" endtime="20241121 23:36:21.666"/>
</try>
<msg timestamp="20241121 23:36:21.667" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.651" endtime="20241121 23:36:21.667"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.667" endtime="20241121 23:36:21.667"/>
</return>
<msg timestamp="20241121 23:36:21.667" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.647" endtime="20241121 23:36:21.668"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.672" endtime="20241121 23:36:21.673"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.673" endtime="20241121 23:36:21.673"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.672" endtime="20241121 23:36:21.673"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.672" endtime="20241121 23:36:21.673"/>
</if>
<status status="PASS" starttime="20241121 23:36:21.669" endtime="20241121 23:36:21.674"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.647" endtime="20241121 23:36:21.674"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:21.701" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:36:21.682" endtime="20241121 23:36:21.702"/>
</kw>
<msg timestamp="20241121 23:36:21.702" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.682" endtime="20241121 23:36:21.702"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.702" endtime="20241121 23:36:21.702"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.682" endtime="20241121 23:36:21.702"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.703" endtime="20241121 23:36:21.703"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.703" endtime="20241121 23:36:21.703"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.702" endtime="20241121 23:36:21.703"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.682" endtime="20241121 23:36:21.703"/>
</try>
<msg timestamp="20241121 23:36:21.703" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.681" endtime="20241121 23:36:21.703"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.703" endtime="20241121 23:36:21.704"/>
</return>
<msg timestamp="20241121 23:36:21.704" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.678" endtime="20241121 23:36:21.704"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.707" endtime="20241121 23:36:21.707"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.707" endtime="20241121 23:36:21.707"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.707" endtime="20241121 23:36:21.707"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.707" endtime="20241121 23:36:21.707"/>
</if>
<status status="PASS" starttime="20241121 23:36:21.705" endtime="20241121 23:36:21.707"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.677" endtime="20241121 23:36:21.708"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.607" endtime="20241121 23:36:21.708"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:21.708" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:21.708" endtime="20241121 23:36:21.708"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.709" endtime="20241121 23:36:21.709"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.709" endtime="20241121 23:36:21.711"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:21.711" endtime="20241121 23:36:21.711"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.711" endtime="20241121 23:36:21.711"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.709" endtime="20241121 23:36:21.711"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:36:21.712" endtime="20241121 23:36:21.740"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.711" endtime="20241121 23:36:21.740"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.741" endtime="20241121 23:36:21.741"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.741" endtime="20241121 23:36:21.741"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.741" endtime="20241121 23:36:21.741"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.711" endtime="20241121 23:36:21.741"/>
</try>
<status status="PASS" starttime="20241121 23:36:21.709" endtime="20241121 23:36:21.742"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.709" endtime="20241121 23:36:21.742"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.708" endtime="20241121 23:36:21.742"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.742" endtime="20241121 23:36:21.742"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.742" endtime="20241121 23:36:21.742"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.708" endtime="20241121 23:36:21.742"/>
</try>
<status status="PASS" starttime="20241121 23:36:21.605" endtime="20241121 23:36:21.742"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.602" endtime="20241121 23:36:21.742"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.744" endtime="20241121 23:36:21.744"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.746" endtime="20241121 23:36:21.746"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.743" endtime="20241121 23:36:21.746"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.748" endtime="20241121 23:36:21.748"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.746" endtime="20241121 23:36:21.748"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.751" endtime="20241121 23:36:21.751"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.748" endtime="20241121 23:36:21.751"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.754" endtime="20241121 23:36:21.754"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.751" endtime="20241121 23:36:21.754"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.756" endtime="20241121 23:36:21.757"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.754" endtime="20241121 23:36:21.757"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.758" endtime="20241121 23:36:21.758"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.758" endtime="20241121 23:36:21.758"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.758" endtime="20241121 23:36:21.758"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.759" endtime="20241121 23:36:21.759"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.759" endtime="20241121 23:36:21.759"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:21.758" endtime="20241121 23:36:21.759"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:21.757" endtime="20241121 23:36:21.759"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:21.763" endtime="20241121 23:36:21.763"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.765" endtime="20241121 23:36:21.765"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.759" endtime="20241121 23:36:21.765"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.768" endtime="20241121 23:36:21.768"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.768" endtime="20241121 23:36:21.768"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.768" endtime="20241121 23:36:21.768"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.768" endtime="20241121 23:36:21.768"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.768" endtime="20241121 23:36:21.768"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:21.768" endtime="20241121 23:36:21.768"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:21.768" endtime="20241121 23:36:21.768"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:21.774" endtime="20241121 23:36:21.774"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.777" endtime="20241121 23:36:21.777"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.768" endtime="20241121 23:36:21.777"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.779" endtime="20241121 23:36:21.779"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.777" endtime="20241121 23:36:21.779"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.782" endtime="20241121 23:36:21.782"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.779" endtime="20241121 23:36:21.782"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:21.788" endtime="20241121 23:36:21.788"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.789" endtime="20241121 23:36:21.789"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.782" endtime="20241121 23:36:21.789"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.597" endtime="20241121 23:36:21.789"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:21.789" endtime="20241121 23:36:21.790"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:21.790" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:21.790" endtime="20241121 23:36:21.790"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.595" endtime="20241121 23:36:21.791"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.595" endtime="20241121 23:36:21.791"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.791" endtime="20241121 23:36:21.791"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.791" endtime="20241121 23:36:21.791"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.595" endtime="20241121 23:36:21.791"/>
</try>
<status status="PASS" starttime="20241121 23:36:21.590" endtime="20241121 23:36:21.791"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:21.792" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:36:21.791" endtime="20241121 23:36:21.792"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:21.792" endtime="20241121 23:36:21.793"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:21.793" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:36:21.793" endtime="20241121 23:36:21.793"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.794" endtime="20241121 23:36:21.794"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.794" endtime="20241121 23:36:21.794"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.794" endtime="20241121 23:36:21.794"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.793" endtime="20241121 23:36:21.794"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:21.796" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:21.795" endtime="20241121 23:36:21.796"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:21.796" endtime="20241121 23:36:21.796"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.796" endtime="20241121 23:36:21.796"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.797" endtime="20241121 23:36:21.797"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.797" endtime="20241121 23:36:21.797"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:21.814" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:21.808" endtime="20241121 23:36:21.815"/>
</kw>
<msg timestamp="20241121 23:36:21.815" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.808" endtime="20241121 23:36:21.815"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.815" endtime="20241121 23:36:21.815"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.807" endtime="20241121 23:36:21.815"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.815" endtime="20241121 23:36:21.815"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.815" endtime="20241121 23:36:21.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.815" endtime="20241121 23:36:21.815"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.807" endtime="20241121 23:36:21.815"/>
</try>
<msg timestamp="20241121 23:36:21.815" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.806" endtime="20241121 23:36:21.815"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.815" endtime="20241121 23:36:21.815"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.805" endtime="20241121 23:36:21.815"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:21.815" endtime="20241121 23:36:21.815"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:21.815" endtime="20241121 23:36:21.815"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.805" endtime="20241121 23:36:21.815"/>
</try>
<msg timestamp="20241121 23:36:21.818" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.804" endtime="20241121 23:36:21.818"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.818" endtime="20241121 23:36:21.818"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.818" endtime="20241121 23:36:21.818"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.818" endtime="20241121 23:36:21.821"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.818" endtime="20241121 23:36:21.821"/>
</if>
<status status="PASS" starttime="20241121 23:36:21.818" endtime="20241121 23:36:21.821"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.803" endtime="20241121 23:36:21.821"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:21.832" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:21.825" endtime="20241121 23:36:21.832"/>
</kw>
<msg timestamp="20241121 23:36:21.832" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.825" endtime="20241121 23:36:21.832"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.833" endtime="20241121 23:36:21.833"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.825" endtime="20241121 23:36:21.833"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.833" endtime="20241121 23:36:21.833"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.833" endtime="20241121 23:36:21.833"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.833" endtime="20241121 23:36:21.833"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.825" endtime="20241121 23:36:21.833"/>
</try>
<msg timestamp="20241121 23:36:21.833" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.825" endtime="20241121 23:36:21.833"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.833" endtime="20241121 23:36:21.833"/>
</return>
<msg timestamp="20241121 23:36:21.833" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.824" endtime="20241121 23:36:21.833"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.836" endtime="20241121 23:36:21.836"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.836" endtime="20241121 23:36:21.836"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.836" endtime="20241121 23:36:21.836"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.836" endtime="20241121 23:36:21.836"/>
</if>
<status status="PASS" starttime="20241121 23:36:21.836" endtime="20241121 23:36:21.836"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.821" endtime="20241121 23:36:21.838"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:21.861" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:36:21.844" endtime="20241121 23:36:21.861"/>
</kw>
<msg timestamp="20241121 23:36:21.861" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.844" endtime="20241121 23:36:21.861"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.862" endtime="20241121 23:36:21.862"/>
</return>
<status status="PASS" starttime="20241121 23:36:21.844" endtime="20241121 23:36:21.862"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.862" endtime="20241121 23:36:21.862"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.862" endtime="20241121 23:36:21.862"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.862" endtime="20241121 23:36:21.862"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.844" endtime="20241121 23:36:21.863"/>
</try>
<msg timestamp="20241121 23:36:21.863" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.844" endtime="20241121 23:36:21.863"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:21.863" endtime="20241121 23:36:21.863"/>
</return>
<msg timestamp="20241121 23:36:21.863" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:36:21.841" endtime="20241121 23:36:21.863"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.866" endtime="20241121 23:36:21.866"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.866" endtime="20241121 23:36:21.866"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.866" endtime="20241121 23:36:21.866"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.866" endtime="20241121 23:36:21.866"/>
</if>
<status status="PASS" starttime="20241121 23:36:21.865" endtime="20241121 23:36:21.867"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.840" endtime="20241121 23:36:21.867"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.801" endtime="20241121 23:36:21.867"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:21.868" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:21.867" endtime="20241121 23:36:21.868"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:36:21.869" endtime="20241121 23:36:21.870"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:21.869" endtime="20241121 23:36:21.870"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:21.870" endtime="20241121 23:36:21.870"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.870" endtime="20241121 23:36:21.870"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.869" endtime="20241121 23:36:21.870"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:36:21.871" endtime="20241121 23:36:22.011"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.871" endtime="20241121 23:36:22.011"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.011" endtime="20241121 23:36:22.011"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.012" endtime="20241121 23:36:22.012"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.011" endtime="20241121 23:36:22.012"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.871" endtime="20241121 23:36:22.012"/>
</try>
<status status="PASS" starttime="20241121 23:36:21.868" endtime="20241121 23:36:22.012"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.868" endtime="20241121 23:36:22.012"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.868" endtime="20241121 23:36:22.013"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.013" endtime="20241121 23:36:22.013"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.013" endtime="20241121 23:36:22.013"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.868" endtime="20241121 23:36:22.014"/>
</try>
<status status="PASS" starttime="20241121 23:36:21.799" endtime="20241121 23:36:22.014"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.797" endtime="20241121 23:36:22.014"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.017" endtime="20241121 23:36:22.017"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.021" endtime="20241121 23:36:22.022"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.014" endtime="20241121 23:36:22.022"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.023" endtime="20241121 23:36:22.024"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.022" endtime="20241121 23:36:22.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.029" endtime="20241121 23:36:22.029"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.024" endtime="20241121 23:36:22.029"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.031" endtime="20241121 23:36:22.031"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.029" endtime="20241121 23:36:22.031"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.032" endtime="20241121 23:36:22.032"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.031" endtime="20241121 23:36:22.032"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.035" endtime="20241121 23:36:22.035"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.035" endtime="20241121 23:36:22.035"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.035" endtime="20241121 23:36:22.035"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.035" endtime="20241121 23:36:22.035"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.035" endtime="20241121 23:36:22.035"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:22.035" endtime="20241121 23:36:22.035"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:22.032" endtime="20241121 23:36:22.035"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:22.043" endtime="20241121 23:36:22.043"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.048" endtime="20241121 23:36:22.048"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.035" endtime="20241121 23:36:22.048"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.050" endtime="20241121 23:36:22.050"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.051" endtime="20241121 23:36:22.051"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.050" endtime="20241121 23:36:22.051"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.051" endtime="20241121 23:36:22.051"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.051" endtime="20241121 23:36:22.051"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:22.050" endtime="20241121 23:36:22.051"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:22.048" endtime="20241121 23:36:22.051"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:22.058" endtime="20241121 23:36:22.058"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.063" endtime="20241121 23:36:22.063"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.051" endtime="20241121 23:36:22.063"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.066" endtime="20241121 23:36:22.066"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.063" endtime="20241121 23:36:22.066"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.068" endtime="20241121 23:36:22.068"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.066" endtime="20241121 23:36:22.068"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:22.077" endtime="20241121 23:36:22.077"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.077" endtime="20241121 23:36:22.077"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.068" endtime="20241121 23:36:22.077"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.796" endtime="20241121 23:36:22.077"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:22.077" endtime="20241121 23:36:22.079"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:22.081" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:22.079" endtime="20241121 23:36:22.081"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.795" endtime="20241121 23:36:22.081"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.795" endtime="20241121 23:36:22.081"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.081" endtime="20241121 23:36:22.081"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.081" endtime="20241121 23:36:22.081"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.795" endtime="20241121 23:36:22.081"/>
</try>
<status status="PASS" starttime="20241121 23:36:21.791" endtime="20241121 23:36:22.082"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:22.082" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:36:22.082" endtime="20241121 23:36:22.082"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:22.082" endtime="20241121 23:36:22.085"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:22.085" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:36:22.085" endtime="20241121 23:36:22.085"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.085" endtime="20241121 23:36:22.085"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.085" endtime="20241121 23:36:22.085"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.085" endtime="20241121 23:36:22.085"/>
</branch>
<status status="PASS" starttime="20241121 23:36:22.085" endtime="20241121 23:36:22.085"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:22.087" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:22.087" endtime="20241121 23:36:22.087"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:22.090" endtime="20241121 23:36:22.090"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.087" endtime="20241121 23:36:22.090"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.091" endtime="20241121 23:36:22.091"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.091" endtime="20241121 23:36:22.091"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.095" endtime="20241121 23:36:22.095"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.092" endtime="20241121 23:36:22.095"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.101" endtime="20241121 23:36:22.101"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.103" endtime="20241121 23:36:22.103"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.097" endtime="20241121 23:36:22.103"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.106" endtime="20241121 23:36:22.106"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.103" endtime="20241121 23:36:22.107"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.113" endtime="20241121 23:36:22.113"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.107" endtime="20241121 23:36:22.113"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.116" endtime="20241121 23:36:22.116"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.113" endtime="20241121 23:36:22.116"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.118" endtime="20241121 23:36:22.118"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.118" endtime="20241121 23:36:22.118"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.121" endtime="20241121 23:36:22.121"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.121" endtime="20241121 23:36:22.121"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.121" endtime="20241121 23:36:22.123"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.124" endtime="20241121 23:36:22.124"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.123" endtime="20241121 23:36:22.124"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:22.121" endtime="20241121 23:36:22.124"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:22.118" endtime="20241121 23:36:22.124"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:22.134" endtime="20241121 23:36:22.134"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.138" endtime="20241121 23:36:22.138"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.125" endtime="20241121 23:36:22.138"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.141" endtime="20241121 23:36:22.141"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.142" endtime="20241121 23:36:22.142"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.141" endtime="20241121 23:36:22.142"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.143" endtime="20241121 23:36:22.143"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.143" endtime="20241121 23:36:22.143"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:22.141" endtime="20241121 23:36:22.143"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:22.138" endtime="20241121 23:36:22.143"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:22.150" endtime="20241121 23:36:22.150"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.154" endtime="20241121 23:36:22.154"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.144" endtime="20241121 23:36:22.154"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:22.323" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:22.158" endtime="20241121 23:36:22.324"/>
</kw>
<msg timestamp="20241121 23:36:22.324" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:22.158" endtime="20241121 23:36:22.324"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:22.324" endtime="20241121 23:36:22.324"/>
</return>
<status status="PASS" starttime="20241121 23:36:22.158" endtime="20241121 23:36:22.325"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.325" endtime="20241121 23:36:22.325"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.325" endtime="20241121 23:36:22.325"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.325" endtime="20241121 23:36:22.325"/>
</branch>
<status status="PASS" starttime="20241121 23:36:22.158" endtime="20241121 23:36:22.326"/>
</try>
<msg timestamp="20241121 23:36:22.326" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:22.158" endtime="20241121 23:36:22.326"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:22.326" endtime="20241121 23:36:22.326"/>
</return>
<status status="PASS" starttime="20241121 23:36:22.157" endtime="20241121 23:36:22.326"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:22.326" endtime="20241121 23:36:22.326"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:22.326" endtime="20241121 23:36:22.326"/>
</branch>
<status status="PASS" starttime="20241121 23:36:22.156" endtime="20241121 23:36:22.326"/>
</try>
<msg timestamp="20241121 23:36:22.326" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:36:22.156" endtime="20241121 23:36:22.326"/>
</kw>
<status status="PASS" starttime="20241121 23:36:22.154" endtime="20241121 23:36:22.326"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.330" endtime="20241121 23:36:22.330"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.328" endtime="20241121 23:36:22.330"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:22.336" endtime="20241121 23:36:22.336"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.336" endtime="20241121 23:36:22.336"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.330" endtime="20241121 23:36:22.336"/>
</branch>
<status status="PASS" starttime="20241121 23:36:22.087" endtime="20241121 23:36:22.336"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:22.336" endtime="20241121 23:36:22.337"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:22.338" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:22.337" endtime="20241121 23:36:22.338"/>
</kw>
<status status="PASS" starttime="20241121 23:36:22.087" endtime="20241121 23:36:22.338"/>
</kw>
<status status="PASS" starttime="20241121 23:36:22.087" endtime="20241121 23:36:22.338"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.338" endtime="20241121 23:36:22.339"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.338" endtime="20241121 23:36:22.339"/>
</branch>
<status status="PASS" starttime="20241121 23:36:22.085" endtime="20241121 23:36:22.339"/>
</try>
<status status="PASS" starttime="20241121 23:36:22.082" endtime="20241121 23:36:22.339"/>
</iter>
<status status="PASS" starttime="20241121 23:36:21.589" endtime="20241121 23:36:22.339"/>
</for>
<status status="PASS" starttime="20241121 23:36:21.589" endtime="20241121 23:36:22.339"/>
</branch>
<status status="PASS" starttime="20241121 23:36:21.589" endtime="20241121 23:36:22.340"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:22.340" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:36:22.340" endtime="20241121 23:36:22.340"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:36:22.341" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:36:22.341" endtime="20241121 23:36:22.341"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:36:22.369" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:36:22.369" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:36:22.342" endtime="20241121 23:36:22.369"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:22.369" endtime="20241121 23:36:22.369"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:36:22.369" endtime="20241121 23:36:22.369"/>
</return>
<status status="PASS" starttime="20241121 23:36:22.341" endtime="20241121 23:36:22.369"/>
</kw>
<status status="PASS" starttime="20241121 23:36:21.571" endtime="20241121 23:36:22.369"/>
</iter>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:22.371"/>
</for>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:22.371"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.107" endtime="20241121 23:36:22.371"/>
</if>
<status status="PASS" starttime="20241121 23:36:05.083" endtime="20241121 23:36:22.371"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.371" endtime="20241121 23:36:22.371"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.371" endtime="20241121 23:36:22.371"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.083" endtime="20241121 23:36:22.371"/>
</if>
<status status="PASS" starttime="20241121 23:36:05.060" endtime="20241121 23:36:22.371"/>
</kw>
<status status="PASS" starttime="20241121 23:36:05.060" endtime="20241121 23:36:22.371"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:22.371" endtime="20241121 23:36:22.371"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:22.371" endtime="20241121 23:36:22.371"/>
</branch>
<status status="PASS" starttime="20241121 23:36:05.060" endtime="20241121 23:36:22.371"/>
</try>
<status status="PASS" starttime="20241121 23:36:05.007" endtime="20241121 23:36:22.371"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:22.373" endtime="20241121 23:36:22.373"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:36:33.276" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '62', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:06:33.094Z', 'createdAt': '2024-11-21T18:06:33.094Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:36:22.374" endtime="20241121 23:36:33.276"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:33.279" endtime="20241121 23:36:33.286"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:33.295" endtime="20241121 23:36:33.297"/>
</kw>
<msg timestamp="20241121 23:36:33.298" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.294" endtime="20241121 23:36:33.298"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.301" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:36:33.300" endtime="20241121 23:36:33.301"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.303" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.303" endtime="20241121 23:36:33.304"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.302" endtime="20241121 23:36:33.304"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.305" endtime="20241121 23:36:33.305"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:33.304" endtime="20241121 23:36:33.305"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.302" endtime="20241121 23:36:33.305"/>
</if>
<status status="PASS" starttime="20241121 23:36:33.299" endtime="20241121 23:36:33.305"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.298" endtime="20241121 23:36:33.305"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:33.307" endtime="20241121 23:36:33.307"/>
</return>
<msg timestamp="20241121 23:36:33.308" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.287" endtime="20241121 23:36:33.308"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.309" endtime="20241121 23:36:33.309"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:36:33.309" endtime="20241121 23:36:33.309"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:33.308" endtime="20241121 23:36:33.309"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.308" endtime="20241121 23:36:33.310"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</kw>
<msg timestamp="20241121 23:36:33.319" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.319" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.319" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</if>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:33.319" endtime="20241121 23:36:33.319"/>
</return>
<msg timestamp="20241121 23:36:33.319" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.317" endtime="20241121 23:36:33.319"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.334"/>
</kw>
<msg timestamp="20241121 23:36:33.334" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.334"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.334" level="INFO">${values} = {'id': '62', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:06:33.094Z', 'createdAt': '2024-11-21T18:06:33.094Z'}</msg>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.334"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.334" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.334"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.334"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.346" endtime="20241121 23:36:33.346"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.346"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.346"/>
</if>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.346"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.346"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:33.346" endtime="20241121 23:36:33.346"/>
</return>
<msg timestamp="20241121 23:36:33.350" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.334" endtime="20241121 23:36:33.350"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.350" endtime="20241121 23:36:33.350"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:33.350" endtime="20241121 23:36:33.350"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.350" endtime="20241121 23:36:33.350"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.350" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:36:33.350" endtime="20241121 23:36:33.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.350" level="INFO">${testCaseRun} = {'id': '62', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:06:33.094Z', 'createdAt': '2024-11-21T18:06:33.094Z'}</msg>
<status status="PASS" starttime="20241121 23:36:33.350" endtime="20241121 23:36:33.350"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:33.350" endtime="20241121 23:36:33.350"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:33.366" endtime="20241121 23:36:33.367"/>
</kw>
<msg timestamp="20241121 23:36:33.367" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.365" endtime="20241121 23:36:33.367"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.369" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:36:33.368" endtime="20241121 23:36:33.370"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.372" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.371" endtime="20241121 23:36:33.372"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.370" endtime="20241121 23:36:33.372"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.373" endtime="20241121 23:36:33.373"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:33.372" endtime="20241121 23:36:33.373"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.370" endtime="20241121 23:36:33.374"/>
</if>
<status status="PASS" starttime="20241121 23:36:33.368" endtime="20241121 23:36:33.374"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.367" endtime="20241121 23:36:33.374"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:33.374" endtime="20241121 23:36:33.374"/>
</return>
<msg timestamp="20241121 23:36:33.375" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.362" endtime="20241121 23:36:33.375"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.377" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:36:33.377" endtime="20241121 23:36:33.378"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:33.378" endtime="20241121 23:36:33.379"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:33.388" endtime="20241121 23:36:33.389"/>
</kw>
<msg timestamp="20241121 23:36:33.389" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.387" endtime="20241121 23:36:33.389"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.392" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:36:33.391" endtime="20241121 23:36:33.392"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.393" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.393" endtime="20241121 23:36:33.393"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.392" endtime="20241121 23:36:33.393"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.393" endtime="20241121 23:36:33.393"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:33.393" endtime="20241121 23:36:33.393"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.392" endtime="20241121 23:36:33.396"/>
</if>
<status status="PASS" starttime="20241121 23:36:33.390" endtime="20241121 23:36:33.396"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.390" endtime="20241121 23:36:33.397"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:33.398" endtime="20241121 23:36:33.398"/>
</return>
<msg timestamp="20241121 23:36:33.399" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:33.385" endtime="20241121 23:36:33.400"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.402" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:33.402"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:33.402"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:33.402" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:33.402"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.402" endtime="20241121 23:36:33.402"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:33.402" endtime="20241121 23:36:33.402"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:33.402" endtime="20241121 23:36:33.402"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:33.402"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:33.402" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:33.402"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:36:33.417" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:36:33.421" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:36:33.421" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:36:33.415" endtime="20241121 23:36:33.421"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:36:33.423" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:36:33.441" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:36:33.441" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:36:33.422" endtime="20241121 23:36:33.441"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:36:33.441" endtime="20241121 23:36:33.441"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:36:41.180" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:36:41.180" level="INFO">${page_id} = {'page_id': 'page=b5cff071-76a8-498b-94dc-004fe158689e', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:36:33.441" endtime="20241121 23:36:41.180"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:36:41.182" level="INFO">Switching to page {'page_id': 'page=b5cff071-76a8-498b-94dc-004fe158689e', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:36:41.214" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=a124a82d-d86e-4075-90dc-c1a459a017fd",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=75b84b73-7ea3-407c-8055-c3cfa95050da",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=203ad8f9-0f8a-4fa1-b7a2-cb91c9228608",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=f7d786f1-7687-4a76-8d25-c9b9507ddec7",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=27de9d44-735d-4442-9d59-d3187dbc6d78",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=551c511f-85fd-4e61-9b35-a0574055fd53",
        "activePage": "page=b5cff071-76a8-498b-94dc-004fe158689e",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=b5cff071-76a8-498b-94dc-004fe158689e",
            "timestamp": 1732212393.733
          }
        ]
      }
    ],
    "activeContext": "context=551c511f-85fd-4e61-9b35-a0574055fd53",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:36:41.220" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:36:41.181" endtime="20241121 23:36:41.220"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.413" endtime="20241121 23:36:41.220"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.413" endtime="20241121 23:36:41.220"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.221" endtime="20241121 23:36:41.221"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.220" endtime="20241121 23:36:41.221"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.224" endtime="20241121 23:36:41.224"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.221" endtime="20241121 23:36:41.224"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.227" endtime="20241121 23:36:41.227"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.230" endtime="20241121 23:36:41.230"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.224" endtime="20241121 23:36:41.231"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.232" endtime="20241121 23:36:41.232"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.231" endtime="20241121 23:36:41.232"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.235" endtime="20241121 23:36:41.235"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.232" endtime="20241121 23:36:41.235"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.238" endtime="20241121 23:36:41.238"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.235" endtime="20241121 23:36:41.238"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.239" endtime="20241121 23:36:41.239"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.238" endtime="20241121 23:36:41.239"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.241" endtime="20241121 23:36:41.241"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.241" endtime="20241121 23:36:41.241"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.241" endtime="20241121 23:36:41.241"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.242" endtime="20241121 23:36:41.242"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.241" endtime="20241121 23:36:41.242"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:41.241" endtime="20241121 23:36:41.242"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:41.240" endtime="20241121 23:36:41.242"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:41.248" endtime="20241121 23:36:41.249"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.252" endtime="20241121 23:36:41.252"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.242" endtime="20241121 23:36:41.252"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.253" endtime="20241121 23:36:41.253"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.254" endtime="20241121 23:36:41.254"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.253" endtime="20241121 23:36:41.254"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.254" endtime="20241121 23:36:41.254"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.254" endtime="20241121 23:36:41.254"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:41.253" endtime="20241121 23:36:41.254"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:41.252" endtime="20241121 23:36:41.254"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:41.260" endtime="20241121 23:36:41.260"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.263" endtime="20241121 23:36:41.264"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.254" endtime="20241121 23:36:41.264"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.265" endtime="20241121 23:36:41.265"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.264" endtime="20241121 23:36:41.265"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.268" endtime="20241121 23:36:41.268"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.265" endtime="20241121 23:36:41.268"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:41.275" endtime="20241121 23:36:41.275"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:41.275" endtime="20241121 23:36:41.275"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:41.268" endtime="20241121 23:36:41.275"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:41.275"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:41.276" endtime="20241121 23:36:41.276"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:42.283" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:36:41.276" endtime="20241121 23:36:42.283"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:42.284"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:42.285"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.286" endtime="20241121 23:36:42.286"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.285" endtime="20241121 23:36:42.286"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.402" endtime="20241121 23:36:42.287"/>
</try>
<status status="PASS" starttime="20241121 23:36:33.401" endtime="20241121 23:36:42.287"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:42.289" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:36:42.288" endtime="20241121 23:36:42.289"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:42.290" endtime="20241121 23:36:42.292"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:42.294" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:36:42.293" endtime="20241121 23:36:42.294"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.296" endtime="20241121 23:36:42.296"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.297" endtime="20241121 23:36:42.298"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.295" endtime="20241121 23:36:42.298"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.294" endtime="20241121 23:36:42.298"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:42.303" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:36:42.301" endtime="20241121 23:36:42.303"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:42.305" endtime="20241121 23:36:42.305"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.304" endtime="20241121 23:36:42.306"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.309" endtime="20241121 23:36:42.309"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.307" endtime="20241121 23:36:42.309"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.322" endtime="20241121 23:36:42.322"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.311" endtime="20241121 23:36:42.323"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.330" endtime="20241121 23:36:42.330"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.334" endtime="20241121 23:36:42.334"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.323" endtime="20241121 23:36:42.334"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.336" endtime="20241121 23:36:42.336"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.334" endtime="20241121 23:36:42.336"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.341" endtime="20241121 23:36:42.341"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.336" endtime="20241121 23:36:42.341"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:42.378" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:42.350" endtime="20241121 23:36:42.379"/>
</kw>
<msg timestamp="20241121 23:36:42.379" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.350" endtime="20241121 23:36:42.379"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.379" endtime="20241121 23:36:42.379"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.349" endtime="20241121 23:36:42.379"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.380" endtime="20241121 23:36:42.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.381" endtime="20241121 23:36:42.381"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.380" endtime="20241121 23:36:42.381"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.349" endtime="20241121 23:36:42.381"/>
</try>
<msg timestamp="20241121 23:36:42.381" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.349" endtime="20241121 23:36:42.381"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.382" endtime="20241121 23:36:42.382"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.348" endtime="20241121 23:36:42.382"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:42.382" endtime="20241121 23:36:42.382"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:42.382" endtime="20241121 23:36:42.382"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.348" endtime="20241121 23:36:42.382"/>
</try>
<msg timestamp="20241121 23:36:42.383" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.348" endtime="20241121 23:36:42.383"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.386" endtime="20241121 23:36:42.386"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.386" endtime="20241121 23:36:42.386"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.386" endtime="20241121 23:36:42.386"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.385" endtime="20241121 23:36:42.386"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.384" endtime="20241121 23:36:42.387"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.347" endtime="20241121 23:36:42.387"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:42.403" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:42.397" endtime="20241121 23:36:42.403"/>
</kw>
<msg timestamp="20241121 23:36:42.404" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.396" endtime="20241121 23:36:42.404"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.404" endtime="20241121 23:36:42.404"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.396" endtime="20241121 23:36:42.404"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.404" endtime="20241121 23:36:42.404"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.405" endtime="20241121 23:36:42.405"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.404" endtime="20241121 23:36:42.405"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.396" endtime="20241121 23:36:42.405"/>
</try>
<msg timestamp="20241121 23:36:42.405" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.395" endtime="20241121 23:36:42.405"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.405" endtime="20241121 23:36:42.405"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.394" endtime="20241121 23:36:42.406"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:42.406" endtime="20241121 23:36:42.406"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:42.406" endtime="20241121 23:36:42.406"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.394" endtime="20241121 23:36:42.406"/>
</try>
<msg timestamp="20241121 23:36:42.406" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.394" endtime="20241121 23:36:42.406"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.409" endtime="20241121 23:36:42.409"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.409" endtime="20241121 23:36:42.409"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.408" endtime="20241121 23:36:42.409"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.408" endtime="20241121 23:36:42.409"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.407" endtime="20241121 23:36:42.409"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.393" endtime="20241121 23:36:42.410"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:42.448" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:36:42.448" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:42.410" endtime="20241121 23:36:42.448"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:42.448" endtime="20241121 23:36:42.449"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.410" endtime="20241121 23:36:42.449"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.449" endtime="20241121 23:36:42.450"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.450" endtime="20241121 23:36:42.450"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.449" endtime="20241121 23:36:42.450"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.410" endtime="20241121 23:36:42.450"/>
</try>
<msg timestamp="20241121 23:36:42.451" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:42.391" endtime="20241121 23:36:42.451"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.456" endtime="20241121 23:36:42.456"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.456" endtime="20241121 23:36:42.456"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.455" endtime="20241121 23:36:42.456"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.455" endtime="20241121 23:36:42.457"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.453" endtime="20241121 23:36:42.457"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.390" endtime="20241121 23:36:42.457"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.458" endtime="20241121 23:36:42.458"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.457" endtime="20241121 23:36:42.458"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.389" endtime="20241121 23:36:42.458"/>
</try>
<status status="PASS" starttime="20241121 23:36:42.389" endtime="20241121 23:36:42.458"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:42.475" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:36:42.467" endtime="20241121 23:36:42.475"/>
</kw>
<msg timestamp="20241121 23:36:42.475" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.466" endtime="20241121 23:36:42.475"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.475" endtime="20241121 23:36:42.475"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.466" endtime="20241121 23:36:42.475"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.476" endtime="20241121 23:36:42.476"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.476" endtime="20241121 23:36:42.476"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.476" endtime="20241121 23:36:42.476"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.466" endtime="20241121 23:36:42.476"/>
</try>
<msg timestamp="20241121 23:36:42.477" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.465" endtime="20241121 23:36:42.477"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.477" endtime="20241121 23:36:42.477"/>
</return>
<msg timestamp="20241121 23:36:42.477" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.463" endtime="20241121 23:36:42.477"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.480" endtime="20241121 23:36:42.480"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.481" endtime="20241121 23:36:42.481"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.480" endtime="20241121 23:36:42.481"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.480" endtime="20241121 23:36:42.481"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.479" endtime="20241121 23:36:42.481"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.462" endtime="20241121 23:36:42.481"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.345" endtime="20241121 23:36:42.481"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:42.501" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:36:42.486" endtime="20241121 23:36:42.501"/>
</kw>
<msg timestamp="20241121 23:36:42.501" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.486" endtime="20241121 23:36:42.502"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.502" endtime="20241121 23:36:42.502"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.486" endtime="20241121 23:36:42.502"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.502" endtime="20241121 23:36:42.502"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.502" endtime="20241121 23:36:42.503"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.502" endtime="20241121 23:36:42.503"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.485" endtime="20241121 23:36:42.503"/>
</try>
<msg timestamp="20241121 23:36:42.503" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.485" endtime="20241121 23:36:42.503"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.503" endtime="20241121 23:36:42.503"/>
</return>
<msg timestamp="20241121 23:36:42.503" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.484" endtime="20241121 23:36:42.503"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.506" endtime="20241121 23:36:42.506"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.506" endtime="20241121 23:36:42.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.506" endtime="20241121 23:36:42.506"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.506" endtime="20241121 23:36:42.506"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.505" endtime="20241121 23:36:42.507"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.483" endtime="20241121 23:36:42.507"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:42.507" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:42.507" endtime="20241121 23:36:42.507"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.509" endtime="20241121 23:36:42.509"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.511" endtime="20241121 23:36:42.511"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.509" endtime="20241121 23:36:42.511"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:42.511" endtime="20241121 23:36:42.512"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.511" endtime="20241121 23:36:42.512"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.508" endtime="20241121 23:36:42.512"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:36:42.512" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:36:42.512" endtime="20241121 23:36:42.542"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.512" endtime="20241121 23:36:42.542"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.542" endtime="20241121 23:36:42.542"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.542" endtime="20241121 23:36:42.543"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.542" endtime="20241121 23:36:42.543"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.512" endtime="20241121 23:36:42.543"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:42.554" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:42.549" endtime="20241121 23:36:42.554"/>
</kw>
<msg timestamp="20241121 23:36:42.555" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.549" endtime="20241121 23:36:42.555"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.555" endtime="20241121 23:36:42.555"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.549" endtime="20241121 23:36:42.555"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.555" endtime="20241121 23:36:42.555"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.556" endtime="20241121 23:36:42.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.555" endtime="20241121 23:36:42.556"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.549" endtime="20241121 23:36:42.556"/>
</try>
<msg timestamp="20241121 23:36:42.556" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.548" endtime="20241121 23:36:42.556"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.556" endtime="20241121 23:36:42.556"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.547" endtime="20241121 23:36:42.556"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:42.556" endtime="20241121 23:36:42.557"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:42.556" endtime="20241121 23:36:42.557"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.547" endtime="20241121 23:36:42.557"/>
</try>
<msg timestamp="20241121 23:36:42.557" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.547" endtime="20241121 23:36:42.557"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.559" endtime="20241121 23:36:42.559"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.560" endtime="20241121 23:36:42.560"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.559" endtime="20241121 23:36:42.560"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.559" endtime="20241121 23:36:42.560"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.558" endtime="20241121 23:36:42.560"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.546" endtime="20241121 23:36:42.560"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:42.574" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:42.569" endtime="20241121 23:36:42.574"/>
</kw>
<msg timestamp="20241121 23:36:42.575" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.568" endtime="20241121 23:36:42.575"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.575" endtime="20241121 23:36:42.575"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.568" endtime="20241121 23:36:42.575"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.575" endtime="20241121 23:36:42.575"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.575" endtime="20241121 23:36:42.576"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.575" endtime="20241121 23:36:42.576"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.568" endtime="20241121 23:36:42.576"/>
</try>
<msg timestamp="20241121 23:36:42.576" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.567" endtime="20241121 23:36:42.576"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.576" endtime="20241121 23:36:42.576"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.566" endtime="20241121 23:36:42.576"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:42.576" endtime="20241121 23:36:42.577"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:42.576" endtime="20241121 23:36:42.577"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.566" endtime="20241121 23:36:42.577"/>
</try>
<msg timestamp="20241121 23:36:42.577" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.566" endtime="20241121 23:36:42.577"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.579" endtime="20241121 23:36:42.580"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.580" endtime="20241121 23:36:42.580"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.579" endtime="20241121 23:36:42.580"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.579" endtime="20241121 23:36:42.580"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.578" endtime="20241121 23:36:42.580"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.566" endtime="20241121 23:36:42.580"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:42.592" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:36:42.592" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:42.581" endtime="20241121 23:36:42.592"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:42.592" endtime="20241121 23:36:42.592"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.580" endtime="20241121 23:36:42.592"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.593" endtime="20241121 23:36:42.593"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.593" endtime="20241121 23:36:42.593"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.593" endtime="20241121 23:36:42.593"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.580" endtime="20241121 23:36:42.593"/>
</try>
<msg timestamp="20241121 23:36:42.594" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:42.563" endtime="20241121 23:36:42.594"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.596" endtime="20241121 23:36:42.596"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.596" endtime="20241121 23:36:42.596"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.596" endtime="20241121 23:36:42.596"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.596" endtime="20241121 23:36:42.597"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.595" endtime="20241121 23:36:42.597"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.562" endtime="20241121 23:36:42.597"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.597" endtime="20241121 23:36:42.597"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.597" endtime="20241121 23:36:42.597"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.562" endtime="20241121 23:36:42.597"/>
</try>
<status status="PASS" starttime="20241121 23:36:42.562" endtime="20241121 23:36:42.597"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:42.607" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:36:42.602" endtime="20241121 23:36:42.608"/>
</kw>
<msg timestamp="20241121 23:36:42.609" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.602" endtime="20241121 23:36:42.609"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.609" endtime="20241121 23:36:42.609"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.601" endtime="20241121 23:36:42.609"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.609" endtime="20241121 23:36:42.609"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.610" endtime="20241121 23:36:42.610"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.609" endtime="20241121 23:36:42.610"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.601" endtime="20241121 23:36:42.610"/>
</try>
<msg timestamp="20241121 23:36:42.610" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.601" endtime="20241121 23:36:42.610"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.610" endtime="20241121 23:36:42.610"/>
</return>
<msg timestamp="20241121 23:36:42.611" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.600" endtime="20241121 23:36:42.611"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.613" endtime="20241121 23:36:42.613"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.613" endtime="20241121 23:36:42.613"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.613" endtime="20241121 23:36:42.614"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.613" endtime="20241121 23:36:42.614"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.612" endtime="20241121 23:36:42.614"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.599" endtime="20241121 23:36:42.614"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.544" endtime="20241121 23:36:42.614"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:42.626" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:36:42.620" endtime="20241121 23:36:42.626"/>
</kw>
<msg timestamp="20241121 23:36:42.626" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.620" endtime="20241121 23:36:42.626"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.626" endtime="20241121 23:36:42.626"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.620" endtime="20241121 23:36:42.627"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.627" endtime="20241121 23:36:42.627"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.627" endtime="20241121 23:36:42.627"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.627" endtime="20241121 23:36:42.627"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.620" endtime="20241121 23:36:42.627"/>
</try>
<msg timestamp="20241121 23:36:42.628" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.619" endtime="20241121 23:36:42.628"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.628" endtime="20241121 23:36:42.628"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.618" endtime="20241121 23:36:42.628"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:42.628" endtime="20241121 23:36:42.628"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:42.628" endtime="20241121 23:36:42.628"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.618" endtime="20241121 23:36:42.628"/>
</try>
<msg timestamp="20241121 23:36:42.629" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.618" endtime="20241121 23:36:42.629"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.631" endtime="20241121 23:36:42.631"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.631" endtime="20241121 23:36:42.631"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.631" endtime="20241121 23:36:42.631"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.631" endtime="20241121 23:36:42.631"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.630" endtime="20241121 23:36:42.632"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.617" endtime="20241121 23:36:42.632"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:42.644" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:36:42.644" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:36:42.632" endtime="20241121 23:36:42.644"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:42.644" endtime="20241121 23:36:42.644"/>
</return>
<status status="PASS" starttime="20241121 23:36:42.632" endtime="20241121 23:36:42.645"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.645" endtime="20241121 23:36:42.645"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.645" endtime="20241121 23:36:42.645"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.645" endtime="20241121 23:36:42.645"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.632" endtime="20241121 23:36:42.645"/>
</try>
<msg timestamp="20241121 23:36:42.646" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:36:42.615" endtime="20241121 23:36:42.646"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:36:42.646" endtime="20241121 23:36:42.646"/>
</return>
<msg timestamp="20241121 23:36:42.646" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:36:42.544" endtime="20241121 23:36:42.646"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:36:42.653" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.648" endtime="20241121 23:36:42.653"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:42.653" endtime="20241121 23:36:42.653"/>
</return>
<msg timestamp="20241121 23:36:42.653" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:36:42.648" endtime="20241121 23:36:42.653"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.657" endtime="20241121 23:36:42.657"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.657" endtime="20241121 23:36:42.657"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.657" endtime="20241121 23:36:42.657"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.657" endtime="20241121 23:36:42.658"/>
</if>
<status status="PASS" starttime="20241121 23:36:42.656" endtime="20241121 23:36:42.658"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.543" endtime="20241121 23:36:42.658"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.508" endtime="20241121 23:36:42.658"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.508" endtime="20241121 23:36:42.658"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.507" endtime="20241121 23:36:42.658"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.658" endtime="20241121 23:36:42.659"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.658" endtime="20241121 23:36:42.659"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.507" endtime="20241121 23:36:42.659"/>
</try>
<status status="PASS" starttime="20241121 23:36:42.344" endtime="20241121 23:36:42.659"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.342" endtime="20241121 23:36:42.659"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.660" endtime="20241121 23:36:42.660"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.659" endtime="20241121 23:36:42.660"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.661" endtime="20241121 23:36:42.661"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.662" endtime="20241121 23:36:42.662"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.662" endtime="20241121 23:36:42.662"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.662" endtime="20241121 23:36:42.662"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.662" endtime="20241121 23:36:42.662"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:42.662" endtime="20241121 23:36:42.662"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:42.660" endtime="20241121 23:36:42.662"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:42.667" endtime="20241121 23:36:42.667"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.670" endtime="20241121 23:36:42.670"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.663" endtime="20241121 23:36:42.670"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.671" endtime="20241121 23:36:42.671"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.672" endtime="20241121 23:36:42.672"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.671" endtime="20241121 23:36:42.672"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.672" endtime="20241121 23:36:42.672"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.672" endtime="20241121 23:36:42.672"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:42.671" endtime="20241121 23:36:42.672"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:42.670" endtime="20241121 23:36:42.672"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:42.677" endtime="20241121 23:36:42.677"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.680" endtime="20241121 23:36:42.681"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.672" endtime="20241121 23:36:42.681"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.682" endtime="20241121 23:36:42.682"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.681" endtime="20241121 23:36:42.682"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.684" endtime="20241121 23:36:42.684"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.682" endtime="20241121 23:36:42.685"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:42.692" endtime="20241121 23:36:42.692"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:42.692" endtime="20241121 23:36:42.692"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:42.685" endtime="20241121 23:36:42.692"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.303" endtime="20241121 23:36:42.693"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:42.693" endtime="20241121 23:36:42.693"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:43.700" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:36:42.694" endtime="20241121 23:36:43.700"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.300" endtime="20241121 23:36:43.701"/>
</kw>
<status status="PASS" starttime="20241121 23:36:42.299" endtime="20241121 23:36:43.701"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.703" endtime="20241121 23:36:43.703"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.702" endtime="20241121 23:36:43.703"/>
</branch>
<status status="PASS" starttime="20241121 23:36:42.299" endtime="20241121 23:36:43.703"/>
</try>
<status status="PASS" starttime="20241121 23:36:42.288" endtime="20241121 23:36:43.704"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:43.706" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:36:43.705" endtime="20241121 23:36:43.706"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:43.707" endtime="20241121 23:36:43.709"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:43.709" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:36:43.709" endtime="20241121 23:36:43.709"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.710" endtime="20241121 23:36:43.711"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.711" endtime="20241121 23:36:43.711"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.710" endtime="20241121 23:36:43.711"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.710" endtime="20241121 23:36:43.712"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:43.714" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:36:43.713" endtime="20241121 23:36:43.714"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:43.715" endtime="20241121 23:36:43.715"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.714" endtime="20241121 23:36:43.715"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.716" endtime="20241121 23:36:43.716"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.716" endtime="20241121 23:36:43.717"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.722" endtime="20241121 23:36:43.723"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.717" endtime="20241121 23:36:43.723"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.728" endtime="20241121 23:36:43.729"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.733" endtime="20241121 23:36:43.733"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.724" endtime="20241121 23:36:43.734"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.736" endtime="20241121 23:36:43.737"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.734" endtime="20241121 23:36:43.737"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.742" endtime="20241121 23:36:43.743"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.737" endtime="20241121 23:36:43.743"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:43.759" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:43.754" endtime="20241121 23:36:43.759"/>
</kw>
<msg timestamp="20241121 23:36:43.760" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.753" endtime="20241121 23:36:43.760"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.760" endtime="20241121 23:36:43.760"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.753" endtime="20241121 23:36:43.760"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.760" endtime="20241121 23:36:43.760"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.761" endtime="20241121 23:36:43.761"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.760" endtime="20241121 23:36:43.761"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.753" endtime="20241121 23:36:43.761"/>
</try>
<msg timestamp="20241121 23:36:43.761" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.752" endtime="20241121 23:36:43.761"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.761" endtime="20241121 23:36:43.761"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.751" endtime="20241121 23:36:43.761"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:43.762" endtime="20241121 23:36:43.762"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:43.761" endtime="20241121 23:36:43.762"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.751" endtime="20241121 23:36:43.762"/>
</try>
<msg timestamp="20241121 23:36:43.762" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.750" endtime="20241121 23:36:43.762"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.765" endtime="20241121 23:36:43.765"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.765" endtime="20241121 23:36:43.765"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.764" endtime="20241121 23:36:43.765"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.764" endtime="20241121 23:36:43.765"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.763" endtime="20241121 23:36:43.765"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.749" endtime="20241121 23:36:43.765"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:43.780" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:43.774" endtime="20241121 23:36:43.780"/>
</kw>
<msg timestamp="20241121 23:36:43.781" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.774" endtime="20241121 23:36:43.781"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.781" endtime="20241121 23:36:43.781"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.774" endtime="20241121 23:36:43.781"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.781" endtime="20241121 23:36:43.781"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.782" endtime="20241121 23:36:43.782"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.781" endtime="20241121 23:36:43.782"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.774" endtime="20241121 23:36:43.782"/>
</try>
<msg timestamp="20241121 23:36:43.782" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.773" endtime="20241121 23:36:43.782"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.782" endtime="20241121 23:36:43.782"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.772" endtime="20241121 23:36:43.782"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:43.783" endtime="20241121 23:36:43.783"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:43.782" endtime="20241121 23:36:43.783"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.772" endtime="20241121 23:36:43.783"/>
</try>
<msg timestamp="20241121 23:36:43.783" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.772" endtime="20241121 23:36:43.783"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.785" endtime="20241121 23:36:43.785"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.786" endtime="20241121 23:36:43.786"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.785" endtime="20241121 23:36:43.786"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.785" endtime="20241121 23:36:43.786"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.784" endtime="20241121 23:36:43.786"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.771" endtime="20241121 23:36:43.786"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:43.797" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:36:43.797" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:43.787" endtime="20241121 23:36:43.797"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:43.797" endtime="20241121 23:36:43.797"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.786" endtime="20241121 23:36:43.797"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.798" endtime="20241121 23:36:43.798"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.798" endtime="20241121 23:36:43.798"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.798" endtime="20241121 23:36:43.798"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.786" endtime="20241121 23:36:43.798"/>
</try>
<msg timestamp="20241121 23:36:43.799" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:43.769" endtime="20241121 23:36:43.799"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.801" endtime="20241121 23:36:43.801"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.801" endtime="20241121 23:36:43.801"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.801" endtime="20241121 23:36:43.801"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.801" endtime="20241121 23:36:43.802"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.800" endtime="20241121 23:36:43.802"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.768" endtime="20241121 23:36:43.802"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.802" endtime="20241121 23:36:43.802"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.802" endtime="20241121 23:36:43.802"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.768" endtime="20241121 23:36:43.802"/>
</try>
<status status="PASS" starttime="20241121 23:36:43.767" endtime="20241121 23:36:43.803"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:43.814" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:43.807" endtime="20241121 23:36:43.814"/>
</kw>
<msg timestamp="20241121 23:36:43.814" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.807" endtime="20241121 23:36:43.814"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.814" endtime="20241121 23:36:43.814"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.807" endtime="20241121 23:36:43.815"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.815" endtime="20241121 23:36:43.815"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.815" endtime="20241121 23:36:43.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.815" endtime="20241121 23:36:43.815"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.806" endtime="20241121 23:36:43.815"/>
</try>
<msg timestamp="20241121 23:36:43.816" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.806" endtime="20241121 23:36:43.816"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.816" endtime="20241121 23:36:43.816"/>
</return>
<msg timestamp="20241121 23:36:43.816" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.805" endtime="20241121 23:36:43.816"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.818" endtime="20241121 23:36:43.819"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.819" endtime="20241121 23:36:43.819"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.818" endtime="20241121 23:36:43.819"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.818" endtime="20241121 23:36:43.819"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.817" endtime="20241121 23:36:43.819"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.804" endtime="20241121 23:36:43.819"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.747" endtime="20241121 23:36:43.819"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:43.838" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:36:43.824" endtime="20241121 23:36:43.839"/>
</kw>
<msg timestamp="20241121 23:36:43.839" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.824" endtime="20241121 23:36:43.839"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.839" endtime="20241121 23:36:43.839"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.823" endtime="20241121 23:36:43.839"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.839" endtime="20241121 23:36:43.840"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.840" endtime="20241121 23:36:43.840"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.839" endtime="20241121 23:36:43.840"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.823" endtime="20241121 23:36:43.840"/>
</try>
<msg timestamp="20241121 23:36:43.840" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.823" endtime="20241121 23:36:43.840"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.840" endtime="20241121 23:36:43.841"/>
</return>
<msg timestamp="20241121 23:36:43.841" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.822" endtime="20241121 23:36:43.841"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.843" endtime="20241121 23:36:43.843"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.843" endtime="20241121 23:36:43.844"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.843" endtime="20241121 23:36:43.844"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.843" endtime="20241121 23:36:43.844"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.842" endtime="20241121 23:36:43.844"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.821" endtime="20241121 23:36:43.844"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:43.845" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:43.844" endtime="20241121 23:36:43.845"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.846" endtime="20241121 23:36:43.846"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.848" endtime="20241121 23:36:43.848"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.846" endtime="20241121 23:36:43.848"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:43.848" endtime="20241121 23:36:43.849"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.848" endtime="20241121 23:36:43.849"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.846" endtime="20241121 23:36:43.849"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:36:43.850" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:36:43.849" endtime="20241121 23:36:43.869"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.849" endtime="20241121 23:36:43.869"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.869" endtime="20241121 23:36:43.870"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.870" endtime="20241121 23:36:43.870"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.869" endtime="20241121 23:36:43.870"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.849" endtime="20241121 23:36:43.870"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:43.882" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:43.877" endtime="20241121 23:36:43.882"/>
</kw>
<msg timestamp="20241121 23:36:43.882" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.876" endtime="20241121 23:36:43.882"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.882" endtime="20241121 23:36:43.883"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.876" endtime="20241121 23:36:43.883"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.883" endtime="20241121 23:36:43.883"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.883" endtime="20241121 23:36:43.883"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.883" endtime="20241121 23:36:43.883"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.876" endtime="20241121 23:36:43.883"/>
</try>
<msg timestamp="20241121 23:36:43.884" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.876" endtime="20241121 23:36:43.884"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.884" endtime="20241121 23:36:43.884"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.875" endtime="20241121 23:36:43.884"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:43.884" endtime="20241121 23:36:43.884"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:43.884" endtime="20241121 23:36:43.884"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.874" endtime="20241121 23:36:43.884"/>
</try>
<msg timestamp="20241121 23:36:43.885" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.874" endtime="20241121 23:36:43.885"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.887" endtime="20241121 23:36:43.887"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.888" endtime="20241121 23:36:43.888"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.887" endtime="20241121 23:36:43.888"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.887" endtime="20241121 23:36:43.888"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.886" endtime="20241121 23:36:43.888"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.874" endtime="20241121 23:36:43.888"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:43.902" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:43.896" endtime="20241121 23:36:43.903"/>
</kw>
<msg timestamp="20241121 23:36:43.903" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.896" endtime="20241121 23:36:43.903"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.903" endtime="20241121 23:36:43.903"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.896" endtime="20241121 23:36:43.903"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.903" endtime="20241121 23:36:43.904"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.904" endtime="20241121 23:36:43.904"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.903" endtime="20241121 23:36:43.904"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.896" endtime="20241121 23:36:43.904"/>
</try>
<msg timestamp="20241121 23:36:43.904" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.895" endtime="20241121 23:36:43.904"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.904" endtime="20241121 23:36:43.904"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.894" endtime="20241121 23:36:43.905"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:43.905" endtime="20241121 23:36:43.905"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:43.905" endtime="20241121 23:36:43.905"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.894" endtime="20241121 23:36:43.905"/>
</try>
<msg timestamp="20241121 23:36:43.905" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.894" endtime="20241121 23:36:43.905"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.908" endtime="20241121 23:36:43.908"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.908" endtime="20241121 23:36:43.908"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.907" endtime="20241121 23:36:43.908"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.907" endtime="20241121 23:36:43.908"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.906" endtime="20241121 23:36:43.908"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.894" endtime="20241121 23:36:43.908"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:43.920" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:36:43.920" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:43.909" endtime="20241121 23:36:43.920"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:43.920" endtime="20241121 23:36:43.920"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.909" endtime="20241121 23:36:43.920"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.920" endtime="20241121 23:36:43.921"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.921" endtime="20241121 23:36:43.921"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.920" endtime="20241121 23:36:43.921"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.909" endtime="20241121 23:36:43.921"/>
</try>
<msg timestamp="20241121 23:36:43.921" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:36:43.891" endtime="20241121 23:36:43.921"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.923" endtime="20241121 23:36:43.923"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.923" endtime="20241121 23:36:43.924"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.923" endtime="20241121 23:36:43.924"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.923" endtime="20241121 23:36:43.924"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.922" endtime="20241121 23:36:43.924"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.890" endtime="20241121 23:36:43.924"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.924" endtime="20241121 23:36:43.924"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.924" endtime="20241121 23:36:43.924"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.890" endtime="20241121 23:36:43.924"/>
</try>
<status status="PASS" starttime="20241121 23:36:43.890" endtime="20241121 23:36:43.925"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:43.934" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:43.929" endtime="20241121 23:36:43.934"/>
</kw>
<msg timestamp="20241121 23:36:43.935" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.929" endtime="20241121 23:36:43.935"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.935" endtime="20241121 23:36:43.935"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.928" endtime="20241121 23:36:43.935"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.935" endtime="20241121 23:36:43.935"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.935" endtime="20241121 23:36:43.935"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.935" endtime="20241121 23:36:43.936"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.928" endtime="20241121 23:36:43.936"/>
</try>
<msg timestamp="20241121 23:36:43.936" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.928" endtime="20241121 23:36:43.936"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.936" endtime="20241121 23:36:43.936"/>
</return>
<msg timestamp="20241121 23:36:43.936" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.927" endtime="20241121 23:36:43.936"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.939" endtime="20241121 23:36:43.939"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.939" endtime="20241121 23:36:43.939"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.939" endtime="20241121 23:36:43.939"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.938" endtime="20241121 23:36:43.939"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.937" endtime="20241121 23:36:43.939"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.926" endtime="20241121 23:36:43.940"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.872" endtime="20241121 23:36:43.940"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:43.951" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:43.946" endtime="20241121 23:36:43.951"/>
</kw>
<msg timestamp="20241121 23:36:43.951" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.945" endtime="20241121 23:36:43.951"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.951" endtime="20241121 23:36:43.951"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.945" endtime="20241121 23:36:43.952"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.952" endtime="20241121 23:36:43.952"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.952" endtime="20241121 23:36:43.952"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.952" endtime="20241121 23:36:43.952"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.945" endtime="20241121 23:36:43.953"/>
</try>
<msg timestamp="20241121 23:36:43.953" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.945" endtime="20241121 23:36:43.953"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.953" endtime="20241121 23:36:43.953"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.944" endtime="20241121 23:36:43.953"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:43.953" endtime="20241121 23:36:43.953"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:43.953" endtime="20241121 23:36:43.953"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.944" endtime="20241121 23:36:43.953"/>
</try>
<msg timestamp="20241121 23:36:43.954" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.943" endtime="20241121 23:36:43.954"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.956" endtime="20241121 23:36:43.956"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.956" endtime="20241121 23:36:43.956"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.956" endtime="20241121 23:36:43.957"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.956" endtime="20241121 23:36:43.957"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.955" endtime="20241121 23:36:43.957"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.943" endtime="20241121 23:36:43.957"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:36:43.968" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:36:43.969" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:36:43.957" endtime="20241121 23:36:43.969"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:36:43.969" endtime="20241121 23:36:43.969"/>
</return>
<status status="PASS" starttime="20241121 23:36:43.957" endtime="20241121 23:36:43.969"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.969" endtime="20241121 23:36:43.969"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.970" endtime="20241121 23:36:43.970"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.969" endtime="20241121 23:36:43.970"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.957" endtime="20241121 23:36:43.970"/>
</try>
<msg timestamp="20241121 23:36:43.970" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:36:43.941" endtime="20241121 23:36:43.970"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:36:43.970" endtime="20241121 23:36:43.970"/>
</return>
<msg timestamp="20241121 23:36:43.971" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:36:43.871" endtime="20241121 23:36:43.971"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:36:43.978" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.973" endtime="20241121 23:36:43.978"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:43.978" endtime="20241121 23:36:43.978"/>
</return>
<msg timestamp="20241121 23:36:43.978" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:36:43.973" endtime="20241121 23:36:43.978"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.982" endtime="20241121 23:36:43.982"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.983" endtime="20241121 23:36:43.983"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.982" endtime="20241121 23:36:43.983"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.982" endtime="20241121 23:36:43.983"/>
</if>
<status status="PASS" starttime="20241121 23:36:43.981" endtime="20241121 23:36:43.983"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.870" endtime="20241121 23:36:43.983"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.845" endtime="20241121 23:36:43.983"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.845" endtime="20241121 23:36:43.983"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.845" endtime="20241121 23:36:43.983"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.984" endtime="20241121 23:36:43.984"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.983" endtime="20241121 23:36:43.984"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.845" endtime="20241121 23:36:43.984"/>
</try>
<status status="PASS" starttime="20241121 23:36:43.746" endtime="20241121 23:36:43.984"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.743" endtime="20241121 23:36:43.984"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.985" endtime="20241121 23:36:43.985"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.984" endtime="20241121 23:36:43.985"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.987" endtime="20241121 23:36:43.987"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.987" endtime="20241121 23:36:43.987"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.987" endtime="20241121 23:36:43.987"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.987" endtime="20241121 23:36:43.987"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.987" endtime="20241121 23:36:43.987"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:43.987" endtime="20241121 23:36:43.988"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:43.986" endtime="20241121 23:36:43.988"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:43.993" endtime="20241121 23:36:43.993"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.996" endtime="20241121 23:36:43.996"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.988" endtime="20241121 23:36:43.996"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.997" endtime="20241121 23:36:43.997"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.998" endtime="20241121 23:36:43.998"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.998" endtime="20241121 23:36:43.998"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:43.998" endtime="20241121 23:36:43.998"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.998" endtime="20241121 23:36:43.998"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:43.998" endtime="20241121 23:36:43.998"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:43.996" endtime="20241121 23:36:43.998"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:44.003" endtime="20241121 23:36:44.003"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:44.006" endtime="20241121 23:36:44.006"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:43.999" endtime="20241121 23:36:44.006"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:44.007" endtime="20241121 23:36:44.008"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:44.006" endtime="20241121 23:36:44.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:44.010" endtime="20241121 23:36:44.010"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:44.008" endtime="20241121 23:36:44.010"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:44.016" endtime="20241121 23:36:44.016"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:44.017" endtime="20241121 23:36:44.017"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:44.010" endtime="20241121 23:36:44.017"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.714" endtime="20241121 23:36:44.017"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:44.017" endtime="20241121 23:36:44.018"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:45.031" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:36:44.018" endtime="20241121 23:36:45.031"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.712" endtime="20241121 23:36:45.032"/>
</kw>
<status status="PASS" starttime="20241121 23:36:43.712" endtime="20241121 23:36:45.033"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.034" endtime="20241121 23:36:45.034"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.033" endtime="20241121 23:36:45.034"/>
</branch>
<status status="PASS" starttime="20241121 23:36:43.712" endtime="20241121 23:36:45.035"/>
</try>
<status status="PASS" starttime="20241121 23:36:43.704" endtime="20241121 23:36:45.035"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:45.038" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:36:45.036" endtime="20241121 23:36:45.038"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:45.038" endtime="20241121 23:36:45.040"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:45.042" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:36:45.041" endtime="20241121 23:36:45.042"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.043" endtime="20241121 23:36:45.044"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.044" endtime="20241121 23:36:45.045"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.043" endtime="20241121 23:36:45.045"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.042" endtime="20241121 23:36:45.045"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:45.050" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:45.048" endtime="20241121 23:36:45.050"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:45.052" endtime="20241121 23:36:45.053"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.051" endtime="20241121 23:36:45.053"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.056" endtime="20241121 23:36:45.056"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.054" endtime="20241121 23:36:45.057"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:45.098" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:45.090" endtime="20241121 23:36:45.098"/>
</kw>
<msg timestamp="20241121 23:36:45.098" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.089" endtime="20241121 23:36:45.098"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:45.098" endtime="20241121 23:36:45.098"/>
</return>
<status status="PASS" starttime="20241121 23:36:45.088" endtime="20241121 23:36:45.099"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.099" endtime="20241121 23:36:45.099"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.099" endtime="20241121 23:36:45.099"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.099" endtime="20241121 23:36:45.099"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.088" endtime="20241121 23:36:45.100"/>
</try>
<msg timestamp="20241121 23:36:45.100" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.085" endtime="20241121 23:36:45.100"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:45.100" endtime="20241121 23:36:45.100"/>
</return>
<status status="PASS" starttime="20241121 23:36:45.081" endtime="20241121 23:36:45.100"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:45.101" endtime="20241121 23:36:45.101"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:45.100" endtime="20241121 23:36:45.101"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.081" endtime="20241121 23:36:45.101"/>
</try>
<msg timestamp="20241121 23:36:45.101" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.079" endtime="20241121 23:36:45.101"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.104" endtime="20241121 23:36:45.105"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.105" endtime="20241121 23:36:45.105"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.104" endtime="20241121 23:36:45.105"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.104" endtime="20241121 23:36:45.105"/>
</if>
<status status="PASS" starttime="20241121 23:36:45.103" endtime="20241121 23:36:45.105"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.077" endtime="20241121 23:36:45.106"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:45.118" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:45.112" endtime="20241121 23:36:45.118"/>
</kw>
<msg timestamp="20241121 23:36:45.118" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.111" endtime="20241121 23:36:45.118"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:45.118" endtime="20241121 23:36:45.118"/>
</return>
<status status="PASS" starttime="20241121 23:36:45.111" endtime="20241121 23:36:45.118"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.120" endtime="20241121 23:36:45.120"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.120" endtime="20241121 23:36:45.120"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.118" endtime="20241121 23:36:45.120"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.111" endtime="20241121 23:36:45.120"/>
</try>
<msg timestamp="20241121 23:36:45.121" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.110" endtime="20241121 23:36:45.121"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:45.121" endtime="20241121 23:36:45.121"/>
</return>
<msg timestamp="20241121 23:36:45.121" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.109" endtime="20241121 23:36:45.121"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.124" endtime="20241121 23:36:45.125"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.125" endtime="20241121 23:36:45.125"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.124" endtime="20241121 23:36:45.125"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.124" endtime="20241121 23:36:45.125"/>
</if>
<status status="PASS" starttime="20241121 23:36:45.123" endtime="20241121 23:36:45.126"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.108" endtime="20241121 23:36:45.126"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:45.147" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:36:45.131" endtime="20241121 23:36:45.148"/>
</kw>
<msg timestamp="20241121 23:36:45.148" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.131" endtime="20241121 23:36:45.148"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:45.148" endtime="20241121 23:36:45.148"/>
</return>
<status status="PASS" starttime="20241121 23:36:45.131" endtime="20241121 23:36:45.148"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.148" endtime="20241121 23:36:45.148"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.149" endtime="20241121 23:36:45.149"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.148" endtime="20241121 23:36:45.149"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.131" endtime="20241121 23:36:45.149"/>
</try>
<msg timestamp="20241121 23:36:45.149" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.130" endtime="20241121 23:36:45.149"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:45.149" endtime="20241121 23:36:45.149"/>
</return>
<msg timestamp="20241121 23:36:45.150" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:36:45.129" endtime="20241121 23:36:45.150"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.152" endtime="20241121 23:36:45.152"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.152" endtime="20241121 23:36:45.152"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.152" endtime="20241121 23:36:45.152"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.152" endtime="20241121 23:36:45.153"/>
</if>
<status status="PASS" starttime="20241121 23:36:45.151" endtime="20241121 23:36:45.153"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.128" endtime="20241121 23:36:45.153"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.069" endtime="20241121 23:36:45.153"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:45.154" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:45.153" endtime="20241121 23:36:45.154"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.155" endtime="20241121 23:36:45.155"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.155" endtime="20241121 23:36:45.155"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:45.156" endtime="20241121 23:36:45.156"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.155" endtime="20241121 23:36:45.156"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.155" endtime="20241121 23:36:45.156"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:36:45.156" endtime="20241121 23:36:45.193"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.156" endtime="20241121 23:36:45.193"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.194" endtime="20241121 23:36:45.194"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.194" endtime="20241121 23:36:45.194"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.194" endtime="20241121 23:36:45.194"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.156" endtime="20241121 23:36:45.194"/>
</try>
<status status="PASS" starttime="20241121 23:36:45.154" endtime="20241121 23:36:45.195"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.154" endtime="20241121 23:36:45.195"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.154" endtime="20241121 23:36:45.195"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.195" endtime="20241121 23:36:45.195"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.195" endtime="20241121 23:36:45.195"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.154" endtime="20241121 23:36:45.195"/>
</try>
<status status="PASS" starttime="20241121 23:36:45.065" endtime="20241121 23:36:45.196"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.057" endtime="20241121 23:36:45.196"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.198" endtime="20241121 23:36:45.198"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.200" endtime="20241121 23:36:45.200"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.196" endtime="20241121 23:36:45.200"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.201" endtime="20241121 23:36:45.201"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.200" endtime="20241121 23:36:45.201"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.204" endtime="20241121 23:36:45.204"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.201" endtime="20241121 23:36:45.204"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.206" endtime="20241121 23:36:45.206"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.204" endtime="20241121 23:36:45.206"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.208" endtime="20241121 23:36:45.208"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.207" endtime="20241121 23:36:45.208"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.209" endtime="20241121 23:36:45.209"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.209" endtime="20241121 23:36:45.209"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.209" endtime="20241121 23:36:45.209"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.210" endtime="20241121 23:36:45.210"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.210" endtime="20241121 23:36:45.210"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:45.209" endtime="20241121 23:36:45.210"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:45.208" endtime="20241121 23:36:45.210"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:45.215" endtime="20241121 23:36:45.215"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.218" endtime="20241121 23:36:45.218"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.210" endtime="20241121 23:36:45.218"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.219" endtime="20241121 23:36:45.219"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.220" endtime="20241121 23:36:45.220"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.219" endtime="20241121 23:36:45.220"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.220" endtime="20241121 23:36:45.220"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.220" endtime="20241121 23:36:45.220"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:45.219" endtime="20241121 23:36:45.220"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:45.218" endtime="20241121 23:36:45.220"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:45.225" endtime="20241121 23:36:45.225"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.228" endtime="20241121 23:36:45.228"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.220" endtime="20241121 23:36:45.228"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.229" endtime="20241121 23:36:45.229"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.228" endtime="20241121 23:36:45.230"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.231" endtime="20241121 23:36:45.232"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.230" endtime="20241121 23:36:45.232"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:45.237" endtime="20241121 23:36:45.237"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:45.237" endtime="20241121 23:36:45.237"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:45.232" endtime="20241121 23:36:45.237"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.050" endtime="20241121 23:36:45.237"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:45.238" endtime="20241121 23:36:45.238"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:50.249" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:36:45.238" endtime="20241121 23:36:50.249"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.047" endtime="20241121 23:36:50.250"/>
</kw>
<status status="PASS" starttime="20241121 23:36:45.046" endtime="20241121 23:36:50.251"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.252" endtime="20241121 23:36:50.252"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.251" endtime="20241121 23:36:50.253"/>
</branch>
<status status="PASS" starttime="20241121 23:36:45.046" endtime="20241121 23:36:50.253"/>
</try>
<status status="PASS" starttime="20241121 23:36:45.036" endtime="20241121 23:36:50.253"/>
</iter>
<status status="PASS" starttime="20241121 23:36:33.401" endtime="20241121 23:36:50.254"/>
</for>
<status status="PASS" starttime="20241121 23:36:33.400" endtime="20241121 23:36:50.254"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.400" endtime="20241121 23:36:50.255"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:50.257" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:36:50.255" endtime="20241121 23:36:50.257"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:36:50.261" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:36:50.260" endtime="20241121 23:36:50.261"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:36:50.300" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:36:50.300" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:36:50.262" endtime="20241121 23:36:50.300"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:50.301" endtime="20241121 23:36:50.303"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:36:50.303" endtime="20241121 23:36:50.304"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.258" endtime="20241121 23:36:50.305"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.376" endtime="20241121 23:36:50.305"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.308" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:36:50.307" endtime="20241121 23:36:50.308"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:50.309" endtime="20241121 23:36:50.310"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:50.321" endtime="20241121 23:36:50.322"/>
</kw>
<msg timestamp="20241121 23:36:50.323" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.320" endtime="20241121 23:36:50.323"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.327" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:36:50.326" endtime="20241121 23:36:50.327"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.331" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.329" endtime="20241121 23:36:50.331"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.328" endtime="20241121 23:36:50.331"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.333" endtime="20241121 23:36:50.333"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.332" endtime="20241121 23:36:50.334"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.328" endtime="20241121 23:36:50.334"/>
</if>
<status status="PASS" starttime="20241121 23:36:50.325" endtime="20241121 23:36:50.334"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.323" endtime="20241121 23:36:50.335"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:36:50.335" endtime="20241121 23:36:50.335"/>
</return>
<msg timestamp="20241121 23:36:50.336" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.318" endtime="20241121 23:36:50.337"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.340" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:36:50.340" endtime="20241121 23:36:50.340"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:50.341" endtime="20241121 23:36:50.342"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:50.343" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:36:50.343" endtime="20241121 23:36:50.343"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.344" endtime="20241121 23:36:50.345"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.345" endtime="20241121 23:36:50.345"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.344" endtime="20241121 23:36:50.345"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.343" endtime="20241121 23:36:50.346"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.348" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:50.347" endtime="20241121 23:36:50.348"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:50.352" endtime="20241121 23:36:50.352"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.351" endtime="20241121 23:36:50.352"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.353" endtime="20241121 23:36:50.353"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.353" endtime="20241121 23:36:50.353"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:50.384" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:36:50.372" endtime="20241121 23:36:50.384"/>
</kw>
<msg timestamp="20241121 23:36:50.384" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.372" endtime="20241121 23:36:50.384"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.384" endtime="20241121 23:36:50.384"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.371" endtime="20241121 23:36:50.384"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.385" endtime="20241121 23:36:50.385"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.385" endtime="20241121 23:36:50.385"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.385" endtime="20241121 23:36:50.385"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.371" endtime="20241121 23:36:50.385"/>
</try>
<msg timestamp="20241121 23:36:50.386" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.371" endtime="20241121 23:36:50.386"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.386" endtime="20241121 23:36:50.386"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.369" endtime="20241121 23:36:50.386"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:50.386" endtime="20241121 23:36:50.386"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:50.386" endtime="20241121 23:36:50.386"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.369" endtime="20241121 23:36:50.386"/>
</try>
<msg timestamp="20241121 23:36:50.387" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.368" endtime="20241121 23:36:50.387"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.389" endtime="20241121 23:36:50.389"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.389" endtime="20241121 23:36:50.389"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.389" endtime="20241121 23:36:50.390"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.389" endtime="20241121 23:36:50.390"/>
</if>
<status status="PASS" starttime="20241121 23:36:50.388" endtime="20241121 23:36:50.390"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.366" endtime="20241121 23:36:50.390"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:50.402" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:36:50.395" endtime="20241121 23:36:50.402"/>
</kw>
<msg timestamp="20241121 23:36:50.403" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.394" endtime="20241121 23:36:50.403"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.403" endtime="20241121 23:36:50.403"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.394" endtime="20241121 23:36:50.403"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.403" endtime="20241121 23:36:50.403"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.405" endtime="20241121 23:36:50.405"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.403" endtime="20241121 23:36:50.405"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.394" endtime="20241121 23:36:50.405"/>
</try>
<msg timestamp="20241121 23:36:50.405" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.394" endtime="20241121 23:36:50.405"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.405" endtime="20241121 23:36:50.405"/>
</return>
<msg timestamp="20241121 23:36:50.406" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.392" endtime="20241121 23:36:50.406"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.408" endtime="20241121 23:36:50.408"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.408" endtime="20241121 23:36:50.408"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.408" endtime="20241121 23:36:50.409"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.408" endtime="20241121 23:36:50.409"/>
</if>
<status status="PASS" starttime="20241121 23:36:50.407" endtime="20241121 23:36:50.409"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.392" endtime="20241121 23:36:50.409"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:50.428" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:36:50.413" endtime="20241121 23:36:50.429"/>
</kw>
<msg timestamp="20241121 23:36:50.429" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.413" endtime="20241121 23:36:50.429"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.429" endtime="20241121 23:36:50.429"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.413" endtime="20241121 23:36:50.429"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.430" endtime="20241121 23:36:50.430"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.430" endtime="20241121 23:36:50.430"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.430" endtime="20241121 23:36:50.430"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.413" endtime="20241121 23:36:50.431"/>
</try>
<msg timestamp="20241121 23:36:50.431" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.413" endtime="20241121 23:36:50.431"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.431" endtime="20241121 23:36:50.431"/>
</return>
<msg timestamp="20241121 23:36:50.431" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.411" endtime="20241121 23:36:50.431"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.434" endtime="20241121 23:36:50.434"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.434" endtime="20241121 23:36:50.434"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.434" endtime="20241121 23:36:50.434"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.434" endtime="20241121 23:36:50.434"/>
</if>
<status status="PASS" starttime="20241121 23:36:50.433" endtime="20241121 23:36:50.435"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.411" endtime="20241121 23:36:50.435"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.360" endtime="20241121 23:36:50.435"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:50.436" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:50.435" endtime="20241121 23:36:50.436"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.437" endtime="20241121 23:36:50.437"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.437" endtime="20241121 23:36:50.437"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:50.438" endtime="20241121 23:36:50.438"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.437" endtime="20241121 23:36:50.438"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.437" endtime="20241121 23:36:50.438"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:36:50.438" endtime="20241121 23:36:50.481"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.438" endtime="20241121 23:36:50.481"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.482" endtime="20241121 23:36:50.482"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.482" endtime="20241121 23:36:50.482"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.481" endtime="20241121 23:36:50.482"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.438" endtime="20241121 23:36:50.482"/>
</try>
<status status="PASS" starttime="20241121 23:36:50.436" endtime="20241121 23:36:50.482"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.436" endtime="20241121 23:36:50.482"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.436" endtime="20241121 23:36:50.483"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.483" endtime="20241121 23:36:50.483"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.483" endtime="20241121 23:36:50.483"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.436" endtime="20241121 23:36:50.484"/>
</try>
<status status="PASS" starttime="20241121 23:36:50.358" endtime="20241121 23:36:50.484"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.354" endtime="20241121 23:36:50.484"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.486" endtime="20241121 23:36:50.486"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.488" endtime="20241121 23:36:50.489"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.484" endtime="20241121 23:36:50.489"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.490" endtime="20241121 23:36:50.491"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.489" endtime="20241121 23:36:50.491"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.495" endtime="20241121 23:36:50.495"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.491" endtime="20241121 23:36:50.495"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.497" endtime="20241121 23:36:50.497"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.495" endtime="20241121 23:36:50.497"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.498" endtime="20241121 23:36:50.498"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.497" endtime="20241121 23:36:50.498"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.499" endtime="20241121 23:36:50.499"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.500" endtime="20241121 23:36:50.500"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.500" endtime="20241121 23:36:50.500"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.500" endtime="20241121 23:36:50.500"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.500" endtime="20241121 23:36:50.500"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:50.499" endtime="20241121 23:36:50.500"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:50.498" endtime="20241121 23:36:50.501"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:50.507" endtime="20241121 23:36:50.507"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.510" endtime="20241121 23:36:50.510"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.501" endtime="20241121 23:36:50.510"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.510" endtime="20241121 23:36:50.510"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.511" endtime="20241121 23:36:50.511"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.510" endtime="20241121 23:36:50.511"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.511" endtime="20241121 23:36:50.511"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.511" endtime="20241121 23:36:50.511"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:50.510" endtime="20241121 23:36:50.511"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:50.510" endtime="20241121 23:36:50.511"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:50.516" endtime="20241121 23:36:50.516"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.519" endtime="20241121 23:36:50.519"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.511" endtime="20241121 23:36:50.519"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.520" endtime="20241121 23:36:50.520"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.519" endtime="20241121 23:36:50.520"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.522" endtime="20241121 23:36:50.522"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.521" endtime="20241121 23:36:50.523"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:50.529" endtime="20241121 23:36:50.529"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.529" endtime="20241121 23:36:50.529"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.523" endtime="20241121 23:36:50.529"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.349" endtime="20241121 23:36:50.529"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:50.530" endtime="20241121 23:36:50.531"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:50.531" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:50.531" endtime="20241121 23:36:50.531"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.346" endtime="20241121 23:36:50.531"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.346" endtime="20241121 23:36:50.531"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.532" endtime="20241121 23:36:50.532"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.531" endtime="20241121 23:36:50.532"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.346" endtime="20241121 23:36:50.532"/>
</try>
<status status="PASS" starttime="20241121 23:36:50.339" endtime="20241121 23:36:50.532"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.532" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:36:50.532" endtime="20241121 23:36:50.533"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:50.533" endtime="20241121 23:36:50.533"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:50.533" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:36:50.533" endtime="20241121 23:36:50.533"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.534" endtime="20241121 23:36:50.534"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.534" endtime="20241121 23:36:50.534"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.533" endtime="20241121 23:36:50.534"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.533" endtime="20241121 23:36:50.534"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.535" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:50.535" endtime="20241121 23:36:50.535"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:50.536" endtime="20241121 23:36:50.536"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.535" endtime="20241121 23:36:50.536"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.536" endtime="20241121 23:36:50.536"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.536" endtime="20241121 23:36:50.536"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:50.550" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:50.545" endtime="20241121 23:36:50.550"/>
</kw>
<msg timestamp="20241121 23:36:50.550" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.544" endtime="20241121 23:36:50.550"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.551" endtime="20241121 23:36:50.551"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.544" endtime="20241121 23:36:50.551"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.551" endtime="20241121 23:36:50.551"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.551" endtime="20241121 23:36:50.551"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.551" endtime="20241121 23:36:50.551"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.544" endtime="20241121 23:36:50.552"/>
</try>
<msg timestamp="20241121 23:36:50.552" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.543" endtime="20241121 23:36:50.552"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.552" endtime="20241121 23:36:50.552"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.542" endtime="20241121 23:36:50.552"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:50.552" endtime="20241121 23:36:50.552"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:50.552" endtime="20241121 23:36:50.552"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.542" endtime="20241121 23:36:50.553"/>
</try>
<msg timestamp="20241121 23:36:50.553" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.542" endtime="20241121 23:36:50.553"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.555" endtime="20241121 23:36:50.555"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.555" endtime="20241121 23:36:50.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.555" endtime="20241121 23:36:50.556"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.555" endtime="20241121 23:36:50.556"/>
</if>
<status status="PASS" starttime="20241121 23:36:50.554" endtime="20241121 23:36:50.556"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.541" endtime="20241121 23:36:50.556"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:50.567" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:36:50.561" endtime="20241121 23:36:50.567"/>
</kw>
<msg timestamp="20241121 23:36:50.567" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.560" endtime="20241121 23:36:50.567"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.567" endtime="20241121 23:36:50.567"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.560" endtime="20241121 23:36:50.568"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.568" endtime="20241121 23:36:50.568"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.568" endtime="20241121 23:36:50.568"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.568" endtime="20241121 23:36:50.568"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.560" endtime="20241121 23:36:50.569"/>
</try>
<msg timestamp="20241121 23:36:50.569" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.560" endtime="20241121 23:36:50.569"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.569" endtime="20241121 23:36:50.569"/>
</return>
<msg timestamp="20241121 23:36:50.569" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.558" endtime="20241121 23:36:50.569"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.572" endtime="20241121 23:36:50.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.572" endtime="20241121 23:36:50.572"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.572" endtime="20241121 23:36:50.572"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.571" endtime="20241121 23:36:50.572"/>
</if>
<status status="PASS" starttime="20241121 23:36:50.570" endtime="20241121 23:36:50.572"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.558" endtime="20241121 23:36:50.573"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:50.608" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:36:50.579" endtime="20241121 23:36:50.608"/>
</kw>
<msg timestamp="20241121 23:36:50.609" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.578" endtime="20241121 23:36:50.609"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.609" endtime="20241121 23:36:50.609"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.577" endtime="20241121 23:36:50.609"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.610" endtime="20241121 23:36:50.610"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.610" endtime="20241121 23:36:50.611"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.609" endtime="20241121 23:36:50.611"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.577" endtime="20241121 23:36:50.611"/>
</try>
<msg timestamp="20241121 23:36:50.611" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.577" endtime="20241121 23:36:50.611"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:50.612" endtime="20241121 23:36:50.612"/>
</return>
<msg timestamp="20241121 23:36:50.612" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.575" endtime="20241121 23:36:50.612"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.617" endtime="20241121 23:36:50.617"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.617" endtime="20241121 23:36:50.617"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.616" endtime="20241121 23:36:50.618"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.616" endtime="20241121 23:36:50.618"/>
</if>
<status status="PASS" starttime="20241121 23:36:50.614" endtime="20241121 23:36:50.618"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.574" endtime="20241121 23:36:50.618"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.539" endtime="20241121 23:36:50.619"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:50.620" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:36:50.619" endtime="20241121 23:36:50.620"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.623" endtime="20241121 23:36:50.623"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.622" endtime="20241121 23:36:50.623"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:36:50.623" endtime="20241121 23:36:50.624"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.623" endtime="20241121 23:36:50.624"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.622" endtime="20241121 23:36:50.624"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:36:50.625" endtime="20241121 23:36:50.759"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.625" endtime="20241121 23:36:50.759"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.759" endtime="20241121 23:36:50.760"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.760" endtime="20241121 23:36:50.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.759" endtime="20241121 23:36:50.760"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.625" endtime="20241121 23:36:50.760"/>
</try>
<status status="PASS" starttime="20241121 23:36:50.621" endtime="20241121 23:36:50.760"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.620" endtime="20241121 23:36:50.760"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.620" endtime="20241121 23:36:50.760"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.761" endtime="20241121 23:36:50.761"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.760" endtime="20241121 23:36:50.761"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.620" endtime="20241121 23:36:50.761"/>
</try>
<status status="PASS" starttime="20241121 23:36:50.538" endtime="20241121 23:36:50.761"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.536" endtime="20241121 23:36:50.762"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.764" endtime="20241121 23:36:50.765"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.767" endtime="20241121 23:36:50.767"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.762" endtime="20241121 23:36:50.767"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.769" endtime="20241121 23:36:50.769"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.767" endtime="20241121 23:36:50.769"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.775" endtime="20241121 23:36:50.775"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.769" endtime="20241121 23:36:50.776"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.778" endtime="20241121 23:36:50.778"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.776" endtime="20241121 23:36:50.778"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.781" endtime="20241121 23:36:50.781"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.779" endtime="20241121 23:36:50.781"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.784" endtime="20241121 23:36:50.784"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.785" endtime="20241121 23:36:50.785"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.785" endtime="20241121 23:36:50.785"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.786" endtime="20241121 23:36:50.786"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.786" endtime="20241121 23:36:50.786"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:50.784" endtime="20241121 23:36:50.786"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:50.782" endtime="20241121 23:36:50.787"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:50.796" endtime="20241121 23:36:50.796"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.801" endtime="20241121 23:36:50.801"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.787" endtime="20241121 23:36:50.802"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.803" endtime="20241121 23:36:50.803"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.804" endtime="20241121 23:36:50.804"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.803" endtime="20241121 23:36:50.804"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.804" endtime="20241121 23:36:50.804"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.804" endtime="20241121 23:36:50.805"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:50.803" endtime="20241121 23:36:50.805"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:50.802" endtime="20241121 23:36:50.805"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:50.812" endtime="20241121 23:36:50.812"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.816" endtime="20241121 23:36:50.817"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.805" endtime="20241121 23:36:50.817"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.818" endtime="20241121 23:36:50.818"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.817" endtime="20241121 23:36:50.818"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.821" endtime="20241121 23:36:50.821"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.819" endtime="20241121 23:36:50.821"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:50.830" endtime="20241121 23:36:50.830"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.831" endtime="20241121 23:36:50.831"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.822" endtime="20241121 23:36:50.832"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.535" endtime="20241121 23:36:50.832"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:50.832" endtime="20241121 23:36:50.833"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:50.834" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:50.833" endtime="20241121 23:36:50.834"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.534" endtime="20241121 23:36:50.834"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.534" endtime="20241121 23:36:50.834"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.835" endtime="20241121 23:36:50.835"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.834" endtime="20241121 23:36:50.835"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.534" endtime="20241121 23:36:50.835"/>
</try>
<status status="PASS" starttime="20241121 23:36:50.532" endtime="20241121 23:36:50.835"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.836" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:36:50.836" endtime="20241121 23:36:50.836"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:50.836" endtime="20241121 23:36:50.837"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:36:50.838" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:36:50.837" endtime="20241121 23:36:50.838"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.838" endtime="20241121 23:36:50.839"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.839" endtime="20241121 23:36:50.839"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.838" endtime="20241121 23:36:50.839"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.838" endtime="20241121 23:36:50.839"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:36:50.841" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:36:50.840" endtime="20241121 23:36:50.841"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:36:50.842" endtime="20241121 23:36:50.842"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.841" endtime="20241121 23:36:50.842"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.842" endtime="20241121 23:36:50.842"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.842" endtime="20241121 23:36:50.842"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.845" endtime="20241121 23:36:50.845"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.843" endtime="20241121 23:36:50.845"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.848" endtime="20241121 23:36:50.848"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.851" endtime="20241121 23:36:50.851"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.845" endtime="20241121 23:36:50.851"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.853" endtime="20241121 23:36:50.853"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.851" endtime="20241121 23:36:50.853"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.857" endtime="20241121 23:36:50.857"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.853" endtime="20241121 23:36:50.857"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.861" endtime="20241121 23:36:50.861"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.858" endtime="20241121 23:36:50.861"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.863" endtime="20241121 23:36:50.864"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.861" endtime="20241121 23:36:50.864"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.866" endtime="20241121 23:36:50.867"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.867" endtime="20241121 23:36:50.867"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.867" endtime="20241121 23:36:50.867"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.868" endtime="20241121 23:36:50.868"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.867" endtime="20241121 23:36:50.868"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:50.867" endtime="20241121 23:36:50.868"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:50.864" endtime="20241121 23:36:50.868"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:50.874" endtime="20241121 23:36:50.874"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.878" endtime="20241121 23:36:50.879"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.868" endtime="20241121 23:36:50.879"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.881" endtime="20241121 23:36:50.881"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.882" endtime="20241121 23:36:50.882"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.882" endtime="20241121 23:36:50.882"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.883" endtime="20241121 23:36:50.883"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.882" endtime="20241121 23:36:50.883"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:36:50.881" endtime="20241121 23:36:50.883"/>
</if>
<status status="NOT RUN" starttime="20241121 23:36:50.879" endtime="20241121 23:36:50.883"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:36:50.890" endtime="20241121 23:36:50.890"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:36:50.893" endtime="20241121 23:36:50.894"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:50.883" endtime="20241121 23:36:50.894"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:36:51.074" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:36:50.901" endtime="20241121 23:36:51.075"/>
</kw>
<msg timestamp="20241121 23:36:51.075" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.900" endtime="20241121 23:36:51.075"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:51.075" endtime="20241121 23:36:51.075"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.900" endtime="20241121 23:36:51.075"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:51.076" endtime="20241121 23:36:51.076"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:51.076" endtime="20241121 23:36:51.076"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:51.075" endtime="20241121 23:36:51.076"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.900" endtime="20241121 23:36:51.077"/>
</try>
<msg timestamp="20241121 23:36:51.077" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.899" endtime="20241121 23:36:51.077"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:36:51.077" endtime="20241121 23:36:51.078"/>
</return>
<status status="PASS" starttime="20241121 23:36:50.896" endtime="20241121 23:36:51.078"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:36:51.079" endtime="20241121 23:36:51.079"/>
</return>
<status status="NOT RUN" starttime="20241121 23:36:51.079" endtime="20241121 23:36:51.079"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.896" endtime="20241121 23:36:51.079"/>
</try>
<msg timestamp="20241121 23:36:51.079" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:36:50.896" endtime="20241121 23:36:51.080"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.894" endtime="20241121 23:36:51.080"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:36:51.082" endtime="20241121 23:36:51.083"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:51.080" endtime="20241121 23:36:51.083"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:36:51.091" endtime="20241121 23:36:51.092"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:36:51.092" endtime="20241121 23:36:51.092"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:51.083" endtime="20241121 23:36:51.092"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.841" endtime="20241121 23:36:51.092"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:51.093" endtime="20241121 23:36:51.093"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:36:51.093" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:36:51.093" endtime="20241121 23:36:51.093"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.840" endtime="20241121 23:36:51.093"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.840" endtime="20241121 23:36:51.094"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:51.094" endtime="20241121 23:36:51.094"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:51.094" endtime="20241121 23:36:51.094"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.839" endtime="20241121 23:36:51.094"/>
</try>
<status status="PASS" starttime="20241121 23:36:50.835" endtime="20241121 23:36:51.094"/>
</iter>
<status status="PASS" starttime="20241121 23:36:50.339" endtime="20241121 23:36:51.094"/>
</for>
<status status="PASS" starttime="20241121 23:36:50.338" endtime="20241121 23:36:51.094"/>
</branch>
<status status="PASS" starttime="20241121 23:36:50.337" endtime="20241121 23:36:51.095"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:36:51.095" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:36:51.095" endtime="20241121 23:36:51.095"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:36:51.097" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:36:51.096" endtime="20241121 23:36:51.097"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:36:51.124" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:36:51.124" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:36:51.097" endtime="20241121 23:36:51.124"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:51.124" endtime="20241121 23:36:51.125"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:36:51.125" endtime="20241121 23:36:51.125"/>
</return>
<status status="PASS" starttime="20241121 23:36:51.096" endtime="20241121 23:36:51.126"/>
</kw>
<status status="PASS" starttime="20241121 23:36:50.306" endtime="20241121 23:36:51.126"/>
</iter>
<status status="PASS" starttime="20241121 23:36:33.376" endtime="20241121 23:36:51.126"/>
</for>
<status status="PASS" starttime="20241121 23:36:33.375" endtime="20241121 23:36:51.126"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.375" endtime="20241121 23:36:51.126"/>
</if>
<status status="PASS" starttime="20241121 23:36:33.310" endtime="20241121 23:36:51.126"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:51.126" endtime="20241121 23:36:51.126"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:51.126" endtime="20241121 23:36:51.127"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.310" endtime="20241121 23:36:51.127"/>
</if>
<status status="PASS" starttime="20241121 23:36:33.277" endtime="20241121 23:36:51.127"/>
</kw>
<status status="PASS" starttime="20241121 23:36:33.277" endtime="20241121 23:36:51.127"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:36:51.127" endtime="20241121 23:36:51.127"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:36:51.127" endtime="20241121 23:36:51.127"/>
</branch>
<status status="PASS" starttime="20241121 23:36:33.277" endtime="20241121 23:36:51.127"/>
</try>
<status status="PASS" starttime="20241121 23:36:22.371" endtime="20241121 23:36:51.128"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:36:51.128" endtime="20241121 23:36:51.129"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:38:57.699" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '63', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:08:57.570Z', 'createdAt': '2024-11-21T18:08:57.570Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:36:51.129" endtime="20241121 23:38:57.700"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:38:57.701" endtime="20241121 23:38:57.707"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:38:57.710" endtime="20241121 23:38:57.711"/>
</kw>
<msg timestamp="20241121 23:38:57.711" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.710" endtime="20241121 23:38:57.711"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.714" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:38:57.713" endtime="20241121 23:38:57.714"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.714" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.714"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.714"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.714"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.714"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.714"/>
</if>
<status status="PASS" starttime="20241121 23:38:57.713" endtime="20241121 23:38:57.714"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.712" endtime="20241121 23:38:57.714"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.714"/>
</return>
<msg timestamp="20241121 23:38:57.714" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.709" endtime="20241121 23:38:57.714"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.719"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:38:57.719" endtime="20241121 23:38:57.719"/>
</return>
<status status="NOT RUN" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.719"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.714" endtime="20241121 23:38:57.719"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:38:57.722" endtime="20241121 23:38:57.722"/>
</kw>
<msg timestamp="20241121 23:38:57.722" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.721" endtime="20241121 23:38:57.722"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.723" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:38:57.723" endtime="20241121 23:38:57.723"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.724" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.724" endtime="20241121 23:38:57.724"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.724" endtime="20241121 23:38:57.724"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.724" endtime="20241121 23:38:57.724"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:38:57.724" endtime="20241121 23:38:57.724"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.723" endtime="20241121 23:38:57.724"/>
</if>
<status status="PASS" starttime="20241121 23:38:57.723" endtime="20241121 23:38:57.724"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.722" endtime="20241121 23:38:57.724"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:38:57.724" endtime="20241121 23:38:57.724"/>
</return>
<msg timestamp="20241121 23:38:57.724" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.721" endtime="20241121 23:38:57.724"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:38:57.732" endtime="20241121 23:38:57.732"/>
</kw>
<msg timestamp="20241121 23:38:57.733" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.731" endtime="20241121 23:38:57.733"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.734" level="INFO">${values} = {'id': '63', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:08:57.570Z', 'createdAt': '2024-11-21T18:08:57.570Z'}</msg>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.734" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</if>
<status status="PASS" starttime="20241121 23:38:57.733" endtime="20241121 23:38:57.734"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.733" endtime="20241121 23:38:57.734"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</return>
<msg timestamp="20241121 23:38:57.734" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.730" endtime="20241121 23:38:57.734"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.734" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.734" level="INFO">${testCaseRun} = {'id': '63', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T18:08:57.570Z', 'createdAt': '2024-11-21T18:08:57.570Z'}</msg>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.734"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:38:57.744" endtime="20241121 23:38:57.744"/>
</kw>
<msg timestamp="20241121 23:38:57.745" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.745"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.747" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:38:57.746" endtime="20241121 23:38:57.747"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.748" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.747" endtime="20241121 23:38:57.748"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.747" endtime="20241121 23:38:57.748"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.748" endtime="20241121 23:38:57.748"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:38:57.748" endtime="20241121 23:38:57.748"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.747" endtime="20241121 23:38:57.748"/>
</if>
<status status="PASS" starttime="20241121 23:38:57.745" endtime="20241121 23:38:57.748"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.745" endtime="20241121 23:38:57.748"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:38:57.749" endtime="20241121 23:38:57.749"/>
</return>
<msg timestamp="20241121 23:38:57.749" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.734" endtime="20241121 23:38:57.750"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.752" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:38:57.751" endtime="20241121 23:38:57.752"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:38:57.752" endtime="20241121 23:38:57.753"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:38:57.756" endtime="20241121 23:38:57.757"/>
</kw>
<msg timestamp="20241121 23:38:57.757" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.756" endtime="20241121 23:38:57.757"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.758" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:38:57.757" endtime="20241121 23:38:57.758"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.759" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.758" endtime="20241121 23:38:57.759"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.758" endtime="20241121 23:38:57.759"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.759" endtime="20241121 23:38:57.759"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:38:57.759" endtime="20241121 23:38:57.759"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.758" endtime="20241121 23:38:57.759"/>
</if>
<status status="PASS" starttime="20241121 23:38:57.757" endtime="20241121 23:38:57.759"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.757" endtime="20241121 23:38:57.760"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:38:57.760" endtime="20241121 23:38:57.760"/>
</return>
<msg timestamp="20241121 23:38:57.760" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:38:57.755" endtime="20241121 23:38:57.760"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.762" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:38:57.762" endtime="20241121 23:38:57.762"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:38:57.762" endtime="20241121 23:38:57.763"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:38:57.764" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:38:57.763" endtime="20241121 23:38:57.764"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.765" endtime="20241121 23:38:57.765"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:38:57.765" endtime="20241121 23:38:57.765"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:38:57.764" endtime="20241121 23:38:57.765"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.764" endtime="20241121 23:38:57.765"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:38:57.767" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:38:57.766" endtime="20241121 23:38:57.767"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:38:57.769" level="INFO">Switching browser to browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<msg timestamp="20241121 23:38:57.771" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20241121 23:38:57.771" level="INFO">Reusing existing browser with id: browser=41a815a2-c21c-4268-b5d5-60d286168d93</msg>
<status status="PASS" starttime="20241121 23:38:57.768" endtime="20241121 23:38:57.771"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:38:57.772" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:38:57.785" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:38:57.785" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:38:57.772" endtime="20241121 23:38:57.785"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241121 23:38:57.786" endtime="20241121 23:38:57.787"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:39:05.323" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:39:05.324" level="INFO">${page_id} = {'page_id': 'page=45b4e388-f80c-49da-805e-4e50e95bc558', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:38:57.787" endtime="20241121 23:39:05.324"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:39:05.325" level="INFO">Switching to page {'page_id': 'page=45b4e388-f80c-49da-805e-4e50e95bc558', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:39:05.359" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=41a815a2-c21c-4268-b5d5-60d286168d93",
    "contexts": [
      {
        "type": "context",
        "id": "context=bed110e2-9856-4c44-a158-8ce9fca8e673",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=e1953dbf-f3d6-41fe-b94f-9975574c3ae6",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=962a3a31-2857-491e-a35a-fc9c87a2062a",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=a124a82d-d86e-4075-90dc-c1a459a017fd",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=75b84b73-7ea3-407c-8055-c3cfa95050da",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=203ad8f9-0f8a-4fa1-b7a2-cb91c9228608",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=f7d786f1-7687-4a76-8d25-c9b9507ddec7",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=27de9d44-735d-4442-9d59-d3187dbc6d78",
        "pages": []
      },
      {
        "type": "context",
        "id": "context=551c511f-85fd-4e61-9b35-a0574055fd53",
        "activePage": "page=b5cff071-76a8-498b-94dc-004fe158689e",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/profile",
            "id": "page=b5cff071-76a8-498b-94dc-004fe158689e",
            "timestamp": 1732212393.733
          }
        ]
      },
      {
        "type": "context",
        "id": "context=1bf5a815-8cc1-4917-b9eb-58d17a9449a6",
        "activePage": "page=45b4e388-f80c-49da-805e-4e50e95bc558",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=45b4e388-f80c-49da-805e-4e50e95bc558",
            "timestamp": 1732212537.955
          }
        ]
      }
    ],
    "activeContext": "context=1bf5a815-8cc1-4917-b9eb-58d17a9449a6",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:39:05.364" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:39:05.325" endtime="20241121 23:39:05.364"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.767" endtime="20241121 23:39:05.365"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.767" endtime="20241121 23:39:05.365"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.365" endtime="20241121 23:39:05.365"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.365" endtime="20241121 23:39:05.365"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.368" endtime="20241121 23:39:05.368"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.365" endtime="20241121 23:39:05.368"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.371" endtime="20241121 23:39:05.371"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.368" endtime="20241121 23:39:05.372"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.372"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:05.392" endtime="20241121 23:39:05.392"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.395" endtime="20241121 23:39:05.395"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.372" endtime="20241121 23:39:05.395"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.397" endtime="20241121 23:39:05.397"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.397" endtime="20241121 23:39:05.397"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.397" endtime="20241121 23:39:05.398"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.398" endtime="20241121 23:39:05.398"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.398" endtime="20241121 23:39:05.398"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:05.397" endtime="20241121 23:39:05.398"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:05.396" endtime="20241121 23:39:05.398"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:05.404" endtime="20241121 23:39:05.404"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.406" endtime="20241121 23:39:05.407"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.398" endtime="20241121 23:39:05.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.408" endtime="20241121 23:39:05.408"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.407" endtime="20241121 23:39:05.408"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.411" endtime="20241121 23:39:05.411"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.408" endtime="20241121 23:39:05.411"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:39:05.418" endtime="20241121 23:39:05.418"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:05.418" endtime="20241121 23:39:05.418"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:05.411" endtime="20241121 23:39:05.418"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.767" endtime="20241121 23:39:05.419"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:05.419" endtime="20241121 23:39:05.420"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:39:06.427" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:39:05.420" endtime="20241121 23:39:06.427"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.766" endtime="20241121 23:39:06.427"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.766" endtime="20241121 23:39:06.427"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.428" endtime="20241121 23:39:06.428"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.427" endtime="20241121 23:39:06.428"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.765" endtime="20241121 23:39:06.428"/>
</try>
<status status="PASS" starttime="20241121 23:38:57.761" endtime="20241121 23:39:06.428"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:06.429" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:39:06.429" endtime="20241121 23:39:06.429"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:06.429" endtime="20241121 23:39:06.430"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:39:06.431" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:39:06.430" endtime="20241121 23:39:06.431"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.431" endtime="20241121 23:39:06.431"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.432" endtime="20241121 23:39:06.432"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.431" endtime="20241121 23:39:06.432"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.431" endtime="20241121 23:39:06.432"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:06.433" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:39:06.433" endtime="20241121 23:39:06.433"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:39:06.434" endtime="20241121 23:39:06.434"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.434" endtime="20241121 23:39:06.434"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.435" endtime="20241121 23:39:06.435"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.434" endtime="20241121 23:39:06.435"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.438" endtime="20241121 23:39:06.438"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.435" endtime="20241121 23:39:06.438"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.441" endtime="20241121 23:39:06.441"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.444" endtime="20241121 23:39:06.444"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.438" endtime="20241121 23:39:06.444"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.446" endtime="20241121 23:39:06.446"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.445" endtime="20241121 23:39:06.446"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.450" endtime="20241121 23:39:06.450"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.446" endtime="20241121 23:39:06.450"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:06.488" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.488"/>
</kw>
<msg timestamp="20241121 23:39:06.488" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.488"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.488" endtime="20241121 23:39:06.488"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.488"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.489" endtime="20241121 23:39:06.489"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.489" endtime="20241121 23:39:06.489"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.489" endtime="20241121 23:39:06.489"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.489"/>
</try>
<msg timestamp="20241121 23:39:06.490" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.490"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.490" endtime="20241121 23:39:06.490"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.490"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:06.490" endtime="20241121 23:39:06.490"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:06.490" endtime="20241121 23:39:06.490"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.490"/>
</try>
<msg timestamp="20241121 23:39:06.490" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.491"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.493" endtime="20241121 23:39:06.493"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.493" endtime="20241121 23:39:06.493"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.493" endtime="20241121 23:39:06.493"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.493" endtime="20241121 23:39:06.493"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.492" endtime="20241121 23:39:06.494"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.494"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:06.510" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:39:06.503" endtime="20241121 23:39:06.510"/>
</kw>
<msg timestamp="20241121 23:39:06.510" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.503" endtime="20241121 23:39:06.510"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.510" endtime="20241121 23:39:06.510"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.502" endtime="20241121 23:39:06.510"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.511" endtime="20241121 23:39:06.511"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.511" endtime="20241121 23:39:06.511"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.510" endtime="20241121 23:39:06.511"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.502" endtime="20241121 23:39:06.511"/>
</try>
<msg timestamp="20241121 23:39:06.511" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.501" endtime="20241121 23:39:06.511"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.511" endtime="20241121 23:39:06.511"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.500" endtime="20241121 23:39:06.512"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:06.512" endtime="20241121 23:39:06.512"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:06.512" endtime="20241121 23:39:06.512"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.500" endtime="20241121 23:39:06.512"/>
</try>
<msg timestamp="20241121 23:39:06.512" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.500" endtime="20241121 23:39:06.512"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.515" endtime="20241121 23:39:06.515"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.515" endtime="20241121 23:39:06.515"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.514" endtime="20241121 23:39:06.515"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.514" endtime="20241121 23:39:06.515"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.513" endtime="20241121 23:39:06.515"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.499" endtime="20241121 23:39:06.515"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:39:06.519" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:39:06.519" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:39:06.516" endtime="20241121 23:39:06.519"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:39:06.519" endtime="20241121 23:39:06.535"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.516" endtime="20241121 23:39:06.535"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.516" endtime="20241121 23:39:06.535"/>
</try>
<msg timestamp="20241121 23:39:06.535" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:39:06.497" endtime="20241121 23:39:06.535"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.496" endtime="20241121 23:39:06.535"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.535"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.496" endtime="20241121 23:39:06.535"/>
</try>
<status status="PASS" starttime="20241121 23:39:06.496" endtime="20241121 23:39:06.535"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:06.551" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.551"/>
</kw>
<msg timestamp="20241121 23:39:06.551" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.551"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.551"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.551"/>
</try>
<msg timestamp="20241121 23:39:06.551" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.551"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</return>
<msg timestamp="20241121 23:39:06.551" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.551"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.551"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.535" endtime="20241121 23:39:06.551"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.454" endtime="20241121 23:39:06.551"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:06.566" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.566"/>
</kw>
<msg timestamp="20241121 23:39:06.566" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.566"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.566" endtime="20241121 23:39:06.566"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.566"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.566" endtime="20241121 23:39:06.566"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.566" endtime="20241121 23:39:06.566"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.566" endtime="20241121 23:39:06.566"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.566"/>
</try>
<msg timestamp="20241121 23:39:06.566" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.566"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.566" endtime="20241121 23:39:06.566"/>
</return>
<msg timestamp="20241121 23:39:06.566" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.566"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.566" endtime="20241121 23:39:06.582"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.566" endtime="20241121 23:39:06.582"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.566" endtime="20241121 23:39:06.582"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.551" endtime="20241121 23:39:06.582"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:39:06.582" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.582"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:39:06.582" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.613"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.613"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.613" endtime="20241121 23:39:06.614"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.614" endtime="20241121 23:39:06.614"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.613" endtime="20241121 23:39:06.614"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.614"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:06.626" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:39:06.621" endtime="20241121 23:39:06.626"/>
</kw>
<msg timestamp="20241121 23:39:06.626" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.620" endtime="20241121 23:39:06.626"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.626" endtime="20241121 23:39:06.626"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.620" endtime="20241121 23:39:06.626"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.627" endtime="20241121 23:39:06.627"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.627" endtime="20241121 23:39:06.627"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.627" endtime="20241121 23:39:06.627"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.620" endtime="20241121 23:39:06.627"/>
</try>
<msg timestamp="20241121 23:39:06.628" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.620" endtime="20241121 23:39:06.628"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.628" endtime="20241121 23:39:06.628"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.618" endtime="20241121 23:39:06.628"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:06.628" endtime="20241121 23:39:06.628"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:06.628" endtime="20241121 23:39:06.628"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.618" endtime="20241121 23:39:06.628"/>
</try>
<msg timestamp="20241121 23:39:06.628" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.618" endtime="20241121 23:39:06.628"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.631" endtime="20241121 23:39:06.631"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.631" endtime="20241121 23:39:06.631"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.631" endtime="20241121 23:39:06.631"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.631" endtime="20241121 23:39:06.631"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.630" endtime="20241121 23:39:06.632"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.617" endtime="20241121 23:39:06.632"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:06.646" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:39:06.640" endtime="20241121 23:39:06.646"/>
</kw>
<msg timestamp="20241121 23:39:06.646" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.640" endtime="20241121 23:39:06.646"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.646" endtime="20241121 23:39:06.646"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.640" endtime="20241121 23:39:06.646"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.647" endtime="20241121 23:39:06.647"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.647" endtime="20241121 23:39:06.647"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.646" endtime="20241121 23:39:06.647"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.640" endtime="20241121 23:39:06.647"/>
</try>
<msg timestamp="20241121 23:39:06.647" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.639" endtime="20241121 23:39:06.647"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.648" endtime="20241121 23:39:06.648"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.638" endtime="20241121 23:39:06.648"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:06.648" endtime="20241121 23:39:06.648"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:06.648" endtime="20241121 23:39:06.648"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.638" endtime="20241121 23:39:06.648"/>
</try>
<msg timestamp="20241121 23:39:06.648" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.638" endtime="20241121 23:39:06.648"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.651" endtime="20241121 23:39:06.651"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.651" endtime="20241121 23:39:06.651"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.651" endtime="20241121 23:39:06.651"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.650" endtime="20241121 23:39:06.651"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.649" endtime="20241121 23:39:06.651"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.637" endtime="20241121 23:39:06.652"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:39:06.663" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:39:06.663" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:39:06.652" endtime="20241121 23:39:06.663"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:39:06.663" endtime="20241121 23:39:06.663"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.652" endtime="20241121 23:39:06.663"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.664" endtime="20241121 23:39:06.664"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.664" endtime="20241121 23:39:06.664"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.663" endtime="20241121 23:39:06.664"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.652" endtime="20241121 23:39:06.664"/>
</try>
<msg timestamp="20241121 23:39:06.664" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:39:06.635" endtime="20241121 23:39:06.664"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.667" endtime="20241121 23:39:06.667"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.667" endtime="20241121 23:39:06.667"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.667" endtime="20241121 23:39:06.667"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.667" endtime="20241121 23:39:06.667"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.666" endtime="20241121 23:39:06.668"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.634" endtime="20241121 23:39:06.668"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.668" endtime="20241121 23:39:06.668"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.668" endtime="20241121 23:39:06.668"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.634" endtime="20241121 23:39:06.668"/>
</try>
<status status="PASS" starttime="20241121 23:39:06.633" endtime="20241121 23:39:06.668"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:06.678" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:39:06.672" endtime="20241121 23:39:06.678"/>
</kw>
<msg timestamp="20241121 23:39:06.679" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.672" endtime="20241121 23:39:06.679"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.679" endtime="20241121 23:39:06.679"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.672" endtime="20241121 23:39:06.679"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.679" endtime="20241121 23:39:06.679"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.679" endtime="20241121 23:39:06.680"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.679" endtime="20241121 23:39:06.680"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.671" endtime="20241121 23:39:06.680"/>
</try>
<msg timestamp="20241121 23:39:06.680" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.671" endtime="20241121 23:39:06.680"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.680" endtime="20241121 23:39:06.680"/>
</return>
<msg timestamp="20241121 23:39:06.680" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.670" endtime="20241121 23:39:06.680"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.683" endtime="20241121 23:39:06.683"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.683" endtime="20241121 23:39:06.683"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.683" endtime="20241121 23:39:06.683"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.683" endtime="20241121 23:39:06.683"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.682" endtime="20241121 23:39:06.684"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.669" endtime="20241121 23:39:06.684"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.615" endtime="20241121 23:39:06.684"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:06.695" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:39:06.689" endtime="20241121 23:39:06.695"/>
</kw>
<msg timestamp="20241121 23:39:06.695" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.689" endtime="20241121 23:39:06.695"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.695" endtime="20241121 23:39:06.695"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.689" endtime="20241121 23:39:06.695"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.696" endtime="20241121 23:39:06.696"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.696" endtime="20241121 23:39:06.696"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.695" endtime="20241121 23:39:06.696"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.689" endtime="20241121 23:39:06.697"/>
</try>
<msg timestamp="20241121 23:39:06.697" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.688" endtime="20241121 23:39:06.697"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.697" endtime="20241121 23:39:06.697"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.687" endtime="20241121 23:39:06.697"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:06.697" endtime="20241121 23:39:06.697"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:06.697" endtime="20241121 23:39:06.697"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.687" endtime="20241121 23:39:06.697"/>
</try>
<msg timestamp="20241121 23:39:06.698" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.687" endtime="20241121 23:39:06.698"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.700" endtime="20241121 23:39:06.700"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.700" endtime="20241121 23:39:06.701"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.700" endtime="20241121 23:39:06.701"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.700" endtime="20241121 23:39:06.701"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.699" endtime="20241121 23:39:06.701"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.686" endtime="20241121 23:39:06.701"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:39:06.712" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:39:06.712" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:39:06.701" endtime="20241121 23:39:06.712"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:39:06.712" endtime="20241121 23:39:06.712"/>
</return>
<status status="PASS" starttime="20241121 23:39:06.701" endtime="20241121 23:39:06.712"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.712" endtime="20241121 23:39:06.713"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.713" endtime="20241121 23:39:06.713"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.712" endtime="20241121 23:39:06.713"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.701" endtime="20241121 23:39:06.713"/>
</try>
<msg timestamp="20241121 23:39:06.713" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:39:06.685" endtime="20241121 23:39:06.713"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:39:06.713" endtime="20241121 23:39:06.713"/>
</return>
<msg timestamp="20241121 23:39:06.714" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:39:06.615" endtime="20241121 23:39:06.714"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:39:06.720" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.716" endtime="20241121 23:39:06.720"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:06.720" endtime="20241121 23:39:06.721"/>
</return>
<msg timestamp="20241121 23:39:06.721" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:39:06.716" endtime="20241121 23:39:06.721"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.725" endtime="20241121 23:39:06.725"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.725" endtime="20241121 23:39:06.725"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.725" endtime="20241121 23:39:06.725"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.725" endtime="20241121 23:39:06.725"/>
</if>
<status status="PASS" starttime="20241121 23:39:06.724" endtime="20241121 23:39:06.725"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.614" endtime="20241121 23:39:06.726"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.726"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.726"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.726"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.726" endtime="20241121 23:39:06.726"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.726" endtime="20241121 23:39:06.726"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.582" endtime="20241121 23:39:06.726"/>
</try>
<status status="PASS" starttime="20241121 23:39:06.453" endtime="20241121 23:39:06.727"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.451" endtime="20241121 23:39:06.727"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.728" endtime="20241121 23:39:06.728"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.727" endtime="20241121 23:39:06.728"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.729" endtime="20241121 23:39:06.729"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.730" endtime="20241121 23:39:06.730"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.729" endtime="20241121 23:39:06.730"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.730" endtime="20241121 23:39:06.730"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.730" endtime="20241121 23:39:06.730"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:06.729" endtime="20241121 23:39:06.730"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:06.728" endtime="20241121 23:39:06.730"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:06.736" endtime="20241121 23:39:06.737"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.739" endtime="20241121 23:39:06.739"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.730" endtime="20241121 23:39:06.739"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.741" endtime="20241121 23:39:06.741"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.741" endtime="20241121 23:39:06.741"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.741" endtime="20241121 23:39:06.741"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.741" endtime="20241121 23:39:06.741"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.741" endtime="20241121 23:39:06.742"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:06.741" endtime="20241121 23:39:06.742"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:06.740" endtime="20241121 23:39:06.742"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:06.747" endtime="20241121 23:39:06.747"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.749" endtime="20241121 23:39:06.749"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.742" endtime="20241121 23:39:06.749"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.751" endtime="20241121 23:39:06.751"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.750" endtime="20241121 23:39:06.751"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.753" endtime="20241121 23:39:06.753"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.751" endtime="20241121 23:39:06.753"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:39:06.760" endtime="20241121 23:39:06.760"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:06.760" endtime="20241121 23:39:06.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:06.753" endtime="20241121 23:39:06.760"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.433" endtime="20241121 23:39:06.760"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:06.760" endtime="20241121 23:39:06.761"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:39:07.770" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:39:06.761" endtime="20241121 23:39:07.770"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.432" endtime="20241121 23:39:07.771"/>
</kw>
<status status="PASS" starttime="20241121 23:39:06.432" endtime="20241121 23:39:07.772"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.773" endtime="20241121 23:39:07.774"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.772" endtime="20241121 23:39:07.774"/>
</branch>
<status status="PASS" starttime="20241121 23:39:06.432" endtime="20241121 23:39:07.774"/>
</try>
<status status="PASS" starttime="20241121 23:39:06.428" endtime="20241121 23:39:07.775"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:07.779" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:39:07.776" endtime="20241121 23:39:07.779"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:07.780" endtime="20241121 23:39:07.784"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:39:07.787" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:39:07.785" endtime="20241121 23:39:07.787"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.789" endtime="20241121 23:39:07.790"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.790" endtime="20241121 23:39:07.790"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.789" endtime="20241121 23:39:07.791"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.788" endtime="20241121 23:39:07.791"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:07.794" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:39:07.794" endtime="20241121 23:39:07.794"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:39:07.795" endtime="20241121 23:39:07.796"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.795" endtime="20241121 23:39:07.796"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.797" endtime="20241121 23:39:07.797"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.796" endtime="20241121 23:39:07.797"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.803" endtime="20241121 23:39:07.804"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.797" endtime="20241121 23:39:07.804"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.808" endtime="20241121 23:39:07.809"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.813" endtime="20241121 23:39:07.814"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.804" endtime="20241121 23:39:07.814"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.817" endtime="20241121 23:39:07.817"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.814" endtime="20241121 23:39:07.817"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.825" endtime="20241121 23:39:07.825"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.818" endtime="20241121 23:39:07.825"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:07.843" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:39:07.837" endtime="20241121 23:39:07.843"/>
</kw>
<msg timestamp="20241121 23:39:07.843" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.836" endtime="20241121 23:39:07.843"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.843" endtime="20241121 23:39:07.843"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.836" endtime="20241121 23:39:07.843"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.844" endtime="20241121 23:39:07.844"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.844" endtime="20241121 23:39:07.844"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.844" endtime="20241121 23:39:07.844"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.836" endtime="20241121 23:39:07.844"/>
</try>
<msg timestamp="20241121 23:39:07.845" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.835" endtime="20241121 23:39:07.845"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.845" endtime="20241121 23:39:07.845"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.834" endtime="20241121 23:39:07.845"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:07.845" endtime="20241121 23:39:07.845"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:07.845" endtime="20241121 23:39:07.845"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.834" endtime="20241121 23:39:07.845"/>
</try>
<msg timestamp="20241121 23:39:07.845" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.833" endtime="20241121 23:39:07.845"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.847" endtime="20241121 23:39:07.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.848" endtime="20241121 23:39:07.848"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.847" endtime="20241121 23:39:07.848"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.847" endtime="20241121 23:39:07.848"/>
</if>
<status status="PASS" starttime="20241121 23:39:07.846" endtime="20241121 23:39:07.848"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.833" endtime="20241121 23:39:07.848"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:07.863" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:39:07.858" endtime="20241121 23:39:07.863"/>
</kw>
<msg timestamp="20241121 23:39:07.863" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.858" endtime="20241121 23:39:07.863"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.863" endtime="20241121 23:39:07.863"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.857" endtime="20241121 23:39:07.863"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.864" endtime="20241121 23:39:07.864"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.864" endtime="20241121 23:39:07.864"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.863" endtime="20241121 23:39:07.864"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.857" endtime="20241121 23:39:07.864"/>
</try>
<msg timestamp="20241121 23:39:07.864" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.857" endtime="20241121 23:39:07.864"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.865" endtime="20241121 23:39:07.865"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.855" endtime="20241121 23:39:07.865"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:07.865" endtime="20241121 23:39:07.865"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:07.865" endtime="20241121 23:39:07.865"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.855" endtime="20241121 23:39:07.865"/>
</try>
<msg timestamp="20241121 23:39:07.865" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.855" endtime="20241121 23:39:07.865"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.869" endtime="20241121 23:39:07.869"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.869" endtime="20241121 23:39:07.869"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.869" endtime="20241121 23:39:07.869"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.869" endtime="20241121 23:39:07.869"/>
</if>
<status status="PASS" starttime="20241121 23:39:07.867" endtime="20241121 23:39:07.870"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.854" endtime="20241121 23:39:07.870"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:39:07.881" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:39:07.881" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:39:07.870" endtime="20241121 23:39:07.881"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:39:07.881" endtime="20241121 23:39:07.881"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.870" endtime="20241121 23:39:07.881"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.882" endtime="20241121 23:39:07.882"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.882" endtime="20241121 23:39:07.882"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.881" endtime="20241121 23:39:07.882"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.870" endtime="20241121 23:39:07.882"/>
</try>
<msg timestamp="20241121 23:39:07.882" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:39:07.852" endtime="20241121 23:39:07.883"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.885" endtime="20241121 23:39:07.885"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.886" endtime="20241121 23:39:07.886"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.885" endtime="20241121 23:39:07.886"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.885" endtime="20241121 23:39:07.886"/>
</if>
<status status="PASS" starttime="20241121 23:39:07.884" endtime="20241121 23:39:07.886"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.851" endtime="20241121 23:39:07.886"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.886" endtime="20241121 23:39:07.886"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.886" endtime="20241121 23:39:07.886"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.850" endtime="20241121 23:39:07.887"/>
</try>
<status status="PASS" starttime="20241121 23:39:07.850" endtime="20241121 23:39:07.887"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:07.896" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:39:07.892" endtime="20241121 23:39:07.896"/>
</kw>
<msg timestamp="20241121 23:39:07.897" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.892" endtime="20241121 23:39:07.897"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.897" endtime="20241121 23:39:07.897"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.890" endtime="20241121 23:39:07.897"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.897" endtime="20241121 23:39:07.897"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.898" endtime="20241121 23:39:07.898"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.897" endtime="20241121 23:39:07.898"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.890" endtime="20241121 23:39:07.898"/>
</try>
<msg timestamp="20241121 23:39:07.898" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.890" endtime="20241121 23:39:07.898"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.898" endtime="20241121 23:39:07.898"/>
</return>
<msg timestamp="20241121 23:39:07.898" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.889" endtime="20241121 23:39:07.899"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.902" endtime="20241121 23:39:07.902"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.902" endtime="20241121 23:39:07.902"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.902" endtime="20241121 23:39:07.902"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.901" endtime="20241121 23:39:07.902"/>
</if>
<status status="PASS" starttime="20241121 23:39:07.900" endtime="20241121 23:39:07.902"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.889" endtime="20241121 23:39:07.902"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.830" endtime="20241121 23:39:07.902"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:07.924" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:39:07.907" endtime="20241121 23:39:07.924"/>
</kw>
<msg timestamp="20241121 23:39:07.924" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.907" endtime="20241121 23:39:07.924"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.924" endtime="20241121 23:39:07.924"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.907" endtime="20241121 23:39:07.924"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.925" endtime="20241121 23:39:07.925"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.925" endtime="20241121 23:39:07.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.924" endtime="20241121 23:39:07.925"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.906" endtime="20241121 23:39:07.925"/>
</try>
<msg timestamp="20241121 23:39:07.925" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.906" endtime="20241121 23:39:07.926"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.926" endtime="20241121 23:39:07.926"/>
</return>
<msg timestamp="20241121 23:39:07.926" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.905" endtime="20241121 23:39:07.926"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.929" endtime="20241121 23:39:07.929"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.929" endtime="20241121 23:39:07.929"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.928" endtime="20241121 23:39:07.929"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.928" endtime="20241121 23:39:07.929"/>
</if>
<status status="PASS" starttime="20241121 23:39:07.927" endtime="20241121 23:39:07.929"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.904" endtime="20241121 23:39:07.929"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:39:07.930" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:39:07.930" endtime="20241121 23:39:07.930"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.932" endtime="20241121 23:39:07.932"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.934" endtime="20241121 23:39:07.934"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.932" endtime="20241121 23:39:07.934"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:39:07.934" endtime="20241121 23:39:07.934"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.934" endtime="20241121 23:39:07.935"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.931" endtime="20241121 23:39:07.935"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:39:07.936" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:39:07.935" endtime="20241121 23:39:07.957"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.935" endtime="20241121 23:39:07.957"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.957" endtime="20241121 23:39:07.958"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.958" endtime="20241121 23:39:07.958"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.957" endtime="20241121 23:39:07.958"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.935" endtime="20241121 23:39:07.958"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:07.971" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:39:07.964" endtime="20241121 23:39:07.971"/>
</kw>
<msg timestamp="20241121 23:39:07.971" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.964" endtime="20241121 23:39:07.971"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.971" endtime="20241121 23:39:07.972"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.964" endtime="20241121 23:39:07.972"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.972" endtime="20241121 23:39:07.972"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.972" endtime="20241121 23:39:07.972"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.972" endtime="20241121 23:39:07.972"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.964" endtime="20241121 23:39:07.973"/>
</try>
<msg timestamp="20241121 23:39:07.973" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.963" endtime="20241121 23:39:07.973"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.973" endtime="20241121 23:39:07.973"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.962" endtime="20241121 23:39:07.973"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:07.973" endtime="20241121 23:39:07.973"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:07.973" endtime="20241121 23:39:07.973"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.962" endtime="20241121 23:39:07.973"/>
</try>
<msg timestamp="20241121 23:39:07.974" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.962" endtime="20241121 23:39:07.974"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.976" endtime="20241121 23:39:07.976"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.977" endtime="20241121 23:39:07.977"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.976" endtime="20241121 23:39:07.977"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.976" endtime="20241121 23:39:07.977"/>
</if>
<status status="PASS" starttime="20241121 23:39:07.975" endtime="20241121 23:39:07.977"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.961" endtime="20241121 23:39:07.977"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:07.993" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:39:07.986" endtime="20241121 23:39:07.993"/>
</kw>
<msg timestamp="20241121 23:39:07.993" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.986" endtime="20241121 23:39:07.993"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.994" endtime="20241121 23:39:07.994"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.986" endtime="20241121 23:39:07.994"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.994" endtime="20241121 23:39:07.994"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.994" endtime="20241121 23:39:07.994"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.994" endtime="20241121 23:39:07.995"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.986" endtime="20241121 23:39:07.995"/>
</try>
<msg timestamp="20241121 23:39:07.995" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.985" endtime="20241121 23:39:07.995"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:07.995" endtime="20241121 23:39:07.995"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.984" endtime="20241121 23:39:07.995"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:07.995" endtime="20241121 23:39:07.995"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:07.995" endtime="20241121 23:39:07.995"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.984" endtime="20241121 23:39:07.996"/>
</try>
<msg timestamp="20241121 23:39:07.996" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:07.983" endtime="20241121 23:39:07.996"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.998" endtime="20241121 23:39:07.998"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:07.999" endtime="20241121 23:39:07.999"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:07.998" endtime="20241121 23:39:07.999"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.998" endtime="20241121 23:39:07.999"/>
</if>
<status status="PASS" starttime="20241121 23:39:07.997" endtime="20241121 23:39:07.999"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.983" endtime="20241121 23:39:07.999"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:39:08.011" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:39:08.011" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:39:08.000" endtime="20241121 23:39:08.011"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:39:08.011" endtime="20241121 23:39:08.011"/>
</return>
<status status="PASS" starttime="20241121 23:39:07.999" endtime="20241121 23:39:08.011"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.012" endtime="20241121 23:39:08.012"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.012" endtime="20241121 23:39:08.012"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.011" endtime="20241121 23:39:08.012"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.999" endtime="20241121 23:39:08.012"/>
</try>
<msg timestamp="20241121 23:39:08.012" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:39:07.980" endtime="20241121 23:39:08.012"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.015" endtime="20241121 23:39:08.015"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.015" endtime="20241121 23:39:08.015"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.015" endtime="20241121 23:39:08.015"/>
</branch>
<status status="PASS" starttime="20241121 23:39:08.015" endtime="20241121 23:39:08.015"/>
</if>
<status status="PASS" starttime="20241121 23:39:08.014" endtime="20241121 23:39:08.016"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.979" endtime="20241121 23:39:08.016"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.016" endtime="20241121 23:39:08.016"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.016" endtime="20241121 23:39:08.016"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.979" endtime="20241121 23:39:08.016"/>
</try>
<status status="PASS" starttime="20241121 23:39:07.979" endtime="20241121 23:39:08.016"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:08.027" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:39:08.022" endtime="20241121 23:39:08.027"/>
</kw>
<msg timestamp="20241121 23:39:08.027" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:08.021" endtime="20241121 23:39:08.027"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:08.027" endtime="20241121 23:39:08.027"/>
</return>
<status status="PASS" starttime="20241121 23:39:08.021" endtime="20241121 23:39:08.027"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.028" endtime="20241121 23:39:08.028"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.028" endtime="20241121 23:39:08.028"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.028" endtime="20241121 23:39:08.028"/>
</branch>
<status status="PASS" starttime="20241121 23:39:08.021" endtime="20241121 23:39:08.028"/>
</try>
<msg timestamp="20241121 23:39:08.029" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:08.020" endtime="20241121 23:39:08.029"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:08.029" endtime="20241121 23:39:08.029"/>
</return>
<msg timestamp="20241121 23:39:08.029" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:39:08.019" endtime="20241121 23:39:08.029"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.031" endtime="20241121 23:39:08.031"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.032" endtime="20241121 23:39:08.032"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.031" endtime="20241121 23:39:08.032"/>
</branch>
<status status="PASS" starttime="20241121 23:39:08.031" endtime="20241121 23:39:08.032"/>
</if>
<status status="PASS" starttime="20241121 23:39:08.030" endtime="20241121 23:39:08.032"/>
</kw>
<status status="PASS" starttime="20241121 23:39:08.018" endtime="20241121 23:39:08.032"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.959" endtime="20241121 23:39:08.032"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:08.044" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:39:08.039" endtime="20241121 23:39:08.044"/>
</kw>
<msg timestamp="20241121 23:39:08.044" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:08.039" endtime="20241121 23:39:08.044"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:08.044" endtime="20241121 23:39:08.044"/>
</return>
<status status="PASS" starttime="20241121 23:39:08.038" endtime="20241121 23:39:08.044"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.045" endtime="20241121 23:39:08.045"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.045" endtime="20241121 23:39:08.045"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.044" endtime="20241121 23:39:08.045"/>
</branch>
<status status="PASS" starttime="20241121 23:39:08.038" endtime="20241121 23:39:08.045"/>
</try>
<msg timestamp="20241121 23:39:08.045" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:08.038" endtime="20241121 23:39:08.045"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:08.045" endtime="20241121 23:39:08.046"/>
</return>
<status status="PASS" starttime="20241121 23:39:08.037" endtime="20241121 23:39:08.046"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:08.046" endtime="20241121 23:39:08.046"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:08.046" endtime="20241121 23:39:08.046"/>
</branch>
<status status="PASS" starttime="20241121 23:39:08.037" endtime="20241121 23:39:08.046"/>
</try>
<msg timestamp="20241121 23:39:08.046" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:08.037" endtime="20241121 23:39:08.046"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.049" endtime="20241121 23:39:08.049"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.049" endtime="20241121 23:39:08.049"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.049" endtime="20241121 23:39:08.049"/>
</branch>
<status status="PASS" starttime="20241121 23:39:08.048" endtime="20241121 23:39:08.049"/>
</if>
<status status="PASS" starttime="20241121 23:39:08.047" endtime="20241121 23:39:08.049"/>
</kw>
<status status="PASS" starttime="20241121 23:39:08.036" endtime="20241121 23:39:08.050"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:39:08.051" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:39:08.051" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:39:08.050" endtime="20241121 23:39:08.051"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:39:08.051" endtime="20241121 23:39:08.051"/>
</return>
<status status="PASS" starttime="20241121 23:39:08.050" endtime="20241121 23:39:08.051"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.051" endtime="20241121 23:39:08.051"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.051" endtime="20241121 23:39:08.051"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.051" endtime="20241121 23:39:08.051"/>
</branch>
<status status="PASS" starttime="20241121 23:39:08.050" endtime="20241121 23:39:08.051"/>
</try>
<msg timestamp="20241121 23:39:08.051" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:39:08.033" endtime="20241121 23:39:08.051"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:39:08.051" endtime="20241121 23:39:08.051"/>
</return>
<msg timestamp="20241121 23:39:08.051" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:39:07.959" endtime="20241121 23:39:08.051"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:39:08.067" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:08.051" endtime="20241121 23:39:08.067"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</return>
<msg timestamp="20241121 23:39:08.067" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:39:08.051" endtime="20241121 23:39:08.067"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</branch>
<status status="PASS" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</if>
<status status="PASS" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.958" endtime="20241121 23:39:08.067"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.931" endtime="20241121 23:39:08.067"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.930" endtime="20241121 23:39:08.067"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.930" endtime="20241121 23:39:08.067"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.930" endtime="20241121 23:39:08.067"/>
</try>
<status status="PASS" starttime="20241121 23:39:07.829" endtime="20241121 23:39:08.067"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.826" endtime="20241121 23:39:08.067"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.067"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:08.088" endtime="20241121 23:39:08.088"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.091" endtime="20241121 23:39:08.091"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.067" endtime="20241121 23:39:08.091"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.092" endtime="20241121 23:39:08.092"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.093" endtime="20241121 23:39:08.093"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.092" endtime="20241121 23:39:08.093"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.093" endtime="20241121 23:39:08.093"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.093" endtime="20241121 23:39:08.093"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:08.092" endtime="20241121 23:39:08.093"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:08.091" endtime="20241121 23:39:08.093"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:08.095" endtime="20241121 23:39:08.099"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.101" endtime="20241121 23:39:08.101"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.093" endtime="20241121 23:39:08.101"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.102" endtime="20241121 23:39:08.103"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.101" endtime="20241121 23:39:08.103"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.105" endtime="20241121 23:39:08.105"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.103" endtime="20241121 23:39:08.105"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:39:08.110" endtime="20241121 23:39:08.110"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:08.111" endtime="20241121 23:39:08.111"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:08.105" endtime="20241121 23:39:08.111"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.795" endtime="20241121 23:39:08.111"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:08.111" endtime="20241121 23:39:08.112"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:39:09.117" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:39:08.112" endtime="20241121 23:39:09.117"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.793" endtime="20241121 23:39:09.118"/>
</kw>
<status status="PASS" starttime="20241121 23:39:07.792" endtime="20241121 23:39:09.118"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.118" endtime="20241121 23:39:09.118"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.118" endtime="20241121 23:39:09.118"/>
</branch>
<status status="PASS" starttime="20241121 23:39:07.791" endtime="20241121 23:39:09.118"/>
</try>
<status status="PASS" starttime="20241121 23:39:07.775" endtime="20241121 23:39:09.118"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:09.119" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:39:09.118" endtime="20241121 23:39:09.119"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:09.119" endtime="20241121 23:39:09.120"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:39:09.120" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:39:09.120" endtime="20241121 23:39:09.120"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.122"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.122"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.121" endtime="20241121 23:39:09.122"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.120" endtime="20241121 23:39:09.122"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:09.122" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.122"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.122"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.122"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.122"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.122"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:09.141" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:39:09.135" endtime="20241121 23:39:09.141"/>
</kw>
<msg timestamp="20241121 23:39:09.141" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.134" endtime="20241121 23:39:09.142"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</return>
<status status="PASS" starttime="20241121 23:39:09.134" endtime="20241121 23:39:09.143"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.134" endtime="20241121 23:39:09.143"/>
</try>
<msg timestamp="20241121 23:39:09.143" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.134" endtime="20241121 23:39:09.143"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</return>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.143"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.143"/>
</try>
<msg timestamp="20241121 23:39:09.143" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.143"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</if>
<status status="PASS" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.143"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.143"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:09.159" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:39:09.153" endtime="20241121 23:39:09.159"/>
</kw>
<msg timestamp="20241121 23:39:09.159" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.153" endtime="20241121 23:39:09.159"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</return>
<status status="PASS" starttime="20241121 23:39:09.153" endtime="20241121 23:39:09.159"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.153" endtime="20241121 23:39:09.159"/>
</try>
<msg timestamp="20241121 23:39:09.159" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.152" endtime="20241121 23:39:09.159"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</return>
<msg timestamp="20241121 23:39:09.159" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.150" endtime="20241121 23:39:09.159"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</if>
<status status="PASS" starttime="20241121 23:39:09.159" endtime="20241121 23:39:09.159"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.143" endtime="20241121 23:39:09.159"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:09.185" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:39:09.168" endtime="20241121 23:39:09.185"/>
</kw>
<msg timestamp="20241121 23:39:09.185" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.168" endtime="20241121 23:39:09.185"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</return>
<status status="PASS" starttime="20241121 23:39:09.168" endtime="20241121 23:39:09.185"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.168" endtime="20241121 23:39:09.185"/>
</try>
<msg timestamp="20241121 23:39:09.185" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.168" endtime="20241121 23:39:09.185"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</return>
<msg timestamp="20241121 23:39:09.185" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:39:09.168" endtime="20241121 23:39:09.185"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</if>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.167" endtime="20241121 23:39:09.185"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.185"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:39:09.185" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.185"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.250"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.250"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.251" endtime="20241121 23:39:09.251"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.251" endtime="20241121 23:39:09.251"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.251" endtime="20241121 23:39:09.251"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.251"/>
</try>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.252"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.252"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.252"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.252" endtime="20241121 23:39:09.252"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.252" endtime="20241121 23:39:09.252"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.185" endtime="20241121 23:39:09.252"/>
</try>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.253"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.253"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.255" endtime="20241121 23:39:09.255"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.257" endtime="20241121 23:39:09.257"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.253" endtime="20241121 23:39:09.257"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.258" endtime="20241121 23:39:09.258"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.257" endtime="20241121 23:39:09.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.261" endtime="20241121 23:39:09.262"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.259" endtime="20241121 23:39:09.262"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.264" endtime="20241121 23:39:09.264"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.262" endtime="20241121 23:39:09.264"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.265" endtime="20241121 23:39:09.265"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.264" endtime="20241121 23:39:09.265"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.267" endtime="20241121 23:39:09.267"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.267" endtime="20241121 23:39:09.267"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.267" endtime="20241121 23:39:09.267"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.268" endtime="20241121 23:39:09.268"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.268" endtime="20241121 23:39:09.268"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:09.267" endtime="20241121 23:39:09.268"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:09.265" endtime="20241121 23:39:09.268"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:09.273" endtime="20241121 23:39:09.273"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.276" endtime="20241121 23:39:09.276"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.268" endtime="20241121 23:39:09.276"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.278" endtime="20241121 23:39:09.278"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.278" endtime="20241121 23:39:09.278"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.278" endtime="20241121 23:39:09.278"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.278" endtime="20241121 23:39:09.279"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.278" endtime="20241121 23:39:09.279"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:09.278" endtime="20241121 23:39:09.279"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:09.277" endtime="20241121 23:39:09.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.279" endtime="20241121 23:39:09.285"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:09.285"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:09.285" endtime="20241121 23:39:09.285"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:39:14.299" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:39:09.285" endtime="20241121 23:39:14.299"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:14.299"/>
</kw>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:14.299"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.299" endtime="20241121 23:39:14.299"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.299" endtime="20241121 23:39:14.299"/>
</branch>
<status status="PASS" starttime="20241121 23:39:09.122" endtime="20241121 23:39:14.299"/>
</try>
<status status="PASS" starttime="20241121 23:39:09.118" endtime="20241121 23:39:14.299"/>
</iter>
<status status="PASS" starttime="20241121 23:38:57.761" endtime="20241121 23:39:14.299"/>
</for>
<status status="PASS" starttime="20241121 23:38:57.761" endtime="20241121 23:39:14.299"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.760" endtime="20241121 23:39:14.299"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:39:14.299" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '46'}</msg>
<status status="PASS" starttime="20241121 23:39:14.299" endtime="20241121 23:39:14.299"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:39:14.299" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "46"}</msg>
<status status="PASS" starttime="20241121 23:39:14.299" endtime="20241121 23:39:14.299"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:39:14.317" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:39:14.317" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:39:14.299" endtime="20241121 23:39:14.317"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.299" endtime="20241121 23:39:14.317"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.751" endtime="20241121 23:39:14.317"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.317" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</kw>
<msg timestamp="20241121 23:39:14.317" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.317" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.317" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</if>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.317"/>
</return>
<msg timestamp="20241121 23:39:14.331" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:14.331"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.333" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:39:14.333" endtime="20241121 23:39:14.333"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:14.333" endtime="20241121 23:39:14.334"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:39:14.334" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:39:14.334" endtime="20241121 23:39:14.334"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.335" endtime="20241121 23:39:14.335"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.335" endtime="20241121 23:39:14.335"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.335" endtime="20241121 23:39:14.335"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.334" endtime="20241121 23:39:14.335"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.336" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:39:14.336" endtime="20241121 23:39:14.336"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:39:14.337" endtime="20241121 23:39:14.337"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.337" endtime="20241121 23:39:14.337"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.338" endtime="20241121 23:39:14.338"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.338" endtime="20241121 23:39:14.338"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:14.353" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:39:14.351" endtime="20241121 23:39:14.353"/>
</kw>
<msg timestamp="20241121 23:39:14.353" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.350" endtime="20241121 23:39:14.353"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.353" endtime="20241121 23:39:14.353"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.350" endtime="20241121 23:39:14.353"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.362" endtime="20241121 23:39:14.362"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.362" endtime="20241121 23:39:14.362"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.353" endtime="20241121 23:39:14.363"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.350" endtime="20241121 23:39:14.363"/>
</try>
<msg timestamp="20241121 23:39:14.363" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.350" endtime="20241121 23:39:14.363"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.363" endtime="20241121 23:39:14.364"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.348" endtime="20241121 23:39:14.364"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.364"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.364"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.348" endtime="20241121 23:39:14.364"/>
</try>
<msg timestamp="20241121 23:39:14.364" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.347" endtime="20241121 23:39:14.364"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.364"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.364"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.364"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.364"/>
</if>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.364"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.346" endtime="20241121 23:39:14.364"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:14.380" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.380"/>
</kw>
<msg timestamp="20241121 23:39:14.380" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.380"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.380"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.380"/>
</try>
<msg timestamp="20241121 23:39:14.380" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.380"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</return>
<msg timestamp="20241121 23:39:14.380" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.380"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</if>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.380"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.364" endtime="20241121 23:39:14.380"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:14.412" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.413"/>
</kw>
<msg timestamp="20241121 23:39:14.413" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.413"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.414" endtime="20241121 23:39:14.414"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.414"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.414" endtime="20241121 23:39:14.415"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.415"/>
</try>
<msg timestamp="20241121 23:39:14.415" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.415"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</return>
<msg timestamp="20241121 23:39:14.415" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.415"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</if>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.380" endtime="20241121 23:39:14.415"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.343" endtime="20241121 23:39:14.415"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:39:14.415" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.415"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.471"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.471"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.471" endtime="20241121 23:39:14.471"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.471" endtime="20241121 23:39:14.471"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.471" endtime="20241121 23:39:14.471"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.471"/>
</try>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.471"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.471"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.471"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.471" endtime="20241121 23:39:14.471"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.471" endtime="20241121 23:39:14.471"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.415" endtime="20241121 23:39:14.471"/>
</try>
<status status="PASS" starttime="20241121 23:39:14.342" endtime="20241121 23:39:14.471"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.338" endtime="20241121 23:39:14.471"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.482" endtime="20241121 23:39:14.482"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.485" endtime="20241121 23:39:14.485"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.471" endtime="20241121 23:39:14.485"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.488" endtime="20241121 23:39:14.488"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.486" endtime="20241121 23:39:14.488"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.493" endtime="20241121 23:39:14.493"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.488" endtime="20241121 23:39:14.493"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.497" endtime="20241121 23:39:14.497"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.493" endtime="20241121 23:39:14.497"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.499" endtime="20241121 23:39:14.499"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.497" endtime="20241121 23:39:14.499"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.501" endtime="20241121 23:39:14.501"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.502" endtime="20241121 23:39:14.502"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.501" endtime="20241121 23:39:14.502"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.503" endtime="20241121 23:39:14.503"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.502" endtime="20241121 23:39:14.503"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:14.501" endtime="20241121 23:39:14.503"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:14.499" endtime="20241121 23:39:14.504"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:14.511" endtime="20241121 23:39:14.511"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.516" endtime="20241121 23:39:14.516"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.504" endtime="20241121 23:39:14.516"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.518" endtime="20241121 23:39:14.518"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.519" endtime="20241121 23:39:14.519"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.519" endtime="20241121 23:39:14.519"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.520" endtime="20241121 23:39:14.520"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.519" endtime="20241121 23:39:14.520"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:14.519" endtime="20241121 23:39:14.520"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:14.517" endtime="20241121 23:39:14.520"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:14.527" endtime="20241121 23:39:14.527"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.532" endtime="20241121 23:39:14.532"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.520" endtime="20241121 23:39:14.532"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.534" endtime="20241121 23:39:14.534"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.533" endtime="20241121 23:39:14.534"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.537" endtime="20241121 23:39:14.537"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.534" endtime="20241121 23:39:14.537"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:39:14.545" endtime="20241121 23:39:14.545"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.546" endtime="20241121 23:39:14.547"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.537" endtime="20241121 23:39:14.547"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.337" endtime="20241121 23:39:14.547"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:14.548" endtime="20241121 23:39:14.548"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:39:14.549" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:39:14.548" endtime="20241121 23:39:14.549"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.336" endtime="20241121 23:39:14.549"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.335" endtime="20241121 23:39:14.549"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.550" endtime="20241121 23:39:14.550"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.549" endtime="20241121 23:39:14.550"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.335" endtime="20241121 23:39:14.550"/>
</try>
<status status="PASS" starttime="20241121 23:39:14.332" endtime="20241121 23:39:14.550"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.551" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:39:14.551" endtime="20241121 23:39:14.551"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:14.551" endtime="20241121 23:39:14.552"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:39:14.552" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:39:14.552" endtime="20241121 23:39:14.552"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.553" endtime="20241121 23:39:14.553"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.553" endtime="20241121 23:39:14.553"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.553" endtime="20241121 23:39:14.554"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.552" endtime="20241121 23:39:14.554"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.555" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:39:14.555" endtime="20241121 23:39:14.555"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:39:14.556" endtime="20241121 23:39:14.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.555" endtime="20241121 23:39:14.556"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.556" endtime="20241121 23:39:14.556"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.556" endtime="20241121 23:39:14.557"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:14.570" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:39:14.570" endtime="20241121 23:39:14.570"/>
</kw>
<msg timestamp="20241121 23:39:14.570" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.570" endtime="20241121 23:39:14.570"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.579" endtime="20241121 23:39:14.579"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.570" endtime="20241121 23:39:14.580"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.580" endtime="20241121 23:39:14.581"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.581" endtime="20241121 23:39:14.581"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.580" endtime="20241121 23:39:14.581"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.570" endtime="20241121 23:39:14.581"/>
</try>
<msg timestamp="20241121 23:39:14.581" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.569" endtime="20241121 23:39:14.581"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.582" endtime="20241121 23:39:14.582"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.568" endtime="20241121 23:39:14.582"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:14.582" endtime="20241121 23:39:14.582"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:14.582" endtime="20241121 23:39:14.582"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.568" endtime="20241121 23:39:14.582"/>
</try>
<msg timestamp="20241121 23:39:14.583" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.567" endtime="20241121 23:39:14.583"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.586" endtime="20241121 23:39:14.586"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.586" endtime="20241121 23:39:14.587"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.586" endtime="20241121 23:39:14.587"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.586" endtime="20241121 23:39:14.587"/>
</if>
<status status="PASS" starttime="20241121 23:39:14.584" endtime="20241121 23:39:14.587"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.566" endtime="20241121 23:39:14.587"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:14.602" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:39:14.593" endtime="20241121 23:39:14.603"/>
</kw>
<msg timestamp="20241121 23:39:14.603" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.593" endtime="20241121 23:39:14.603"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.603" endtime="20241121 23:39:14.603"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.593" endtime="20241121 23:39:14.603"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.604" endtime="20241121 23:39:14.604"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.604" endtime="20241121 23:39:14.604"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.604" endtime="20241121 23:39:14.604"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.593" endtime="20241121 23:39:14.605"/>
</try>
<msg timestamp="20241121 23:39:14.605" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.592" endtime="20241121 23:39:14.605"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.605" endtime="20241121 23:39:14.605"/>
</return>
<msg timestamp="20241121 23:39:14.605" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.590" endtime="20241121 23:39:14.605"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.609" endtime="20241121 23:39:14.609"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.609" endtime="20241121 23:39:14.609"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.608" endtime="20241121 23:39:14.609"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.608" endtime="20241121 23:39:14.609"/>
</if>
<status status="PASS" starttime="20241121 23:39:14.607" endtime="20241121 23:39:14.610"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.590" endtime="20241121 23:39:14.610"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:14.629" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:39:14.617" endtime="20241121 23:39:14.629"/>
</kw>
<msg timestamp="20241121 23:39:14.629" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.617" endtime="20241121 23:39:14.629"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.629" endtime="20241121 23:39:14.629"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.616" endtime="20241121 23:39:14.629"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.629" endtime="20241121 23:39:14.629"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.629" endtime="20241121 23:39:14.629"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.629" endtime="20241121 23:39:14.629"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.616" endtime="20241121 23:39:14.629"/>
</try>
<msg timestamp="20241121 23:39:14.629" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.616" endtime="20241121 23:39:14.629"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:14.629" endtime="20241121 23:39:14.629"/>
</return>
<msg timestamp="20241121 23:39:14.629" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.614" endtime="20241121 23:39:14.629"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</if>
<status status="PASS" starttime="20241121 23:39:14.629" endtime="20241121 23:39:14.644"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.613" endtime="20241121 23:39:14.644"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.561" endtime="20241121 23:39:14.644"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:39:14.644" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.644"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.798"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.798"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.798"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.798"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.798"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.798"/>
</try>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.798"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.798"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.798"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.798"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.798"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.644" endtime="20241121 23:39:14.798"/>
</try>
<status status="PASS" starttime="20241121 23:39:14.559" endtime="20241121 23:39:14.798"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.557" endtime="20241121 23:39:14.798"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.798"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.798"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.798"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.798" endtime="20241121 23:39:14.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.815" endtime="20241121 23:39:14.831"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.831"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:14.851" endtime="20241121 23:39:14.852"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.853" endtime="20241121 23:39:14.853"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.831" endtime="20241121 23:39:14.853"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.853" endtime="20241121 23:39:14.853"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.853" endtime="20241121 23:39:14.853"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.853" endtime="20241121 23:39:14.853"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.853" endtime="20241121 23:39:14.853"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:39:14.869" endtime="20241121 23:39:14.869"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.869" endtime="20241121 23:39:14.869"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.853" endtime="20241121 23:39:14.869"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.555" endtime="20241121 23:39:14.869"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:14.869" endtime="20241121 23:39:14.869"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:39:14.869" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:39:14.869" endtime="20241121 23:39:14.869"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.554" endtime="20241121 23:39:14.869"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.554" endtime="20241121 23:39:14.869"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.869" endtime="20241121 23:39:14.869"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.869" endtime="20241121 23:39:14.869"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.554" endtime="20241121 23:39:14.869"/>
</try>
<status status="PASS" starttime="20241121 23:39:14.550" endtime="20241121 23:39:14.869"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.869" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:39:14.869" endtime="20241121 23:39:14.869"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:14.869" endtime="20241121 23:39:14.883"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:39:14.883" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:39:14.883" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.883"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.899" endtime="20241121 23:39:14.900"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.904" endtime="20241121 23:39:14.904"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.883" endtime="20241121 23:39:14.904"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.905" endtime="20241121 23:39:14.905"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.904" endtime="20241121 23:39:14.905"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.905" endtime="20241121 23:39:14.905"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.905" endtime="20241121 23:39:14.905"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.918" endtime="20241121 23:39:14.918"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.905" endtime="20241121 23:39:14.918"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.920" endtime="20241121 23:39:14.920"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.919" endtime="20241121 23:39:14.921"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.922" endtime="20241121 23:39:14.923"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.923" endtime="20241121 23:39:14.923"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.923" endtime="20241121 23:39:14.923"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.923" endtime="20241121 23:39:14.923"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.923" endtime="20241121 23:39:14.923"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:14.923" endtime="20241121 23:39:14.923"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:14.921" endtime="20241121 23:39:14.923"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:14.933" endtime="20241121 23:39:14.933"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.933" endtime="20241121 23:39:14.933"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.923" endtime="20241121 23:39:14.933"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.952" endtime="20241121 23:39:14.952"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.953" endtime="20241121 23:39:14.953"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.953" endtime="20241121 23:39:14.954"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.954" endtime="20241121 23:39:14.954"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.954" endtime="20241121 23:39:14.955"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:14.953" endtime="20241121 23:39:14.955"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:14.948" endtime="20241121 23:39:14.955"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:39:14.965" endtime="20241121 23:39:14.965"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:39:14.970" endtime="20241121 23:39:14.970"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:14.956" endtime="20241121 23:39:14.970"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:39:15.102" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:39:14.977" endtime="20241121 23:39:15.102"/>
</kw>
<msg timestamp="20241121 23:39:15.102" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.976" endtime="20241121 23:39:15.102"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.976" endtime="20241121 23:39:15.102"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.976" endtime="20241121 23:39:15.102"/>
</try>
<msg timestamp="20241121 23:39:15.102" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.975" endtime="20241121 23:39:15.102"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</return>
<status status="PASS" starttime="20241121 23:39:14.973" endtime="20241121 23:39:15.102"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.973" endtime="20241121 23:39:15.102"/>
</try>
<msg timestamp="20241121 23:39:15.102" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:39:14.972" endtime="20241121 23:39:15.102"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.970" endtime="20241121 23:39:15.102"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.102"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:39:15.123" endtime="20241121 23:39:15.123"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:15.123" endtime="20241121 23:39:15.123"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:15.102" endtime="20241121 23:39:15.123"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.883" endtime="20241121 23:39:15.124"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:15.124" endtime="20241121 23:39:15.125"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:39:15.125" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:39:15.125" endtime="20241121 23:39:15.125"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.883" endtime="20241121 23:39:15.126"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.883" endtime="20241121 23:39:15.126"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:15.126" endtime="20241121 23:39:15.126"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:15.126" endtime="20241121 23:39:15.126"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.883" endtime="20241121 23:39:15.127"/>
</try>
<status status="PASS" starttime="20241121 23:39:14.869" endtime="20241121 23:39:15.127"/>
</iter>
<status status="PASS" starttime="20241121 23:39:14.332" endtime="20241121 23:39:15.127"/>
</for>
<status status="PASS" starttime="20241121 23:39:14.332" endtime="20241121 23:39:15.127"/>
</branch>
<status status="PASS" starttime="20241121 23:39:14.331" endtime="20241121 23:39:15.127"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:39:15.128" level="INFO">${message} = {'message': 'IN_PROGRESS', 'flowSequenceId': '47'}</msg>
<status status="PASS" starttime="20241121 23:39:15.127" endtime="20241121 23:39:15.128"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241121 23:39:15.131" level="INFO">${json_response} = {"message": "IN_PROGRESS", "flowSequenceId": "47"}</msg>
<status status="PASS" starttime="20241121 23:39:15.130" endtime="20241121 23:39:15.131"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241121 23:39:15.138" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241121 23:39:15.138" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001A5901573A0&gt;</msg>
<status status="PASS" starttime="20241121 23:39:15.131" endtime="20241121 23:39:15.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:15.139" endtime="20241121 23:39:15.140"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241121 23:39:15.140" endtime="20241121 23:39:15.140"/>
</return>
<status status="PASS" starttime="20241121 23:39:15.129" endtime="20241121 23:39:15.140"/>
</kw>
<status status="PASS" starttime="20241121 23:39:14.317" endtime="20241121 23:39:15.141"/>
</iter>
<status status="PASS" starttime="20241121 23:38:57.750" endtime="20241121 23:39:15.141"/>
</for>
<status status="PASS" starttime="20241121 23:38:57.750" endtime="20241121 23:39:15.141"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.750" endtime="20241121 23:39:15.141"/>
</if>
<status status="PASS" starttime="20241121 23:38:57.719" endtime="20241121 23:39:15.141"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:15.142" endtime="20241121 23:39:15.142"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:15.141" endtime="20241121 23:39:15.142"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.719" endtime="20241121 23:39:15.142"/>
</if>
<status status="PASS" starttime="20241121 23:38:57.700" endtime="20241121 23:39:15.142"/>
</kw>
<status status="PASS" starttime="20241121 23:38:57.700" endtime="20241121 23:39:15.142"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:15.143" endtime="20241121 23:39:15.143"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:15.142" endtime="20241121 23:39:15.143"/>
</branch>
<status status="PASS" starttime="20241121 23:38:57.700" endtime="20241121 23:39:15.143"/>
</try>
<status status="PASS" starttime="20241121 23:36:51.128" endtime="20241121 23:39:15.143"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:39:15.144" endtime="20241121 23:39:15.144"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:39:58.489" level="INFO">KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
KafkaError{code=INCONSISTENT_GROUP_PROTOCOL,val=23,str="JoinGroup failed: Broker: Inconsistent group protocol"}
Execution terminated by signal</msg>
<msg timestamp="20241121 23:39:58.489" level="INFO">${json} = None</msg>
<status status="PASS" starttime="20241121 23:39:15.146" endtime="20241121 23:39:58.489"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="FAIL" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</return>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.489"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</try>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</iter>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</for>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${message}</var>
<arg>message=IN_PROGRESS</arg>
<arg>flowSequenceId=${testCaseFlowSequence}[id]</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</iter>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</for>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</if>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</if>
<status status="FAIL" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</kw>
<status status="FAIL" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="FAIL" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</kw>
<status status="FAIL" starttime="20241121 23:39:58.506" endtime="20241121 23:39:58.506"/>
</branch>
<status status="FAIL" starttime="20241121 23:39:58.489" endtime="20241121 23:39:58.506"/>
</try>
<status status="FAIL" starttime="20241121 23:39:15.143" endtime="20241121 23:39:58.506"/>
</iter>
<status status="FAIL" starttime="20241121 23:34:01.571" endtime="20241121 23:39:58.506"/>
</while>
<status status="FAIL" starttime="20241121 23:34:01.571" endtime="20241121 23:39:58.506"/>
</kw>
<status status="FAIL" starttime="20241121 23:34:01.571" endtime="20241121 23:39:58.506">Execution terminated by signal</status>
</test>
<status status="FAIL" starttime="20241121 23:33:58.731" endtime="20241121 23:39:58.506"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tasks</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Start">Start</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20241121 23:39:58.506" level="ERROR">Calling method '_end_test' of listener 'Playwright' failed: ConnectionError: Playwright process has been terminated with code 130</msg>
<msg timestamp="20241121 23:39:58.506" level="ERROR">Calling method '_end_suite' of listener 'Playwright' failed: ConnectionError: Playwright process has been terminated with code 130</msg>
</errors>
</robot>
