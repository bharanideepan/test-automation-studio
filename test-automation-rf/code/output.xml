<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241123 23:53:18.156" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="44">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:53:20.222" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241123 23:53:20.221" endtime="20241123 23:53:20.222"/>
</kw>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241123 23:53:20.223" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\bfe59b42-1c54-4b77-b668-4cb2f2e20ef7"}</msg>
<msg timestamp="20241123 23:53:20.682" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\bfe59b42-1c54-4b77-b668-4cb2f2e20ef7"}</msg>
<status status="PASS" starttime="20241123 23:53:20.222" endtime="20241123 23:53:20.683"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241123 23:53:20.684" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241123 23:53:20.708" level="INFO">Successfully created context. </msg>
<msg timestamp="20241123 23:53:20.708" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241123 23:53:20.683" endtime="20241123 23:53:20.708"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241123 23:53:20.712" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241123 23:53:20.708" endtime="20241123 23:53:20.712"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241123 23:53:24.485" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241123 23:53:24.486" level="INFO">${page_id} = {'page_id': 'page=4f994335-919a-4750-b5e9-55f356ce51e5', 'video_path': ''}</msg>
<status status="PASS" starttime="20241123 23:53:20.713" endtime="20241123 23:53:24.486"/>
</kw>
<status status="PASS" starttime="20241123 23:53:20.222" endtime="20241123 23:53:24.486"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:53:24.487" endtime="20241123 23:53:24.487"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241123 23:54:37.028" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '15', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T18:24:36.966Z', 'createdAt': '2024-11-23T18:24:36.966Z', 'errorMe...</msg>
<status status="PASS" starttime="20241123 23:53:24.488" endtime="20241123 23:54:37.029"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241123 23:54:37.029" endtime="20241123 23:54:37.030"/>
</break>
<status status="NOT RUN" starttime="20241123 23:54:37.029" endtime="20241123 23:54:37.030"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.029" endtime="20241123 23:54:37.030"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:37.031" endtime="20241123 23:54:37.035"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:37.038" endtime="20241123 23:54:37.039"/>
</kw>
<msg timestamp="20241123 23:54:37.039" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.038" endtime="20241123 23:54:37.039"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.044" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241123 23:54:37.044" endtime="20241123 23:54:37.045"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.047" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.046" endtime="20241123 23:54:37.047"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.045" endtime="20241123 23:54:37.048"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.048" endtime="20241123 23:54:37.048"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:37.048" endtime="20241123 23:54:37.048"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.045" endtime="20241123 23:54:37.049"/>
</if>
<status status="PASS" starttime="20241123 23:54:37.043" endtime="20241123 23:54:37.049"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.039" endtime="20241123 23:54:37.049"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:37.049" endtime="20241123 23:54:37.049"/>
</return>
<msg timestamp="20241123 23:54:37.050" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.037" endtime="20241123 23:54:37.050"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.050" endtime="20241123 23:54:37.051"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241123 23:54:37.051" endtime="20241123 23:54:37.051"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:37.050" endtime="20241123 23:54:37.051"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.050" endtime="20241123 23:54:37.051"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:37.056" endtime="20241123 23:54:37.056"/>
</kw>
<msg timestamp="20241123 23:54:37.056" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.056" endtime="20241123 23:54:37.056"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.057" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-23T18:24:33.949Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241123 23:54:37.057" endtime="20241123 23:54:37.057"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.058" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.058" endtime="20241123 23:54:37.058"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.058" endtime="20241123 23:54:37.058"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.058" endtime="20241123 23:54:37.058"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:37.058" endtime="20241123 23:54:37.058"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.057" endtime="20241123 23:54:37.058"/>
</if>
<status status="PASS" starttime="20241123 23:54:37.057" endtime="20241123 23:54:37.059"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.056" endtime="20241123 23:54:37.059"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:37.059" endtime="20241123 23:54:37.059"/>
</return>
<msg timestamp="20241123 23:54:37.059" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.054" endtime="20241123 23:54:37.059"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:37.062" endtime="20241123 23:54:37.063"/>
</kw>
<msg timestamp="20241123 23:54:37.063" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.062" endtime="20241123 23:54:37.063"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.064" level="INFO">${values} = {'id': '15', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T18:24:36.966Z', 'createdAt': '2024-11-23T18:24:36.966Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241123 23:54:37.064" endtime="20241123 23:54:37.064"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.065" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.065" endtime="20241123 23:54:37.065"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.065" endtime="20241123 23:54:37.065"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.066" endtime="20241123 23:54:37.066"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:37.065" endtime="20241123 23:54:37.066"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.064" endtime="20241123 23:54:37.066"/>
</if>
<status status="PASS" starttime="20241123 23:54:37.063" endtime="20241123 23:54:37.066"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.063" endtime="20241123 23:54:37.066"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:37.066" endtime="20241123 23:54:37.066"/>
</return>
<msg timestamp="20241123 23:54:37.066" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.061" endtime="20241123 23:54:37.066"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.067" endtime="20241123 23:54:37.067"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:37.067" endtime="20241123 23:54:37.067"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.066" endtime="20241123 23:54:37.067"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.067" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-23T18:24:33.949Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241123 23:54:37.067" endtime="20241123 23:54:37.068"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.068" level="INFO">${testCaseRun} = {'id': '15', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T18:24:36.966Z', 'createdAt': '2024-11-23T18:24:36.966Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241123 23:54:37.068" endtime="20241123 23:54:37.068"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.068" level="INFO">${assertions} = [{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'VISIBLE', 'useCustomTargetValu...</msg>
<status status="PASS" starttime="20241123 23:54:37.068" endtime="20241123 23:54:37.068"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:37.069" endtime="20241123 23:54:37.069"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:37.074" endtime="20241123 23:54:37.074"/>
</kw>
<msg timestamp="20241123 23:54:37.075" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.073" endtime="20241123 23:54:37.075"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.094" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-23T18:24:33.980Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241123 23:54:37.076" endtime="20241123 23:54:37.094"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.097" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.096" endtime="20241123 23:54:37.097"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.095" endtime="20241123 23:54:37.097"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.097" endtime="20241123 23:54:37.097"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:37.097" endtime="20241123 23:54:37.097"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.095" endtime="20241123 23:54:37.106"/>
</if>
<status status="PASS" starttime="20241123 23:54:37.075" endtime="20241123 23:54:37.106"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.075" endtime="20241123 23:54:37.106"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:37.106" endtime="20241123 23:54:37.106"/>
</return>
<msg timestamp="20241123 23:54:37.107" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.073" endtime="20241123 23:54:37.107"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:37.109" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '15', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241123 23:54:37.107" endtime="20241123 23:54:37.109"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:37.112" level="INFO">${json_response} = {"testCaseRunId": "15", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241123 23:54:37.110" endtime="20241123 23:54:37.112"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:37.126" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:37.126" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:37.113" endtime="20241123 23:54:37.126"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:37.126" endtime="20241123 23:54:37.128"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:37.129" endtime="20241123 23:54:37.129"/>
</return>
<status status="PASS" starttime="20241123 23:54:37.109" endtime="20241123 23:54:37.130"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-23T18:24:33.980Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.132" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-22T04:20:41.623Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241123 23:54:37.131" endtime="20241123 23:54:37.132"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:37.132" endtime="20241123 23:54:37.156"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:37.163" endtime="20241123 23:54:37.164"/>
</kw>
<msg timestamp="20241123 23:54:37.165" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.163" endtime="20241123 23:54:37.165"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.166" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.468Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241123 23:54:37.166" endtime="20241123 23:54:37.166"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.167" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.167" endtime="20241123 23:54:37.168"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.167" endtime="20241123 23:54:37.168"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.168" endtime="20241123 23:54:37.168"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:37.168" endtime="20241123 23:54:37.168"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.167" endtime="20241123 23:54:37.168"/>
</if>
<status status="PASS" starttime="20241123 23:54:37.165" endtime="20241123 23:54:37.168"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.165" endtime="20241123 23:54:37.169"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:37.169" endtime="20241123 23:54:37.169"/>
</return>
<msg timestamp="20241123 23:54:37.169" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:37.162" endtime="20241123 23:54:37.169"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.468Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.172" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241123 23:54:37.170" endtime="20241123 23:54:37.172"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:37.172" endtime="20241123 23:54:37.174"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 23:54:37.175" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241123 23:54:37.174" endtime="20241123 23:54:37.175"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.176" endtime="20241123 23:54:37.176"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:37.177" endtime="20241123 23:54:37.177"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:37.176" endtime="20241123 23:54:37.177"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.175" endtime="20241123 23:54:37.177"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:37.182" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241123 23:54:37.181" endtime="20241123 23:54:37.182"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241123 23:54:42.877" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241123 23:54:42.877" level="INFO">${page_id} = {'page_id': 'page=284c8d8e-fd06-4f5c-8e60-0fe173223c33', 'video_path': ''}</msg>
<status status="PASS" starttime="20241123 23:54:37.184" endtime="20241123 23:54:42.877"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241123 23:54:42.878" level="INFO">Switching to page {'page_id': 'page=284c8d8e-fd06-4f5c-8e60-0fe173223c33', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241123 23:54:42.887" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=5e420325-356e-41fe-a25e-1066f8a9a75b",
    "contexts": [
      {
        "type": "context",
        "id": "context=92766322-110f-47b2-815b-263e7760019e",
        "activePage": "page=284c8d8e-fd06-4f5c-8e60-0fe173223c33",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=4f994335-919a-4750-b5e9-55f356ce51e5",
            "timestamp": 1732386200.914
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=284c8d8e-fd06-4f5c-8e60-0fe173223c33",
            "timestamp": 1732386277.242
          }
        ]
      }
    ],
    "activeContext": "context=92766322-110f-47b2-815b-263e7760019e",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241123 23:54:42.895" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241123 23:54:42.877" endtime="20241123 23:54:42.896"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.183" endtime="20241123 23:54:42.896"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.183" endtime="20241123 23:54:42.896"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:42.896" endtime="20241123 23:54:42.896"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.896" endtime="20241123 23:54:42.896"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.898" endtime="20241123 23:54:42.898"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.896" endtime="20241123 23:54:42.898"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.900" endtime="20241123 23:54:42.900"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.902" endtime="20241123 23:54:42.902"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.898" endtime="20241123 23:54:42.902"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.903" endtime="20241123 23:54:42.903"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.902" endtime="20241123 23:54:42.903"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.906" endtime="20241123 23:54:42.906"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.903" endtime="20241123 23:54:42.906"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.908" endtime="20241123 23:54:42.909"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.906" endtime="20241123 23:54:42.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.910" endtime="20241123 23:54:42.910"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.909" endtime="20241123 23:54:42.910"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.911" endtime="20241123 23:54:42.911"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.911" endtime="20241123 23:54:42.911"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.911" endtime="20241123 23:54:42.912"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.912" endtime="20241123 23:54:42.912"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.912" endtime="20241123 23:54:42.912"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:42.911" endtime="20241123 23:54:42.912"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:42.910" endtime="20241123 23:54:42.912"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:42.916" endtime="20241123 23:54:42.917"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.919" endtime="20241123 23:54:42.919"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.912" endtime="20241123 23:54:42.919"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.920" endtime="20241123 23:54:42.920"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.920" endtime="20241123 23:54:42.921"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.920" endtime="20241123 23:54:42.921"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.921" endtime="20241123 23:54:42.921"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.921" endtime="20241123 23:54:42.921"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:42.920" endtime="20241123 23:54:42.921"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:42.919" endtime="20241123 23:54:42.921"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:42.927" endtime="20241123 23:54:42.927"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.929" endtime="20241123 23:54:42.929"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.921" endtime="20241123 23:54:42.929"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.930" endtime="20241123 23:54:42.931"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.931" endtime="20241123 23:54:42.931"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.931" endtime="20241123 23:54:42.931"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.931" endtime="20241123 23:54:42.931"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.931" endtime="20241123 23:54:42.931"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:42.931" endtime="20241123 23:54:42.932"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:42.929" endtime="20241123 23:54:42.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.933" endtime="20241123 23:54:42.933"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.932" endtime="20241123 23:54:42.933"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 23:54:42.938" endtime="20241123 23:54:42.938"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:42.939" endtime="20241123 23:54:42.939"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:42.934" endtime="20241123 23:54:42.939"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.183" endtime="20241123 23:54:42.939"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:42.939" endtime="20241123 23:54:42.940"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 23:54:43.943" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241123 23:54:42.940" endtime="20241123 23:54:43.943"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241123 23:54:43.944" endtime="20241123 23:54:43.944"/>
</return>
<msg timestamp="20241123 23:54:43.946" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241123 23:54:37.177" endtime="20241123 23:54:43.946"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:43.951" level="INFO">${key} = testCaseFlowSequenceId:46::flowActionSequenceId:41</msg>
<status status="PASS" starttime="20241123 23:54:43.949" endtime="20241123 23:54:43.951"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'VISIBLE', 'useCustomTargetValue...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:43.954" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241123 23:54:43.953" endtime="20241123 23:54:43.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:43.956" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241123 23:54:43.955" endtime="20241123 23:54:43.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:43.959" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241123 23:54:43.957" endtime="20241123 23:54:43.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:43.961" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241123 23:54:43.960" endtime="20241123 23:54:43.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:43.963" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241123 23:54:43.962" endtime="20241123 23:54:43.963"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:43.965" level="INFO">${customTargetValue} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:43.964" endtime="20241123 23:54:43.965"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:43.967" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241123 23:54:43.966" endtime="20241123 23:54:43.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:43.968" endtime="20241123 23:54:43.969"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:43.979" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:47::flowActionSequenceId:47'.</msg>
<status status="FAIL" starttime="20241123 23:54:43.977" endtime="20241123 23:54:43.979"/>
</kw>
<msg timestamp="20241123 23:54:43.979" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:43.976" endtime="20241123 23:54:43.979"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:43.980" endtime="20241123 23:54:43.981"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:43.981" endtime="20241123 23:54:43.982"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:43.981" endtime="20241123 23:54:43.982"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:43.982" endtime="20241123 23:54:43.982"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:43.982" endtime="20241123 23:54:43.983"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:43.981" endtime="20241123 23:54:43.983"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:43.980" endtime="20241123 23:54:43.983"/>
</branch>
<status status="PASS" starttime="20241123 23:54:43.980" endtime="20241123 23:54:43.983"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:43.983" endtime="20241123 23:54:43.983"/>
</return>
<msg timestamp="20241123 23:54:43.984" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:43.974" endtime="20241123 23:54:43.984"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:43.993" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241123 23:54:43.991" endtime="20241123 23:54:43.993"/>
</kw>
<msg timestamp="20241123 23:54:43.994" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:43.990" endtime="20241123 23:54:43.994"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:43.995" endtime="20241123 23:54:43.995"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:43.996" endtime="20241123 23:54:43.996"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:43.995" endtime="20241123 23:54:43.996"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:43.997" endtime="20241123 23:54:43.997"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:43.996" endtime="20241123 23:54:43.997"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:43.995" endtime="20241123 23:54:43.997"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:43.994" endtime="20241123 23:54:43.997"/>
</branch>
<status status="PASS" starttime="20241123 23:54:43.994" endtime="20241123 23:54:43.998"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:43.998" endtime="20241123 23:54:43.998"/>
</return>
<msg timestamp="20241123 23:54:43.999" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:43.989" endtime="20241123 23:54:43.999"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:43.999" endtime="20241123 23:54:44.000"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:44.000" endtime="20241123 23:54:44.001"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:44.002" endtime="20241123 23:54:44.003"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.004" endtime="20241123 23:54:44.004"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.005" endtime="20241123 23:54:44.005"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.004" endtime="20241123 23:54:44.005"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:44.004" endtime="20241123 23:54:44.005"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.006" endtime="20241123 23:54:44.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.007" endtime="20241123 23:54:44.007"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.006" endtime="20241123 23:54:44.007"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:44.006" endtime="20241123 23:54:44.007"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:44.004" endtime="20241123 23:54:44.007"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.003" endtime="20241123 23:54:44.007"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.009" endtime="20241123 23:54:44.009"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.008" endtime="20241123 23:54:44.009"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:44.008" endtime="20241123 23:54:44.009"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.009" endtime="20241123 23:54:44.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.010" endtime="20241123 23:54:44.010"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.009" endtime="20241123 23:54:44.010"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:44.009" endtime="20241123 23:54:44.010"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:44.008" endtime="20241123 23:54:44.010"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.007" endtime="20241123 23:54:44.010"/>
</if>
<status status="PASS" starttime="20241123 23:54:43.952" endtime="20241123 23:54:44.010"/>
</iter>
<status status="PASS" starttime="20241123 23:54:43.951" endtime="20241123 23:54:44.011"/>
</for>
<status status="PASS" starttime="20241123 23:54:43.946" endtime="20241123 23:54:44.011"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:44.014" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '102', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/login', ...</msg>
<status status="PASS" starttime="20241123 23:54:44.013" endtime="20241123 23:54:44.014"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:44.015" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "102", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/login", ...</msg>
<status status="PASS" starttime="20241123 23:54:44.015" endtime="20241123 23:54:44.015"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:44.051" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:44.051" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:44.015" endtime="20241123 23:54:44.051"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:44.051" endtime="20241123 23:54:44.051"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:44.052" endtime="20241123 23:54:44.052"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.014" endtime="20241123 23:54:44.052"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.011" endtime="20241123 23:54:44.052"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.170" endtime="20241123 23:54:44.052"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.052" endtime="20241123 23:54:44.052"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:44.053" endtime="20241123 23:54:44.053"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.053" endtime="20241123 23:54:44.053"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.052" endtime="20241123 23:54:44.053"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.170" endtime="20241123 23:54:44.053"/>
</try>
<status status="PASS" starttime="20241123 23:54:37.170" endtime="20241123 23:54:44.053"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-22T04:20:41.490Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:44.054" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241123 23:54:44.054" endtime="20241123 23:54:44.054"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:44.054" endtime="20241123 23:54:44.055"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 23:54:44.056" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241123 23:54:44.056" endtime="20241123 23:54:44.056"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.058" endtime="20241123 23:54:44.058"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.058" endtime="20241123 23:54:44.058"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.057" endtime="20241123 23:54:44.058"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.057" endtime="20241123 23:54:44.058"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:44.059" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241123 23:54:44.059" endtime="20241123 23:54:44.059"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:44.060" endtime="20241123 23:54:44.060"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.059" endtime="20241123 23:54:44.060"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:44.060" endtime="20241123 23:54:44.060"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.060" endtime="20241123 23:54:44.060"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.062" endtime="20241123 23:54:44.062"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.060" endtime="20241123 23:54:44.062"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.064" endtime="20241123 23:54:44.064"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.066" endtime="20241123 23:54:44.066"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.063" endtime="20241123 23:54:44.066"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.067" endtime="20241123 23:54:44.067"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.067" endtime="20241123 23:54:44.068"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.070" endtime="20241123 23:54:44.070"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.068" endtime="20241123 23:54:44.070"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:44.101" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 23:54:44.078" endtime="20241123 23:54:44.101"/>
</kw>
<msg timestamp="20241123 23:54:44.101" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.077" endtime="20241123 23:54:44.101"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.101" endtime="20241123 23:54:44.101"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.077" endtime="20241123 23:54:44.101"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.101" endtime="20241123 23:54:44.102"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.102" endtime="20241123 23:54:44.102"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.101" endtime="20241123 23:54:44.102"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.077" endtime="20241123 23:54:44.102"/>
</try>
<msg timestamp="20241123 23:54:44.102" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.077" endtime="20241123 23:54:44.102"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.102" endtime="20241123 23:54:44.102"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.076" endtime="20241123 23:54:44.102"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:44.102" endtime="20241123 23:54:44.103"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:44.102" endtime="20241123 23:54:44.103"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.076" endtime="20241123 23:54:44.103"/>
</try>
<msg timestamp="20241123 23:54:44.103" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.076" endtime="20241123 23:54:44.103"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.105" endtime="20241123 23:54:44.105"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.105" endtime="20241123 23:54:44.105"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.105" endtime="20241123 23:54:44.106"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.105" endtime="20241123 23:54:44.106"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.104" endtime="20241123 23:54:44.106"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.075" endtime="20241123 23:54:44.106"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:44.120" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 23:54:44.113" endtime="20241123 23:54:44.120"/>
</kw>
<msg timestamp="20241123 23:54:44.120" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.113" endtime="20241123 23:54:44.120"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.120" endtime="20241123 23:54:44.120"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.113" endtime="20241123 23:54:44.120"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.120" endtime="20241123 23:54:44.121"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.121" endtime="20241123 23:54:44.121"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.120" endtime="20241123 23:54:44.121"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.113" endtime="20241123 23:54:44.121"/>
</try>
<msg timestamp="20241123 23:54:44.121" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.112" endtime="20241123 23:54:44.121"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.121" endtime="20241123 23:54:44.122"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.112" endtime="20241123 23:54:44.122"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:44.122" endtime="20241123 23:54:44.122"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:44.122" endtime="20241123 23:54:44.122"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.112" endtime="20241123 23:54:44.122"/>
</try>
<msg timestamp="20241123 23:54:44.122" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.111" endtime="20241123 23:54:44.122"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.124" endtime="20241123 23:54:44.124"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.125" endtime="20241123 23:54:44.125"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.124" endtime="20241123 23:54:44.125"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.124" endtime="20241123 23:54:44.125"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.123" endtime="20241123 23:54:44.125"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.111" endtime="20241123 23:54:44.125"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 23:54:44.144" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241123 23:54:44.144" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241123 23:54:44.125" endtime="20241123 23:54:44.144"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 23:54:44.144" endtime="20241123 23:54:44.144"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.125" endtime="20241123 23:54:44.145"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.145" endtime="20241123 23:54:44.145"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.145" endtime="20241123 23:54:44.145"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.145" endtime="20241123 23:54:44.145"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.125" endtime="20241123 23:54:44.145"/>
</try>
<msg timestamp="20241123 23:54:44.146" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241123 23:54:44.109" endtime="20241123 23:54:44.146"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.147" endtime="20241123 23:54:44.147"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.148" endtime="20241123 23:54:44.148"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.147" endtime="20241123 23:54:44.148"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.147" endtime="20241123 23:54:44.148"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.146" endtime="20241123 23:54:44.148"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.108" endtime="20241123 23:54:44.148"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.148" endtime="20241123 23:54:44.148"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.148" endtime="20241123 23:54:44.148"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.108" endtime="20241123 23:54:44.148"/>
</try>
<status status="PASS" starttime="20241123 23:54:44.108" endtime="20241123 23:54:44.148"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:44.158" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241123 23:54:44.152" endtime="20241123 23:54:44.158"/>
</kw>
<msg timestamp="20241123 23:54:44.158" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.152" endtime="20241123 23:54:44.158"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.158" endtime="20241123 23:54:44.159"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.152" endtime="20241123 23:54:44.159"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.159" endtime="20241123 23:54:44.159"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.159" endtime="20241123 23:54:44.159"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.159" endtime="20241123 23:54:44.159"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.151" endtime="20241123 23:54:44.159"/>
</try>
<msg timestamp="20241123 23:54:44.160" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.151" endtime="20241123 23:54:44.160"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.160" endtime="20241123 23:54:44.160"/>
</return>
<msg timestamp="20241123 23:54:44.160" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.150" endtime="20241123 23:54:44.160"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.162" endtime="20241123 23:54:44.162"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.162" endtime="20241123 23:54:44.162"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.162" endtime="20241123 23:54:44.162"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.162" endtime="20241123 23:54:44.162"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.161" endtime="20241123 23:54:44.162"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.150" endtime="20241123 23:54:44.163"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.073" endtime="20241123 23:54:44.163"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:44.179" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241123 23:54:44.167" endtime="20241123 23:54:44.179"/>
</kw>
<msg timestamp="20241123 23:54:44.180" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.166" endtime="20241123 23:54:44.180"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.180" endtime="20241123 23:54:44.180"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.166" endtime="20241123 23:54:44.180"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.180" endtime="20241123 23:54:44.180"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.180" endtime="20241123 23:54:44.180"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.180" endtime="20241123 23:54:44.181"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.166" endtime="20241123 23:54:44.181"/>
</try>
<msg timestamp="20241123 23:54:44.181" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.166" endtime="20241123 23:54:44.181"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.181" endtime="20241123 23:54:44.181"/>
</return>
<msg timestamp="20241123 23:54:44.181" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.165" endtime="20241123 23:54:44.181"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.183" endtime="20241123 23:54:44.183"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.183" endtime="20241123 23:54:44.183"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.183" endtime="20241123 23:54:44.183"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.183" endtime="20241123 23:54:44.184"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.182" endtime="20241123 23:54:44.184"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.164" endtime="20241123 23:54:44.184"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:44.184" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 23:54:44.184" endtime="20241123 23:54:44.184"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.186" endtime="20241123 23:54:44.186"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.188" endtime="20241123 23:54:44.188"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.186" endtime="20241123 23:54:44.188"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:44.188" endtime="20241123 23:54:44.188"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.188" endtime="20241123 23:54:44.189"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.186" endtime="20241123 23:54:44.189"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241123 23:54:44.189" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241123 23:54:44.189" endtime="20241123 23:54:44.213"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.189" endtime="20241123 23:54:44.213"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.214" endtime="20241123 23:54:44.214"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.214" endtime="20241123 23:54:44.214"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.214" endtime="20241123 23:54:44.214"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.189" endtime="20241123 23:54:44.214"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:44.225" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 23:54:44.219" endtime="20241123 23:54:44.225"/>
</kw>
<msg timestamp="20241123 23:54:44.225" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.219" endtime="20241123 23:54:44.225"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.225" endtime="20241123 23:54:44.225"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.219" endtime="20241123 23:54:44.225"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.227" endtime="20241123 23:54:44.227"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.227" endtime="20241123 23:54:44.227"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.227" endtime="20241123 23:54:44.227"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.219" endtime="20241123 23:54:44.227"/>
</try>
<msg timestamp="20241123 23:54:44.227" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.218" endtime="20241123 23:54:44.227"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.227" endtime="20241123 23:54:44.228"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.218" endtime="20241123 23:54:44.228"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:44.228" endtime="20241123 23:54:44.228"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:44.228" endtime="20241123 23:54:44.228"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.218" endtime="20241123 23:54:44.228"/>
</try>
<msg timestamp="20241123 23:54:44.228" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.217" endtime="20241123 23:54:44.228"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.229" endtime="20241123 23:54:44.229"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.229" endtime="20241123 23:54:44.229"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.229" endtime="20241123 23:54:44.229"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.229" endtime="20241123 23:54:44.229"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.229" endtime="20241123 23:54:44.231"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.217" endtime="20241123 23:54:44.231"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:44.243" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 23:54:44.238" endtime="20241123 23:54:44.243"/>
</kw>
<msg timestamp="20241123 23:54:44.244" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.238" endtime="20241123 23:54:44.244"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.244" endtime="20241123 23:54:44.244"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.237" endtime="20241123 23:54:44.244"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.244" endtime="20241123 23:54:44.244"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.244" endtime="20241123 23:54:44.244"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.244" endtime="20241123 23:54:44.244"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.237" endtime="20241123 23:54:44.245"/>
</try>
<msg timestamp="20241123 23:54:44.245" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.237" endtime="20241123 23:54:44.245"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.245" endtime="20241123 23:54:44.245"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.236" endtime="20241123 23:54:44.245"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:44.245" endtime="20241123 23:54:44.245"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:44.245" endtime="20241123 23:54:44.245"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.236" endtime="20241123 23:54:44.245"/>
</try>
<msg timestamp="20241123 23:54:44.246" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.235" endtime="20241123 23:54:44.246"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.248" endtime="20241123 23:54:44.248"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.248" endtime="20241123 23:54:44.248"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.247" endtime="20241123 23:54:44.248"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.247" endtime="20241123 23:54:44.248"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.247" endtime="20241123 23:54:44.248"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.235" endtime="20241123 23:54:44.248"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 23:54:44.257" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241123 23:54:44.258" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241123 23:54:44.249" endtime="20241123 23:54:44.258"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 23:54:44.258" endtime="20241123 23:54:44.258"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.248" endtime="20241123 23:54:44.258"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.258" endtime="20241123 23:54:44.258"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.258" endtime="20241123 23:54:44.258"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.258" endtime="20241123 23:54:44.259"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.248" endtime="20241123 23:54:44.259"/>
</try>
<msg timestamp="20241123 23:54:44.259" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241123 23:54:44.232" endtime="20241123 23:54:44.259"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.261" endtime="20241123 23:54:44.261"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.261" endtime="20241123 23:54:44.261"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.261" endtime="20241123 23:54:44.261"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.261" endtime="20241123 23:54:44.261"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.260" endtime="20241123 23:54:44.261"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.232" endtime="20241123 23:54:44.261"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.262" endtime="20241123 23:54:44.262"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.261" endtime="20241123 23:54:44.262"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.232" endtime="20241123 23:54:44.262"/>
</try>
<status status="PASS" starttime="20241123 23:54:44.232" endtime="20241123 23:54:44.262"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:44.272" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241123 23:54:44.266" endtime="20241123 23:54:44.272"/>
</kw>
<msg timestamp="20241123 23:54:44.272" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.265" endtime="20241123 23:54:44.272"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.272" endtime="20241123 23:54:44.272"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.265" endtime="20241123 23:54:44.272"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.273" endtime="20241123 23:54:44.273"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.273" endtime="20241123 23:54:44.273"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.272" endtime="20241123 23:54:44.273"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.265" endtime="20241123 23:54:44.273"/>
</try>
<msg timestamp="20241123 23:54:44.273" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.265" endtime="20241123 23:54:44.273"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.273" endtime="20241123 23:54:44.273"/>
</return>
<msg timestamp="20241123 23:54:44.274" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.264" endtime="20241123 23:54:44.274"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.276" endtime="20241123 23:54:44.276"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.276" endtime="20241123 23:54:44.276"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.276" endtime="20241123 23:54:44.276"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.275" endtime="20241123 23:54:44.276"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.275" endtime="20241123 23:54:44.276"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.263" endtime="20241123 23:54:44.276"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.215" endtime="20241123 23:54:44.276"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:44.287" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241123 23:54:44.281" endtime="20241123 23:54:44.287"/>
</kw>
<msg timestamp="20241123 23:54:44.288" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.281" endtime="20241123 23:54:44.288"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.288" endtime="20241123 23:54:44.288"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.281" endtime="20241123 23:54:44.288"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.288" endtime="20241123 23:54:44.288"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.288" endtime="20241123 23:54:44.289"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.288" endtime="20241123 23:54:44.289"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.281" endtime="20241123 23:54:44.289"/>
</try>
<msg timestamp="20241123 23:54:44.289" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.281" endtime="20241123 23:54:44.289"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.289" endtime="20241123 23:54:44.289"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.280" endtime="20241123 23:54:44.289"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:44.289" endtime="20241123 23:54:44.289"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:44.289" endtime="20241123 23:54:44.289"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.280" endtime="20241123 23:54:44.289"/>
</try>
<msg timestamp="20241123 23:54:44.290" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.279" endtime="20241123 23:54:44.290"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.291" endtime="20241123 23:54:44.292"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.292" endtime="20241123 23:54:44.292"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.291" endtime="20241123 23:54:44.292"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.291" endtime="20241123 23:54:44.292"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.290" endtime="20241123 23:54:44.292"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.279" endtime="20241123 23:54:44.292"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 23:54:44.303" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241123 23:54:44.303" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241123 23:54:44.292" endtime="20241123 23:54:44.303"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 23:54:44.303" endtime="20241123 23:54:44.303"/>
</return>
<status status="PASS" starttime="20241123 23:54:44.292" endtime="20241123 23:54:44.303"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.304" endtime="20241123 23:54:44.304"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.304" endtime="20241123 23:54:44.304"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.304" endtime="20241123 23:54:44.304"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.292" endtime="20241123 23:54:44.304"/>
</try>
<msg timestamp="20241123 23:54:44.304" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241123 23:54:44.277" endtime="20241123 23:54:44.304"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241123 23:54:44.305" endtime="20241123 23:54:44.305"/>
</return>
<msg timestamp="20241123 23:54:44.305" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241123 23:54:44.215" endtime="20241123 23:54:44.305"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241123 23:54:44.312" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.307" endtime="20241123 23:54:44.312"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:44.312" endtime="20241123 23:54:44.312"/>
</return>
<msg timestamp="20241123 23:54:44.312" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241123 23:54:44.306" endtime="20241123 23:54:44.312"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.316" endtime="20241123 23:54:44.316"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.316" endtime="20241123 23:54:44.316"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.316" endtime="20241123 23:54:44.316"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.316" endtime="20241123 23:54:44.316"/>
</if>
<status status="PASS" starttime="20241123 23:54:44.315" endtime="20241123 23:54:44.317"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.215" endtime="20241123 23:54:44.317"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.185" endtime="20241123 23:54:44.317"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.185" endtime="20241123 23:54:44.317"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.185" endtime="20241123 23:54:44.317"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.317" endtime="20241123 23:54:44.317"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.317" endtime="20241123 23:54:44.317"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.184" endtime="20241123 23:54:44.317"/>
</try>
<status status="PASS" starttime="20241123 23:54:44.072" endtime="20241123 23:54:44.318"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.070" endtime="20241123 23:54:44.318"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.319" endtime="20241123 23:54:44.319"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.318" endtime="20241123 23:54:44.319"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.320" endtime="20241123 23:54:44.320"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.320" endtime="20241123 23:54:44.320"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.320" endtime="20241123 23:54:44.321"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.321" endtime="20241123 23:54:44.321"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.321" endtime="20241123 23:54:44.321"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:44.320" endtime="20241123 23:54:44.321"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:44.319" endtime="20241123 23:54:44.321"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:44.326" endtime="20241123 23:54:44.326"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.329" endtime="20241123 23:54:44.329"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.321" endtime="20241123 23:54:44.329"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.330" endtime="20241123 23:54:44.330"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.331" endtime="20241123 23:54:44.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.330" endtime="20241123 23:54:44.331"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.331" endtime="20241123 23:54:44.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.331" endtime="20241123 23:54:44.331"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:44.330" endtime="20241123 23:54:44.331"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:44.329" endtime="20241123 23:54:44.331"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:44.336" endtime="20241123 23:54:44.336"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.338" endtime="20241123 23:54:44.338"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.331" endtime="20241123 23:54:44.338"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.339" endtime="20241123 23:54:44.339"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.339" endtime="20241123 23:54:44.339"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.339" endtime="20241123 23:54:44.339"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.340" endtime="20241123 23:54:44.340"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.339" endtime="20241123 23:54:44.340"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:44.339" endtime="20241123 23:54:44.340"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:44.338" endtime="20241123 23:54:44.340"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.342" endtime="20241123 23:54:44.342"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.340" endtime="20241123 23:54:44.342"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 23:54:44.347" endtime="20241123 23:54:44.347"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:44.347" endtime="20241123 23:54:44.347"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:44.342" endtime="20241123 23:54:44.347"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.059" endtime="20241123 23:54:44.347"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:44.347" endtime="20241123 23:54:44.348"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 23:54:45.352" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241123 23:54:44.348" endtime="20241123 23:54:45.352"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241123 23:54:45.352" endtime="20241123 23:54:45.353"/>
</return>
<msg timestamp="20241123 23:54:45.354" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241123 23:54:44.058" endtime="20241123 23:54:45.354"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.359" level="INFO">${key} = testCaseFlowSequenceId:46::flowActionSequenceId:43</msg>
<status status="PASS" starttime="20241123 23:54:45.358" endtime="20241123 23:54:45.360"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'VISIBLE', 'useCustomTargetValue...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.363" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241123 23:54:45.362" endtime="20241123 23:54:45.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.365" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241123 23:54:45.364" endtime="20241123 23:54:45.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.367" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241123 23:54:45.366" endtime="20241123 23:54:45.367"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.369" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241123 23:54:45.368" endtime="20241123 23:54:45.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.372" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.370" endtime="20241123 23:54:45.372"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.374" level="INFO">${customTargetValue} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:45.373" endtime="20241123 23:54:45.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.377" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241123 23:54:45.375" endtime="20241123 23:54:45.377"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:45.377" endtime="20241123 23:54:45.379"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:45.388" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:47::flowActionSequenceId:47'.</msg>
<status status="FAIL" starttime="20241123 23:54:45.387" endtime="20241123 23:54:45.388"/>
</kw>
<msg timestamp="20241123 23:54:45.389" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:45.386" endtime="20241123 23:54:45.389"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.390" endtime="20241123 23:54:45.390"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.390" endtime="20241123 23:54:45.391"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.390" endtime="20241123 23:54:45.391"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.391" endtime="20241123 23:54:45.391"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.391" endtime="20241123 23:54:45.391"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.390" endtime="20241123 23:54:45.391"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:45.389" endtime="20241123 23:54:45.391"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.389" endtime="20241123 23:54:45.392"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:45.392" endtime="20241123 23:54:45.392"/>
</return>
<msg timestamp="20241123 23:54:45.392" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:45.385" endtime="20241123 23:54:45.392"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:45.396" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241123 23:54:45.395" endtime="20241123 23:54:45.396"/>
</kw>
<msg timestamp="20241123 23:54:45.397" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:45.395" endtime="20241123 23:54:45.397"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.397" endtime="20241123 23:54:45.397"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.398" endtime="20241123 23:54:45.398"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.398" endtime="20241123 23:54:45.398"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.398" endtime="20241123 23:54:45.398"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.398" endtime="20241123 23:54:45.398"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.397" endtime="20241123 23:54:45.399"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:45.397" endtime="20241123 23:54:45.399"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.397" endtime="20241123 23:54:45.399"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:45.399" endtime="20241123 23:54:45.399"/>
</return>
<msg timestamp="20241123 23:54:45.399" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:45.394" endtime="20241123 23:54:45.399"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:45.400" endtime="20241123 23:54:45.400"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:45.401" endtime="20241123 23:54:45.401"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:45.401" endtime="20241123 23:54:45.402"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.403" endtime="20241123 23:54:45.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.403" endtime="20241123 23:54:45.404"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.402" endtime="20241123 23:54:45.404"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.402" endtime="20241123 23:54:45.404"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.405" endtime="20241123 23:54:45.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.405" endtime="20241123 23:54:45.405"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.404" endtime="20241123 23:54:45.405"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.404" endtime="20241123 23:54:45.406"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:45.402" endtime="20241123 23:54:45.406"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.402" endtime="20241123 23:54:45.406"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.407" endtime="20241123 23:54:45.407"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.406" endtime="20241123 23:54:45.407"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.406" endtime="20241123 23:54:45.407"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.407" endtime="20241123 23:54:45.407"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.408" endtime="20241123 23:54:45.408"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.407" endtime="20241123 23:54:45.408"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.407" endtime="20241123 23:54:45.408"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:45.406" endtime="20241123 23:54:45.408"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.406" endtime="20241123 23:54:45.408"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.361" endtime="20241123 23:54:45.408"/>
</iter>
<status status="PASS" starttime="20241123 23:54:45.360" endtime="20241123 23:54:45.408"/>
</for>
<status status="PASS" starttime="20241123 23:54:45.355" endtime="20241123 23:54:45.409"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:45.412" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '103', 'status': 'COMPLETED', 'actionName': 'Set login password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'er...</msg>
<status status="PASS" starttime="20241123 23:54:45.411" endtime="20241123 23:54:45.412"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:45.413" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "103", "status": "COMPLETED", "actionName": "Set login password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "...</msg>
<status status="PASS" starttime="20241123 23:54:45.413" endtime="20241123 23:54:45.413"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:45.433" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:45.433" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:45.413" endtime="20241123 23:54:45.433"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:45.433" endtime="20241123 23:54:45.434"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:45.434" endtime="20241123 23:54:45.434"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.412" endtime="20241123 23:54:45.434"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.409" endtime="20241123 23:54:45.435"/>
</kw>
<status status="PASS" starttime="20241123 23:54:44.054" endtime="20241123 23:54:45.435"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.435" endtime="20241123 23:54:45.435"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:45.435" endtime="20241123 23:54:45.436"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.436" endtime="20241123 23:54:45.436"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.435" endtime="20241123 23:54:45.436"/>
</branch>
<status status="PASS" starttime="20241123 23:54:44.054" endtime="20241123 23:54:45.436"/>
</try>
<status status="PASS" starttime="20241123 23:54:44.053" endtime="20241123 23:54:45.436"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.497Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.439" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-23T17:11:28.46...</msg>
<status status="PASS" starttime="20241123 23:54:45.438" endtime="20241123 23:54:45.439"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:45.440" endtime="20241123 23:54:45.440"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 23:54:45.441" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241123 23:54:45.440" endtime="20241123 23:54:45.441"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.442" endtime="20241123 23:54:45.442"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.442" endtime="20241123 23:54:45.442"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.442" endtime="20241123 23:54:45.442"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.442" endtime="20241123 23:54:45.442"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:45.442" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 23:54:45.442" endtime="20241123 23:54:45.442"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:45.443" endtime="20241123 23:54:45.443"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.443" endtime="20241123 23:54:45.443"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:45.444" endtime="20241123 23:54:45.444"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.444" endtime="20241123 23:54:45.444"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.445" endtime="20241123 23:54:45.446"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.444" endtime="20241123 23:54:45.446"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.447" endtime="20241123 23:54:45.447"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.450" endtime="20241123 23:54:45.450"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.446" endtime="20241123 23:54:45.450"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.451" endtime="20241123 23:54:45.451"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.450" endtime="20241123 23:54:45.451"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.453" endtime="20241123 23:54:45.453"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.451" endtime="20241123 23:54:45.453"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:45.467" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 23:54:45.460" endtime="20241123 23:54:45.467"/>
</kw>
<msg timestamp="20241123 23:54:45.467" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.460" endtime="20241123 23:54:45.467"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.467" endtime="20241123 23:54:45.467"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.460" endtime="20241123 23:54:45.468"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.468" endtime="20241123 23:54:45.468"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.468" endtime="20241123 23:54:45.468"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.468" endtime="20241123 23:54:45.468"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.460" endtime="20241123 23:54:45.468"/>
</try>
<msg timestamp="20241123 23:54:45.469" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.459" endtime="20241123 23:54:45.469"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.469" endtime="20241123 23:54:45.469"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.459" endtime="20241123 23:54:45.469"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:45.469" endtime="20241123 23:54:45.469"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:45.469" endtime="20241123 23:54:45.469"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.458" endtime="20241123 23:54:45.469"/>
</try>
<msg timestamp="20241123 23:54:45.469" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.458" endtime="20241123 23:54:45.469"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.472" endtime="20241123 23:54:45.472"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.472" endtime="20241123 23:54:45.472"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.471" endtime="20241123 23:54:45.472"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.471" endtime="20241123 23:54:45.472"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.470" endtime="20241123 23:54:45.473"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.458" endtime="20241123 23:54:45.473"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:45.485" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 23:54:45.480" endtime="20241123 23:54:45.485"/>
</kw>
<msg timestamp="20241123 23:54:45.486" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.480" endtime="20241123 23:54:45.486"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.486" endtime="20241123 23:54:45.486"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.479" endtime="20241123 23:54:45.486"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.486" endtime="20241123 23:54:45.486"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.487" endtime="20241123 23:54:45.487"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.486" endtime="20241123 23:54:45.487"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.479" endtime="20241123 23:54:45.487"/>
</try>
<msg timestamp="20241123 23:54:45.487" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.479" endtime="20241123 23:54:45.487"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.488" endtime="20241123 23:54:45.488"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.478" endtime="20241123 23:54:45.488"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:45.488" endtime="20241123 23:54:45.488"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:45.488" endtime="20241123 23:54:45.488"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.478" endtime="20241123 23:54:45.488"/>
</try>
<msg timestamp="20241123 23:54:45.489" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.478" endtime="20241123 23:54:45.489"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.491" endtime="20241123 23:54:45.491"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.491" endtime="20241123 23:54:45.491"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.491" endtime="20241123 23:54:45.491"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.491" endtime="20241123 23:54:45.491"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.490" endtime="20241123 23:54:45.491"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.477" endtime="20241123 23:54:45.491"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 23:54:45.500" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241123 23:54:45.500" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241123 23:54:45.492" endtime="20241123 23:54:45.501"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 23:54:45.501" endtime="20241123 23:54:45.501"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.492" endtime="20241123 23:54:45.501"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.501" endtime="20241123 23:54:45.501"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.501" endtime="20241123 23:54:45.501"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.501" endtime="20241123 23:54:45.501"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.491" endtime="20241123 23:54:45.502"/>
</try>
<msg timestamp="20241123 23:54:45.502" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241123 23:54:45.476" endtime="20241123 23:54:45.502"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.504" endtime="20241123 23:54:45.504"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.504" endtime="20241123 23:54:45.505"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.504" endtime="20241123 23:54:45.505"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.504" endtime="20241123 23:54:45.505"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.503" endtime="20241123 23:54:45.505"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.475" endtime="20241123 23:54:45.505"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.505" endtime="20241123 23:54:45.505"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.505" endtime="20241123 23:54:45.505"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.475" endtime="20241123 23:54:45.506"/>
</try>
<status status="PASS" starttime="20241123 23:54:45.474" endtime="20241123 23:54:45.506"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:45.514" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241123 23:54:45.509" endtime="20241123 23:54:45.514"/>
</kw>
<msg timestamp="20241123 23:54:45.514" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.509" endtime="20241123 23:54:45.514"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.515" endtime="20241123 23:54:45.515"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.509" endtime="20241123 23:54:45.515"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.515" endtime="20241123 23:54:45.515"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.515" endtime="20241123 23:54:45.515"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.515" endtime="20241123 23:54:45.515"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.509" endtime="20241123 23:54:45.515"/>
</try>
<msg timestamp="20241123 23:54:45.516" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.509" endtime="20241123 23:54:45.516"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.516" endtime="20241123 23:54:45.516"/>
</return>
<msg timestamp="20241123 23:54:45.516" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.508" endtime="20241123 23:54:45.516"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.518" endtime="20241123 23:54:45.518"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.518" endtime="20241123 23:54:45.518"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.518" endtime="20241123 23:54:45.518"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.518" endtime="20241123 23:54:45.518"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.517" endtime="20241123 23:54:45.518"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.507" endtime="20241123 23:54:45.519"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.456" endtime="20241123 23:54:45.519"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:45.534" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241123 23:54:45.523" endtime="20241123 23:54:45.534"/>
</kw>
<msg timestamp="20241123 23:54:45.535" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.522" endtime="20241123 23:54:45.535"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.535" endtime="20241123 23:54:45.535"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.522" endtime="20241123 23:54:45.535"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.535" endtime="20241123 23:54:45.535"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.535" endtime="20241123 23:54:45.535"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.535" endtime="20241123 23:54:45.536"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.522" endtime="20241123 23:54:45.536"/>
</try>
<msg timestamp="20241123 23:54:45.536" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.522" endtime="20241123 23:54:45.536"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.536" endtime="20241123 23:54:45.536"/>
</return>
<msg timestamp="20241123 23:54:45.536" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.521" endtime="20241123 23:54:45.536"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.538" endtime="20241123 23:54:45.538"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.538" endtime="20241123 23:54:45.538"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.538" endtime="20241123 23:54:45.539"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.538" endtime="20241123 23:54:45.539"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.537" endtime="20241123 23:54:45.539"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.520" endtime="20241123 23:54:45.539"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:45.539" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 23:54:45.539" endtime="20241123 23:54:45.539"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.541" endtime="20241123 23:54:45.541"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.542" endtime="20241123 23:54:45.542"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.540" endtime="20241123 23:54:45.542"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:45.543" endtime="20241123 23:54:45.543"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.542" endtime="20241123 23:54:45.543"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.540" endtime="20241123 23:54:45.543"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241123 23:54:45.544" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241123 23:54:45.543" endtime="20241123 23:54:45.561"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.543" endtime="20241123 23:54:45.561"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.561" endtime="20241123 23:54:45.561"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.562" endtime="20241123 23:54:45.562"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.561" endtime="20241123 23:54:45.562"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.543" endtime="20241123 23:54:45.562"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:45.571" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 23:54:45.567" endtime="20241123 23:54:45.572"/>
</kw>
<msg timestamp="20241123 23:54:45.572" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.567" endtime="20241123 23:54:45.572"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.572" endtime="20241123 23:54:45.572"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.567" endtime="20241123 23:54:45.572"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.572" endtime="20241123 23:54:45.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.573" endtime="20241123 23:54:45.573"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.572" endtime="20241123 23:54:45.573"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.567" endtime="20241123 23:54:45.573"/>
</try>
<msg timestamp="20241123 23:54:45.573" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.566" endtime="20241123 23:54:45.573"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.573" endtime="20241123 23:54:45.573"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.565" endtime="20241123 23:54:45.573"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:45.573" endtime="20241123 23:54:45.573"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:45.573" endtime="20241123 23:54:45.573"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.565" endtime="20241123 23:54:45.574"/>
</try>
<msg timestamp="20241123 23:54:45.574" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.565" endtime="20241123 23:54:45.574"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.576" endtime="20241123 23:54:45.576"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.576" endtime="20241123 23:54:45.576"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.576" endtime="20241123 23:54:45.576"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.575" endtime="20241123 23:54:45.576"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.575" endtime="20241123 23:54:45.576"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.565" endtime="20241123 23:54:45.576"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:45.590" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 23:54:45.583" endtime="20241123 23:54:45.591"/>
</kw>
<msg timestamp="20241123 23:54:45.591" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.583" endtime="20241123 23:54:45.591"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.591" endtime="20241123 23:54:45.591"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.583" endtime="20241123 23:54:45.591"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.591" endtime="20241123 23:54:45.591"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.591" endtime="20241123 23:54:45.591"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.591" endtime="20241123 23:54:45.591"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.583" endtime="20241123 23:54:45.591"/>
</try>
<msg timestamp="20241123 23:54:45.593" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.582" endtime="20241123 23:54:45.593"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.593" endtime="20241123 23:54:45.593"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.581" endtime="20241123 23:54:45.593"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:45.593" endtime="20241123 23:54:45.593"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:45.593" endtime="20241123 23:54:45.593"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.581" endtime="20241123 23:54:45.593"/>
</try>
<msg timestamp="20241123 23:54:45.593" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.581" endtime="20241123 23:54:45.593"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.595" endtime="20241123 23:54:45.595"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.596" endtime="20241123 23:54:45.596"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.595" endtime="20241123 23:54:45.596"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.595" endtime="20241123 23:54:45.596"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.594" endtime="20241123 23:54:45.596"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.581" endtime="20241123 23:54:45.596"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 23:54:45.605" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241123 23:54:45.605" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241123 23:54:45.596" endtime="20241123 23:54:45.605"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 23:54:45.605" endtime="20241123 23:54:45.605"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.596" endtime="20241123 23:54:45.605"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.605" endtime="20241123 23:54:45.605"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.606" endtime="20241123 23:54:45.606"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.605" endtime="20241123 23:54:45.606"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.596" endtime="20241123 23:54:45.606"/>
</try>
<msg timestamp="20241123 23:54:45.606" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241123 23:54:45.579" endtime="20241123 23:54:45.606"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.608" endtime="20241123 23:54:45.608"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.608" endtime="20241123 23:54:45.608"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.608" endtime="20241123 23:54:45.608"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.608" endtime="20241123 23:54:45.608"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.607" endtime="20241123 23:54:45.609"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.578" endtime="20241123 23:54:45.609"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.609" endtime="20241123 23:54:45.609"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.609" endtime="20241123 23:54:45.609"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.578" endtime="20241123 23:54:45.609"/>
</try>
<status status="PASS" starttime="20241123 23:54:45.578" endtime="20241123 23:54:45.609"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:45.617" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241123 23:54:45.613" endtime="20241123 23:54:45.618"/>
</kw>
<msg timestamp="20241123 23:54:45.618" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.613" endtime="20241123 23:54:45.618"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.618" endtime="20241123 23:54:45.618"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.612" endtime="20241123 23:54:45.618"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.618" endtime="20241123 23:54:45.618"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.618" endtime="20241123 23:54:45.619"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.618" endtime="20241123 23:54:45.619"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.612" endtime="20241123 23:54:45.619"/>
</try>
<msg timestamp="20241123 23:54:45.619" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.612" endtime="20241123 23:54:45.619"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.619" endtime="20241123 23:54:45.619"/>
</return>
<msg timestamp="20241123 23:54:45.619" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.611" endtime="20241123 23:54:45.619"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.621" endtime="20241123 23:54:45.621"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.621" endtime="20241123 23:54:45.622"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.621" endtime="20241123 23:54:45.622"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.621" endtime="20241123 23:54:45.622"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.620" endtime="20241123 23:54:45.622"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.611" endtime="20241123 23:54:45.622"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.563" endtime="20241123 23:54:45.622"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:45.632" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241123 23:54:45.627" endtime="20241123 23:54:45.632"/>
</kw>
<msg timestamp="20241123 23:54:45.632" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.627" endtime="20241123 23:54:45.632"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.632" endtime="20241123 23:54:45.632"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.627" endtime="20241123 23:54:45.632"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.632" endtime="20241123 23:54:45.633"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.633" endtime="20241123 23:54:45.633"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.632" endtime="20241123 23:54:45.633"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.626" endtime="20241123 23:54:45.633"/>
</try>
<msg timestamp="20241123 23:54:45.633" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.626" endtime="20241123 23:54:45.633"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.633" endtime="20241123 23:54:45.633"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.625" endtime="20241123 23:54:45.633"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:45.633" endtime="20241123 23:54:45.634"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:45.633" endtime="20241123 23:54:45.634"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.625" endtime="20241123 23:54:45.634"/>
</try>
<msg timestamp="20241123 23:54:45.634" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.625" endtime="20241123 23:54:45.634"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.636" endtime="20241123 23:54:45.636"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.636" endtime="20241123 23:54:45.636"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.636" endtime="20241123 23:54:45.636"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.636" endtime="20241123 23:54:45.636"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.635" endtime="20241123 23:54:45.636"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.625" endtime="20241123 23:54:45.637"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241123 23:54:45.645" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241123 23:54:45.645" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 23:54:45.637" endtime="20241123 23:54:45.645"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241123 23:54:45.645" endtime="20241123 23:54:45.645"/>
</return>
<status status="PASS" starttime="20241123 23:54:45.637" endtime="20241123 23:54:45.645"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.645" endtime="20241123 23:54:45.646"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.646" endtime="20241123 23:54:45.646"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.645" endtime="20241123 23:54:45.646"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.637" endtime="20241123 23:54:45.646"/>
</try>
<msg timestamp="20241123 23:54:45.646" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 23:54:45.623" endtime="20241123 23:54:45.646"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241123 23:54:45.646" endtime="20241123 23:54:45.646"/>
</return>
<msg timestamp="20241123 23:54:45.646" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 23:54:45.563" endtime="20241123 23:54:45.646"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241123 23:54:45.652" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.648" endtime="20241123 23:54:45.653"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:45.653" endtime="20241123 23:54:45.653"/>
</return>
<msg timestamp="20241123 23:54:45.653" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241123 23:54:45.648" endtime="20241123 23:54:45.653"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</if>
<status status="PASS" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.562" endtime="20241123 23:54:45.654"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.540" endtime="20241123 23:54:45.654"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.540" endtime="20241123 23:54:45.654"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.539" endtime="20241123 23:54:45.654"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.539" endtime="20241123 23:54:45.654"/>
</try>
<status status="PASS" starttime="20241123 23:54:45.455" endtime="20241123 23:54:45.654"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.453" endtime="20241123 23:54:45.654"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.654"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.670"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.670"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:45.654" endtime="20241123 23:54:45.670"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.670"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 23:54:45.687" endtime="20241123 23:54:45.687"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:45.687" endtime="20241123 23:54:45.687"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:45.670" endtime="20241123 23:54:45.687"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.443" endtime="20241123 23:54:45.687"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:45.687" endtime="20241123 23:54:45.687"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 23:54:46.701" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241123 23:54:45.687" endtime="20241123 23:54:46.701"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241123 23:54:46.702" endtime="20241123 23:54:46.702"/>
</return>
<msg timestamp="20241123 23:54:46.702" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241123 23:54:45.442" endtime="20241123 23:54:46.702"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.704" level="INFO">${key} = testCaseFlowSequenceId:46::flowActionSequenceId:42</msg>
<status status="PASS" starttime="20241123 23:54:46.703" endtime="20241123 23:54:46.704"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'VISIBLE', 'useCustomTargetValue...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.704" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241123 23:54:46.704" endtime="20241123 23:54:46.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.705" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241123 23:54:46.704" endtime="20241123 23:54:46.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.705" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241123 23:54:46.705" endtime="20241123 23:54:46.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.705" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241123 23:54:46.705" endtime="20241123 23:54:46.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.706" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.705" endtime="20241123 23:54:46.706"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.706" level="INFO">${customTargetValue} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:46.706" endtime="20241123 23:54:46.706"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.706" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241123 23:54:46.706" endtime="20241123 23:54:46.706"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:46.707" endtime="20241123 23:54:46.707"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:46.709" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:47::flowActionSequenceId:47'.</msg>
<status status="FAIL" starttime="20241123 23:54:46.709" endtime="20241123 23:54:46.709"/>
</kw>
<msg timestamp="20241123 23:54:46.709" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:46.708" endtime="20241123 23:54:46.709"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.710" endtime="20241123 23:54:46.710"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.710" endtime="20241123 23:54:46.710"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.710" endtime="20241123 23:54:46.710"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.710" endtime="20241123 23:54:46.710"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.710" endtime="20241123 23:54:46.710"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.710" endtime="20241123 23:54:46.710"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:46.710" endtime="20241123 23:54:46.710"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.709" endtime="20241123 23:54:46.711"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:46.711" endtime="20241123 23:54:46.711"/>
</return>
<msg timestamp="20241123 23:54:46.711" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:46.708" endtime="20241123 23:54:46.711"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:46.713" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241123 23:54:46.713" endtime="20241123 23:54:46.713"/>
</kw>
<msg timestamp="20241123 23:54:46.713" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:46.712" endtime="20241123 23:54:46.713"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.714" endtime="20241123 23:54:46.714"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.714" endtime="20241123 23:54:46.714"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.714" endtime="20241123 23:54:46.714"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.714" endtime="20241123 23:54:46.714"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.714" endtime="20241123 23:54:46.714"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.714" endtime="20241123 23:54:46.714"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:46.713" endtime="20241123 23:54:46.714"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.713" endtime="20241123 23:54:46.715"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:46.715" endtime="20241123 23:54:46.715"/>
</return>
<msg timestamp="20241123 23:54:46.715" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:46.712" endtime="20241123 23:54:46.715"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:46.715" endtime="20241123 23:54:46.716"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:46.716" endtime="20241123 23:54:46.716"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:46.716" endtime="20241123 23:54:46.717"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.718" endtime="20241123 23:54:46.718"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.718" endtime="20241123 23:54:46.718"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.717" endtime="20241123 23:54:46.718"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.717" endtime="20241123 23:54:46.718"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.719" endtime="20241123 23:54:46.719"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.719" endtime="20241123 23:54:46.719"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.718" endtime="20241123 23:54:46.719"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.718" endtime="20241123 23:54:46.719"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:46.717" endtime="20241123 23:54:46.719"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.717" endtime="20241123 23:54:46.719"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.720" endtime="20241123 23:54:46.720"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.720" endtime="20241123 23:54:46.720"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.720" endtime="20241123 23:54:46.720"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.720" endtime="20241123 23:54:46.720"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.720" endtime="20241123 23:54:46.721"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.720" endtime="20241123 23:54:46.721"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.720" endtime="20241123 23:54:46.721"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:46.719" endtime="20241123 23:54:46.721"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.719" endtime="20241123 23:54:46.721"/>
</if>
<status status="PASS" starttime="20241123 23:54:46.704" endtime="20241123 23:54:46.721"/>
</iter>
<status status="PASS" starttime="20241123 23:54:46.704" endtime="20241123 23:54:46.721"/>
</for>
<status status="PASS" starttime="20241123 23:54:46.702" endtime="20241123 23:54:46.721"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:46.724" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '104', 'status': 'COMPLETED', 'actionName': 'Set login username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorM...</msg>
<status status="PASS" starttime="20241123 23:54:46.723" endtime="20241123 23:54:46.724"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:46.725" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "104", "status": "COMPLETED", "actionName": "Set login username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorM...</msg>
<status status="PASS" starttime="20241123 23:54:46.725" endtime="20241123 23:54:46.725"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:46.728" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:46.728" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:46.725" endtime="20241123 23:54:46.728"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</return>
<status status="PASS" starttime="20241123 23:54:46.724" endtime="20241123 23:54:46.728"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.721" endtime="20241123 23:54:46.728"/>
</kw>
<status status="PASS" starttime="20241123 23:54:45.438" endtime="20241123 23:54:46.728"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</branch>
<status status="PASS" starttime="20241123 23:54:45.438" endtime="20241123 23:54:46.728"/>
</try>
<status status="PASS" starttime="20241123 23:54:45.437" endtime="20241123 23:54:46.728"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-22T04:20:41.481Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.728" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 23:54:46.728" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:46.728"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:46.736" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 23:54:46.736" endtime="20241123 23:54:46.736"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:46.736" endtime="20241123 23:54:46.736"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.736" endtime="20241123 23:54:46.736"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:46.737" endtime="20241123 23:54:46.737"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.737" endtime="20241123 23:54:46.737"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:46.744" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</kw>
<msg timestamp="20241123 23:54:46.744" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</return>
<status status="PASS" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</try>
<msg timestamp="20241123 23:54:46.744" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</return>
<status status="PASS" starttime="20241123 23:54:46.743" endtime="20241123 23:54:46.744"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:46.744" endtime="20241123 23:54:46.744"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.743" endtime="20241123 23:54:46.744"/>
</try>
<msg timestamp="20241123 23:54:46.752" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.743" endtime="20241123 23:54:46.752"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.755" endtime="20241123 23:54:46.755"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.755" endtime="20241123 23:54:46.755"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.754" endtime="20241123 23:54:46.755"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.754" endtime="20241123 23:54:46.755"/>
</if>
<status status="PASS" starttime="20241123 23:54:46.753" endtime="20241123 23:54:46.755"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.743" endtime="20241123 23:54:46.756"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:46.759" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</kw>
<msg timestamp="20241123 23:54:46.759" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</return>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</try>
<msg timestamp="20241123 23:54:46.759" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</return>
<msg timestamp="20241123 23:54:46.759" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.758" endtime="20241123 23:54:46.759"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</if>
<status status="PASS" starttime="20241123 23:54:46.759" endtime="20241123 23:54:46.759"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.757" endtime="20241123 23:54:46.759"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:46.787" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241123 23:54:46.773" endtime="20241123 23:54:46.787"/>
</kw>
<msg timestamp="20241123 23:54:46.787" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.773" endtime="20241123 23:54:46.787"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</return>
<status status="PASS" starttime="20241123 23:54:46.773" endtime="20241123 23:54:46.787"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.773" endtime="20241123 23:54:46.787"/>
</try>
<msg timestamp="20241123 23:54:46.787" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.772" endtime="20241123 23:54:46.787"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</return>
<msg timestamp="20241123 23:54:46.787" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241123 23:54:46.771" endtime="20241123 23:54:46.787"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</if>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.771" endtime="20241123 23:54:46.787"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.741" endtime="20241123 23:54:46.787"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:46.787" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.787"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.855"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.855"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.855"/>
</try>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.855"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.855"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.855"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.787" endtime="20241123 23:54:46.855"/>
</try>
<status status="PASS" starttime="20241123 23:54:46.740" endtime="20241123 23:54:46.855"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.737" endtime="20241123 23:54:46.855"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.855"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.870" endtime="20241123 23:54:46.870"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.870" endtime="20241123 23:54:46.870"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.870" endtime="20241123 23:54:46.870"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.870" endtime="20241123 23:54:46.870"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.870"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:46.855" endtime="20241123 23:54:46.870"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:46.874" endtime="20241123 23:54:46.874"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.876" endtime="20241123 23:54:46.876"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.870" endtime="20241123 23:54:46.876"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.877" endtime="20241123 23:54:46.878"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.878" endtime="20241123 23:54:46.878"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.878" endtime="20241123 23:54:46.878"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.878" endtime="20241123 23:54:46.878"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.878" endtime="20241123 23:54:46.878"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.878" endtime="20241123 23:54:46.878"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:46.877" endtime="20241123 23:54:46.878"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:46.883" endtime="20241123 23:54:46.883"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.886" endtime="20241123 23:54:46.886"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.878" endtime="20241123 23:54:46.886"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.887" endtime="20241123 23:54:46.887"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.887" endtime="20241123 23:54:46.888"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.887" endtime="20241123 23:54:46.888"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.888" endtime="20241123 23:54:46.888"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.888" endtime="20241123 23:54:46.888"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:46.887" endtime="20241123 23:54:46.888"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:46.886" endtime="20241123 23:54:46.888"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.890" endtime="20241123 23:54:46.890"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.888" endtime="20241123 23:54:46.890"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 23:54:46.895" endtime="20241123 23:54:46.896"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:46.896" endtime="20241123 23:54:46.896"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:46.890" endtime="20241123 23:54:46.896"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.736" endtime="20241123 23:54:46.896"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:46.896" endtime="20241123 23:54:46.897"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 23:54:51.897" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241123 23:54:46.897" endtime="20241123 23:54:51.898"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241123 23:54:51.898" endtime="20241123 23:54:51.898"/>
</return>
<msg timestamp="20241123 23:54:51.898" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:51.898"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.899" level="INFO">${key} = testCaseFlowSequenceId:46::flowActionSequenceId:44</msg>
<status status="PASS" starttime="20241123 23:54:51.899" endtime="20241123 23:54:51.899"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'VISIBLE', 'useCustomTargetValue...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.900" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241123 23:54:51.899" endtime="20241123 23:54:51.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.900" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241123 23:54:51.900" endtime="20241123 23:54:51.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.900" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241123 23:54:51.900" endtime="20241123 23:54:51.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.901" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241123 23:54:51.901" endtime="20241123 23:54:51.901"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.901" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.901" endtime="20241123 23:54:51.901"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.901" level="INFO">${customTargetValue} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:51.901" endtime="20241123 23:54:51.901"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.902" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241123 23:54:51.902" endtime="20241123 23:54:51.902"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:51.902" endtime="20241123 23:54:51.902"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:51.905" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:47::flowActionSequenceId:47'.</msg>
<status status="FAIL" starttime="20241123 23:54:51.904" endtime="20241123 23:54:51.905"/>
</kw>
<msg timestamp="20241123 23:54:51.905" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:51.904" endtime="20241123 23:54:51.905"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.905" endtime="20241123 23:54:51.905"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.905" endtime="20241123 23:54:51.906"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.905" endtime="20241123 23:54:51.906"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.906" endtime="20241123 23:54:51.906"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.906" endtime="20241123 23:54:51.906"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:51.905" endtime="20241123 23:54:51.906"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:51.905" endtime="20241123 23:54:51.906"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.905" endtime="20241123 23:54:51.906"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:51.906" endtime="20241123 23:54:51.906"/>
</return>
<msg timestamp="20241123 23:54:51.907" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:51.903" endtime="20241123 23:54:51.907"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:51.909" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241123 23:54:51.908" endtime="20241123 23:54:51.909"/>
</kw>
<msg timestamp="20241123 23:54:51.909" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:51.908" endtime="20241123 23:54:51.909"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.910" endtime="20241123 23:54:51.910"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.910" endtime="20241123 23:54:51.910"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.910" endtime="20241123 23:54:51.910"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.910" endtime="20241123 23:54:51.910"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.910" endtime="20241123 23:54:51.910"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:51.910" endtime="20241123 23:54:51.911"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:51.909" endtime="20241123 23:54:51.911"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.909" endtime="20241123 23:54:51.911"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:51.911" endtime="20241123 23:54:51.911"/>
</return>
<msg timestamp="20241123 23:54:51.911" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:51.908" endtime="20241123 23:54:51.911"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:51.911" endtime="20241123 23:54:51.912"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:51.912" endtime="20241123 23:54:51.912"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:51.912" endtime="20241123 23:54:51.913"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.913" endtime="20241123 23:54:51.913"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.914" endtime="20241123 23:54:51.914"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.913" endtime="20241123 23:54:51.914"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:51.913" endtime="20241123 23:54:51.914"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.914" endtime="20241123 23:54:51.914"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.915" endtime="20241123 23:54:51.915"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.914" endtime="20241123 23:54:51.915"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:51.914" endtime="20241123 23:54:51.915"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:51.913" endtime="20241123 23:54:51.915"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.913" endtime="20241123 23:54:51.915"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.916" endtime="20241123 23:54:51.916"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.915" endtime="20241123 23:54:51.916"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:51.915" endtime="20241123 23:54:51.916"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.916" endtime="20241123 23:54:51.917"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.917" endtime="20241123 23:54:51.917"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.916" endtime="20241123 23:54:51.917"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:51.916" endtime="20241123 23:54:51.917"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:51.915" endtime="20241123 23:54:51.917"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.915" endtime="20241123 23:54:51.917"/>
</if>
<status status="PASS" starttime="20241123 23:54:51.899" endtime="20241123 23:54:51.918"/>
</iter>
<status status="PASS" starttime="20241123 23:54:51.899" endtime="20241123 23:54:51.918"/>
</for>
<status status="PASS" starttime="20241123 23:54:51.898" endtime="20241123 23:54:51.918"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:51.921" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '105', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '',...</msg>
<status status="PASS" starttime="20241123 23:54:51.920" endtime="20241123 23:54:51.921"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:51.923" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "105", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue":...</msg>
<status status="PASS" starttime="20241123 23:54:51.922" endtime="20241123 23:54:51.923"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:51.927" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:51.927" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:51.923" endtime="20241123 23:54:51.927"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:51.927" endtime="20241123 23:54:51.928"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:51.928" endtime="20241123 23:54:51.929"/>
</return>
<status status="PASS" starttime="20241123 23:54:51.922" endtime="20241123 23:54:51.929"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.918" endtime="20241123 23:54:51.929"/>
</kw>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:51.929"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.931" endtime="20241123 23:54:51.931"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:51.932" endtime="20241123 23:54:51.933"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.934" endtime="20241123 23:54:51.934"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.930" endtime="20241123 23:54:51.934"/>
</branch>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:51.935"/>
</try>
<status status="PASS" starttime="20241123 23:54:46.728" endtime="20241123 23:54:51.935"/>
</iter>
<status status="PASS" starttime="20241123 23:54:37.170" endtime="20241123 23:54:51.935"/>
</for>
<status status="PASS" starttime="20241123 23:54:37.170" endtime="20241123 23:54:51.935"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.169" endtime="20241123 23:54:51.935"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:51.937" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '29', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 23:54:51.937" endtime="20241123 23:54:51.937"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:51.938" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "29", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 23:54:51.938" endtime="20241123 23:54:51.938"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:51.942" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:51.943" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:51.938" endtime="20241123 23:54:51.943"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:51.943" endtime="20241123 23:54:51.943"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:51.943" endtime="20241123 23:54:51.943"/>
</return>
<status status="PASS" starttime="20241123 23:54:51.937" endtime="20241123 23:54:51.943"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.935" endtime="20241123 23:54:51.943"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.131" endtime="20241123 23:54:51.943"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.943" endtime="20241123 23:54:51.943"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:51.943" endtime="20241123 23:54:51.943"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.943" endtime="20241123 23:54:51.943"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.943" endtime="20241123 23:54:51.943"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.131" endtime="20241123 23:54:51.943"/>
</try>
<status status="PASS" starttime="20241123 23:54:37.131" endtime="20241123 23:54:51.943"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-23T18:24:33.982Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.949" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241123 23:54:51.947" endtime="20241123 23:54:51.949"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:51.949" endtime="20241123 23:54:51.950"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:51.954" endtime="20241123 23:54:51.954"/>
</kw>
<msg timestamp="20241123 23:54:51.955" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.954" endtime="20241123 23:54:51.955"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.955" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241123 23:54:51.955" endtime="20241123 23:54:51.955"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.956" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</if>
<status status="PASS" starttime="20241123 23:54:51.955" endtime="20241123 23:54:51.956"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.955" endtime="20241123 23:54:51.956"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</return>
<msg timestamp="20241123 23:54:51.956" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.953" endtime="20241123 23:54:51.956"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.956" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 23:54:51.956" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:51.956"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.960" endtime="20241123 23:54:51.960"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.960" endtime="20241123 23:54:51.960"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.960" endtime="20241123 23:54:51.960"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.960" endtime="20241123 23:54:51.960"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:51.961" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 23:54:51.961" endtime="20241123 23:54:51.961"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:51.962" endtime="20241123 23:54:51.962"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.961" endtime="20241123 23:54:51.962"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:51.962" endtime="20241123 23:54:51.962"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.962" endtime="20241123 23:54:51.962"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:51.984" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.985"/>
</kw>
<msg timestamp="20241123 23:54:51.985" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.985"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:51.985" endtime="20241123 23:54:51.985"/>
</return>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.985"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.986" endtime="20241123 23:54:51.986"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.986" endtime="20241123 23:54:51.986"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.985" endtime="20241123 23:54:51.986"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.986"/>
</try>
<msg timestamp="20241123 23:54:51.987" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.987"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:51.987" endtime="20241123 23:54:51.987"/>
</return>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.987"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:51.987" endtime="20241123 23:54:51.987"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:51.987" endtime="20241123 23:54:51.987"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.987"/>
</try>
<msg timestamp="20241123 23:54:51.987" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.988"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.989" endtime="20241123 23:54:51.990"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:51.990" endtime="20241123 23:54:51.990"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:51.989" endtime="20241123 23:54:51.990"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.989" endtime="20241123 23:54:51.990"/>
</if>
<status status="PASS" starttime="20241123 23:54:51.988" endtime="20241123 23:54:51.990"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:51.990"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:52.002" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241123 23:54:51.994" endtime="20241123 23:54:52.002"/>
</kw>
<msg timestamp="20241123 23:54:52.002" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.994" endtime="20241123 23:54:52.002"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.002" endtime="20241123 23:54:52.002"/>
</return>
<status status="PASS" starttime="20241123 23:54:51.994" endtime="20241123 23:54:52.003"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.003" endtime="20241123 23:54:52.003"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.003" endtime="20241123 23:54:52.003"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.003" endtime="20241123 23:54:52.003"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.994" endtime="20241123 23:54:52.003"/>
</try>
<msg timestamp="20241123 23:54:52.004" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.993" endtime="20241123 23:54:52.004"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.004" endtime="20241123 23:54:52.004"/>
</return>
<msg timestamp="20241123 23:54:52.004" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 23:54:51.992" endtime="20241123 23:54:52.004"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.006" endtime="20241123 23:54:52.006"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.006" endtime="20241123 23:54:52.007"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.006" endtime="20241123 23:54:52.007"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.006" endtime="20241123 23:54:52.007"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.005" endtime="20241123 23:54:52.007"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.992" endtime="20241123 23:54:52.007"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:52.015" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241123 23:54:52.011" endtime="20241123 23:54:52.015"/>
</kw>
<msg timestamp="20241123 23:54:52.015" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.011" endtime="20241123 23:54:52.015"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.011" endtime="20241123 23:54:52.015"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.011" endtime="20241123 23:54:52.015"/>
</try>
<msg timestamp="20241123 23:54:52.015" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.010" endtime="20241123 23:54:52.015"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</return>
<msg timestamp="20241123 23:54:52.015" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.009" endtime="20241123 23:54:52.015"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.009" endtime="20241123 23:54:52.015"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:52.015"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:52.015" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.015"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.031" endtime="20241123 23:54:52.031"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.031" endtime="20241123 23:54:52.031"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:52.031" endtime="20241123 23:54:52.031"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.031" endtime="20241123 23:54:52.031"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.031"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241123 23:54:52.031" endtime="20241123 23:54:52.062"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.031" endtime="20241123 23:54:52.062"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.062" endtime="20241123 23:54:52.062"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.062" endtime="20241123 23:54:52.063"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.062" endtime="20241123 23:54:52.063"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.031" endtime="20241123 23:54:52.063"/>
</try>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.063"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.063"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.063"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.063" endtime="20241123 23:54:52.063"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.063" endtime="20241123 23:54:52.063"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.015" endtime="20241123 23:54:52.063"/>
</try>
<status status="PASS" starttime="20241123 23:54:51.965" endtime="20241123 23:54:52.064"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.962" endtime="20241123 23:54:52.064"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.065" endtime="20241123 23:54:52.066"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.067" endtime="20241123 23:54:52.067"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.064" endtime="20241123 23:54:52.067"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.069" endtime="20241123 23:54:52.069"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.067" endtime="20241123 23:54:52.069"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.072" endtime="20241123 23:54:52.072"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.069" endtime="20241123 23:54:52.072"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.074" endtime="20241123 23:54:52.074"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.072" endtime="20241123 23:54:52.074"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.075" endtime="20241123 23:54:52.075"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.074" endtime="20241123 23:54:52.075"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.076" endtime="20241123 23:54:52.076"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.077" endtime="20241123 23:54:52.077"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.077" endtime="20241123 23:54:52.077"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.077" endtime="20241123 23:54:52.077"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.077" endtime="20241123 23:54:52.077"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.077" endtime="20241123 23:54:52.077"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.075" endtime="20241123 23:54:52.077"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:52.083" endtime="20241123 23:54:52.084"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.078" endtime="20241123 23:54:52.085"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.085"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.097" endtime="20241123 23:54:52.097"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.085" endtime="20241123 23:54:52.097"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.099" endtime="20241123 23:54:52.099"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.099" endtime="20241123 23:54:52.099"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.099" endtime="20241123 23:54:52.099"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.100" endtime="20241123 23:54:52.100"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.100" endtime="20241123 23:54:52.100"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.099" endtime="20241123 23:54:52.100"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.097" endtime="20241123 23:54:52.100"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.102" endtime="20241123 23:54:52.102"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.100" endtime="20241123 23:54:52.102"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.108" endtime="20241123 23:54:52.108"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.108" endtime="20241123 23:54:52.108"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.102" endtime="20241123 23:54:52.108"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.961" endtime="20241123 23:54:52.108"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.108" endtime="20241123 23:54:52.109"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 23:54:52.109" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241123 23:54:52.109" endtime="20241123 23:54:52.109"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241123 23:54:52.109" endtime="20241123 23:54:52.109"/>
</return>
<msg timestamp="20241123 23:54:52.110" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 23:54:51.960" endtime="20241123 23:54:52.110"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.111" level="INFO">${key} = testCaseFlowSequenceId:47::flowActionSequenceId:45</msg>
<status status="PASS" starttime="20241123 23:54:52.110" endtime="20241123 23:54:52.111"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'VISIBLE', 'useCustomTargetValue...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.111" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241123 23:54:52.111" endtime="20241123 23:54:52.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.112" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241123 23:54:52.112" endtime="20241123 23:54:52.112"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.112" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.112" endtime="20241123 23:54:52.112"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.113" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241123 23:54:52.112" endtime="20241123 23:54:52.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.113" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.113" endtime="20241123 23:54:52.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.114" level="INFO">${customTargetValue} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:52.113" endtime="20241123 23:54:52.114"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.114" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241123 23:54:52.114" endtime="20241123 23:54:52.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:52.114" endtime="20241123 23:54:52.114"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:52.117" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:47::flowActionSequenceId:47'.</msg>
<status status="FAIL" starttime="20241123 23:54:52.116" endtime="20241123 23:54:52.117"/>
</kw>
<msg timestamp="20241123 23:54:52.117" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.116" endtime="20241123 23:54:52.117"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.117" endtime="20241123 23:54:52.117"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.118" endtime="20241123 23:54:52.118"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.117" endtime="20241123 23:54:52.118"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.118" endtime="20241123 23:54:52.118"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.118" endtime="20241123 23:54:52.118"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.117" endtime="20241123 23:54:52.118"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.117" endtime="20241123 23:54:52.118"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.117" endtime="20241123 23:54:52.119"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:52.119" endtime="20241123 23:54:52.119"/>
</return>
<msg timestamp="20241123 23:54:52.119" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.115" endtime="20241123 23:54:52.119"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:52.121" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241123 23:54:52.120" endtime="20241123 23:54:52.121"/>
</kw>
<msg timestamp="20241123 23:54:52.121" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.120" endtime="20241123 23:54:52.121"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.122" endtime="20241123 23:54:52.122"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.122" endtime="20241123 23:54:52.122"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.122" endtime="20241123 23:54:52.122"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.122" endtime="20241123 23:54:52.122"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.122" endtime="20241123 23:54:52.122"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.122" endtime="20241123 23:54:52.122"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.121" endtime="20241123 23:54:52.122"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.121" endtime="20241123 23:54:52.123"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:52.123" endtime="20241123 23:54:52.123"/>
</return>
<msg timestamp="20241123 23:54:52.123" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.120" endtime="20241123 23:54:52.123"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.123" endtime="20241123 23:54:52.124"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.124" endtime="20241123 23:54:52.125"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.125" endtime="20241123 23:54:52.126"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.126" endtime="20241123 23:54:52.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.126" endtime="20241123 23:54:52.126"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.126" endtime="20241123 23:54:52.127"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.126" endtime="20241123 23:54:52.127"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.127" endtime="20241123 23:54:52.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.127" endtime="20241123 23:54:52.127"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.127" endtime="20241123 23:54:52.127"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.127" endtime="20241123 23:54:52.127"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.126" endtime="20241123 23:54:52.127"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.126" endtime="20241123 23:54:52.127"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.128" endtime="20241123 23:54:52.128"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.128" endtime="20241123 23:54:52.128"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.128" endtime="20241123 23:54:52.128"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.128" endtime="20241123 23:54:52.128"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.129" endtime="20241123 23:54:52.129"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.128" endtime="20241123 23:54:52.129"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.128" endtime="20241123 23:54:52.129"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.128" endtime="20241123 23:54:52.129"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.127" endtime="20241123 23:54:52.129"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.111" endtime="20241123 23:54:52.129"/>
</iter>
<status status="PASS" starttime="20241123 23:54:52.111" endtime="20241123 23:54:52.129"/>
</for>
<status status="PASS" starttime="20241123 23:54:52.110" endtime="20241123 23:54:52.129"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:52.131" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '99', 'status': 'COMPLETED', 'actionName': 'Click Profile image icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage': ...</msg>
<status status="PASS" starttime="20241123 23:54:52.130" endtime="20241123 23:54:52.131"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:52.132" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "99", "status": "COMPLETED", "actionName": "Click Profile image icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241123 23:54:52.132" endtime="20241123 23:54:52.132"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:52.149" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:52.149" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:52.133" endtime="20241123 23:54:52.149"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.131" endtime="20241123 23:54:52.149"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.129" endtime="20241123 23:54:52.149"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:52.149"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:52.149"/>
</try>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:52.149"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.149" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 23:54:52.149" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.149"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.157" endtime="20241123 23:54:52.157"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.157" endtime="20241123 23:54:52.157"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.157" endtime="20241123 23:54:52.157"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.157"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.158" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 23:54:52.158" endtime="20241123 23:54:52.158"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.158" endtime="20241123 23:54:52.158"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.158" endtime="20241123 23:54:52.158"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.160" endtime="20241123 23:54:52.160"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.160" endtime="20241123 23:54:52.160"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:52.173" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241123 23:54:52.168" endtime="20241123 23:54:52.173"/>
</kw>
<msg timestamp="20241123 23:54:52.173" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.168" endtime="20241123 23:54:52.173"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.168" endtime="20241123 23:54:52.173"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.167" endtime="20241123 23:54:52.173"/>
</try>
<msg timestamp="20241123 23:54:52.173" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.167" endtime="20241123 23:54:52.173"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.165" endtime="20241123 23:54:52.173"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.165" endtime="20241123 23:54:52.173"/>
</try>
<msg timestamp="20241123 23:54:52.173" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.164" endtime="20241123 23:54:52.173"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.173"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.164" endtime="20241123 23:54:52.173"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:52.187" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241123 23:54:52.182" endtime="20241123 23:54:52.187"/>
</kw>
<msg timestamp="20241123 23:54:52.187" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.182" endtime="20241123 23:54:52.188"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.188"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.188"/>
</try>
<msg timestamp="20241123 23:54:52.188" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.188"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</return>
<msg timestamp="20241123 23:54:52.188" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.188"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.188"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.173" endtime="20241123 23:54:52.188"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:52.199" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.199"/>
</kw>
<msg timestamp="20241123 23:54:52.199" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.199"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.199"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.199"/>
</try>
<msg timestamp="20241123 23:54:52.199" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.199"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</return>
<msg timestamp="20241123 23:54:52.199" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.199"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.188" endtime="20241123 23:54:52.199"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.162" endtime="20241123 23:54:52.199"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:52.199" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.199"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.215" endtime="20241123 23:54:52.215"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.214" endtime="20241123 23:54:52.215"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:52.215" endtime="20241123 23:54:52.215"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.215" endtime="20241123 23:54:52.216"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.214" endtime="20241123 23:54:52.216"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241123 23:54:52.216" endtime="20241123 23:54:52.315"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.216" endtime="20241123 23:54:52.315"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.315" endtime="20241123 23:54:52.315"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.315" endtime="20241123 23:54:52.315"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.315" endtime="20241123 23:54:52.315"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.216" endtime="20241123 23:54:52.315"/>
</try>
<status status="PASS" starttime="20241123 23:54:52.214" endtime="20241123 23:54:52.315"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.315"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.315"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.315" endtime="20241123 23:54:52.315"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.315" endtime="20241123 23:54:52.315"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.199" endtime="20241123 23:54:52.315"/>
</try>
<status status="PASS" starttime="20241123 23:54:52.162" endtime="20241123 23:54:52.315"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.160" endtime="20241123 23:54:52.315"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.315" endtime="20241123 23:54:52.315"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.315" endtime="20241123 23:54:52.331"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.331"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.331" endtime="20241123 23:54:52.348"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.348"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.364" endtime="20241123 23:54:52.364"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.348" endtime="20241123 23:54:52.364"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.158" endtime="20241123 23:54:52.365"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 23:54:52.365" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</return>
<msg timestamp="20241123 23:54:52.365" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 23:54:52.158" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.365" level="INFO">${key} = testCaseFlowSequenceId:47::flowActionSequenceId:46</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'VISIBLE', 'useCustomTargetValue...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.365" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.365" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.365" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.365" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.365" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.365" level="INFO">${customTargetValue} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.380" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.380"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:52.380" endtime="20241123 23:54:52.382"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:52.383" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:47::flowActionSequenceId:47'.</msg>
<status status="FAIL" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<msg timestamp="20241123 23:54:52.383" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</return>
<msg timestamp="20241123 23:54:52.383" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:52.383" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<msg timestamp="20241123 23:54:52.383" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</return>
<msg timestamp="20241123 23:54:52.383" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.383"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.397" endtime="20241123 23:54:52.397"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.397" endtime="20241123 23:54:52.397"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.397" endtime="20241123 23:54:52.397"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.398" endtime="20241123 23:54:52.398"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.399" endtime="20241123 23:54:52.399"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.398" endtime="20241123 23:54:52.399"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.397" endtime="20241123 23:54:52.399"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.397" endtime="20241123 23:54:52.399"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.383" endtime="20241123 23:54:52.399"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.399"/>
</iter>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.399"/>
</for>
<status status="PASS" starttime="20241123 23:54:52.365" endtime="20241123 23:54:52.400"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:52.403" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '100', 'status': 'COMPLETED', 'actionName': 'Click Profile Dropdown action', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMess...</msg>
<status status="PASS" starttime="20241123 23:54:52.402" endtime="20241123 23:54:52.403"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:52.404" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "100", "status": "COMPLETED", "actionName": "Click Profile Dropdown action", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMe...</msg>
<status status="PASS" starttime="20241123 23:54:52.403" endtime="20241123 23:54:52.404"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:52.405" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:52.405" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:52.404" endtime="20241123 23:54:52.405"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.405" endtime="20241123 23:54:52.405"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:52.405" endtime="20241123 23:54:52.409"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.403" endtime="20241123 23:54:52.409"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.400" endtime="20241123 23:54:52.409"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.409"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.409" endtime="20241123 23:54:52.409"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.410" endtime="20241123 23:54:52.410"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.410" endtime="20241123 23:54:52.410"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.409" endtime="20241123 23:54:52.410"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.410"/>
</try>
<status status="PASS" starttime="20241123 23:54:52.149" endtime="20241123 23:54:52.410"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.411" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241123 23:54:52.411" endtime="20241123 23:54:52.411"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.411" endtime="20241123 23:54:52.413"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241123 23:54:52.413" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241123 23:54:52.413" endtime="20241123 23:54:52.413"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.413" endtime="20241123 23:54:52.414"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.414" endtime="20241123 23:54:52.414"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.413" endtime="20241123 23:54:52.414"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.413" endtime="20241123 23:54:52.414"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.416" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241123 23:54:52.416" endtime="20241123 23:54:52.416"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.418" endtime="20241123 23:54:52.418"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.416" endtime="20241123 23:54:52.418"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.419" endtime="20241123 23:54:52.419"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.419" endtime="20241123 23:54:52.419"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.421" endtime="20241123 23:54:52.421"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.419" endtime="20241123 23:54:52.421"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.422" endtime="20241123 23:54:52.423"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.424" endtime="20241123 23:54:52.424"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.421" endtime="20241123 23:54:52.424"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.424" endtime="20241123 23:54:52.424"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.424" endtime="20241123 23:54:52.424"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.435" endtime="20241123 23:54:52.435"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.424" endtime="20241123 23:54:52.435"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.440" endtime="20241123 23:54:52.440"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.436" endtime="20241123 23:54:52.440"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.440" endtime="20241123 23:54:52.440"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.440" endtime="20241123 23:54:52.440"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.451" endtime="20241123 23:54:52.451"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.452" endtime="20241123 23:54:52.452"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.452" endtime="20241123 23:54:52.452"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.453" endtime="20241123 23:54:52.453"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.453" endtime="20241123 23:54:52.453"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.452" endtime="20241123 23:54:52.453"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.440" endtime="20241123 23:54:52.453"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:52.458" endtime="20241123 23:54:52.458"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.458" endtime="20241123 23:54:52.458"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.453" endtime="20241123 23:54:52.458"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.458" endtime="20241123 23:54:52.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241123 23:54:52.777" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.777"/>
</kw>
<msg timestamp="20241123 23:54:52.777" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.777"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.778" endtime="20241123 23:54:52.778"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.778"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.778" endtime="20241123 23:54:52.779"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.779" endtime="20241123 23:54:52.779"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.778" endtime="20241123 23:54:52.779"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.780"/>
</try>
<msg timestamp="20241123 23:54:52.780" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.780"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.780"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</return>
<status status="NOT RUN" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.780"/>
</try>
<msg timestamp="20241123 23:54:52.780" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.780"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.780" level="INFO">${value} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.466" endtime="20241123 23:54:52.780"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.780"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.780" endtime="20241123 23:54:52.796"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.416" endtime="20241123 23:54:52.796"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241123 23:54:52.796" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</return>
<msg timestamp="20241123 23:54:52.796" level="INFO">${value} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:52.415" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.796" level="INFO">${key} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'VISIBLE', 'useCustomTargetValue...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.796" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.796" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.796" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.796" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.796" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.796" level="INFO">${customTargetValue} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.812" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.812"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:52.812" endtime="20241123 23:54:52.813"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241123 23:54:52.816" endtime="20241123 23:54:52.817"/>
</kw>
<msg timestamp="20241123 23:54:52.817" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.816" endtime="20241123 23:54:52.817"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.818" level="INFO">${values} = VISIBLE</msg>
<status status="PASS" starttime="20241123 23:54:52.818" endtime="20241123 23:54:52.818"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241123 23:54:52.819" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.819" endtime="20241123 23:54:52.819"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.819" endtime="20241123 23:54:52.820"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.820" endtime="20241123 23:54:52.820"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.820" endtime="20241123 23:54:52.820"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.819" endtime="20241123 23:54:52.820"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.818" endtime="20241123 23:54:52.820"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.817" endtime="20241123 23:54:52.821"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:52.821" endtime="20241123 23:54:52.821"/>
</return>
<msg timestamp="20241123 23:54:52.821" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241123 23:54:52.815" endtime="20241123 23:54:52.821"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241123 23:54:52.825" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241123 23:54:52.824" endtime="20241123 23:54:52.825"/>
</kw>
<msg timestamp="20241123 23:54:52.825" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.823" endtime="20241123 23:54:52.825"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.825" endtime="20241123 23:54:52.826"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.826" endtime="20241123 23:54:52.826"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.826" endtime="20241123 23:54:52.826"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.827" endtime="20241123 23:54:52.827"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.826" endtime="20241123 23:54:52.827"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.826" endtime="20241123 23:54:52.827"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.825" endtime="20241123 23:54:52.827"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.825" endtime="20241123 23:54:52.827"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241123 23:54:52.827" endtime="20241123 23:54:52.827"/>
</return>
<msg timestamp="20241123 23:54:52.828" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241123 23:54:52.823" endtime="20241123 23:54:52.828"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.828" endtime="20241123 23:54:52.829"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.829" endtime="20241123 23:54:52.830"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.830" endtime="20241123 23:54:52.831"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.831" endtime="20241123 23:54:52.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241123 23:54:52.834" endtime="20241123 23:54:52.834"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.831" endtime="20241123 23:54:52.834"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.831" endtime="20241123 23:54:52.834"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.835" endtime="20241123 23:54:52.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.835" endtime="20241123 23:54:52.835"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.835" endtime="20241123 23:54:52.835"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.834" endtime="20241123 23:54:52.835"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.831" endtime="20241123 23:54:52.835"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.831" endtime="20241123 23:54:52.836"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</branch>
<status status="NOT RUN" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</if>
<status status="NOT RUN" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</if>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.836"/>
</iter>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.836"/>
</for>
<status status="PASS" starttime="20241123 23:54:52.796" endtime="20241123 23:54:52.836"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:52.836" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '101', 'status': 'COMPLETED', 'actionName': 'Is Name heading visible', 'actionType': 'IS_ELEMENT_VISIBLE', 'actionXpath': '//h4[text()="bharani deepan"]', 'inputValue':...</msg>
<status status="PASS" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:52.836" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "101", "status": "COMPLETED", "actionName": "Is Name heading visible", "actionType": "IS_ELEMENT_VISIBLE", "actionXpath": "//h4[text()=\"bharani deepan\"]", "inputValue...</msg>
<status status="PASS" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:52.836" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:52.836" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.836"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.847"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.847"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.836" endtime="20241123 23:54:52.849"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.411" endtime="20241123 23:54:52.849"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.850" endtime="20241123 23:54:52.851"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.851" endtime="20241123 23:54:52.851"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.851" endtime="20241123 23:54:52.851"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.850" endtime="20241123 23:54:52.852"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.410" endtime="20241123 23:54:52.852"/>
</try>
<status status="PASS" starttime="20241123 23:54:52.410" endtime="20241123 23:54:52.852"/>
</iter>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:52.852"/>
</for>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:52.852"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.956" endtime="20241123 23:54:52.852"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:52.854" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '30', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 23:54:52.854" endtime="20241123 23:54:52.854"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:52.855" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "30", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 23:54:52.855" endtime="20241123 23:54:52.855"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:52.859" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:52.859" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:52.856" endtime="20241123 23:54:52.859"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.859" endtime="20241123 23:54:52.861"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:52.861" endtime="20241123 23:54:52.861"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.855" endtime="20241123 23:54:52.861"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.852" endtime="20241123 23:54:52.861"/>
</kw>
<status status="PASS" starttime="20241123 23:54:51.947" endtime="20241123 23:54:52.862"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.862" endtime="20241123 23:54:52.862"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.862" endtime="20241123 23:54:52.863"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.864" endtime="20241123 23:54:52.864"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.862" endtime="20241123 23:54:52.864"/>
</branch>
<status status="PASS" starttime="20241123 23:54:51.947" endtime="20241123 23:54:52.864"/>
</try>
<status status="PASS" starttime="20241123 23:54:51.947" endtime="20241123 23:54:52.864"/>
</iter>
<status status="PASS" starttime="20241123 23:54:37.130" endtime="20241123 23:54:52.864"/>
</for>
<status status="PASS" starttime="20241123 23:54:37.130" endtime="20241123 23:54:52.866"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.130" endtime="20241123 23:54:52.866"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:52.869" level="INFO">${response_message} = {'testCaseRunId': '15', 'status': 'PASS', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241123 23:54:52.867" endtime="20241123 23:54:52.869"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241123 23:54:52.870" level="INFO">${json_response} = {"testCaseRunId": "15", "status": "PASS", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241123 23:54:52.869" endtime="20241123 23:54:52.870"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241123 23:54:52.873" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241123 23:54:52.873" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241123 23:54:52.870" endtime="20241123 23:54:52.873"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</return>
<status status="PASS" starttime="20241123 23:54:52.869" endtime="20241123 23:54:52.874"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.867" endtime="20241123 23:54:52.874"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.069" endtime="20241123 23:54:52.874"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<status status="NOT RUN" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.069" endtime="20241123 23:54:52.874"/>
</try>
<status status="PASS" starttime="20241123 23:54:37.051" endtime="20241123 23:54:52.874"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.051" endtime="20241123 23:54:52.874"/>
</if>
<status status="PASS" starttime="20241123 23:54:37.031" endtime="20241123 23:54:52.874"/>
</kw>
<status status="PASS" starttime="20241123 23:54:37.030" endtime="20241123 23:54:52.874"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:52.874" endtime="20241123 23:54:52.874"/>
</branch>
<status status="PASS" starttime="20241123 23:54:37.030" endtime="20241123 23:54:52.874"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241123 23:54:53.122" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241123 23:54:52.874" endtime="20241123 23:54:53.122"/>
</kw>
<status status="PASS" starttime="20241123 23:54:52.874" endtime="20241123 23:54:53.122"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241123 23:54:53.122" endtime="20241123 23:54:53.122"/>
</kw>
<status status="NOT RUN" starttime="20241123 23:54:53.122" endtime="20241123 23:54:53.122"/>
</branch>
<status status="PASS" starttime="20241123 23:54:52.874" endtime="20241123 23:54:53.122"/>
</try>
<status status="PASS" starttime="20241123 23:54:52.874" endtime="20241123 23:54:53.122"/>
</kw>
<status status="PASS" starttime="20241123 23:53:20.221" endtime="20241123 23:54:53.122"/>
</iter>
<iter>
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241123 23:54:53.122" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241123 23:54:53.122" endtime="20241123 23:54:53.122"/>
</kw>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241123 23:54:53.122" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\ba0b3234-c44a-4d8e-8f92-70a55366bc1a"}</msg>
<msg timestamp="20241123 23:54:53.651" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\ba0b3234-c44a-4d8e-8f92-70a55366bc1a"}</msg>
<status status="PASS" starttime="20241123 23:54:53.122" endtime="20241123 23:54:53.651"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241123 23:54:53.651" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241123 23:54:53.666" level="INFO">Successfully created context. </msg>
<msg timestamp="20241123 23:54:53.666" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241123 23:54:53.651" endtime="20241123 23:54:53.666"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241123 23:54:53.666" endtime="20241123 23:54:53.666"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241123 23:54:56.363" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241123 23:54:56.363" level="INFO">${page_id} = {'page_id': 'page=2a8c370e-cb4c-41bc-ad51-fb0e43ff8815', 'video_path': ''}</msg>
<status status="PASS" starttime="20241123 23:54:53.666" endtime="20241123 23:54:56.363"/>
</kw>
<status status="PASS" starttime="20241123 23:54:53.122" endtime="20241123 23:54:56.364"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241123 23:54:56.364" endtime="20241123 23:54:56.365"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241124 00:07:55.458" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '16', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T18:37:55.398Z', 'createdAt': '2024-11-23T18:37:55.398Z', 'errorMe...</msg>
<status status="PASS" starttime="20241123 23:54:56.365" endtime="20241124 00:07:55.458"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241124 00:07:55.458" endtime="20241124 00:07:55.458"/>
</break>
<status status="NOT RUN" starttime="20241124 00:07:55.458" endtime="20241124 00:07:55.458"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.458" endtime="20241124 00:07:55.458"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</kw>
<msg timestamp="20241124 00:07:55.466" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.466" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.466" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</if>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</return>
<msg timestamp="20241124 00:07:55.466" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</return>
<status status="NOT RUN" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.466" endtime="20241124 00:07:55.466"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:07:55.487" endtime="20241124 00:07:55.488"/>
</kw>
<msg timestamp="20241124 00:07:55.488" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.487" endtime="20241124 00:07:55.488"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.490" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-23T18:25:25.061Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241124 00:07:55.489" endtime="20241124 00:07:55.490"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.491" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.490" endtime="20241124 00:07:55.491"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.490" endtime="20241124 00:07:55.491"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.491" endtime="20241124 00:07:55.491"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:07:55.491" endtime="20241124 00:07:55.491"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.490" endtime="20241124 00:07:55.491"/>
</if>
<status status="PASS" starttime="20241124 00:07:55.488" endtime="20241124 00:07:55.491"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.488" endtime="20241124 00:07:55.491"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:07:55.491" endtime="20241124 00:07:55.491"/>
</return>
<msg timestamp="20241124 00:07:55.492" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.486" endtime="20241124 00:07:55.492"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:07:55.496" endtime="20241124 00:07:55.497"/>
</kw>
<msg timestamp="20241124 00:07:55.497" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.496" endtime="20241124 00:07:55.497"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.501" level="INFO">${values} = {'id': '16', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T18:37:55.398Z', 'createdAt': '2024-11-23T18:37:55.398Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 00:07:55.499" endtime="20241124 00:07:55.501"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.502" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.502" endtime="20241124 00:07:55.502"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.502" endtime="20241124 00:07:55.502"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.503" endtime="20241124 00:07:55.503"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:07:55.503" endtime="20241124 00:07:55.503"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.501" endtime="20241124 00:07:55.503"/>
</if>
<status status="PASS" starttime="20241124 00:07:55.498" endtime="20241124 00:07:55.503"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.498" endtime="20241124 00:07:55.503"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:07:55.503" endtime="20241124 00:07:55.503"/>
</return>
<msg timestamp="20241124 00:07:55.504" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.495" endtime="20241124 00:07:55.504"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.504" endtime="20241124 00:07:55.504"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:07:55.504" endtime="20241124 00:07:55.504"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.504" endtime="20241124 00:07:55.505"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.506" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-23T18:25:25.061Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241124 00:07:55.505" endtime="20241124 00:07:55.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.506" level="INFO">${testCaseRun} = {'id': '16', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-23T18:37:55.398Z', 'createdAt': '2024-11-23T18:37:55.398Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 00:07:55.506" endtime="20241124 00:07:55.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.507" level="INFO">${assertions} = [{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'NOT_VISIBLE', 'useCustomTarget...</msg>
<status status="PASS" starttime="20241124 00:07:55.507" endtime="20241124 00:07:55.507"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:07:55.507" endtime="20241124 00:07:55.508"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:07:55.513" endtime="20241124 00:07:55.513"/>
</kw>
<msg timestamp="20241124 00:07:55.513" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.512" endtime="20241124 00:07:55.513"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.516" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-23T18:25:25.107Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241124 00:07:55.515" endtime="20241124 00:07:55.516"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.518" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.517" endtime="20241124 00:07:55.518"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.516" endtime="20241124 00:07:55.519"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.519" endtime="20241124 00:07:55.519"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:07:55.519" endtime="20241124 00:07:55.519"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.516" endtime="20241124 00:07:55.519"/>
</if>
<status status="PASS" starttime="20241124 00:07:55.515" endtime="20241124 00:07:55.519"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.514" endtime="20241124 00:07:55.520"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:07:55.520" endtime="20241124 00:07:55.520"/>
</return>
<msg timestamp="20241124 00:07:55.520" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.511" endtime="20241124 00:07:55.520"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:07:55.521" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '16', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241124 00:07:55.520" endtime="20241124 00:07:55.521"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:07:55.522" level="INFO">${json_response} = {"testCaseRunId": "16", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241124 00:07:55.521" endtime="20241124 00:07:55.522"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:07:55.545" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:07:55.545" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:07:55.522" endtime="20241124 00:07:55.545"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:07:55.545" endtime="20241124 00:07:55.546"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:07:55.546" endtime="20241124 00:07:55.546"/>
</return>
<status status="PASS" starttime="20241124 00:07:55.521" endtime="20241124 00:07:55.546"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-23T18:25:25.107Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.550" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-22T04:20:41.623Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241124 00:07:55.549" endtime="20241124 00:07:55.550"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:07:55.551" endtime="20241124 00:07:55.553"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:07:55.557" endtime="20241124 00:07:55.557"/>
</kw>
<msg timestamp="20241124 00:07:55.557" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.556" endtime="20241124 00:07:55.557"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.558" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.468Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241124 00:07:55.557" endtime="20241124 00:07:55.558"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.558" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.558" endtime="20241124 00:07:55.559"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.558" endtime="20241124 00:07:55.559"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.559" endtime="20241124 00:07:55.559"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:07:55.559" endtime="20241124 00:07:55.559"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.558" endtime="20241124 00:07:55.559"/>
</if>
<status status="PASS" starttime="20241124 00:07:55.557" endtime="20241124 00:07:55.559"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.557" endtime="20241124 00:07:55.559"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:07:55.559" endtime="20241124 00:07:55.559"/>
</return>
<msg timestamp="20241124 00:07:55.560" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 00:07:55.556" endtime="20241124 00:07:55.560"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.468Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.561" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241124 00:07:55.561" endtime="20241124 00:07:55.561"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:07:55.561" endtime="20241124 00:07:55.562"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 00:07:55.563" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241124 00:07:55.562" endtime="20241124 00:07:55.563"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.563" endtime="20241124 00:07:55.563"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:07:55.564" endtime="20241124 00:07:55.564"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:07:55.563" endtime="20241124 00:07:55.564"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.563" endtime="20241124 00:07:55.564"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:07:55.567" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 00:07:55.566" endtime="20241124 00:07:55.568"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 00:08:00.830" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241124 00:08:00.831" level="INFO">${page_id} = {'page_id': 'page=8443bf80-a5f0-4571-8f8b-7f5c9db195cd', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 00:07:55.568" endtime="20241124 00:08:00.831"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241124 00:08:00.831" level="INFO">Switching to page {'page_id': 'page=8443bf80-a5f0-4571-8f8b-7f5c9db195cd', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241124 00:08:00.852" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=b7de81c5-a213-4ae2-bac1-4260a6d3754b",
    "contexts": [
      {
        "type": "context",
        "id": "context=52c1bce6-80fd-4981-bb8c-36df80ea61cd",
        "activePage": "page=8443bf80-a5f0-4571-8f8b-7f5c9db195cd",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=2a8c370e-cb4c-41bc-ad51-fb0e43ff8815",
            "timestamp": 1732386293.888
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=8443bf80-a5f0-4571-8f8b-7f5c9db195cd",
            "timestamp": 1732387075.797
          }
        ]
      }
    ],
    "activeContext": "context=52c1bce6-80fd-4981-bb8c-36df80ea61cd",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241124 00:08:00.856" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241124 00:08:00.831" endtime="20241124 00:08:00.856"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.568" endtime="20241124 00:08:00.856"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.568" endtime="20241124 00:08:00.856"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:00.856" endtime="20241124 00:08:00.856"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.856" endtime="20241124 00:08:00.856"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.858" endtime="20241124 00:08:00.858"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.857" endtime="20241124 00:08:00.858"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.860" endtime="20241124 00:08:00.860"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.862" endtime="20241124 00:08:00.862"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.858" endtime="20241124 00:08:00.862"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.863" endtime="20241124 00:08:00.863"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.862" endtime="20241124 00:08:00.863"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.866" endtime="20241124 00:08:00.867"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.863" endtime="20241124 00:08:00.867"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.869" endtime="20241124 00:08:00.869"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.867" endtime="20241124 00:08:00.869"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.870" endtime="20241124 00:08:00.870"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.869" endtime="20241124 00:08:00.870"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.871" endtime="20241124 00:08:00.871"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.871" endtime="20241124 00:08:00.872"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.871" endtime="20241124 00:08:00.872"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.872" endtime="20241124 00:08:00.872"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.872" endtime="20241124 00:08:00.872"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:00.871" endtime="20241124 00:08:00.872"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:00.870" endtime="20241124 00:08:00.872"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:00.878" endtime="20241124 00:08:00.878"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.882" endtime="20241124 00:08:00.882"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.872" endtime="20241124 00:08:00.882"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.884" endtime="20241124 00:08:00.884"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.884" endtime="20241124 00:08:00.885"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.884" endtime="20241124 00:08:00.885"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.885" endtime="20241124 00:08:00.885"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.885" endtime="20241124 00:08:00.885"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:00.884" endtime="20241124 00:08:00.885"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:00.882" endtime="20241124 00:08:00.885"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:00.891" endtime="20241124 00:08:00.891"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.895" endtime="20241124 00:08:00.895"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.885" endtime="20241124 00:08:00.895"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.896" endtime="20241124 00:08:00.896"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.897" endtime="20241124 00:08:00.897"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.896" endtime="20241124 00:08:00.897"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.897" endtime="20241124 00:08:00.897"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.897" endtime="20241124 00:08:00.897"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:00.896" endtime="20241124 00:08:00.897"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:00.895" endtime="20241124 00:08:00.897"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.899" endtime="20241124 00:08:00.899"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.897" endtime="20241124 00:08:00.899"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 00:08:00.904" endtime="20241124 00:08:00.904"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:00.905" endtime="20241124 00:08:00.905"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:00.899" endtime="20241124 00:08:00.905"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.568" endtime="20241124 00:08:00.905"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:00.905" endtime="20241124 00:08:00.906"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 00:08:01.910" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241124 00:08:00.906" endtime="20241124 00:08:01.910"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 00:08:01.911" endtime="20241124 00:08:01.911"/>
</return>
<msg timestamp="20241124 00:08:01.912" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 00:07:55.564" endtime="20241124 00:08:01.912"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.917" level="INFO">${key} = testCaseFlowSequenceId:46::flowActionSequenceId:41</msg>
<status status="PASS" starttime="20241124 00:08:01.916" endtime="20241124 00:08:01.917"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'NOT_VISIBLE', 'useCustomTargetV...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.921" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241124 00:08:01.919" endtime="20241124 00:08:01.921"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.923" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241124 00:08:01.922" endtime="20241124 00:08:01.923"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.926" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 00:08:01.924" endtime="20241124 00:08:01.926"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.928" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 00:08:01.927" endtime="20241124 00:08:01.928"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.930" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241124 00:08:01.929" endtime="20241124 00:08:01.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.932" level="INFO">${customTargetValue} = NOT_VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:01.931" endtime="20241124 00:08:01.932"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.934" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241124 00:08:01.933" endtime="20241124 00:08:01.934"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:01.935" endtime="20241124 00:08:01.937"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:01.947" endtime="20241124 00:08:01.949"/>
</kw>
<msg timestamp="20241124 00:08:01.949" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:01.946" endtime="20241124 00:08:01.950"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.953" level="INFO">${values} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:01.952" endtime="20241124 00:08:01.953"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:01.956" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:01.955" endtime="20241124 00:08:01.956"/>
</kw>
<status status="PASS" starttime="20241124 00:08:01.954" endtime="20241124 00:08:01.957"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.958" endtime="20241124 00:08:01.959"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:01.957" endtime="20241124 00:08:01.960"/>
</branch>
<status status="PASS" starttime="20241124 00:08:01.954" endtime="20241124 00:08:01.960"/>
</if>
<status status="PASS" starttime="20241124 00:08:01.951" endtime="20241124 00:08:01.960"/>
</branch>
<status status="PASS" starttime="20241124 00:08:01.950" endtime="20241124 00:08:01.961"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:01.961" endtime="20241124 00:08:01.961"/>
</return>
<msg timestamp="20241124 00:08:01.963" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:01.944" endtime="20241124 00:08:01.963"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 00:08:01.974" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241124 00:08:01.971" endtime="20241124 00:08:01.975"/>
</kw>
<msg timestamp="20241124 00:08:01.976" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:01.970" endtime="20241124 00:08:01.976"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.979" endtime="20241124 00:08:01.979"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.980" endtime="20241124 00:08:01.981"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:01.980" endtime="20241124 00:08:01.981"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.981" endtime="20241124 00:08:01.982"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:01.981" endtime="20241124 00:08:01.982"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:01.980" endtime="20241124 00:08:01.982"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:01.978" endtime="20241124 00:08:01.982"/>
</branch>
<status status="PASS" starttime="20241124 00:08:01.977" endtime="20241124 00:08:01.982"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:01.983" endtime="20241124 00:08:01.983"/>
</return>
<msg timestamp="20241124 00:08:01.984" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:01.968" endtime="20241124 00:08:01.984"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:01.984" endtime="20241124 00:08:01.985"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:01.985" endtime="20241124 00:08:01.987"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:01.987" endtime="20241124 00:08:01.989"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.990" endtime="20241124 00:08:01.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.991" endtime="20241124 00:08:01.991"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:01.990" endtime="20241124 00:08:01.992"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:01.990" endtime="20241124 00:08:01.992"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.994" endtime="20241124 00:08:01.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.995" endtime="20241124 00:08:01.995"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:01.993" endtime="20241124 00:08:01.995"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:01.993" endtime="20241124 00:08:01.995"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:01.989" endtime="20241124 00:08:01.996"/>
</branch>
<status status="PASS" starttime="20241124 00:08:01.989" endtime="20241124 00:08:01.996"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:01.998" endtime="20241124 00:08:01.999"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:01.998" endtime="20241124 00:08:01.999"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:01.997" endtime="20241124 00:08:01.999"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.000" endtime="20241124 00:08:02.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.001" endtime="20241124 00:08:02.001"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:01.999" endtime="20241124 00:08:02.001"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:01.999" endtime="20241124 00:08:02.001"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:01.997" endtime="20241124 00:08:02.001"/>
</branch>
<status status="PASS" starttime="20241124 00:08:01.996" endtime="20241124 00:08:02.002"/>
</if>
<status status="PASS" starttime="20241124 00:08:01.919" endtime="20241124 00:08:02.002"/>
</iter>
<status status="PASS" starttime="20241124 00:08:01.918" endtime="20241124 00:08:02.002"/>
</for>
<status status="PASS" starttime="20241124 00:08:01.913" endtime="20241124 00:08:02.003"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:02.009" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '106', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/login', ...</msg>
<status status="PASS" starttime="20241124 00:08:02.006" endtime="20241124 00:08:02.009"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:02.014" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "106", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/login", ...</msg>
<status status="PASS" starttime="20241124 00:08:02.012" endtime="20241124 00:08:02.014"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:02.080" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:02.081" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:02.014" endtime="20241124 00:08:02.081"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:02.082" endtime="20241124 00:08:02.085"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:02.085" endtime="20241124 00:08:02.085"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.010" endtime="20241124 00:08:02.087"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.003" endtime="20241124 00:08:02.088"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.561" endtime="20241124 00:08:02.089"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.094" endtime="20241124 00:08:02.097"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 00:08:02.097" endtime="20241124 00:08:02.098"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.099" endtime="20241124 00:08:02.099"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.090" endtime="20241124 00:08:02.100"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.561" endtime="20241124 00:08:02.100"/>
</try>
<status status="PASS" starttime="20241124 00:07:55.561" endtime="20241124 00:08:02.100"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-22T04:20:41.490Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:02.103" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241124 00:08:02.102" endtime="20241124 00:08:02.103"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:02.103" endtime="20241124 00:08:02.105"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 00:08:02.106" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241124 00:08:02.105" endtime="20241124 00:08:02.106"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.107" endtime="20241124 00:08:02.108"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.109" endtime="20241124 00:08:02.109"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.107" endtime="20241124 00:08:02.110"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.106" endtime="20241124 00:08:02.110"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:02.113" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 00:08:02.112" endtime="20241124 00:08:02.113"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:02.114" endtime="20241124 00:08:02.115"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.114" endtime="20241124 00:08:02.115"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:02.116" endtime="20241124 00:08:02.116"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.115" endtime="20241124 00:08:02.116"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.122" endtime="20241124 00:08:02.122"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.117" endtime="20241124 00:08:02.122"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.129" endtime="20241124 00:08:02.129"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.132" endtime="20241124 00:08:02.132"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.123" endtime="20241124 00:08:02.133"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.135" endtime="20241124 00:08:02.135"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.133" endtime="20241124 00:08:02.135"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.139" endtime="20241124 00:08:02.139"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.135" endtime="20241124 00:08:02.139"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:02.168" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241124 00:08:02.150" endtime="20241124 00:08:02.168"/>
</kw>
<msg timestamp="20241124 00:08:02.168" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.149" endtime="20241124 00:08:02.168"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.168" endtime="20241124 00:08:02.168"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.149" endtime="20241124 00:08:02.168"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.169" endtime="20241124 00:08:02.169"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.169" endtime="20241124 00:08:02.169"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.168" endtime="20241124 00:08:02.169"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.149" endtime="20241124 00:08:02.169"/>
</try>
<msg timestamp="20241124 00:08:02.169" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.148" endtime="20241124 00:08:02.169"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.169" endtime="20241124 00:08:02.169"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.147" endtime="20241124 00:08:02.169"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:02.170" endtime="20241124 00:08:02.170"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:02.169" endtime="20241124 00:08:02.170"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.147" endtime="20241124 00:08:02.170"/>
</try>
<msg timestamp="20241124 00:08:02.170" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.147" endtime="20241124 00:08:02.170"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.172" endtime="20241124 00:08:02.172"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.172" endtime="20241124 00:08:02.172"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.172" endtime="20241124 00:08:02.172"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.172" endtime="20241124 00:08:02.172"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.171" endtime="20241124 00:08:02.172"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.146" endtime="20241124 00:08:02.172"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:02.185" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241124 00:08:02.180" endtime="20241124 00:08:02.185"/>
</kw>
<msg timestamp="20241124 00:08:02.185" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.179" endtime="20241124 00:08:02.185"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.185" endtime="20241124 00:08:02.185"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.179" endtime="20241124 00:08:02.185"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.186" endtime="20241124 00:08:02.186"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.186" endtime="20241124 00:08:02.186"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.185" endtime="20241124 00:08:02.186"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.179" endtime="20241124 00:08:02.186"/>
</try>
<msg timestamp="20241124 00:08:02.186" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.179" endtime="20241124 00:08:02.186"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.186" endtime="20241124 00:08:02.186"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.178" endtime="20241124 00:08:02.186"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:02.187" endtime="20241124 00:08:02.187"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:02.187" endtime="20241124 00:08:02.187"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.178" endtime="20241124 00:08:02.187"/>
</try>
<msg timestamp="20241124 00:08:02.187" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.178" endtime="20241124 00:08:02.187"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.189" endtime="20241124 00:08:02.189"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.189" endtime="20241124 00:08:02.189"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.189" endtime="20241124 00:08:02.189"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.189" endtime="20241124 00:08:02.189"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.188" endtime="20241124 00:08:02.189"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.177" endtime="20241124 00:08:02.190"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 00:08:02.206" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 00:08:02.207" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 00:08:02.190" endtime="20241124 00:08:02.207"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 00:08:02.207" endtime="20241124 00:08:02.207"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.190" endtime="20241124 00:08:02.207"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.207" endtime="20241124 00:08:02.207"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.207" endtime="20241124 00:08:02.207"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.207" endtime="20241124 00:08:02.208"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.190" endtime="20241124 00:08:02.208"/>
</try>
<msg timestamp="20241124 00:08:02.208" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 00:08:02.176" endtime="20241124 00:08:02.208"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.209" endtime="20241124 00:08:02.209"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.210" endtime="20241124 00:08:02.210"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.209" endtime="20241124 00:08:02.210"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.209" endtime="20241124 00:08:02.210"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.209" endtime="20241124 00:08:02.210"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.174" endtime="20241124 00:08:02.210"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.210" endtime="20241124 00:08:02.210"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.210" endtime="20241124 00:08:02.210"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.174" endtime="20241124 00:08:02.210"/>
</try>
<status status="PASS" starttime="20241124 00:08:02.174" endtime="20241124 00:08:02.211"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:02.219" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241124 00:08:02.214" endtime="20241124 00:08:02.219"/>
</kw>
<msg timestamp="20241124 00:08:02.220" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.214" endtime="20241124 00:08:02.220"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.220" endtime="20241124 00:08:02.220"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.214" endtime="20241124 00:08:02.220"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.220" endtime="20241124 00:08:02.220"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.220" endtime="20241124 00:08:02.220"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.220" endtime="20241124 00:08:02.220"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.214" endtime="20241124 00:08:02.221"/>
</try>
<msg timestamp="20241124 00:08:02.221" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.213" endtime="20241124 00:08:02.221"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.221" endtime="20241124 00:08:02.221"/>
</return>
<msg timestamp="20241124 00:08:02.221" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.212" endtime="20241124 00:08:02.221"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.223" endtime="20241124 00:08:02.223"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.223" endtime="20241124 00:08:02.223"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.223" endtime="20241124 00:08:02.223"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.223" endtime="20241124 00:08:02.223"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.222" endtime="20241124 00:08:02.224"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.212" endtime="20241124 00:08:02.224"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.144" endtime="20241124 00:08:02.224"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:02.240" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241124 00:08:02.228" endtime="20241124 00:08:02.240"/>
</kw>
<msg timestamp="20241124 00:08:02.240" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.228" endtime="20241124 00:08:02.240"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.240" endtime="20241124 00:08:02.240"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.228" endtime="20241124 00:08:02.240"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.241" endtime="20241124 00:08:02.241"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.241" endtime="20241124 00:08:02.241"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.240" endtime="20241124 00:08:02.241"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.228" endtime="20241124 00:08:02.241"/>
</try>
<msg timestamp="20241124 00:08:02.241" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.227" endtime="20241124 00:08:02.241"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.241" endtime="20241124 00:08:02.242"/>
</return>
<msg timestamp="20241124 00:08:02.242" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.226" endtime="20241124 00:08:02.242"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.243" endtime="20241124 00:08:02.244"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.244" endtime="20241124 00:08:02.244"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.243" endtime="20241124 00:08:02.244"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.243" endtime="20241124 00:08:02.244"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.242" endtime="20241124 00:08:02.244"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.226" endtime="20241124 00:08:02.244"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:02.245" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 00:08:02.244" endtime="20241124 00:08:02.245"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.246" endtime="20241124 00:08:02.246"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.247" endtime="20241124 00:08:02.248"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.246" endtime="20241124 00:08:02.248"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:02.248" endtime="20241124 00:08:02.248"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.248" endtime="20241124 00:08:02.248"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.246" endtime="20241124 00:08:02.248"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241124 00:08:02.249" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241124 00:08:02.248" endtime="20241124 00:08:02.271"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.248" endtime="20241124 00:08:02.271"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.272" endtime="20241124 00:08:02.272"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.272" endtime="20241124 00:08:02.272"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.272" endtime="20241124 00:08:02.272"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.248" endtime="20241124 00:08:02.272"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:02.286" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241124 00:08:02.281" endtime="20241124 00:08:02.286"/>
</kw>
<msg timestamp="20241124 00:08:02.286" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.280" endtime="20241124 00:08:02.286"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.286" endtime="20241124 00:08:02.286"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.280" endtime="20241124 00:08:02.287"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.287" endtime="20241124 00:08:02.287"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.287" endtime="20241124 00:08:02.287"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.287" endtime="20241124 00:08:02.287"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.280" endtime="20241124 00:08:02.287"/>
</try>
<msg timestamp="20241124 00:08:02.288" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.279" endtime="20241124 00:08:02.288"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.288" endtime="20241124 00:08:02.288"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.278" endtime="20241124 00:08:02.288"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:02.288" endtime="20241124 00:08:02.288"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:02.288" endtime="20241124 00:08:02.288"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.278" endtime="20241124 00:08:02.288"/>
</try>
<msg timestamp="20241124 00:08:02.288" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.277" endtime="20241124 00:08:02.288"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.291" endtime="20241124 00:08:02.291"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.291" endtime="20241124 00:08:02.291"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.290" endtime="20241124 00:08:02.291"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.290" endtime="20241124 00:08:02.291"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.289" endtime="20241124 00:08:02.291"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.276" endtime="20241124 00:08:02.291"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:02.305" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241124 00:08:02.299" endtime="20241124 00:08:02.305"/>
</kw>
<msg timestamp="20241124 00:08:02.305" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.299" endtime="20241124 00:08:02.305"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.305" endtime="20241124 00:08:02.305"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.299" endtime="20241124 00:08:02.305"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.305" endtime="20241124 00:08:02.305"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.306" endtime="20241124 00:08:02.306"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.305" endtime="20241124 00:08:02.306"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.299" endtime="20241124 00:08:02.306"/>
</try>
<msg timestamp="20241124 00:08:02.306" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.298" endtime="20241124 00:08:02.306"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.306" endtime="20241124 00:08:02.306"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.297" endtime="20241124 00:08:02.306"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:02.306" endtime="20241124 00:08:02.307"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:02.306" endtime="20241124 00:08:02.307"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.297" endtime="20241124 00:08:02.307"/>
</try>
<msg timestamp="20241124 00:08:02.307" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.297" endtime="20241124 00:08:02.307"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.309" endtime="20241124 00:08:02.309"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.309" endtime="20241124 00:08:02.309"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.309" endtime="20241124 00:08:02.310"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.309" endtime="20241124 00:08:02.310"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.308" endtime="20241124 00:08:02.310"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.297" endtime="20241124 00:08:02.310"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 00:08:02.318" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 00:08:02.318" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 00:08:02.310" endtime="20241124 00:08:02.318"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 00:08:02.318" endtime="20241124 00:08:02.318"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.310" endtime="20241124 00:08:02.318"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.319" endtime="20241124 00:08:02.319"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.319" endtime="20241124 00:08:02.319"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.318" endtime="20241124 00:08:02.319"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.310" endtime="20241124 00:08:02.319"/>
</try>
<msg timestamp="20241124 00:08:02.319" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 00:08:02.295" endtime="20241124 00:08:02.319"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.321" endtime="20241124 00:08:02.321"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.322" endtime="20241124 00:08:02.322"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.321" endtime="20241124 00:08:02.322"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.321" endtime="20241124 00:08:02.322"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.320" endtime="20241124 00:08:02.322"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.294" endtime="20241124 00:08:02.322"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.322" endtime="20241124 00:08:02.322"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.322" endtime="20241124 00:08:02.322"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.294" endtime="20241124 00:08:02.322"/>
</try>
<status status="PASS" starttime="20241124 00:08:02.293" endtime="20241124 00:08:02.322"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:02.332" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241124 00:08:02.328" endtime="20241124 00:08:02.333"/>
</kw>
<msg timestamp="20241124 00:08:02.333" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.327" endtime="20241124 00:08:02.333"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.333" endtime="20241124 00:08:02.333"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.327" endtime="20241124 00:08:02.333"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.333" endtime="20241124 00:08:02.333"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.334" endtime="20241124 00:08:02.334"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.333" endtime="20241124 00:08:02.334"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.327" endtime="20241124 00:08:02.334"/>
</try>
<msg timestamp="20241124 00:08:02.334" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.327" endtime="20241124 00:08:02.334"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.334" endtime="20241124 00:08:02.334"/>
</return>
<msg timestamp="20241124 00:08:02.334" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.326" endtime="20241124 00:08:02.334"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.336" endtime="20241124 00:08:02.336"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.337" endtime="20241124 00:08:02.337"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.336" endtime="20241124 00:08:02.337"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.336" endtime="20241124 00:08:02.337"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.335" endtime="20241124 00:08:02.337"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.324" endtime="20241124 00:08:02.337"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.274" endtime="20241124 00:08:02.337"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:02.347" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241124 00:08:02.343" endtime="20241124 00:08:02.348"/>
</kw>
<msg timestamp="20241124 00:08:02.348" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.342" endtime="20241124 00:08:02.348"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.348" endtime="20241124 00:08:02.348"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.342" endtime="20241124 00:08:02.348"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.348" endtime="20241124 00:08:02.348"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.349" endtime="20241124 00:08:02.349"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.348" endtime="20241124 00:08:02.349"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.342" endtime="20241124 00:08:02.349"/>
</try>
<msg timestamp="20241124 00:08:02.349" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.342" endtime="20241124 00:08:02.349"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.349" endtime="20241124 00:08:02.349"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.341" endtime="20241124 00:08:02.349"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:02.349" endtime="20241124 00:08:02.349"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:02.349" endtime="20241124 00:08:02.350"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.341" endtime="20241124 00:08:02.350"/>
</try>
<msg timestamp="20241124 00:08:02.350" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.341" endtime="20241124 00:08:02.350"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.352" endtime="20241124 00:08:02.352"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.353" endtime="20241124 00:08:02.353"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.352" endtime="20241124 00:08:02.353"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.352" endtime="20241124 00:08:02.353"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.351" endtime="20241124 00:08:02.353"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.340" endtime="20241124 00:08:02.353"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 00:08:02.364" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241124 00:08:02.364" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241124 00:08:02.353" endtime="20241124 00:08:02.364"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 00:08:02.365" endtime="20241124 00:08:02.365"/>
</return>
<status status="PASS" starttime="20241124 00:08:02.353" endtime="20241124 00:08:02.365"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.365" endtime="20241124 00:08:02.365"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.365" endtime="20241124 00:08:02.365"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.365" endtime="20241124 00:08:02.365"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.353" endtime="20241124 00:08:02.365"/>
</try>
<msg timestamp="20241124 00:08:02.366" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241124 00:08:02.338" endtime="20241124 00:08:02.366"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241124 00:08:02.366" endtime="20241124 00:08:02.366"/>
</return>
<msg timestamp="20241124 00:08:02.366" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 00:08:02.273" endtime="20241124 00:08:02.366"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241124 00:08:02.372" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.369" endtime="20241124 00:08:02.372"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:02.372" endtime="20241124 00:08:02.373"/>
</return>
<msg timestamp="20241124 00:08:02.373" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241124 00:08:02.368" endtime="20241124 00:08:02.373"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.377" endtime="20241124 00:08:02.377"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.377" endtime="20241124 00:08:02.377"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.377" endtime="20241124 00:08:02.377"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.376" endtime="20241124 00:08:02.377"/>
</if>
<status status="PASS" starttime="20241124 00:08:02.376" endtime="20241124 00:08:02.378"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.273" endtime="20241124 00:08:02.378"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.245" endtime="20241124 00:08:02.378"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.245" endtime="20241124 00:08:02.378"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.245" endtime="20241124 00:08:02.378"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.378" endtime="20241124 00:08:02.378"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.378" endtime="20241124 00:08:02.378"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.245" endtime="20241124 00:08:02.379"/>
</try>
<status status="PASS" starttime="20241124 00:08:02.143" endtime="20241124 00:08:02.379"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.139" endtime="20241124 00:08:02.379"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.380" endtime="20241124 00:08:02.380"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.379" endtime="20241124 00:08:02.380"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.381" endtime="20241124 00:08:02.381"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.382" endtime="20241124 00:08:02.382"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.382" endtime="20241124 00:08:02.382"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.382" endtime="20241124 00:08:02.382"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.382" endtime="20241124 00:08:02.382"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:02.381" endtime="20241124 00:08:02.382"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:02.380" endtime="20241124 00:08:02.383"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:02.388" endtime="20241124 00:08:02.388"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.391" endtime="20241124 00:08:02.391"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.383" endtime="20241124 00:08:02.391"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.393" endtime="20241124 00:08:02.393"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.394" endtime="20241124 00:08:02.394"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.393" endtime="20241124 00:08:02.394"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.394" endtime="20241124 00:08:02.394"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.394" endtime="20241124 00:08:02.394"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:02.393" endtime="20241124 00:08:02.394"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:02.391" endtime="20241124 00:08:02.394"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:02.400" endtime="20241124 00:08:02.400"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.403" endtime="20241124 00:08:02.403"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.394" endtime="20241124 00:08:02.403"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.404" endtime="20241124 00:08:02.404"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.405" endtime="20241124 00:08:02.405"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.405" endtime="20241124 00:08:02.405"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.405" endtime="20241124 00:08:02.405"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.405" endtime="20241124 00:08:02.405"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:02.405" endtime="20241124 00:08:02.405"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:02.403" endtime="20241124 00:08:02.406"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.408" endtime="20241124 00:08:02.408"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.406" endtime="20241124 00:08:02.408"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 00:08:02.414" endtime="20241124 00:08:02.414"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:02.414" endtime="20241124 00:08:02.414"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:02.408" endtime="20241124 00:08:02.414"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.113" endtime="20241124 00:08:02.414"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:02.414" endtime="20241124 00:08:02.415"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 00:08:03.423" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241124 00:08:02.415" endtime="20241124 00:08:03.423"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 00:08:03.424" endtime="20241124 00:08:03.424"/>
</return>
<msg timestamp="20241124 00:08:03.425" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 00:08:02.111" endtime="20241124 00:08:03.425"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.427" level="INFO">${key} = testCaseFlowSequenceId:46::flowActionSequenceId:43</msg>
<status status="PASS" starttime="20241124 00:08:03.426" endtime="20241124 00:08:03.427"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'NOT_VISIBLE', 'useCustomTargetV...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.428" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241124 00:08:03.428" endtime="20241124 00:08:03.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.429" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241124 00:08:03.429" endtime="20241124 00:08:03.429"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.430" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 00:08:03.430" endtime="20241124 00:08:03.430"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.431" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 00:08:03.430" endtime="20241124 00:08:03.431"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.432" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.431" endtime="20241124 00:08:03.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.433" level="INFO">${customTargetValue} = NOT_VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:03.432" endtime="20241124 00:08:03.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.434" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241124 00:08:03.433" endtime="20241124 00:08:03.434"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:03.434" endtime="20241124 00:08:03.435"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:03.438" endtime="20241124 00:08:03.439"/>
</kw>
<msg timestamp="20241124 00:08:03.439" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.438" endtime="20241124 00:08:03.439"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.441" level="INFO">${values} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:03.440" endtime="20241124 00:08:03.441"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.442" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.442" endtime="20241124 00:08:03.442"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.441" endtime="20241124 00:08:03.442"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.443" endtime="20241124 00:08:03.443"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.442" endtime="20241124 00:08:03.443"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.441" endtime="20241124 00:08:03.443"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.440" endtime="20241124 00:08:03.443"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.439" endtime="20241124 00:08:03.443"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:03.443" endtime="20241124 00:08:03.443"/>
</return>
<msg timestamp="20241124 00:08:03.444" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.437" endtime="20241124 00:08:03.444"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 00:08:03.447" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241124 00:08:03.446" endtime="20241124 00:08:03.447"/>
</kw>
<msg timestamp="20241124 00:08:03.448" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:03.446" endtime="20241124 00:08:03.448"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.448" endtime="20241124 00:08:03.448"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.449" endtime="20241124 00:08:03.449"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.448" endtime="20241124 00:08:03.449"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.449" endtime="20241124 00:08:03.449"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.449" endtime="20241124 00:08:03.449"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:03.448" endtime="20241124 00:08:03.449"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:03.448" endtime="20241124 00:08:03.449"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.448" endtime="20241124 00:08:03.450"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:03.450" endtime="20241124 00:08:03.450"/>
</return>
<msg timestamp="20241124 00:08:03.450" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:03.446" endtime="20241124 00:08:03.450"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:03.450" endtime="20241124 00:08:03.451"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:03.451" endtime="20241124 00:08:03.452"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:03.452" endtime="20241124 00:08:03.452"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.453" endtime="20241124 00:08:03.453"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.453" endtime="20241124 00:08:03.454"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.453" endtime="20241124 00:08:03.454"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:03.453" endtime="20241124 00:08:03.454"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.454" endtime="20241124 00:08:03.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.454" endtime="20241124 00:08:03.455"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.454" endtime="20241124 00:08:03.455"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:03.454" endtime="20241124 00:08:03.455"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:03.453" endtime="20241124 00:08:03.455"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.453" endtime="20241124 00:08:03.455"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.456" endtime="20241124 00:08:03.456"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.455" endtime="20241124 00:08:03.456"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:03.455" endtime="20241124 00:08:03.456"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.456" endtime="20241124 00:08:03.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.456" endtime="20241124 00:08:03.456"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.456" endtime="20241124 00:08:03.456"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:03.456" endtime="20241124 00:08:03.457"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:03.455" endtime="20241124 00:08:03.457"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.455" endtime="20241124 00:08:03.457"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.427" endtime="20241124 00:08:03.458"/>
</iter>
<status status="PASS" starttime="20241124 00:08:03.427" endtime="20241124 00:08:03.458"/>
</for>
<status status="PASS" starttime="20241124 00:08:03.425" endtime="20241124 00:08:03.458"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:03.461" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '107', 'status': 'COMPLETED', 'actionName': 'Set login password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'er...</msg>
<status status="PASS" starttime="20241124 00:08:03.460" endtime="20241124 00:08:03.461"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:03.462" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "107", "status": "COMPLETED", "actionName": "Set login password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "...</msg>
<status status="PASS" starttime="20241124 00:08:03.461" endtime="20241124 00:08:03.462"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:03.478" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:03.478" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:03.462" endtime="20241124 00:08:03.478"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:03.479" endtime="20241124 00:08:03.479"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:03.479" endtime="20241124 00:08:03.479"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.461" endtime="20241124 00:08:03.480"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.459" endtime="20241124 00:08:03.480"/>
</kw>
<status status="PASS" starttime="20241124 00:08:02.101" endtime="20241124 00:08:03.480"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.480" endtime="20241124 00:08:03.480"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 00:08:03.480" endtime="20241124 00:08:03.480"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.481" endtime="20241124 00:08:03.481"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.480" endtime="20241124 00:08:03.481"/>
</branch>
<status status="PASS" starttime="20241124 00:08:02.101" endtime="20241124 00:08:03.481"/>
</try>
<status status="PASS" starttime="20241124 00:08:02.101" endtime="20241124 00:08:03.481"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.497Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.482" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-23T17:11:28.46...</msg>
<status status="PASS" starttime="20241124 00:08:03.481" endtime="20241124 00:08:03.482"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:03.482" endtime="20241124 00:08:03.482"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 00:08:03.483" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241124 00:08:03.483" endtime="20241124 00:08:03.483"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.483" endtime="20241124 00:08:03.483"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.484" endtime="20241124 00:08:03.484"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.483" endtime="20241124 00:08:03.484"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.483" endtime="20241124 00:08:03.484"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:03.485" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 00:08:03.484" endtime="20241124 00:08:03.485"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:03.485" endtime="20241124 00:08:03.485"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.485" endtime="20241124 00:08:03.485"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:03.485" endtime="20241124 00:08:03.485"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.485" endtime="20241124 00:08:03.485"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.487" endtime="20241124 00:08:03.487"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.486" endtime="20241124 00:08:03.487"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.489" endtime="20241124 00:08:03.489"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.491" endtime="20241124 00:08:03.491"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.487" endtime="20241124 00:08:03.491"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.492" endtime="20241124 00:08:03.492"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.491" endtime="20241124 00:08:03.492"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.495" endtime="20241124 00:08:03.495"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.493" endtime="20241124 00:08:03.495"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:03.510" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241124 00:08:03.502" endtime="20241124 00:08:03.511"/>
</kw>
<msg timestamp="20241124 00:08:03.511" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.502" endtime="20241124 00:08:03.511"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.511" endtime="20241124 00:08:03.511"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.501" endtime="20241124 00:08:03.511"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.511" endtime="20241124 00:08:03.512"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.512" endtime="20241124 00:08:03.512"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.511" endtime="20241124 00:08:03.512"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.501" endtime="20241124 00:08:03.512"/>
</try>
<msg timestamp="20241124 00:08:03.512" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.501" endtime="20241124 00:08:03.512"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.512" endtime="20241124 00:08:03.512"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.500" endtime="20241124 00:08:03.512"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:03.513" endtime="20241124 00:08:03.513"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:03.512" endtime="20241124 00:08:03.513"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.500" endtime="20241124 00:08:03.513"/>
</try>
<msg timestamp="20241124 00:08:03.513" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.500" endtime="20241124 00:08:03.513"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.515" endtime="20241124 00:08:03.515"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.515" endtime="20241124 00:08:03.515"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.515" endtime="20241124 00:08:03.515"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.515" endtime="20241124 00:08:03.515"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.514" endtime="20241124 00:08:03.515"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.499" endtime="20241124 00:08:03.516"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:03.528" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241124 00:08:03.522" endtime="20241124 00:08:03.528"/>
</kw>
<msg timestamp="20241124 00:08:03.529" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.522" endtime="20241124 00:08:03.529"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.529" endtime="20241124 00:08:03.529"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.522" endtime="20241124 00:08:03.529"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.529" endtime="20241124 00:08:03.529"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.529" endtime="20241124 00:08:03.529"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.529" endtime="20241124 00:08:03.529"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.522" endtime="20241124 00:08:03.529"/>
</try>
<msg timestamp="20241124 00:08:03.530" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.521" endtime="20241124 00:08:03.530"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.530" endtime="20241124 00:08:03.530"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.520" endtime="20241124 00:08:03.530"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:03.530" endtime="20241124 00:08:03.530"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:03.530" endtime="20241124 00:08:03.530"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.520" endtime="20241124 00:08:03.530"/>
</try>
<msg timestamp="20241124 00:08:03.530" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.520" endtime="20241124 00:08:03.530"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.532" endtime="20241124 00:08:03.532"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.533" endtime="20241124 00:08:03.533"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.532" endtime="20241124 00:08:03.533"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.532" endtime="20241124 00:08:03.533"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.531" endtime="20241124 00:08:03.533"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.520" endtime="20241124 00:08:03.533"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 00:08:03.544" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 00:08:03.544" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 00:08:03.533" endtime="20241124 00:08:03.544"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 00:08:03.544" endtime="20241124 00:08:03.544"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.533" endtime="20241124 00:08:03.544"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.545" endtime="20241124 00:08:03.545"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.545" endtime="20241124 00:08:03.545"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.544" endtime="20241124 00:08:03.545"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.533" endtime="20241124 00:08:03.545"/>
</try>
<msg timestamp="20241124 00:08:03.545" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 00:08:03.518" endtime="20241124 00:08:03.545"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.547" endtime="20241124 00:08:03.547"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.547" endtime="20241124 00:08:03.547"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.547" endtime="20241124 00:08:03.548"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.547" endtime="20241124 00:08:03.548"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.546" endtime="20241124 00:08:03.548"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.517" endtime="20241124 00:08:03.548"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.548" endtime="20241124 00:08:03.548"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.548" endtime="20241124 00:08:03.548"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.517" endtime="20241124 00:08:03.548"/>
</try>
<status status="PASS" starttime="20241124 00:08:03.517" endtime="20241124 00:08:03.548"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:03.556" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241124 00:08:03.552" endtime="20241124 00:08:03.556"/>
</kw>
<msg timestamp="20241124 00:08:03.556" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.552" endtime="20241124 00:08:03.556"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.556" endtime="20241124 00:08:03.556"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.552" endtime="20241124 00:08:03.556"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.557" endtime="20241124 00:08:03.557"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.558" endtime="20241124 00:08:03.558"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.556" endtime="20241124 00:08:03.558"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.551" endtime="20241124 00:08:03.558"/>
</try>
<msg timestamp="20241124 00:08:03.558" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.551" endtime="20241124 00:08:03.558"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.558" endtime="20241124 00:08:03.558"/>
</return>
<msg timestamp="20241124 00:08:03.558" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.550" endtime="20241124 00:08:03.558"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.560" endtime="20241124 00:08:03.560"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.561" endtime="20241124 00:08:03.561"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.560" endtime="20241124 00:08:03.561"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.560" endtime="20241124 00:08:03.561"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.559" endtime="20241124 00:08:03.561"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.550" endtime="20241124 00:08:03.561"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.497" endtime="20241124 00:08:03.561"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:03.576" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241124 00:08:03.565" endtime="20241124 00:08:03.577"/>
</kw>
<msg timestamp="20241124 00:08:03.577" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.564" endtime="20241124 00:08:03.577"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.577" endtime="20241124 00:08:03.577"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.564" endtime="20241124 00:08:03.577"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.577" endtime="20241124 00:08:03.577"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.578" endtime="20241124 00:08:03.578"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.577" endtime="20241124 00:08:03.578"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.564" endtime="20241124 00:08:03.578"/>
</try>
<msg timestamp="20241124 00:08:03.578" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.564" endtime="20241124 00:08:03.578"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.578" endtime="20241124 00:08:03.578"/>
</return>
<msg timestamp="20241124 00:08:03.578" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.563" endtime="20241124 00:08:03.578"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.580" endtime="20241124 00:08:03.580"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.580" endtime="20241124 00:08:03.581"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.580" endtime="20241124 00:08:03.581"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.580" endtime="20241124 00:08:03.581"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.579" endtime="20241124 00:08:03.581"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.563" endtime="20241124 00:08:03.581"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:03.581" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 00:08:03.581" endtime="20241124 00:08:03.581"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.583" endtime="20241124 00:08:03.583"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.584" endtime="20241124 00:08:03.584"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.582" endtime="20241124 00:08:03.584"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:03.584" endtime="20241124 00:08:03.585"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.584" endtime="20241124 00:08:03.585"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.582" endtime="20241124 00:08:03.585"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241124 00:08:03.585" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241124 00:08:03.585" endtime="20241124 00:08:03.604"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.585" endtime="20241124 00:08:03.604"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.604" endtime="20241124 00:08:03.604"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.604" endtime="20241124 00:08:03.604"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.604" endtime="20241124 00:08:03.604"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.585" endtime="20241124 00:08:03.604"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:03.615" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241124 00:08:03.611" endtime="20241124 00:08:03.615"/>
</kw>
<msg timestamp="20241124 00:08:03.615" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.611" endtime="20241124 00:08:03.615"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.615" endtime="20241124 00:08:03.615"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.610" endtime="20241124 00:08:03.615"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.615" endtime="20241124 00:08:03.616"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.616" endtime="20241124 00:08:03.616"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.615" endtime="20241124 00:08:03.616"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.610" endtime="20241124 00:08:03.616"/>
</try>
<msg timestamp="20241124 00:08:03.616" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.610" endtime="20241124 00:08:03.616"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.616" endtime="20241124 00:08:03.616"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.609" endtime="20241124 00:08:03.616"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:03.616" endtime="20241124 00:08:03.617"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:03.616" endtime="20241124 00:08:03.617"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.609" endtime="20241124 00:08:03.617"/>
</try>
<msg timestamp="20241124 00:08:03.617" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.608" endtime="20241124 00:08:03.617"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.619" endtime="20241124 00:08:03.619"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.619" endtime="20241124 00:08:03.619"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.619" endtime="20241124 00:08:03.619"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.619" endtime="20241124 00:08:03.619"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.618" endtime="20241124 00:08:03.619"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.608" endtime="20241124 00:08:03.619"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:03.632" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241124 00:08:03.627" endtime="20241124 00:08:03.632"/>
</kw>
<msg timestamp="20241124 00:08:03.632" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.627" endtime="20241124 00:08:03.632"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.633" endtime="20241124 00:08:03.633"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.626" endtime="20241124 00:08:03.633"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.633" endtime="20241124 00:08:03.633"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.633" endtime="20241124 00:08:03.633"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.633" endtime="20241124 00:08:03.633"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.626" endtime="20241124 00:08:03.633"/>
</try>
<msg timestamp="20241124 00:08:03.634" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.626" endtime="20241124 00:08:03.634"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.634" endtime="20241124 00:08:03.634"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.625" endtime="20241124 00:08:03.634"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:03.634" endtime="20241124 00:08:03.634"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:03.634" endtime="20241124 00:08:03.634"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.625" endtime="20241124 00:08:03.634"/>
</try>
<msg timestamp="20241124 00:08:03.634" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.625" endtime="20241124 00:08:03.634"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.637" endtime="20241124 00:08:03.637"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.637" endtime="20241124 00:08:03.637"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.636" endtime="20241124 00:08:03.637"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.636" endtime="20241124 00:08:03.637"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.635" endtime="20241124 00:08:03.637"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.624" endtime="20241124 00:08:03.637"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 00:08:03.648" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 00:08:03.648" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 00:08:03.638" endtime="20241124 00:08:03.648"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 00:08:03.648" endtime="20241124 00:08:03.648"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.637" endtime="20241124 00:08:03.648"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.648" endtime="20241124 00:08:03.648"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.649" endtime="20241124 00:08:03.649"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.648" endtime="20241124 00:08:03.649"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.637" endtime="20241124 00:08:03.649"/>
</try>
<msg timestamp="20241124 00:08:03.649" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 00:08:03.622" endtime="20241124 00:08:03.649"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.651" endtime="20241124 00:08:03.651"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.651" endtime="20241124 00:08:03.651"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.651" endtime="20241124 00:08:03.651"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.651" endtime="20241124 00:08:03.652"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.650" endtime="20241124 00:08:03.652"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.621" endtime="20241124 00:08:03.652"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.652" endtime="20241124 00:08:03.652"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.652" endtime="20241124 00:08:03.652"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.621" endtime="20241124 00:08:03.652"/>
</try>
<status status="PASS" starttime="20241124 00:08:03.621" endtime="20241124 00:08:03.652"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:03.663" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241124 00:08:03.657" endtime="20241124 00:08:03.663"/>
</kw>
<msg timestamp="20241124 00:08:03.663" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.657" endtime="20241124 00:08:03.663"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.663" endtime="20241124 00:08:03.663"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.656" endtime="20241124 00:08:03.663"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.664" endtime="20241124 00:08:03.664"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.664" endtime="20241124 00:08:03.664"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.663" endtime="20241124 00:08:03.664"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.656" endtime="20241124 00:08:03.664"/>
</try>
<msg timestamp="20241124 00:08:03.664" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.656" endtime="20241124 00:08:03.664"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.664" endtime="20241124 00:08:03.664"/>
</return>
<msg timestamp="20241124 00:08:03.665" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.655" endtime="20241124 00:08:03.665"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.667" endtime="20241124 00:08:03.667"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.667" endtime="20241124 00:08:03.667"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.667" endtime="20241124 00:08:03.667"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.667" endtime="20241124 00:08:03.667"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.666" endtime="20241124 00:08:03.668"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.654" endtime="20241124 00:08:03.668"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.605" endtime="20241124 00:08:03.668"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:03.680" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241124 00:08:03.674" endtime="20241124 00:08:03.680"/>
</kw>
<msg timestamp="20241124 00:08:03.680" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.674" endtime="20241124 00:08:03.680"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.680" endtime="20241124 00:08:03.680"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.674" endtime="20241124 00:08:03.680"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.681" endtime="20241124 00:08:03.681"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.681" endtime="20241124 00:08:03.681"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.680" endtime="20241124 00:08:03.681"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.673" endtime="20241124 00:08:03.681"/>
</try>
<msg timestamp="20241124 00:08:03.681" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.673" endtime="20241124 00:08:03.681"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.681" endtime="20241124 00:08:03.681"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.672" endtime="20241124 00:08:03.682"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:03.682" endtime="20241124 00:08:03.682"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:03.682" endtime="20241124 00:08:03.682"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.672" endtime="20241124 00:08:03.682"/>
</try>
<msg timestamp="20241124 00:08:03.682" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.671" endtime="20241124 00:08:03.682"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.684" endtime="20241124 00:08:03.684"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.685" endtime="20241124 00:08:03.685"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.684" endtime="20241124 00:08:03.685"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.684" endtime="20241124 00:08:03.685"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.683" endtime="20241124 00:08:03.685"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.671" endtime="20241124 00:08:03.685"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 00:08:03.694" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241124 00:08:03.694" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 00:08:03.685" endtime="20241124 00:08:03.694"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 00:08:03.694" endtime="20241124 00:08:03.694"/>
</return>
<status status="PASS" starttime="20241124 00:08:03.685" endtime="20241124 00:08:03.694"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.695" endtime="20241124 00:08:03.695"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.695" endtime="20241124 00:08:03.695"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.694" endtime="20241124 00:08:03.695"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.685" endtime="20241124 00:08:03.695"/>
</try>
<msg timestamp="20241124 00:08:03.695" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 00:08:03.669" endtime="20241124 00:08:03.695"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241124 00:08:03.695" endtime="20241124 00:08:03.695"/>
</return>
<msg timestamp="20241124 00:08:03.696" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 00:08:03.605" endtime="20241124 00:08:03.696"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241124 00:08:03.702" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.698" endtime="20241124 00:08:03.702"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:03.702" endtime="20241124 00:08:03.702"/>
</return>
<msg timestamp="20241124 00:08:03.702" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241124 00:08:03.697" endtime="20241124 00:08:03.702"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.706" endtime="20241124 00:08:03.706"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.706" endtime="20241124 00:08:03.706"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.706" endtime="20241124 00:08:03.706"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.706" endtime="20241124 00:08:03.706"/>
</if>
<status status="PASS" starttime="20241124 00:08:03.705" endtime="20241124 00:08:03.707"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.605" endtime="20241124 00:08:03.707"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.582" endtime="20241124 00:08:03.707"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.582" endtime="20241124 00:08:03.708"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.581" endtime="20241124 00:08:03.708"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.708" endtime="20241124 00:08:03.708"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.708" endtime="20241124 00:08:03.708"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.581" endtime="20241124 00:08:03.708"/>
</try>
<status status="PASS" starttime="20241124 00:08:03.497" endtime="20241124 00:08:03.708"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.495" endtime="20241124 00:08:03.708"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.709" endtime="20241124 00:08:03.710"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.708" endtime="20241124 00:08:03.710"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.711" endtime="20241124 00:08:03.711"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.711" endtime="20241124 00:08:03.711"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.711" endtime="20241124 00:08:03.711"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.712" endtime="20241124 00:08:03.712"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.711" endtime="20241124 00:08:03.712"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:03.711" endtime="20241124 00:08:03.712"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:03.710" endtime="20241124 00:08:03.712"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:03.716" endtime="20241124 00:08:03.716"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.718" endtime="20241124 00:08:03.718"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.712" endtime="20241124 00:08:03.718"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.719" endtime="20241124 00:08:03.720"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.720" endtime="20241124 00:08:03.720"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.720" endtime="20241124 00:08:03.720"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.720" endtime="20241124 00:08:03.720"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.720" endtime="20241124 00:08:03.720"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:03.720" endtime="20241124 00:08:03.720"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:03.719" endtime="20241124 00:08:03.720"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:03.725" endtime="20241124 00:08:03.725"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.727" endtime="20241124 00:08:03.727"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.721" endtime="20241124 00:08:03.727"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.728" endtime="20241124 00:08:03.729"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.729" endtime="20241124 00:08:03.729"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.729" endtime="20241124 00:08:03.729"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.729" endtime="20241124 00:08:03.729"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.729" endtime="20241124 00:08:03.729"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:03.729" endtime="20241124 00:08:03.729"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:03.727" endtime="20241124 00:08:03.730"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.731" endtime="20241124 00:08:03.731"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.730" endtime="20241124 00:08:03.731"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 00:08:03.737" endtime="20241124 00:08:03.737"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:03.737" endtime="20241124 00:08:03.737"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:03.732" endtime="20241124 00:08:03.737"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.485" endtime="20241124 00:08:03.737"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:03.737" endtime="20241124 00:08:03.739"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 00:08:04.753" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241124 00:08:03.739" endtime="20241124 00:08:04.753"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 00:08:04.753" endtime="20241124 00:08:04.753"/>
</return>
<msg timestamp="20241124 00:08:04.754" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 00:08:03.484" endtime="20241124 00:08:04.754"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.755" level="INFO">${key} = testCaseFlowSequenceId:46::flowActionSequenceId:42</msg>
<status status="PASS" starttime="20241124 00:08:04.755" endtime="20241124 00:08:04.755"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'NOT_VISIBLE', 'useCustomTargetV...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.756" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241124 00:08:04.756" endtime="20241124 00:08:04.756"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.757" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241124 00:08:04.756" endtime="20241124 00:08:04.757"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.757" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 00:08:04.757" endtime="20241124 00:08:04.757"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.758" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 00:08:04.757" endtime="20241124 00:08:04.758"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.758" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.758" endtime="20241124 00:08:04.758"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.759" level="INFO">${customTargetValue} = NOT_VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:04.758" endtime="20241124 00:08:04.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.759" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241124 00:08:04.759" endtime="20241124 00:08:04.759"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:04.760" endtime="20241124 00:08:04.762"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:04.765" endtime="20241124 00:08:04.765"/>
</kw>
<msg timestamp="20241124 00:08:04.766" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.764" endtime="20241124 00:08:04.766"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.767" level="INFO">${values} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:04.766" endtime="20241124 00:08:04.767"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.767" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.767" endtime="20241124 00:08:04.767"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.767" endtime="20241124 00:08:04.767"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.768" endtime="20241124 00:08:04.768"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.768" endtime="20241124 00:08:04.768"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.767" endtime="20241124 00:08:04.768"/>
</if>
<status status="PASS" starttime="20241124 00:08:04.766" endtime="20241124 00:08:04.768"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.766" endtime="20241124 00:08:04.768"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:04.768" endtime="20241124 00:08:04.768"/>
</return>
<msg timestamp="20241124 00:08:04.768" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.764" endtime="20241124 00:08:04.768"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 00:08:04.771" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241124 00:08:04.770" endtime="20241124 00:08:04.771"/>
</kw>
<msg timestamp="20241124 00:08:04.771" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:04.770" endtime="20241124 00:08:04.771"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.772" endtime="20241124 00:08:04.772"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.772" endtime="20241124 00:08:04.772"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.772" endtime="20241124 00:08:04.772"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.772" endtime="20241124 00:08:04.773"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.772" endtime="20241124 00:08:04.773"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:04.772" endtime="20241124 00:08:04.773"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:04.771" endtime="20241124 00:08:04.773"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.771" endtime="20241124 00:08:04.773"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:04.773" endtime="20241124 00:08:04.773"/>
</return>
<msg timestamp="20241124 00:08:04.773" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:04.770" endtime="20241124 00:08:04.773"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:04.773" endtime="20241124 00:08:04.774"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:04.774" endtime="20241124 00:08:04.774"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:04.774" endtime="20241124 00:08:04.775"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.775" endtime="20241124 00:08:04.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.776" endtime="20241124 00:08:04.776"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.775" endtime="20241124 00:08:04.776"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:04.775" endtime="20241124 00:08:04.776"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.776" endtime="20241124 00:08:04.776"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.776" endtime="20241124 00:08:04.777"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.776" endtime="20241124 00:08:04.777"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:04.776" endtime="20241124 00:08:04.777"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:04.775" endtime="20241124 00:08:04.777"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.775" endtime="20241124 00:08:04.777"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.779" endtime="20241124 00:08:04.779"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.778" endtime="20241124 00:08:04.779"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:04.778" endtime="20241124 00:08:04.779"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.779" endtime="20241124 00:08:04.779"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.780" endtime="20241124 00:08:04.780"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.779" endtime="20241124 00:08:04.780"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:04.779" endtime="20241124 00:08:04.780"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:04.778" endtime="20241124 00:08:04.780"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.777" endtime="20241124 00:08:04.780"/>
</if>
<status status="PASS" starttime="20241124 00:08:04.756" endtime="20241124 00:08:04.780"/>
</iter>
<status status="PASS" starttime="20241124 00:08:04.755" endtime="20241124 00:08:04.780"/>
</for>
<status status="PASS" starttime="20241124 00:08:04.754" endtime="20241124 00:08:04.780"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:04.783" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '108', 'status': 'COMPLETED', 'actionName': 'Set login username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username', 'inputValue': 'bharani@ideas2it.com', 'errorM...</msg>
<status status="PASS" starttime="20241124 00:08:04.782" endtime="20241124 00:08:04.783"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:04.784" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "108", "status": "COMPLETED", "actionName": "Set login username", "actionType": "TYPE_TEXT", "actionXpath": "id=username", "inputValue": "bharani@ideas2it.com", "errorM...</msg>
<status status="PASS" starttime="20241124 00:08:04.784" endtime="20241124 00:08:04.784"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:04.788" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:04.788" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:04.784" endtime="20241124 00:08:04.788"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:04.789" endtime="20241124 00:08:04.790"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:04.791" endtime="20241124 00:08:04.791"/>
</return>
<status status="PASS" starttime="20241124 00:08:04.783" endtime="20241124 00:08:04.792"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.780" endtime="20241124 00:08:04.792"/>
</kw>
<status status="PASS" starttime="20241124 00:08:03.481" endtime="20241124 00:08:04.792"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.793" endtime="20241124 00:08:04.794"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 00:08:04.794" endtime="20241124 00:08:04.794"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.794" endtime="20241124 00:08:04.794"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.793" endtime="20241124 00:08:04.794"/>
</branch>
<status status="PASS" starttime="20241124 00:08:03.481" endtime="20241124 00:08:04.794"/>
</try>
<status status="PASS" starttime="20241124 00:08:03.481" endtime="20241124 00:08:04.794"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-22T04:20:41.481Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.795" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241124 00:08:04.795" endtime="20241124 00:08:04.796"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:04.796" endtime="20241124 00:08:04.796"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 00:08:04.797" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241124 00:08:04.796" endtime="20241124 00:08:04.797"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.797" endtime="20241124 00:08:04.797"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.798" endtime="20241124 00:08:04.798"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.797" endtime="20241124 00:08:04.798"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.797" endtime="20241124 00:08:04.798"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:04.799" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 00:08:04.798" endtime="20241124 00:08:04.799"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:04.799" endtime="20241124 00:08:04.799"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.799" endtime="20241124 00:08:04.799"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:04.800" endtime="20241124 00:08:04.800"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.799" endtime="20241124 00:08:04.800"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:04.818" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241124 00:08:04.809" endtime="20241124 00:08:04.819"/>
</kw>
<msg timestamp="20241124 00:08:04.819" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.809" endtime="20241124 00:08:04.819"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:04.819" endtime="20241124 00:08:04.819"/>
</return>
<status status="PASS" starttime="20241124 00:08:04.809" endtime="20241124 00:08:04.819"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.820" endtime="20241124 00:08:04.820"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.820" endtime="20241124 00:08:04.820"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.820" endtime="20241124 00:08:04.820"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.809" endtime="20241124 00:08:04.821"/>
</try>
<msg timestamp="20241124 00:08:04.821" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.808" endtime="20241124 00:08:04.821"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:04.821" endtime="20241124 00:08:04.821"/>
</return>
<status status="PASS" starttime="20241124 00:08:04.807" endtime="20241124 00:08:04.821"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:04.822" endtime="20241124 00:08:04.822"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:04.821" endtime="20241124 00:08:04.822"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.807" endtime="20241124 00:08:04.822"/>
</try>
<msg timestamp="20241124 00:08:04.823" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.807" endtime="20241124 00:08:04.823"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.828" endtime="20241124 00:08:04.828"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.829" endtime="20241124 00:08:04.829"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.828" endtime="20241124 00:08:04.830"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.828" endtime="20241124 00:08:04.830"/>
</if>
<status status="PASS" starttime="20241124 00:08:04.825" endtime="20241124 00:08:04.831"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.805" endtime="20241124 00:08:04.831"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:04.845" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241124 00:08:04.837" endtime="20241124 00:08:04.845"/>
</kw>
<msg timestamp="20241124 00:08:04.846" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.837" endtime="20241124 00:08:04.846"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:04.846" endtime="20241124 00:08:04.847"/>
</return>
<status status="PASS" starttime="20241124 00:08:04.836" endtime="20241124 00:08:04.847"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.848" endtime="20241124 00:08:04.849"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.849" endtime="20241124 00:08:04.849"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.848" endtime="20241124 00:08:04.850"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.836" endtime="20241124 00:08:04.850"/>
</try>
<msg timestamp="20241124 00:08:04.851" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.836" endtime="20241124 00:08:04.851"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:04.852" endtime="20241124 00:08:04.852"/>
</return>
<msg timestamp="20241124 00:08:04.852" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.835" endtime="20241124 00:08:04.852"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.856" endtime="20241124 00:08:04.856"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.857" endtime="20241124 00:08:04.857"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.855" endtime="20241124 00:08:04.857"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.855" endtime="20241124 00:08:04.857"/>
</if>
<status status="PASS" starttime="20241124 00:08:04.854" endtime="20241124 00:08:04.857"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.834" endtime="20241124 00:08:04.858"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:04.885" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241124 00:08:04.868" endtime="20241124 00:08:04.885"/>
</kw>
<msg timestamp="20241124 00:08:04.885" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.867" endtime="20241124 00:08:04.885"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:04.885" endtime="20241124 00:08:04.886"/>
</return>
<status status="PASS" starttime="20241124 00:08:04.867" endtime="20241124 00:08:04.886"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.886" endtime="20241124 00:08:04.886"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.886" endtime="20241124 00:08:04.886"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.886" endtime="20241124 00:08:04.886"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.867" endtime="20241124 00:08:04.886"/>
</try>
<msg timestamp="20241124 00:08:04.887" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.866" endtime="20241124 00:08:04.887"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:04.887" endtime="20241124 00:08:04.887"/>
</return>
<msg timestamp="20241124 00:08:04.887" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241124 00:08:04.863" endtime="20241124 00:08:04.887"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.889" endtime="20241124 00:08:04.889"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.890" endtime="20241124 00:08:04.890"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.889" endtime="20241124 00:08:04.890"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.889" endtime="20241124 00:08:04.890"/>
</if>
<status status="PASS" starttime="20241124 00:08:04.888" endtime="20241124 00:08:04.890"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.861" endtime="20241124 00:08:04.890"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.803" endtime="20241124 00:08:04.890"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:04.891" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 00:08:04.891" endtime="20241124 00:08:04.891"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.893" endtime="20241124 00:08:04.893"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.893" endtime="20241124 00:08:04.893"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:04.894" endtime="20241124 00:08:04.894"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.893" endtime="20241124 00:08:04.894"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.893" endtime="20241124 00:08:04.894"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241124 00:08:04.894" endtime="20241124 00:08:04.929"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.894" endtime="20241124 00:08:04.929"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.930" endtime="20241124 00:08:04.930"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.930" endtime="20241124 00:08:04.930"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.929" endtime="20241124 00:08:04.930"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.894" endtime="20241124 00:08:04.930"/>
</try>
<status status="PASS" starttime="20241124 00:08:04.892" endtime="20241124 00:08:04.931"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.892" endtime="20241124 00:08:04.931"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.892" endtime="20241124 00:08:04.931"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.931" endtime="20241124 00:08:04.931"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.931" endtime="20241124 00:08:04.931"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.892" endtime="20241124 00:08:04.931"/>
</try>
<status status="PASS" starttime="20241124 00:08:04.802" endtime="20241124 00:08:04.932"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.800" endtime="20241124 00:08:04.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.935" endtime="20241124 00:08:04.935"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.938" endtime="20241124 00:08:04.938"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.932" endtime="20241124 00:08:04.938"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.940" endtime="20241124 00:08:04.940"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.938" endtime="20241124 00:08:04.941"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.945" endtime="20241124 00:08:04.946"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.941" endtime="20241124 00:08:04.946"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.949" endtime="20241124 00:08:04.950"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.946" endtime="20241124 00:08:04.950"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.952" endtime="20241124 00:08:04.952"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.950" endtime="20241124 00:08:04.952"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.953" endtime="20241124 00:08:04.953"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.954" endtime="20241124 00:08:04.954"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.954" endtime="20241124 00:08:04.954"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.954" endtime="20241124 00:08:04.954"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.954" endtime="20241124 00:08:04.954"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:04.953" endtime="20241124 00:08:04.954"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:04.952" endtime="20241124 00:08:04.954"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:04.961" endtime="20241124 00:08:04.961"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.964" endtime="20241124 00:08:04.964"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.955" endtime="20241124 00:08:04.964"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.965" endtime="20241124 00:08:04.966"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.966" endtime="20241124 00:08:04.966"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.966" endtime="20241124 00:08:04.966"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.966" endtime="20241124 00:08:04.967"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.966" endtime="20241124 00:08:04.967"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:04.966" endtime="20241124 00:08:04.967"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:04.964" endtime="20241124 00:08:04.967"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:04.973" endtime="20241124 00:08:04.973"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.977" endtime="20241124 00:08:04.977"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.967" endtime="20241124 00:08:04.977"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.978" endtime="20241124 00:08:04.978"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.979" endtime="20241124 00:08:04.979"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.978" endtime="20241124 00:08:04.979"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.979" endtime="20241124 00:08:04.979"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.979" endtime="20241124 00:08:04.979"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:04.978" endtime="20241124 00:08:04.979"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:04.977" endtime="20241124 00:08:04.979"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.982" endtime="20241124 00:08:04.982"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.979" endtime="20241124 00:08:04.982"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 00:08:04.988" endtime="20241124 00:08:04.988"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:04.988" endtime="20241124 00:08:04.988"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:04.982" endtime="20241124 00:08:04.988"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.799" endtime="20241124 00:08:04.988"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:04.989" endtime="20241124 00:08:04.990"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241124 00:08:04.990" endtime="20241124 00:08:09.995"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</return>
<msg timestamp="20241124 00:08:09.995" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 00:08:04.798" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${key} = testCaseFlowSequenceId:46::flowActionSequenceId:44</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'NOT_VISIBLE', 'useCustomTargetV...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${customTargetValue} = NOT_VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<msg timestamp="20241124 00:08:09.995" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${values} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:09.995" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</branch>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</if>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</branch>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</return>
<msg timestamp="20241124 00:08:09.995" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:09.995"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 00:08:10.011" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<msg timestamp="20241124 00:08:10.011" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:10.011"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</return>
<msg timestamp="20241124 00:08:10.011" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</if>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:10.011"/>
</iter>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:10.011"/>
</for>
<status status="PASS" starttime="20241124 00:08:09.995" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:10.011" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '109', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '',...</msg>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:10.011" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "109", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue":...</msg>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.011"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:10.026" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:10.026" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.026"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.026"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.026"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.026"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.011" endtime="20241124 00:08:10.026"/>
</kw>
<status status="PASS" starttime="20241124 00:08:04.795" endtime="20241124 00:08:10.026"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.026"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.026"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.026"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.026"/>
</branch>
<status status="PASS" starttime="20241124 00:08:04.795" endtime="20241124 00:08:10.026"/>
</try>
<status status="PASS" starttime="20241124 00:08:04.795" endtime="20241124 00:08:10.026"/>
</iter>
<status status="PASS" starttime="20241124 00:07:55.560" endtime="20241124 00:08:10.026"/>
</for>
<status status="PASS" starttime="20241124 00:07:55.560" endtime="20241124 00:08:10.026"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.560" endtime="20241124 00:08:10.026"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:10.026" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '31', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.026"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:10.026" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "31", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.026"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:10.042" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:10.042" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.042"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.042"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.026" endtime="20241124 00:08:10.042"/>
</kw>
<status status="PASS" starttime="20241124 00:07:55.548" endtime="20241124 00:08:10.042"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</branch>
<status status="PASS" starttime="20241124 00:07:55.548" endtime="20241124 00:08:10.042"/>
</try>
<status status="PASS" starttime="20241124 00:07:55.547" endtime="20241124 00:08:10.042"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-23T18:25:25.107Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.042" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<msg timestamp="20241124 00:08:10.042" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.042" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.042" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</return>
<msg timestamp="20241124 00:08:10.042" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.042"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.057" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 00:08:10.057" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.057" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.057"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:10.073" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</kw>
<msg timestamp="20241124 00:08:10.073" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</try>
<msg timestamp="20241124 00:08:10.073" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</try>
<msg timestamp="20241124 00:08:10.073" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.073"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.073"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:10.089" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.089"/>
</kw>
<msg timestamp="20241124 00:08:10.089" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.089"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.089"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.089"/>
</try>
<msg timestamp="20241124 00:08:10.089" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.089"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</return>
<msg timestamp="20241124 00:08:10.089" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.089"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.089"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.073" endtime="20241124 00:08:10.089"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:10.104" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.104"/>
</kw>
<msg timestamp="20241124 00:08:10.104" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.104"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.104"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.104"/>
</try>
<msg timestamp="20241124 00:08:10.104" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.104"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</return>
<msg timestamp="20241124 00:08:10.104" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.104"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.089" endtime="20241124 00:08:10.104"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.104"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:10.104" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.104"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.152"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.153"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.153" endtime="20241124 00:08:10.153"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.153" endtime="20241124 00:08:10.153"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.153" endtime="20241124 00:08:10.153"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.153"/>
</try>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.154"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.154"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.154"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.154" endtime="20241124 00:08:10.154"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.154" endtime="20241124 00:08:10.154"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.104" endtime="20241124 00:08:10.154"/>
</try>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.155"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.155"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.155"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.168" endtime="20241124 00:08:10.168"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.169" endtime="20241124 00:08:10.169"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.168" endtime="20241124 00:08:10.169"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.169" endtime="20241124 00:08:10.169"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.169" endtime="20241124 00:08:10.169"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.168" endtime="20241124 00:08:10.169"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.155" endtime="20241124 00:08:10.169"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:10.174" endtime="20241124 00:08:10.174"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.177" endtime="20241124 00:08:10.177"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.169" endtime="20241124 00:08:10.177"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.178" endtime="20241124 00:08:10.178"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.178" endtime="20241124 00:08:10.178"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.178" endtime="20241124 00:08:10.178"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.179" endtime="20241124 00:08:10.179"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.178" endtime="20241124 00:08:10.179"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.178" endtime="20241124 00:08:10.179"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.177" endtime="20241124 00:08:10.179"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:10.184" endtime="20241124 00:08:10.184"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.186" endtime="20241124 00:08:10.186"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.179" endtime="20241124 00:08:10.187"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.188" endtime="20241124 00:08:10.188"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.188" endtime="20241124 00:08:10.188"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.188" endtime="20241124 00:08:10.188"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.188" endtime="20241124 00:08:10.188"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.188" endtime="20241124 00:08:10.188"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.188" endtime="20241124 00:08:10.188"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.187" endtime="20241124 00:08:10.188"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.190" endtime="20241124 00:08:10.190"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.189" endtime="20241124 00:08:10.190"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.195" endtime="20241124 00:08:10.195"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.196" endtime="20241124 00:08:10.196"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.190" endtime="20241124 00:08:10.196"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.196"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.196" endtime="20241124 00:08:10.196"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 00:08:10.197" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 00:08:10.197" endtime="20241124 00:08:10.197"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 00:08:10.197" endtime="20241124 00:08:10.197"/>
</return>
<msg timestamp="20241124 00:08:10.197" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.197"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.198" level="INFO">${key} = testCaseFlowSequenceId:47::flowActionSequenceId:45</msg>
<status status="PASS" starttime="20241124 00:08:10.198" endtime="20241124 00:08:10.198"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'NOT_VISIBLE', 'useCustomTargetV...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.199" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241124 00:08:10.199" endtime="20241124 00:08:10.199"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.200" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241124 00:08:10.199" endtime="20241124 00:08:10.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.200" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.200" endtime="20241124 00:08:10.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.201" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 00:08:10.200" endtime="20241124 00:08:10.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.201" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.201" endtime="20241124 00:08:10.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.202" level="INFO">${customTargetValue} = NOT_VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:10.201" endtime="20241124 00:08:10.202"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.202" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241124 00:08:10.202" endtime="20241124 00:08:10.202"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.202" endtime="20241124 00:08:10.203"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.205" endtime="20241124 00:08:10.205"/>
</kw>
<msg timestamp="20241124 00:08:10.205" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.204" endtime="20241124 00:08:10.205"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.206" level="INFO">${values} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:10.206" endtime="20241124 00:08:10.206"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.207" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.207" endtime="20241124 00:08:10.207"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.206" endtime="20241124 00:08:10.207"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.207" endtime="20241124 00:08:10.207"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.207" endtime="20241124 00:08:10.207"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.206" endtime="20241124 00:08:10.207"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.206" endtime="20241124 00:08:10.207"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.205" endtime="20241124 00:08:10.207"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:10.208" endtime="20241124 00:08:10.208"/>
</return>
<msg timestamp="20241124 00:08:10.208" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.204" endtime="20241124 00:08:10.208"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 00:08:10.211" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241124 00:08:10.210" endtime="20241124 00:08:10.211"/>
</kw>
<msg timestamp="20241124 00:08:10.211" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.209" endtime="20241124 00:08:10.211"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.211" endtime="20241124 00:08:10.211"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.212" endtime="20241124 00:08:10.212"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.211" endtime="20241124 00:08:10.212"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.212" endtime="20241124 00:08:10.212"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.212" endtime="20241124 00:08:10.212"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.211" endtime="20241124 00:08:10.212"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.211" endtime="20241124 00:08:10.212"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.211" endtime="20241124 00:08:10.212"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:10.212" endtime="20241124 00:08:10.212"/>
</return>
<msg timestamp="20241124 00:08:10.213" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.209" endtime="20241124 00:08:10.213"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.213" endtime="20241124 00:08:10.214"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.214" endtime="20241124 00:08:10.214"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.214" endtime="20241124 00:08:10.215"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.216" endtime="20241124 00:08:10.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.216" endtime="20241124 00:08:10.216"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.215" endtime="20241124 00:08:10.216"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.215" endtime="20241124 00:08:10.216"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.217" endtime="20241124 00:08:10.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.217" endtime="20241124 00:08:10.217"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.216" endtime="20241124 00:08:10.217"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.216" endtime="20241124 00:08:10.217"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.215" endtime="20241124 00:08:10.218"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.215" endtime="20241124 00:08:10.218"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.219" endtime="20241124 00:08:10.219"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.219" endtime="20241124 00:08:10.219"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.218" endtime="20241124 00:08:10.219"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.219" endtime="20241124 00:08:10.219"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.219" endtime="20241124 00:08:10.220"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.219" endtime="20241124 00:08:10.220"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.219" endtime="20241124 00:08:10.220"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.218" endtime="20241124 00:08:10.220"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.218" endtime="20241124 00:08:10.220"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.199" endtime="20241124 00:08:10.220"/>
</iter>
<status status="PASS" starttime="20241124 00:08:10.199" endtime="20241124 00:08:10.220"/>
</for>
<status status="PASS" starttime="20241124 00:08:10.198" endtime="20241124 00:08:10.220"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:10.222" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '110', 'status': 'COMPLETED', 'actionName': 'Click Profile image icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage':...</msg>
<status status="PASS" starttime="20241124 00:08:10.221" endtime="20241124 00:08:10.222"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:10.223" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "110", "status": "COMPLETED", "actionName": "Click Profile image icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage":...</msg>
<status status="PASS" starttime="20241124 00:08:10.222" endtime="20241124 00:08:10.223"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:10.270" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:10.270" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:10.223" endtime="20241124 00:08:10.270"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.270" endtime="20241124 00:08:10.271"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:10.271" endtime="20241124 00:08:10.271"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.222" endtime="20241124 00:08:10.271"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.220" endtime="20241124 00:08:10.272"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.272"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.272" endtime="20241124 00:08:10.272"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.273" endtime="20241124 00:08:10.273"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.273" endtime="20241124 00:08:10.273"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.272" endtime="20241124 00:08:10.273"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.057" endtime="20241124 00:08:10.273"/>
</try>
<status status="PASS" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.274"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.275" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241124 00:08:10.274" endtime="20241124 00:08:10.275"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.275" endtime="20241124 00:08:10.276"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 00:08:10.276" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241124 00:08:10.276" endtime="20241124 00:08:10.276"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.277" endtime="20241124 00:08:10.277"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.277" endtime="20241124 00:08:10.277"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.277" endtime="20241124 00:08:10.278"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.277" endtime="20241124 00:08:10.278"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.278" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 00:08:10.278" endtime="20241124 00:08:10.278"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.279" endtime="20241124 00:08:10.279"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.279" endtime="20241124 00:08:10.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.279" endtime="20241124 00:08:10.279"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.279" endtime="20241124 00:08:10.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:10.290" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241124 00:08:10.289" endtime="20241124 00:08:10.290"/>
</kw>
<msg timestamp="20241124 00:08:10.290" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.289" endtime="20241124 00:08:10.290"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.288" endtime="20241124 00:08:10.290"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.288" endtime="20241124 00:08:10.290"/>
</try>
<msg timestamp="20241124 00:08:10.290" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.288" endtime="20241124 00:08:10.290"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.287" endtime="20241124 00:08:10.290"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.287" endtime="20241124 00:08:10.290"/>
</try>
<msg timestamp="20241124 00:08:10.290" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.286" endtime="20241124 00:08:10.290"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.290"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.284" endtime="20241124 00:08:10.290"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:10.309" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241124 00:08:10.304" endtime="20241124 00:08:10.309"/>
</kw>
<msg timestamp="20241124 00:08:10.309" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.303" endtime="20241124 00:08:10.309"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.309" endtime="20241124 00:08:10.309"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.302" endtime="20241124 00:08:10.309"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.309" endtime="20241124 00:08:10.309"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.309" endtime="20241124 00:08:10.309"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.309" endtime="20241124 00:08:10.309"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.302" endtime="20241124 00:08:10.318"/>
</try>
<msg timestamp="20241124 00:08:10.318" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.302" endtime="20241124 00:08:10.318"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.318" endtime="20241124 00:08:10.318"/>
</return>
<msg timestamp="20241124 00:08:10.319" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.319"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.320"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.320"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.320"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.320"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.320"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.290" endtime="20241124 00:08:10.320"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:10.336" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.336"/>
</kw>
<msg timestamp="20241124 00:08:10.336" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.336"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.336"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.336"/>
</try>
<msg timestamp="20241124 00:08:10.336" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.336"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</return>
<msg timestamp="20241124 00:08:10.336" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.336"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.320" endtime="20241124 00:08:10.336"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.282" endtime="20241124 00:08:10.336"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:10.336" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.336"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.570"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.571"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.571" endtime="20241124 00:08:10.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.572" endtime="20241124 00:08:10.572"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.571" endtime="20241124 00:08:10.572"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.572"/>
</try>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.573"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.573"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.573"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.574" endtime="20241124 00:08:10.574"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.573" endtime="20241124 00:08:10.574"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.336" endtime="20241124 00:08:10.574"/>
</try>
<status status="PASS" starttime="20241124 00:08:10.281" endtime="20241124 00:08:10.574"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.280" endtime="20241124 00:08:10.574"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.577" endtime="20241124 00:08:10.577"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.582" endtime="20241124 00:08:10.582"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.574" endtime="20241124 00:08:10.582"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.584" endtime="20241124 00:08:10.584"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.582" endtime="20241124 00:08:10.584"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.590" endtime="20241124 00:08:10.590"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.585" endtime="20241124 00:08:10.590"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.593" endtime="20241124 00:08:10.593"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.590" endtime="20241124 00:08:10.593"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.595" endtime="20241124 00:08:10.595"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.593" endtime="20241124 00:08:10.595"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.596" endtime="20241124 00:08:10.596"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.597" endtime="20241124 00:08:10.597"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.597" endtime="20241124 00:08:10.597"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.598" endtime="20241124 00:08:10.599"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.597" endtime="20241124 00:08:10.600"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.597" endtime="20241124 00:08:10.600"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.595" endtime="20241124 00:08:10.600"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:10.608" endtime="20241124 00:08:10.609"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.615" endtime="20241124 00:08:10.615"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.600" endtime="20241124 00:08:10.615"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.618" endtime="20241124 00:08:10.619"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.619" endtime="20241124 00:08:10.620"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.619" endtime="20241124 00:08:10.620"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.621" endtime="20241124 00:08:10.621"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.620" endtime="20241124 00:08:10.621"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.619" endtime="20241124 00:08:10.621"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.616" endtime="20241124 00:08:10.621"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:10.630" endtime="20241124 00:08:10.630"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.634" endtime="20241124 00:08:10.635"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.621" endtime="20241124 00:08:10.635"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.638" endtime="20241124 00:08:10.638"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.638" endtime="20241124 00:08:10.639"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.638" endtime="20241124 00:08:10.639"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.639" endtime="20241124 00:08:10.639"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.639" endtime="20241124 00:08:10.639"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.638" endtime="20241124 00:08:10.639"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.636" endtime="20241124 00:08:10.639"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.642" endtime="20241124 00:08:10.642"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.640" endtime="20241124 00:08:10.642"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.649" endtime="20241124 00:08:10.649"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.650" endtime="20241124 00:08:10.650"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.643" endtime="20241124 00:08:10.650"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.278" endtime="20241124 00:08:10.650"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.650" endtime="20241124 00:08:10.652"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 00:08:10.653" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 00:08:10.652" endtime="20241124 00:08:10.653"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 00:08:10.653" endtime="20241124 00:08:10.653"/>
</return>
<msg timestamp="20241124 00:08:10.654" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 00:08:10.278" endtime="20241124 00:08:10.654"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.656" level="INFO">${key} = testCaseFlowSequenceId:47::flowActionSequenceId:46</msg>
<status status="PASS" starttime="20241124 00:08:10.655" endtime="20241124 00:08:10.656"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'NOT_VISIBLE', 'useCustomTargetV...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.657" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241124 00:08:10.656" endtime="20241124 00:08:10.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.657" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241124 00:08:10.657" endtime="20241124 00:08:10.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.658" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.658" endtime="20241124 00:08:10.658"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.659" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 00:08:10.658" endtime="20241124 00:08:10.659"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.660" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.659" endtime="20241124 00:08:10.660"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.661" level="INFO">${customTargetValue} = NOT_VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:10.661" endtime="20241124 00:08:10.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.661" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241124 00:08:10.661" endtime="20241124 00:08:10.661"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.667" endtime="20241124 00:08:10.669"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.674" endtime="20241124 00:08:10.675"/>
</kw>
<msg timestamp="20241124 00:08:10.676" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.673" endtime="20241124 00:08:10.676"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.679" level="INFO">${values} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:10.678" endtime="20241124 00:08:10.679"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.680" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.680" endtime="20241124 00:08:10.680"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.679" endtime="20241124 00:08:10.680"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.680" endtime="20241124 00:08:10.680"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.680" endtime="20241124 00:08:10.680"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.679" endtime="20241124 00:08:10.681"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.677" endtime="20241124 00:08:10.681"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.677" endtime="20241124 00:08:10.681"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:10.681" endtime="20241124 00:08:10.681"/>
</return>
<msg timestamp="20241124 00:08:10.681" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.671" endtime="20241124 00:08:10.681"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 00:08:10.691" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241124 00:08:10.690" endtime="20241124 00:08:10.691"/>
</kw>
<msg timestamp="20241124 00:08:10.692" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.689" endtime="20241124 00:08:10.692"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.692" endtime="20241124 00:08:10.692"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.693" endtime="20241124 00:08:10.693"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.693" endtime="20241124 00:08:10.693"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.693" endtime="20241124 00:08:10.693"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.693" endtime="20241124 00:08:10.693"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.693" endtime="20241124 00:08:10.694"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.692" endtime="20241124 00:08:10.694"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.692" endtime="20241124 00:08:10.694"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:10.694" endtime="20241124 00:08:10.694"/>
</return>
<msg timestamp="20241124 00:08:10.694" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.686" endtime="20241124 00:08:10.694"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.695" endtime="20241124 00:08:10.695"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.696" endtime="20241124 00:08:10.697"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.698" endtime="20241124 00:08:10.699"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.706" endtime="20241124 00:08:10.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.707" endtime="20241124 00:08:10.707"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.706" endtime="20241124 00:08:10.708"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.706" endtime="20241124 00:08:10.708"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.709" endtime="20241124 00:08:10.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.709" endtime="20241124 00:08:10.709"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.708" endtime="20241124 00:08:10.709"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.708" endtime="20241124 00:08:10.710"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.704" endtime="20241124 00:08:10.710"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.699" endtime="20241124 00:08:10.710"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.711" endtime="20241124 00:08:10.712"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.711" endtime="20241124 00:08:10.712"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.711" endtime="20241124 00:08:10.712"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.713" endtime="20241124 00:08:10.713"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.713" endtime="20241124 00:08:10.714"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.712" endtime="20241124 00:08:10.714"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.712" endtime="20241124 00:08:10.714"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.711" endtime="20241124 00:08:10.715"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.710" endtime="20241124 00:08:10.715"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.656" endtime="20241124 00:08:10.715"/>
</iter>
<status status="PASS" starttime="20241124 00:08:10.656" endtime="20241124 00:08:10.715"/>
</for>
<status status="PASS" starttime="20241124 00:08:10.654" endtime="20241124 00:08:10.716"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:10.724" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '111', 'status': 'COMPLETED', 'actionName': 'Click Profile Dropdown action', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMess...</msg>
<status status="PASS" starttime="20241124 00:08:10.723" endtime="20241124 00:08:10.724"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:10.727" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "111", "status": "COMPLETED", "actionName": "Click Profile Dropdown action", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMe...</msg>
<status status="PASS" starttime="20241124 00:08:10.726" endtime="20241124 00:08:10.727"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:10.737" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:10.738" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:10.727" endtime="20241124 00:08:10.738"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.738" endtime="20241124 00:08:10.739"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:10.740" endtime="20241124 00:08:10.740"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.725" endtime="20241124 00:08:10.740"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.716" endtime="20241124 00:08:10.741"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.274" endtime="20241124 00:08:10.741"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.742" endtime="20241124 00:08:10.742"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.742" endtime="20241124 00:08:10.743"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.743" endtime="20241124 00:08:10.744"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.741" endtime="20241124 00:08:10.744"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.274" endtime="20241124 00:08:10.744"/>
</try>
<status status="PASS" starttime="20241124 00:08:10.274" endtime="20241124 00:08:10.744"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.747" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241124 00:08:10.746" endtime="20241124 00:08:10.747"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.747" endtime="20241124 00:08:10.748"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 00:08:10.749" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241124 00:08:10.748" endtime="20241124 00:08:10.749"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.750" endtime="20241124 00:08:10.751"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.752" endtime="20241124 00:08:10.752"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.749" endtime="20241124 00:08:10.752"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.749" endtime="20241124 00:08:10.753"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.755" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 00:08:10.754" endtime="20241124 00:08:10.755"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.756" endtime="20241124 00:08:10.756"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.755" endtime="20241124 00:08:10.756"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.757" endtime="20241124 00:08:10.758"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.757" endtime="20241124 00:08:10.758"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.761" endtime="20241124 00:08:10.762"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.758" endtime="20241124 00:08:10.762"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.767" endtime="20241124 00:08:10.768"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.772" endtime="20241124 00:08:10.773"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.762" endtime="20241124 00:08:10.773"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.776" endtime="20241124 00:08:10.777"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.773" endtime="20241124 00:08:10.778"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.782" endtime="20241124 00:08:10.783"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.778" endtime="20241124 00:08:10.783"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.789" endtime="20241124 00:08:10.789"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.784" endtime="20241124 00:08:10.789"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.790" endtime="20241124 00:08:10.791"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.789" endtime="20241124 00:08:10.791"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.792" endtime="20241124 00:08:10.793"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.793" endtime="20241124 00:08:10.793"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.793" endtime="20241124 00:08:10.793"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.794" endtime="20241124 00:08:10.794"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.793" endtime="20241124 00:08:10.794"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.793" endtime="20241124 00:08:10.794"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.791" endtime="20241124 00:08:10.794"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:10.807" endtime="20241124 00:08:10.807"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.813" endtime="20241124 00:08:10.813"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.795" endtime="20241124 00:08:10.813"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.815" endtime="20241124 00:08:10.815"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.816" endtime="20241124 00:08:10.816"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.815" endtime="20241124 00:08:10.816"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.816" endtime="20241124 00:08:10.816"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.816" endtime="20241124 00:08:10.816"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.815" endtime="20241124 00:08:10.816"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.813" endtime="20241124 00:08:10.816"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 00:08:10.826" endtime="20241124 00:08:10.826"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.836" endtime="20241124 00:08:10.837"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.817" endtime="20241124 00:08:10.837"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 00:08:10.852" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241124 00:08:10.845" endtime="20241124 00:08:10.852"/>
</kw>
<msg timestamp="20241124 00:08:10.852" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.844" endtime="20241124 00:08:10.852"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.852" endtime="20241124 00:08:10.853"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.844" endtime="20241124 00:08:10.853"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.853" endtime="20241124 00:08:10.853"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.854" endtime="20241124 00:08:10.854"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.853" endtime="20241124 00:08:10.854"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.844" endtime="20241124 00:08:10.854"/>
</try>
<msg timestamp="20241124 00:08:10.855" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.844" endtime="20241124 00:08:10.855"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 00:08:10.855" endtime="20241124 00:08:10.855"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.842" endtime="20241124 00:08:10.855"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 00:08:10.855" endtime="20241124 00:08:10.856"/>
</return>
<status status="NOT RUN" starttime="20241124 00:08:10.855" endtime="20241124 00:08:10.856"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.841" endtime="20241124 00:08:10.856"/>
</try>
<msg timestamp="20241124 00:08:10.856" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.841" endtime="20241124 00:08:10.856"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.857" level="INFO">${value} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:10.857" endtime="20241124 00:08:10.857"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.857" endtime="20241124 00:08:10.858"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>NOT_VISIBLE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.858" endtime="20241124 00:08:10.858"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.858" endtime="20241124 00:08:10.858"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.856" endtime="20241124 00:08:10.859"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.838" endtime="20241124 00:08:10.859"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.862" endtime="20241124 00:08:10.863"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.859" endtime="20241124 00:08:10.863"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.870" endtime="20241124 00:08:10.871"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.871" endtime="20241124 00:08:10.871"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.863" endtime="20241124 00:08:10.871"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.755" endtime="20241124 00:08:10.871"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.871" endtime="20241124 00:08:10.872"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 00:08:10.872" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 00:08:10.872" endtime="20241124 00:08:10.872"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 00:08:10.873" endtime="20241124 00:08:10.873"/>
</return>
<msg timestamp="20241124 00:08:10.873" level="INFO">${value} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:10.753" endtime="20241124 00:08:10.873"/>
</kw>
<kw name="perform-assertion">
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.874" level="INFO">${key} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241124 00:08:10.874" endtime="20241124 00:08:10.874"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '10', 'testCaseId': '27', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:47::flowActionSequenceId:47', 'target': None, 'customTargetValue': 'NOT_VISIBLE', 'useCustomTargetV...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.875" level="INFO">${source} = testCaseFlowSequenceId:47::flowActionSequenceId:47</msg>
<status status="PASS" starttime="20241124 00:08:10.875" endtime="20241124 00:08:10.875"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.876" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241124 00:08:10.875" endtime="20241124 00:08:10.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.876" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.876" endtime="20241124 00:08:10.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.877" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 00:08:10.877" endtime="20241124 00:08:10.877"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.877" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.877" endtime="20241124 00:08:10.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.878" level="INFO">${customTargetValue} = NOT_VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:10.878" endtime="20241124 00:08:10.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.878" level="INFO">${errorMessage} = Not equal</msg>
<status status="PASS" starttime="20241124 00:08:10.878" endtime="20241124 00:08:10.879"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.879" endtime="20241124 00:08:10.880"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 00:08:10.882" endtime="20241124 00:08:10.882"/>
</kw>
<msg timestamp="20241124 00:08:10.882" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.882" endtime="20241124 00:08:10.882"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.883" level="INFO">${values} = VISIBLE</msg>
<status status="PASS" starttime="20241124 00:08:10.883" endtime="20241124 00:08:10.883"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 00:08:10.885" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.884" endtime="20241124 00:08:10.885"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.884" endtime="20241124 00:08:10.885"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.886" endtime="20241124 00:08:10.886"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.885" endtime="20241124 00:08:10.886"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.883" endtime="20241124 00:08:10.886"/>
</if>
<status status="PASS" starttime="20241124 00:08:10.883" endtime="20241124 00:08:10.886"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.882" endtime="20241124 00:08:10.886"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:10.886" endtime="20241124 00:08:10.887"/>
</return>
<msg timestamp="20241124 00:08:10.887" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241124 00:08:10.881" endtime="20241124 00:08:10.887"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 00:08:10.891" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241124 00:08:10.890" endtime="20241124 00:08:10.891"/>
</kw>
<msg timestamp="20241124 00:08:10.891" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.890" endtime="20241124 00:08:10.891"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.892" endtime="20241124 00:08:10.892"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.892" endtime="20241124 00:08:10.893"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.892" endtime="20241124 00:08:10.893"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.893" endtime="20241124 00:08:10.893"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.893" endtime="20241124 00:08:10.893"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.892" endtime="20241124 00:08:10.893"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.892" endtime="20241124 00:08:10.893"/>
</branch>
<status status="PASS" starttime="20241124 00:08:10.891" endtime="20241124 00:08:10.893"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 00:08:10.893" endtime="20241124 00:08:10.893"/>
</return>
<msg timestamp="20241124 00:08:10.894" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 00:08:10.888" endtime="20241124 00:08:10.894"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.894" endtime="20241124 00:08:10.894"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${source}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.895" endtime="20241124 00:08:10.895"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${target}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.895" endtime="20241124 00:08:10.896"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${customTargetValue}-${errorMessage}-1</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.898" endtime="20241124 00:08:10.898"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20241124 00:08:10.899" level="FAIL">Not equal: VISIBLE != NOT_VISIBLE</msg>
<status status="FAIL" starttime="20241124 00:08:10.899" endtime="20241124 00:08:10.899"/>
</kw>
<status status="FAIL" starttime="20241124 00:08:10.897" endtime="20241124 00:08:10.900"/>
</branch>
<status status="FAIL" starttime="20241124 00:08:10.897" endtime="20241124 00:08:10.900"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]-${ACCUMULATION}[${target}]-${errorMessage}-2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.900" endtime="20241124 00:08:10.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.901" endtime="20241124 00:08:10.901"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.900" endtime="20241124 00:08:10.901"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.900" endtime="20241124 00:08:10.901"/>
</if>
<status status="FAIL" starttime="20241124 00:08:10.896" endtime="20241124 00:08:10.901"/>
</branch>
<status status="FAIL" starttime="20241124 00:08:10.896" endtime="20241124 00:08:10.901"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.902" endtime="20241124 00:08:10.903"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.902" endtime="20241124 00:08:10.903"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.902" endtime="20241124 00:08:10.903"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="Log To Console" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]-${ACCUMULATION}[${source}]-${errorMessage}-4</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.903" endtime="20241124 00:08:10.903"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 00:08:10.903" endtime="20241124 00:08:10.903"/>
</kw>
<status status="NOT RUN" starttime="20241124 00:08:10.903" endtime="20241124 00:08:10.903"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.903" endtime="20241124 00:08:10.903"/>
</if>
<status status="NOT RUN" starttime="20241124 00:08:10.902" endtime="20241124 00:08:10.903"/>
</branch>
<status status="NOT RUN" starttime="20241124 00:08:10.902" endtime="20241124 00:08:10.904"/>
</if>
<status status="FAIL" starttime="20241124 00:08:10.875" endtime="20241124 00:08:10.904"/>
</iter>
<status status="FAIL" starttime="20241124 00:08:10.874" endtime="20241124 00:08:10.904"/>
</for>
<status status="FAIL" starttime="20241124 00:08:10.873" endtime="20241124 00:08:10.905"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.905" endtime="20241124 00:08:10.905"/>
</kw>
<status status="FAIL" starttime="20241124 00:08:10.745" endtime="20241124 00:08:10.905"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.906" endtime="20241124 00:08:10.906"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${action}[xpath]</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:10.908" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '112', 'status': 'FAILED', 'actionName': 'Is Name heading visible', 'actionType': 'IS_ELEMENT_VISIBLE', 'actionXpath': '//h4[text()="bharani deepan"]', 'inputValue': ''...</msg>
<status status="PASS" starttime="20241124 00:08:10.907" endtime="20241124 00:08:10.908"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:10.909" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "112", "status": "FAILED", "actionName": "Is Name heading visible", "actionType": "IS_ELEMENT_VISIBLE", "actionXpath": "//h4[text()=\"bharani deepan\"]", "inputValue": ...</msg>
<status status="PASS" starttime="20241124 00:08:10.909" endtime="20241124 00:08:10.909"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:10.915" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:10.916" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:10.909" endtime="20241124 00:08:10.916"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.919" endtime="20241124 00:08:10.920"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:10.921" endtime="20241124 00:08:10.921"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.908" endtime="20241124 00:08:10.921"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.906" endtime="20241124 00:08:10.921"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.922" endtime="20241124 00:08:10.923"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 00:08:10.924" level="FAIL">Not equal: VISIBLE != NOT_VISIBLE</msg>
<status status="FAIL" starttime="20241124 00:08:10.924" endtime="20241124 00:08:10.924"/>
</kw>
<status status="FAIL" starttime="20241124 00:08:10.922" endtime="20241124 00:08:10.925"/>
</kw>
<status status="FAIL" starttime="20241124 00:08:10.905" endtime="20241124 00:08:10.926"/>
</branch>
<status status="FAIL" starttime="20241124 00:08:10.745" endtime="20241124 00:08:10.926"/>
</try>
<status status="FAIL" starttime="20241124 00:08:10.745" endtime="20241124 00:08:10.926"/>
</iter>
<status status="FAIL" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.926"/>
</for>
<status status="FAIL" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.927"/>
</branch>
<status status="FAIL" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.927"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241124 00:08:10.928" endtime="20241124 00:08:10.928"/>
</kw>
<status status="FAIL" starttime="20241124 00:08:10.042" endtime="20241124 00:08:10.928"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.929" endtime="20241124 00:08:10.930"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 00:08:10.935" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '32', 'status': 'FAILED', 'errorMessage': 'Not equal: VISIBLE != NOT_VISIBLE'}</msg>
<status status="PASS" starttime="20241124 00:08:10.933" endtime="20241124 00:08:10.935"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 00:08:10.939" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "32", "status": "FAILED", "errorMessage": "Not equal: VISIBLE != NOT_VISIBLE"}</msg>
<status status="PASS" starttime="20241124 00:08:10.938" endtime="20241124 00:08:10.939"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 00:08:10.948" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 00:08:10.948" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000288DCE86430&gt;</msg>
<status status="PASS" starttime="20241124 00:08:10.940" endtime="20241124 00:08:10.948"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 00:08:10.949" endtime="20241124 00:08:10.949"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 00:08:10.950" endtime="20241124 00:08:10.950"/>
</return>
<status status="PASS" starttime="20241124 00:08:10.937" endtime="20241124 00:08:10.951"/>
</kw>
<status status="PASS" starttime="20241124 00:08:10.931" endtime="20241124 00:08:10.951"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>