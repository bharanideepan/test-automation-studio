<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241122 21:52:05.653" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="43">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241122 21:52:08.681" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\aa3874c9-90b1-4fd6-b2ef-3d6756a1a12d"}</msg>
<msg timestamp="20241122 21:52:09.264" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\aa3874c9-90b1-4fd6-b2ef-3d6756a1a12d"}</msg>
<status status="PASS" starttime="20241122 21:52:08.681" endtime="20241122 21:52:09.264"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241122 21:52:09.264" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241122 21:52:09.290" level="INFO">Successfully created context. </msg>
<msg timestamp="20241122 21:52:09.290" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241122 21:52:09.264" endtime="20241122 21:52:09.290"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241122 21:52:09.294" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241122 21:52:09.290" endtime="20241122 21:52:09.294"/>
</kw>
<status status="PASS" starttime="20241122 21:52:08.681" endtime="20241122 21:52:09.294"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:52:09.298" endtime="20241122 21:52:09.299"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241122 21:56:52.759" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '79', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-22T16:26:52.218Z', 'createdAt': '2024-11-22T16:26:52.218Z', 'errorMe...</msg>
<status status="PASS" starttime="20241122 21:52:09.299" endtime="20241122 21:56:52.759"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241122 21:56:52.759" endtime="20241122 21:56:52.759"/>
</break>
<status status="NOT RUN" starttime="20241122 21:56:52.759" endtime="20241122 21:56:52.759"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.759" endtime="20241122 21:56:52.759"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:56:52.759" endtime="20241122 21:56:52.765"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:56:52.767" endtime="20241122 21:56:52.767"/>
</kw>
<msg timestamp="20241122 21:56:52.767" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.767" endtime="20241122 21:56:52.767"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.773" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241122 21:56:52.773" endtime="20241122 21:56:52.773"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.773" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.773" endtime="20241122 21:56:52.773"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.773" endtime="20241122 21:56:52.773"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.773" endtime="20241122 21:56:52.773"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:56:52.773" endtime="20241122 21:56:52.773"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.773" endtime="20241122 21:56:52.773"/>
</if>
<status status="PASS" starttime="20241122 21:56:52.773" endtime="20241122 21:56:52.773"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.767" endtime="20241122 21:56:52.773"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241122 21:56:52.773" endtime="20241122 21:56:52.773"/>
</return>
<msg timestamp="20241122 21:56:52.777" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.767" endtime="20241122 21:56:52.777"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.778" endtime="20241122 21:56:52.778"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241122 21:56:52.778" endtime="20241122 21:56:52.779"/>
</return>
<status status="NOT RUN" starttime="20241122 21:56:52.778" endtime="20241122 21:56:52.780"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.777" endtime="20241122 21:56:52.780"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:56:52.784" endtime="20241122 21:56:52.784"/>
</kw>
<msg timestamp="20241122 21:56:52.784" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.784" endtime="20241122 21:56:52.784"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.786" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-22T07:35:54.969Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241122 21:56:52.784" endtime="20241122 21:56:52.786"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.786" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.786"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.786"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.786"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.786"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.786"/>
</if>
<status status="PASS" starttime="20241122 21:56:52.784" endtime="20241122 21:56:52.786"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.784" endtime="20241122 21:56:52.786"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.786"/>
</return>
<msg timestamp="20241122 21:56:52.786" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.784" endtime="20241122 21:56:52.786"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.786"/>
</kw>
<msg timestamp="20241122 21:56:52.792" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.792"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.793" level="INFO">${values} = {'id': '79', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-22T16:26:52.218Z', 'createdAt': '2024-11-22T16:26:52.218Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.793"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.793" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.793"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.793"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.793"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.793"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.793"/>
</if>
<status status="PASS" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.793"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.792" endtime="20241122 21:56:52.793"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.793"/>
</return>
<msg timestamp="20241122 21:56:52.793" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.786" endtime="20241122 21:56:52.793"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.799" endtime="20241122 21:56:52.799"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:56:52.799" endtime="20241122 21:56:52.799"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.793" endtime="20241122 21:56:52.799"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.801" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-22T07:35:54.969Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241122 21:56:52.799" endtime="20241122 21:56:52.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.801" level="INFO">${testCaseRun} = {'id': '79', 'testCaseId': '27', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-22T16:26:52.218Z', 'createdAt': '2024-11-22T16:26:52.218Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241122 21:56:52.801" endtime="20241122 21:56:52.801"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:56:52.801" endtime="20241122 21:56:52.801"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:56:52.807" endtime="20241122 21:56:52.807"/>
</kw>
<msg timestamp="20241122 21:56:52.807" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.807" endtime="20241122 21:56:52.807"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.810" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-22T07:35:55.016Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241122 21:56:52.809" endtime="20241122 21:56:52.810"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.812" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.811" endtime="20241122 21:56:52.812"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.810" endtime="20241122 21:56:52.812"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.813" endtime="20241122 21:56:52.813"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:56:52.812" endtime="20241122 21:56:52.813"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.810" endtime="20241122 21:56:52.814"/>
</if>
<status status="PASS" starttime="20241122 21:56:52.809" endtime="20241122 21:56:52.814"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.809" endtime="20241122 21:56:52.814"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241122 21:56:52.814" endtime="20241122 21:56:52.814"/>
</return>
<msg timestamp="20241122 21:56:52.815" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.805" endtime="20241122 21:56:52.815"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:56:52.817" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '79', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241122 21:56:52.815" endtime="20241122 21:56:52.817"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241122 21:56:52.817" level="INFO">${json_response} = {"testCaseRunId": "79", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241122 21:56:52.817" endtime="20241122 21:56:52.817"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241122 21:56:52.825" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241122 21:56:52.825" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F952D503A0&gt;</msg>
<status status="PASS" starttime="20241122 21:56:52.817" endtime="20241122 21:56:52.825"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:56:52.827" endtime="20241122 21:56:52.827"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241122 21:56:52.827" endtime="20241122 21:56:52.827"/>
</return>
<status status="PASS" starttime="20241122 21:56:52.817" endtime="20241122 21:56:52.827"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-22T07:35:55.016Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.827" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-22T04:20:41.623Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241122 21:56:52.827" endtime="20241122 21:56:52.827"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:56:52.827" endtime="20241122 21:56:52.827"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:56:52.833" endtime="20241122 21:56:52.834"/>
</kw>
<msg timestamp="20241122 21:56:52.834" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.833" endtime="20241122 21:56:52.834"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.837" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.468Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241122 21:56:52.834" endtime="20241122 21:56:52.837"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.839" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.837" endtime="20241122 21:56:52.839"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.837" endtime="20241122 21:56:52.840"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.837" endtime="20241122 21:56:52.840"/>
</if>
<status status="PASS" starttime="20241122 21:56:52.834" endtime="20241122 21:56:52.840"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.834" endtime="20241122 21:56:52.840"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</return>
<msg timestamp="20241122 21:56:52.840" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241122 21:56:52.832" endtime="20241122 21:56:52.840"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.468Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.840" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241122 21:56:52.840" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:56:52.840"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:56:52.847" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241122 21:56:52.847" endtime="20241122 21:56:52.847"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241122 21:57:00.674" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241122 21:57:00.674" level="INFO">${page_id} = {'page_id': 'page=5d4e4926-9df6-42c0-b3a7-22273abc73ee', 'video_path': ''}</msg>
<status status="PASS" starttime="20241122 21:56:52.847" endtime="20241122 21:57:00.675"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241122 21:57:00.677" level="INFO">Switching to page {'page_id': 'page=5d4e4926-9df6-42c0-b3a7-22273abc73ee', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241122 21:57:00.716" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=a6cffe3e-b8db-47fc-ad45-c2a18b98e32f",
    "contexts": [
      {
        "type": "context",
        "id": "context=acbe8c6d-c7de-4820-a26f-346362ba2f37",
        "activePage": "page=5d4e4926-9df6-42c0-b3a7-22273abc73ee",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=5d4e4926-9df6-42c0-b3a7-22273abc73ee",
            "timestamp": 1732292813.057
          }
        ]
      }
    ],
    "activeContext": "context=acbe8c6d-c7de-4820-a26f-346362ba2f37",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241122 21:57:00.726" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241122 21:57:00.675" endtime="20241122 21:57:00.726"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.847" endtime="20241122 21:57:00.726"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.847" endtime="20241122 21:57:00.726"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:00.726" endtime="20241122 21:57:00.733"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.726" endtime="20241122 21:57:00.733"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.738" endtime="20241122 21:57:00.738"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.733" endtime="20241122 21:57:00.738"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.741" endtime="20241122 21:57:00.741"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.749" endtime="20241122 21:57:00.749"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.738" endtime="20241122 21:57:00.749"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.753" endtime="20241122 21:57:00.753"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.749" endtime="20241122 21:57:00.753"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.758" endtime="20241122 21:57:00.758"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.755" endtime="20241122 21:57:00.758"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.758" endtime="20241122 21:57:00.758"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.758" endtime="20241122 21:57:00.758"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.758" endtime="20241122 21:57:00.758"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.758" endtime="20241122 21:57:00.758"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.766" endtime="20241122 21:57:00.766"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.766" endtime="20241122 21:57:00.766"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.766" endtime="20241122 21:57:00.766"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.768" endtime="20241122 21:57:00.768"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.768" endtime="20241122 21:57:00.768"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:00.766" endtime="20241122 21:57:00.768"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:00.758" endtime="20241122 21:57:00.768"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:00.777" endtime="20241122 21:57:00.777"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.782" endtime="20241122 21:57:00.782"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.768" endtime="20241122 21:57:00.782"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.783" endtime="20241122 21:57:00.783"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.783" endtime="20241122 21:57:00.783"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.783" endtime="20241122 21:57:00.783"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.783" endtime="20241122 21:57:00.783"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.783" endtime="20241122 21:57:00.783"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:00.783" endtime="20241122 21:57:00.783"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:00.782" endtime="20241122 21:57:00.783"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:00.790" endtime="20241122 21:57:00.790"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.798" endtime="20241122 21:57:00.798"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.783" endtime="20241122 21:57:00.798"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.798" endtime="20241122 21:57:00.798"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.798" endtime="20241122 21:57:00.798"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.802" endtime="20241122 21:57:00.802"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.798" endtime="20241122 21:57:00.802"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241122 21:57:00.817" endtime="20241122 21:57:00.817"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:00.817" endtime="20241122 21:57:00.817"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:00.802" endtime="20241122 21:57:00.817"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.847" endtime="20241122 21:57:00.817"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:00.819" endtime="20241122 21:57:00.820"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241122 21:57:01.820" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241122 21:57:00.820" endtime="20241122 21:57:01.820"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:57:01.820"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:01.826" level="INFO">${response_message} = {'flowActionSequenceId': '41', 'testCaseRunId': '79', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241122 21:57:01.824" endtime="20241122 21:57:01.826"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241122 21:57:01.828" level="INFO">${json_response} = {"flowActionSequenceId": "41", "testCaseRunId": "79", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241122 21:57:01.827" endtime="20241122 21:57:01.828"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241122 21:57:01.837" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241122 21:57:01.837" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F952D503A0&gt;</msg>
<status status="PASS" starttime="20241122 21:57:01.828" endtime="20241122 21:57:01.837"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:01.837" endtime="20241122 21:57:01.837"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241122 21:57:01.837" endtime="20241122 21:57:01.837"/>
</return>
<status status="PASS" starttime="20241122 21:57:01.827" endtime="20241122 21:57:01.837"/>
</kw>
<status status="PASS" starttime="20241122 21:57:01.820" endtime="20241122 21:57:01.837"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:57:01.837"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.843" endtime="20241122 21:57:01.843"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241122 21:57:01.843" endtime="20241122 21:57:01.843"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.843" endtime="20241122 21:57:01.843"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.843" endtime="20241122 21:57:01.843"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:57:01.843"/>
</try>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:57:01.843"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-22T04:20:41.490Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:01.843" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241122 21:57:01.843" endtime="20241122 21:57:01.843"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:01.843" endtime="20241122 21:57:01.843"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241122 21:57:01.843" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241122 21:57:01.843" endtime="20241122 21:57:01.843"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.851" endtime="20241122 21:57:01.851"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.851" endtime="20241122 21:57:01.851"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.851" endtime="20241122 21:57:01.851"/>
</branch>
<status status="PASS" starttime="20241122 21:57:01.843" endtime="20241122 21:57:01.851"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:01.851" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241122 21:57:01.851" endtime="20241122 21:57:01.851"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:01.858" endtime="20241122 21:57:01.858"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.851" endtime="20241122 21:57:01.858"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:01.859" endtime="20241122 21:57:01.859"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.859" endtime="20241122 21:57:01.859"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.868" endtime="20241122 21:57:01.868"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.859" endtime="20241122 21:57:01.868"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.883" endtime="20241122 21:57:01.883"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.900" endtime="20241122 21:57:01.900"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.868" endtime="20241122 21:57:01.900"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.908" endtime="20241122 21:57:01.908"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.900" endtime="20241122 21:57:01.908"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.921" endtime="20241122 21:57:01.922"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.908" endtime="20241122 21:57:01.922"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:01.995" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241122 21:57:01.940" endtime="20241122 21:57:01.995"/>
</kw>
<msg timestamp="20241122 21:57:01.995" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:01.940" endtime="20241122 21:57:01.995"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:01.995" endtime="20241122 21:57:01.995"/>
</return>
<status status="PASS" starttime="20241122 21:57:01.940" endtime="20241122 21:57:01.995"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.997" endtime="20241122 21:57:01.997"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:01.997" endtime="20241122 21:57:01.997"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:01.995" endtime="20241122 21:57:01.997"/>
</branch>
<status status="PASS" starttime="20241122 21:57:01.940" endtime="20241122 21:57:01.997"/>
</try>
<msg timestamp="20241122 21:57:01.999" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:01.940" endtime="20241122 21:57:01.999"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:01.999" endtime="20241122 21:57:01.999"/>
</return>
<status status="PASS" starttime="20241122 21:57:01.932" endtime="20241122 21:57:01.999"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:01.999" endtime="20241122 21:57:01.999"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:01.999" endtime="20241122 21:57:01.999"/>
</branch>
<status status="PASS" starttime="20241122 21:57:01.932" endtime="20241122 21:57:01.999"/>
</try>
<msg timestamp="20241122 21:57:02.002" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:01.932" endtime="20241122 21:57:02.002"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.006" endtime="20241122 21:57:02.006"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.006" endtime="20241122 21:57:02.006"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.006" endtime="20241122 21:57:02.006"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.006" endtime="20241122 21:57:02.006"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.002" endtime="20241122 21:57:02.006"/>
</kw>
<status status="PASS" starttime="20241122 21:57:01.932" endtime="20241122 21:57:02.006"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:02.049" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241122 21:57:02.031" endtime="20241122 21:57:02.049"/>
</kw>
<msg timestamp="20241122 21:57:02.055" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.031" endtime="20241122 21:57:02.055"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.055" endtime="20241122 21:57:02.055"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.031" endtime="20241122 21:57:02.055"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.055" endtime="20241122 21:57:02.055"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.055" endtime="20241122 21:57:02.055"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.055" endtime="20241122 21:57:02.055"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.031" endtime="20241122 21:57:02.055"/>
</try>
<msg timestamp="20241122 21:57:02.055" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.031" endtime="20241122 21:57:02.055"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.055" endtime="20241122 21:57:02.055"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.027" endtime="20241122 21:57:02.055"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:02.055" endtime="20241122 21:57:02.055"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:02.055" endtime="20241122 21:57:02.063"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.027" endtime="20241122 21:57:02.063"/>
</try>
<msg timestamp="20241122 21:57:02.063" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.027" endtime="20241122 21:57:02.063"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.068" endtime="20241122 21:57:02.068"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.068" endtime="20241122 21:57:02.068"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.068" endtime="20241122 21:57:02.068"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.068" endtime="20241122 21:57:02.068"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.063" endtime="20241122 21:57:02.071"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.023" endtime="20241122 21:57:02.071"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241122 21:57:02.121" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241122 21:57:02.121" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241122 21:57:02.073" endtime="20241122 21:57:02.121"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241122 21:57:02.121" endtime="20241122 21:57:02.121"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.071" endtime="20241122 21:57:02.121"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.121" endtime="20241122 21:57:02.121"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.121" endtime="20241122 21:57:02.121"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.121" endtime="20241122 21:57:02.121"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.071" endtime="20241122 21:57:02.121"/>
</try>
<msg timestamp="20241122 21:57:02.121" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241122 21:57:02.020" endtime="20241122 21:57:02.121"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.130" endtime="20241122 21:57:02.130"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.130" endtime="20241122 21:57:02.130"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.130" endtime="20241122 21:57:02.130"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.130" endtime="20241122 21:57:02.130"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.129" endtime="20241122 21:57:02.130"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.014" endtime="20241122 21:57:02.130"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.130" endtime="20241122 21:57:02.130"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.130" endtime="20241122 21:57:02.130"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.014" endtime="20241122 21:57:02.130"/>
</try>
<status status="PASS" starttime="20241122 21:57:02.014" endtime="20241122 21:57:02.130"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:02.162" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241122 21:57:02.146" endtime="20241122 21:57:02.162"/>
</kw>
<msg timestamp="20241122 21:57:02.163" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.146" endtime="20241122 21:57:02.163"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.163" endtime="20241122 21:57:02.163"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.140" endtime="20241122 21:57:02.163"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.163" endtime="20241122 21:57:02.163"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.163" endtime="20241122 21:57:02.163"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.163" endtime="20241122 21:57:02.163"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.140" endtime="20241122 21:57:02.168"/>
</try>
<msg timestamp="20241122 21:57:02.168" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.140" endtime="20241122 21:57:02.168"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.168" endtime="20241122 21:57:02.168"/>
</return>
<msg timestamp="20241122 21:57:02.168" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.140" endtime="20241122 21:57:02.168"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.173" endtime="20241122 21:57:02.173"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.173" endtime="20241122 21:57:02.173"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.173" endtime="20241122 21:57:02.173"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.173" endtime="20241122 21:57:02.173"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.172" endtime="20241122 21:57:02.173"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.140" endtime="20241122 21:57:02.173"/>
</kw>
<status status="PASS" starttime="20241122 21:57:01.931" endtime="20241122 21:57:02.173"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:02.229" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241122 21:57:02.187" endtime="20241122 21:57:02.229"/>
</kw>
<msg timestamp="20241122 21:57:02.229" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.187" endtime="20241122 21:57:02.229"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.229" endtime="20241122 21:57:02.229"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.186" endtime="20241122 21:57:02.229"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.229" endtime="20241122 21:57:02.229"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.229" endtime="20241122 21:57:02.229"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.229" endtime="20241122 21:57:02.229"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.186" endtime="20241122 21:57:02.229"/>
</try>
<msg timestamp="20241122 21:57:02.229" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.185" endtime="20241122 21:57:02.229"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.229" endtime="20241122 21:57:02.229"/>
</return>
<msg timestamp="20241122 21:57:02.235" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.181" endtime="20241122 21:57:02.235"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.235" endtime="20241122 21:57:02.235"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.235" endtime="20241122 21:57:02.235"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.235" endtime="20241122 21:57:02.235"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.235" endtime="20241122 21:57:02.235"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.235" endtime="20241122 21:57:02.235"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.181" endtime="20241122 21:57:02.235"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:02.243" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241122 21:57:02.235" endtime="20241122 21:57:02.243"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.243" endtime="20241122 21:57:02.243"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.252" endtime="20241122 21:57:02.252"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.243" endtime="20241122 21:57:02.252"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:57:02.252" endtime="20241122 21:57:02.252"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.252" endtime="20241122 21:57:02.252"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.243" endtime="20241122 21:57:02.252"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241122 21:57:02.252" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241122 21:57:02.252" endtime="20241122 21:57:02.320"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.252" endtime="20241122 21:57:02.321"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.321" endtime="20241122 21:57:02.321"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.321" endtime="20241122 21:57:02.321"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.321" endtime="20241122 21:57:02.321"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.252" endtime="20241122 21:57:02.321"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:02.359" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241122 21:57:02.343" endtime="20241122 21:57:02.360"/>
</kw>
<msg timestamp="20241122 21:57:02.360" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.343" endtime="20241122 21:57:02.360"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.360" endtime="20241122 21:57:02.360"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.343" endtime="20241122 21:57:02.360"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.360" endtime="20241122 21:57:02.360"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.360" endtime="20241122 21:57:02.360"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.360" endtime="20241122 21:57:02.360"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.343" endtime="20241122 21:57:02.360"/>
</try>
<msg timestamp="20241122 21:57:02.366" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.343" endtime="20241122 21:57:02.366"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.366" endtime="20241122 21:57:02.366"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.335" endtime="20241122 21:57:02.366"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:02.366" endtime="20241122 21:57:02.366"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:02.366" endtime="20241122 21:57:02.366"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.335" endtime="20241122 21:57:02.366"/>
</try>
<msg timestamp="20241122 21:57:02.366" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.335" endtime="20241122 21:57:02.366"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.374" endtime="20241122 21:57:02.374"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.374" endtime="20241122 21:57:02.374"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.374" endtime="20241122 21:57:02.374"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.374" endtime="20241122 21:57:02.374"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.374" endtime="20241122 21:57:02.374"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.335" endtime="20241122 21:57:02.374"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:02.415" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241122 21:57:02.399" endtime="20241122 21:57:02.415"/>
</kw>
<msg timestamp="20241122 21:57:02.415" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.399" endtime="20241122 21:57:02.415"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.415" endtime="20241122 21:57:02.415"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.399" endtime="20241122 21:57:02.415"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.415" endtime="20241122 21:57:02.415"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.423" endtime="20241122 21:57:02.423"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.415" endtime="20241122 21:57:02.423"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.399" endtime="20241122 21:57:02.424"/>
</try>
<msg timestamp="20241122 21:57:02.425" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.399" endtime="20241122 21:57:02.425"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.425" endtime="20241122 21:57:02.425"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.392" endtime="20241122 21:57:02.425"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:02.425" endtime="20241122 21:57:02.425"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:02.425" endtime="20241122 21:57:02.425"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.392" endtime="20241122 21:57:02.428"/>
</try>
<msg timestamp="20241122 21:57:02.429" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.392" endtime="20241122 21:57:02.429"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.439" endtime="20241122 21:57:02.439"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.439" endtime="20241122 21:57:02.440"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.437" endtime="20241122 21:57:02.440"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.436" endtime="20241122 21:57:02.440"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.433" endtime="20241122 21:57:02.440"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.392" endtime="20241122 21:57:02.440"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241122 21:57:02.465" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241122 21:57:02.465" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241122 21:57:02.440" endtime="20241122 21:57:02.465"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241122 21:57:02.465" endtime="20241122 21:57:02.465"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.440" endtime="20241122 21:57:02.465"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.465" endtime="20241122 21:57:02.465"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.465" endtime="20241122 21:57:02.465"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.465" endtime="20241122 21:57:02.465"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.440" endtime="20241122 21:57:02.465"/>
</try>
<msg timestamp="20241122 21:57:02.465" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241122 21:57:02.382" endtime="20241122 21:57:02.465"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.482" endtime="20241122 21:57:02.482"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.482" endtime="20241122 21:57:02.483"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.473" endtime="20241122 21:57:02.483"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.473" endtime="20241122 21:57:02.483"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.473" endtime="20241122 21:57:02.483"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.382" endtime="20241122 21:57:02.483"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.483" endtime="20241122 21:57:02.483"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.483" endtime="20241122 21:57:02.483"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.382" endtime="20241122 21:57:02.483"/>
</try>
<status status="PASS" starttime="20241122 21:57:02.382" endtime="20241122 21:57:02.483"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:02.508" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241122 21:57:02.490" endtime="20241122 21:57:02.508"/>
</kw>
<msg timestamp="20241122 21:57:02.508" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.490" endtime="20241122 21:57:02.508"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.508" endtime="20241122 21:57:02.508"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.490" endtime="20241122 21:57:02.508"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.508" endtime="20241122 21:57:02.508"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.508" endtime="20241122 21:57:02.508"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.508" endtime="20241122 21:57:02.508"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.490" endtime="20241122 21:57:02.508"/>
</try>
<msg timestamp="20241122 21:57:02.508" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.490" endtime="20241122 21:57:02.508"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.508" endtime="20241122 21:57:02.515"/>
</return>
<msg timestamp="20241122 21:57:02.515" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.490" endtime="20241122 21:57:02.515"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.523" endtime="20241122 21:57:02.523"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.523" endtime="20241122 21:57:02.523"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.523" endtime="20241122 21:57:02.523"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.523" endtime="20241122 21:57:02.523"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.515" endtime="20241122 21:57:02.523"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.489" endtime="20241122 21:57:02.523"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.329" endtime="20241122 21:57:02.523"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:02.560" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241122 21:57:02.547" endtime="20241122 21:57:02.560"/>
</kw>
<msg timestamp="20241122 21:57:02.564" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.547" endtime="20241122 21:57:02.564"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.564" endtime="20241122 21:57:02.564"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.547" endtime="20241122 21:57:02.564"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.564" endtime="20241122 21:57:02.564"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.566" endtime="20241122 21:57:02.566"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.564" endtime="20241122 21:57:02.566"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.547" endtime="20241122 21:57:02.566"/>
</try>
<msg timestamp="20241122 21:57:02.568" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.547" endtime="20241122 21:57:02.568"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.568" endtime="20241122 21:57:02.568"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.539" endtime="20241122 21:57:02.568"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:02.568" endtime="20241122 21:57:02.568"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:02.568" endtime="20241122 21:57:02.568"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.539" endtime="20241122 21:57:02.568"/>
</try>
<msg timestamp="20241122 21:57:02.568" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.539" endtime="20241122 21:57:02.568"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.571" endtime="20241122 21:57:02.571"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.571" endtime="20241122 21:57:02.571"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.571" endtime="20241122 21:57:02.571"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.571" endtime="20241122 21:57:02.571"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.571" endtime="20241122 21:57:02.571"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.539" endtime="20241122 21:57:02.571"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241122 21:57:02.601" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241122 21:57:02.601" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241122 21:57:02.571" endtime="20241122 21:57:02.601"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241122 21:57:02.601" endtime="20241122 21:57:02.601"/>
</return>
<status status="PASS" starttime="20241122 21:57:02.571" endtime="20241122 21:57:02.601"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.603" endtime="20241122 21:57:02.604"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.604" endtime="20241122 21:57:02.604"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.601" endtime="20241122 21:57:02.604"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.571" endtime="20241122 21:57:02.604"/>
</try>
<msg timestamp="20241122 21:57:02.604" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241122 21:57:02.533" endtime="20241122 21:57:02.604"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241122 21:57:02.604" endtime="20241122 21:57:02.604"/>
</return>
<msg timestamp="20241122 21:57:02.609" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241122 21:57:02.326" endtime="20241122 21:57:02.609"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241122 21:57:02.623" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.612" endtime="20241122 21:57:02.623"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:02.623" endtime="20241122 21:57:02.623"/>
</return>
<msg timestamp="20241122 21:57:02.623" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241122 21:57:02.612" endtime="20241122 21:57:02.629"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.637" endtime="20241122 21:57:02.637"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.637" endtime="20241122 21:57:02.637"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.637" endtime="20241122 21:57:02.637"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.637" endtime="20241122 21:57:02.637"/>
</if>
<status status="PASS" starttime="20241122 21:57:02.630" endtime="20241122 21:57:02.637"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.321" endtime="20241122 21:57:02.637"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.243" endtime="20241122 21:57:02.637"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.243" endtime="20241122 21:57:02.637"/>
</kw>
<status status="PASS" starttime="20241122 21:57:02.243" endtime="20241122 21:57:02.637"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.637" endtime="20241122 21:57:02.637"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.637" endtime="20241122 21:57:02.637"/>
</branch>
<status status="PASS" starttime="20241122 21:57:02.243" endtime="20241122 21:57:02.637"/>
</try>
<status status="PASS" starttime="20241122 21:57:01.930" endtime="20241122 21:57:02.637"/>
</kw>
<status status="PASS" starttime="20241122 21:57:01.923" endtime="20241122 21:57:02.637"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.645" endtime="20241122 21:57:02.645"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.637" endtime="20241122 21:57:02.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.650" endtime="20241122 21:57:02.650"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.651" endtime="20241122 21:57:02.651"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.650" endtime="20241122 21:57:02.651"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.652" endtime="20241122 21:57:02.652"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.652" endtime="20241122 21:57:02.652"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:02.650" endtime="20241122 21:57:02.652"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:02.647" endtime="20241122 21:57:02.652"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:02.661" endtime="20241122 21:57:02.661"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.670" endtime="20241122 21:57:02.670"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.652" endtime="20241122 21:57:02.670"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.678" endtime="20241122 21:57:02.678"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.678" endtime="20241122 21:57:02.678"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.678" endtime="20241122 21:57:02.678"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.678" endtime="20241122 21:57:02.678"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.678" endtime="20241122 21:57:02.678"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:02.678" endtime="20241122 21:57:02.678"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:02.670" endtime="20241122 21:57:02.678"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:02.696" endtime="20241122 21:57:02.696"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.702" endtime="20241122 21:57:02.702"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.678" endtime="20241122 21:57:02.702"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.702" endtime="20241122 21:57:02.702"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.702" endtime="20241122 21:57:02.702"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.715" endtime="20241122 21:57:02.715"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.702" endtime="20241122 21:57:02.715"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241122 21:57:02.727" endtime="20241122 21:57:02.727"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:02.727" endtime="20241122 21:57:02.727"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:02.715" endtime="20241122 21:57:02.727"/>
</branch>
<status status="PASS" starttime="20241122 21:57:01.851" endtime="20241122 21:57:02.727"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:02.727" endtime="20241122 21:57:02.727"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241122 21:57:03.729" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241122 21:57:02.727" endtime="20241122 21:57:03.729"/>
</kw>
<status status="PASS" starttime="20241122 21:57:01.851" endtime="20241122 21:57:03.729"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:03.729" level="INFO">${response_message} = {'flowActionSequenceId': '43', 'testCaseRunId': '79', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241122 21:57:03.729" endtime="20241122 21:57:03.729"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241122 21:57:03.729" level="INFO">${json_response} = {"flowActionSequenceId": "43", "testCaseRunId": "79", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241122 21:57:03.729" endtime="20241122 21:57:03.729"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241122 21:57:03.753" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241122 21:57:03.753" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F952D503A0&gt;</msg>
<status status="PASS" starttime="20241122 21:57:03.729" endtime="20241122 21:57:03.753"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:03.753" endtime="20241122 21:57:03.753"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241122 21:57:03.753" endtime="20241122 21:57:03.753"/>
</return>
<status status="PASS" starttime="20241122 21:57:03.729" endtime="20241122 21:57:03.753"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.729" endtime="20241122 21:57:03.757"/>
</kw>
<status status="PASS" starttime="20241122 21:57:01.843" endtime="20241122 21:57:03.757"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.757" endtime="20241122 21:57:03.757"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241122 21:57:03.757" endtime="20241122 21:57:03.757"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.757" endtime="20241122 21:57:03.757"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.757" endtime="20241122 21:57:03.757"/>
</branch>
<status status="PASS" starttime="20241122 21:57:01.843" endtime="20241122 21:57:03.757"/>
</try>
<status status="PASS" starttime="20241122 21:57:01.843" endtime="20241122 21:57:03.757"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-22T04:20:41.497Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:03.761" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241122 21:57:03.757" endtime="20241122 21:57:03.761"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241122 21:57:03.761" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:03.761" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.761" endtime="20241122 21:57:03.761"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.772" endtime="20241122 21:57:03.772"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.770" endtime="20241122 21:57:03.772"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.777" endtime="20241122 21:57:03.777"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.785" endtime="20241122 21:57:03.785"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.776" endtime="20241122 21:57:03.785"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.785" endtime="20241122 21:57:03.785"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.785" endtime="20241122 21:57:03.785"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.794" endtime="20241122 21:57:03.794"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.785" endtime="20241122 21:57:03.794"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:03.826" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241122 21:57:03.814" endtime="20241122 21:57:03.826"/>
</kw>
<msg timestamp="20241122 21:57:03.826" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.814" endtime="20241122 21:57:03.826"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:03.826" endtime="20241122 21:57:03.826"/>
</return>
<status status="PASS" starttime="20241122 21:57:03.813" endtime="20241122 21:57:03.826"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.826" endtime="20241122 21:57:03.826"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.826" endtime="20241122 21:57:03.826"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.826" endtime="20241122 21:57:03.826"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.810" endtime="20241122 21:57:03.826"/>
</try>
<msg timestamp="20241122 21:57:03.826" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.810" endtime="20241122 21:57:03.826"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:03.826" endtime="20241122 21:57:03.826"/>
</return>
<status status="PASS" starttime="20241122 21:57:03.810" endtime="20241122 21:57:03.826"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:03.826" endtime="20241122 21:57:03.826"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:03.826" endtime="20241122 21:57:03.826"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.802" endtime="20241122 21:57:03.826"/>
</try>
<msg timestamp="20241122 21:57:03.834" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.802" endtime="20241122 21:57:03.834"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.838" endtime="20241122 21:57:03.838"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.838" endtime="20241122 21:57:03.838"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.838" endtime="20241122 21:57:03.838"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.838" endtime="20241122 21:57:03.838"/>
</if>
<status status="PASS" starttime="20241122 21:57:03.835" endtime="20241122 21:57:03.842"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.802" endtime="20241122 21:57:03.842"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:03.866" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241122 21:57:03.856" endtime="20241122 21:57:03.866"/>
</kw>
<msg timestamp="20241122 21:57:03.866" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.856" endtime="20241122 21:57:03.866"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.866"/>
</return>
<status status="PASS" starttime="20241122 21:57:03.856" endtime="20241122 21:57:03.866"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.866"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.866"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.866"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.856" endtime="20241122 21:57:03.866"/>
</try>
<msg timestamp="20241122 21:57:03.866" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.856" endtime="20241122 21:57:03.866"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.866"/>
</return>
<status status="PASS" starttime="20241122 21:57:03.850" endtime="20241122 21:57:03.866"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.866"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.866"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.850" endtime="20241122 21:57:03.866"/>
</try>
<msg timestamp="20241122 21:57:03.866" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.850" endtime="20241122 21:57:03.866"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.866"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.875" endtime="20241122 21:57:03.875"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.875"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.875"/>
</if>
<status status="PASS" starttime="20241122 21:57:03.866" endtime="20241122 21:57:03.875"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.850" endtime="20241122 21:57:03.875"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241122 21:57:03.891" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241122 21:57:03.891" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241122 21:57:03.877" endtime="20241122 21:57:03.891"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241122 21:57:03.891" endtime="20241122 21:57:03.891"/>
</return>
<status status="PASS" starttime="20241122 21:57:03.876" endtime="20241122 21:57:03.891"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.891" endtime="20241122 21:57:03.891"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.891" endtime="20241122 21:57:03.891"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.891" endtime="20241122 21:57:03.891"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.876" endtime="20241122 21:57:03.891"/>
</try>
<msg timestamp="20241122 21:57:03.891" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241122 21:57:03.842" endtime="20241122 21:57:03.891"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.898" endtime="20241122 21:57:03.898"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.898" endtime="20241122 21:57:03.899"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.898" endtime="20241122 21:57:03.899"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.898" endtime="20241122 21:57:03.899"/>
</if>
<status status="PASS" starttime="20241122 21:57:03.897" endtime="20241122 21:57:03.899"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.842" endtime="20241122 21:57:03.899"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.899" endtime="20241122 21:57:03.899"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.899" endtime="20241122 21:57:03.899"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.842" endtime="20241122 21:57:03.899"/>
</try>
<status status="PASS" starttime="20241122 21:57:03.842" endtime="20241122 21:57:03.899"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:03.917" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241122 21:57:03.908" endtime="20241122 21:57:03.917"/>
</kw>
<msg timestamp="20241122 21:57:03.917" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.908" endtime="20241122 21:57:03.917"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:03.917" endtime="20241122 21:57:03.917"/>
</return>
<status status="PASS" starttime="20241122 21:57:03.908" endtime="20241122 21:57:03.918"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.918" endtime="20241122 21:57:03.919"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.919" endtime="20241122 21:57:03.919"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.918" endtime="20241122 21:57:03.919"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.908" endtime="20241122 21:57:03.919"/>
</try>
<msg timestamp="20241122 21:57:03.919" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.908" endtime="20241122 21:57:03.919"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:03.919" endtime="20241122 21:57:03.920"/>
</return>
<msg timestamp="20241122 21:57:03.920" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.906" endtime="20241122 21:57:03.920"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.924" endtime="20241122 21:57:03.924"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.924" endtime="20241122 21:57:03.924"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.924" endtime="20241122 21:57:03.924"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.924" endtime="20241122 21:57:03.924"/>
</if>
<status status="PASS" starttime="20241122 21:57:03.924" endtime="20241122 21:57:03.924"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.905" endtime="20241122 21:57:03.932"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.802" endtime="20241122 21:57:03.932"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:03.979" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241122 21:57:03.948" endtime="20241122 21:57:03.980"/>
</kw>
<msg timestamp="20241122 21:57:03.980" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.941" endtime="20241122 21:57:03.980"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:03.980" endtime="20241122 21:57:03.981"/>
</return>
<status status="PASS" starttime="20241122 21:57:03.941" endtime="20241122 21:57:03.981"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.982" endtime="20241122 21:57:03.982"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.983" endtime="20241122 21:57:03.983"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.981" endtime="20241122 21:57:03.983"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.941" endtime="20241122 21:57:03.983"/>
</try>
<msg timestamp="20241122 21:57:03.983" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.941" endtime="20241122 21:57:03.983"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:03.983" endtime="20241122 21:57:03.983"/>
</return>
<msg timestamp="20241122 21:57:03.983" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241122 21:57:03.940" endtime="20241122 21:57:03.983"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.988" endtime="20241122 21:57:03.988"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.988" endtime="20241122 21:57:03.988"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.988" endtime="20241122 21:57:03.988"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.988" endtime="20241122 21:57:03.988"/>
</if>
<status status="PASS" starttime="20241122 21:57:03.988" endtime="20241122 21:57:03.988"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.939" endtime="20241122 21:57:03.988"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:03.988" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241122 21:57:03.988" endtime="20241122 21:57:03.988"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241122 21:57:03.998" endtime="20241122 21:57:03.998"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.004" endtime="20241122 21:57:04.004"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:03.998" endtime="20241122 21:57:04.004"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:57:04.004" endtime="20241122 21:57:04.004"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.004" endtime="20241122 21:57:04.004"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.998" endtime="20241122 21:57:04.004"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241122 21:57:04.004" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241122 21:57:04.004" endtime="20241122 21:57:04.053"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.004" endtime="20241122 21:57:04.053"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.053" endtime="20241122 21:57:04.053"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.053" endtime="20241122 21:57:04.053"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.053" endtime="20241122 21:57:04.061"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.004" endtime="20241122 21:57:04.061"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:04.087" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241122 21:57:04.077" endtime="20241122 21:57:04.087"/>
</kw>
<msg timestamp="20241122 21:57:04.087" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.069" endtime="20241122 21:57:04.087"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.087" endtime="20241122 21:57:04.087"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.069" endtime="20241122 21:57:04.087"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.087" endtime="20241122 21:57:04.087"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.087" endtime="20241122 21:57:04.087"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.087" endtime="20241122 21:57:04.087"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.069" endtime="20241122 21:57:04.093"/>
</try>
<msg timestamp="20241122 21:57:04.093" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.069" endtime="20241122 21:57:04.093"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.093" endtime="20241122 21:57:04.093"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.069" endtime="20241122 21:57:04.093"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:04.093" endtime="20241122 21:57:04.093"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:04.093" endtime="20241122 21:57:04.093"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.069" endtime="20241122 21:57:04.093"/>
</try>
<msg timestamp="20241122 21:57:04.093" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.069" endtime="20241122 21:57:04.093"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.101" endtime="20241122 21:57:04.101"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.103" endtime="20241122 21:57:04.103"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.101" endtime="20241122 21:57:04.103"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.093" endtime="20241122 21:57:04.103"/>
</if>
<status status="PASS" starttime="20241122 21:57:04.093" endtime="20241122 21:57:04.103"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.069" endtime="20241122 21:57:04.103"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:04.134" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241122 21:57:04.126" endtime="20241122 21:57:04.134"/>
</kw>
<msg timestamp="20241122 21:57:04.134" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.118" endtime="20241122 21:57:04.134"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.134" endtime="20241122 21:57:04.134"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.118" endtime="20241122 21:57:04.134"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.134" endtime="20241122 21:57:04.134"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.134" endtime="20241122 21:57:04.134"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.134" endtime="20241122 21:57:04.134"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.118" endtime="20241122 21:57:04.134"/>
</try>
<msg timestamp="20241122 21:57:04.134" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.118" endtime="20241122 21:57:04.134"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.134" endtime="20241122 21:57:04.134"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.118" endtime="20241122 21:57:04.142"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:04.142" endtime="20241122 21:57:04.142"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:04.142" endtime="20241122 21:57:04.142"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.118" endtime="20241122 21:57:04.142"/>
</try>
<msg timestamp="20241122 21:57:04.142" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.118" endtime="20241122 21:57:04.142"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.149" endtime="20241122 21:57:04.149"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.150" endtime="20241122 21:57:04.150"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.149" endtime="20241122 21:57:04.150"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.149" endtime="20241122 21:57:04.150"/>
</if>
<status status="PASS" starttime="20241122 21:57:04.142" endtime="20241122 21:57:04.150"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.118" endtime="20241122 21:57:04.150"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241122 21:57:04.170" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241122 21:57:04.170" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241122 21:57:04.150" endtime="20241122 21:57:04.170"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241122 21:57:04.170" endtime="20241122 21:57:04.174"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.150" endtime="20241122 21:57:04.174"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.174" endtime="20241122 21:57:04.174"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.174" endtime="20241122 21:57:04.174"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.174" endtime="20241122 21:57:04.174"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.150" endtime="20241122 21:57:04.174"/>
</try>
<msg timestamp="20241122 21:57:04.174" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241122 21:57:04.110" endtime="20241122 21:57:04.174"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.182" endtime="20241122 21:57:04.182"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.182" endtime="20241122 21:57:04.182"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.174" endtime="20241122 21:57:04.182"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.174" endtime="20241122 21:57:04.182"/>
</if>
<status status="PASS" starttime="20241122 21:57:04.174" endtime="20241122 21:57:04.182"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.110" endtime="20241122 21:57:04.182"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.182" endtime="20241122 21:57:04.182"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.182" endtime="20241122 21:57:04.182"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.110" endtime="20241122 21:57:04.182"/>
</try>
<status status="PASS" starttime="20241122 21:57:04.108" endtime="20241122 21:57:04.182"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:04.206" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241122 21:57:04.190" endtime="20241122 21:57:04.206"/>
</kw>
<msg timestamp="20241122 21:57:04.206" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.190" endtime="20241122 21:57:04.206"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.206" endtime="20241122 21:57:04.206"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.190" endtime="20241122 21:57:04.206"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.206" endtime="20241122 21:57:04.206"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.206" endtime="20241122 21:57:04.206"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.206" endtime="20241122 21:57:04.206"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.190" endtime="20241122 21:57:04.209"/>
</try>
<msg timestamp="20241122 21:57:04.210" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.190" endtime="20241122 21:57:04.210"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.210" endtime="20241122 21:57:04.210"/>
</return>
<msg timestamp="20241122 21:57:04.210" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.190" endtime="20241122 21:57:04.210"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.214" endtime="20241122 21:57:04.214"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.214" endtime="20241122 21:57:04.214"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.214" endtime="20241122 21:57:04.214"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.214" endtime="20241122 21:57:04.214"/>
</if>
<status status="PASS" starttime="20241122 21:57:04.212" endtime="20241122 21:57:04.214"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.189" endtime="20241122 21:57:04.214"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.065" endtime="20241122 21:57:04.214"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:04.256" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241122 21:57:04.235" endtime="20241122 21:57:04.256"/>
</kw>
<msg timestamp="20241122 21:57:04.256" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.234" endtime="20241122 21:57:04.256"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.256" endtime="20241122 21:57:04.256"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.233" endtime="20241122 21:57:04.256"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.256" endtime="20241122 21:57:04.256"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.256" endtime="20241122 21:57:04.256"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.256" endtime="20241122 21:57:04.256"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.233" endtime="20241122 21:57:04.256"/>
</try>
<msg timestamp="20241122 21:57:04.256" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.231" endtime="20241122 21:57:04.256"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.264" endtime="20241122 21:57:04.264"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.222" endtime="20241122 21:57:04.264"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:04.264" endtime="20241122 21:57:04.264"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:04.264" endtime="20241122 21:57:04.264"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.222" endtime="20241122 21:57:04.264"/>
</try>
<msg timestamp="20241122 21:57:04.264" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.222" endtime="20241122 21:57:04.264"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.282" endtime="20241122 21:57:04.282"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.282" endtime="20241122 21:57:04.282"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.281" endtime="20241122 21:57:04.282"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.280" endtime="20241122 21:57:04.282"/>
</if>
<status status="PASS" starttime="20241122 21:57:04.273" endtime="20241122 21:57:04.282"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.222" endtime="20241122 21:57:04.282"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241122 21:57:04.328" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241122 21:57:04.328" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241122 21:57:04.282" endtime="20241122 21:57:04.328"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241122 21:57:04.336" endtime="20241122 21:57:04.336"/>
</return>
<status status="PASS" starttime="20241122 21:57:04.282" endtime="20241122 21:57:04.336"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.336" endtime="20241122 21:57:04.341"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.341" endtime="20241122 21:57:04.342"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.336" endtime="20241122 21:57:04.342"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.282" endtime="20241122 21:57:04.343"/>
</try>
<msg timestamp="20241122 21:57:04.345" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241122 21:57:04.214" endtime="20241122 21:57:04.345"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241122 21:57:04.345" endtime="20241122 21:57:04.345"/>
</return>
<msg timestamp="20241122 21:57:04.345" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241122 21:57:04.063" endtime="20241122 21:57:04.345"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241122 21:57:04.374" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.360" endtime="20241122 21:57:04.374"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:04.378" endtime="20241122 21:57:04.378"/>
</return>
<msg timestamp="20241122 21:57:04.380" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241122 21:57:04.356" endtime="20241122 21:57:04.380"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.400" endtime="20241122 21:57:04.400"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.402" endtime="20241122 21:57:04.402"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.394" endtime="20241122 21:57:04.403"/>
</branch>
<status status="PASS" starttime="20241122 21:57:04.394" endtime="20241122 21:57:04.403"/>
</if>
<status status="PASS" starttime="20241122 21:57:04.388" endtime="20241122 21:57:04.403"/>
</kw>
<status status="PASS" starttime="20241122 21:57:04.061" endtime="20241122 21:57:04.403"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.996" endtime="20241122 21:57:04.403"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.988" endtime="20241122 21:57:04.407"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.988" endtime="20241122 21:57:04.407"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.407"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.407"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.988" endtime="20241122 21:57:04.407"/>
</try>
<status status="PASS" starttime="20241122 21:57:03.802" endtime="20241122 21:57:04.407"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.794" endtime="20241122 21:57:04.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.407"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.407"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.407"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.407"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.407"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.418" endtime="20241122 21:57:04.420"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.418" endtime="20241122 21:57:04.420"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.420"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:04.407" endtime="20241122 21:57:04.420"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:04.433" endtime="20241122 21:57:04.433"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.441" endtime="20241122 21:57:04.441"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.420" endtime="20241122 21:57:04.441"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.443" endtime="20241122 21:57:04.443"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.443" endtime="20241122 21:57:04.443"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.443" endtime="20241122 21:57:04.443"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.443" endtime="20241122 21:57:04.443"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.443" endtime="20241122 21:57:04.443"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:04.443" endtime="20241122 21:57:04.443"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:04.443" endtime="20241122 21:57:04.443"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:04.449" endtime="20241122 21:57:04.449"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.463" endtime="20241122 21:57:04.463"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.443" endtime="20241122 21:57:04.463"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.463" endtime="20241122 21:57:04.463"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.463" endtime="20241122 21:57:04.463"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.463" endtime="20241122 21:57:04.463"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.463" endtime="20241122 21:57:04.463"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241122 21:57:04.483" endtime="20241122 21:57:04.483"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:04.483" endtime="20241122 21:57:04.483"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:04.463" endtime="20241122 21:57:04.483"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.761" endtime="20241122 21:57:04.483"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:04.483" endtime="20241122 21:57:04.483"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241122 21:57:05.487" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241122 21:57:04.483" endtime="20241122 21:57:05.488"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.761" endtime="20241122 21:57:05.489"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:05.499" level="INFO">${response_message} = {'flowActionSequenceId': '42', 'testCaseRunId': '79', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241122 21:57:05.490" endtime="20241122 21:57:05.499"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241122 21:57:05.508" level="INFO">${json_response} = {"flowActionSequenceId": "42", "testCaseRunId": "79", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241122 21:57:05.505" endtime="20241122 21:57:05.508"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241122 21:57:05.533" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241122 21:57:05.533" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F952D503A0&gt;</msg>
<status status="PASS" starttime="20241122 21:57:05.508" endtime="20241122 21:57:05.533"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:05.536" endtime="20241122 21:57:05.540"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241122 21:57:05.540" endtime="20241122 21:57:05.541"/>
</return>
<status status="PASS" starttime="20241122 21:57:05.501" endtime="20241122 21:57:05.544"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.490" endtime="20241122 21:57:05.544"/>
</kw>
<status status="PASS" starttime="20241122 21:57:03.757" endtime="20241122 21:57:05.546"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.546" endtime="20241122 21:57:05.548"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241122 21:57:05.548" endtime="20241122 21:57:05.548"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.548" endtime="20241122 21:57:05.548"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.546" endtime="20241122 21:57:05.551"/>
</branch>
<status status="PASS" starttime="20241122 21:57:03.757" endtime="20241122 21:57:05.552"/>
</try>
<status status="PASS" starttime="20241122 21:57:03.757" endtime="20241122 21:57:05.552"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-22T04:20:41.481Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:05.557" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241122 21:57:05.552" endtime="20241122 21:57:05.557"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:05.557" endtime="20241122 21:57:05.557"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241122 21:57:05.560" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241122 21:57:05.560" endtime="20241122 21:57:05.560"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.560" endtime="20241122 21:57:05.560"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.560" endtime="20241122 21:57:05.560"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.560" endtime="20241122 21:57:05.560"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.560" endtime="20241122 21:57:05.560"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:05.568" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241122 21:57:05.568" endtime="20241122 21:57:05.568"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:05.573" endtime="20241122 21:57:05.574"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.568" endtime="20241122 21:57:05.574"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:05.576" endtime="20241122 21:57:05.576"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.576" endtime="20241122 21:57:05.576"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:05.618" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241122 21:57:05.610" endtime="20241122 21:57:05.618"/>
</kw>
<msg timestamp="20241122 21:57:05.618" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.610" endtime="20241122 21:57:05.618"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:05.618" endtime="20241122 21:57:05.618"/>
</return>
<status status="PASS" starttime="20241122 21:57:05.610" endtime="20241122 21:57:05.618"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.618" endtime="20241122 21:57:05.618"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.618" endtime="20241122 21:57:05.618"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.618" endtime="20241122 21:57:05.618"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.609" endtime="20241122 21:57:05.618"/>
</try>
<msg timestamp="20241122 21:57:05.618" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.608" endtime="20241122 21:57:05.618"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:05.618" endtime="20241122 21:57:05.618"/>
</return>
<status status="PASS" starttime="20241122 21:57:05.603" endtime="20241122 21:57:05.618"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:05.618" endtime="20241122 21:57:05.618"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:05.618" endtime="20241122 21:57:05.618"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.603" endtime="20241122 21:57:05.625"/>
</try>
<msg timestamp="20241122 21:57:05.625" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.602" endtime="20241122 21:57:05.626"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.626" endtime="20241122 21:57:05.626"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.626" endtime="20241122 21:57:05.626"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.626" endtime="20241122 21:57:05.626"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.626" endtime="20241122 21:57:05.626"/>
</if>
<status status="PASS" starttime="20241122 21:57:05.626" endtime="20241122 21:57:05.626"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.598" endtime="20241122 21:57:05.626"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:05.651" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241122 21:57:05.634" endtime="20241122 21:57:05.651"/>
</kw>
<msg timestamp="20241122 21:57:05.651" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.634" endtime="20241122 21:57:05.651"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:05.651" endtime="20241122 21:57:05.651"/>
</return>
<status status="PASS" starttime="20241122 21:57:05.634" endtime="20241122 21:57:05.651"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.651" endtime="20241122 21:57:05.651"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.651" endtime="20241122 21:57:05.651"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.651" endtime="20241122 21:57:05.651"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.634" endtime="20241122 21:57:05.651"/>
</try>
<msg timestamp="20241122 21:57:05.651" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.634" endtime="20241122 21:57:05.651"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:05.651" endtime="20241122 21:57:05.651"/>
</return>
<msg timestamp="20241122 21:57:05.651" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.634" endtime="20241122 21:57:05.651"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.659" endtime="20241122 21:57:05.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.659" endtime="20241122 21:57:05.659"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.659" endtime="20241122 21:57:05.659"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.659" endtime="20241122 21:57:05.659"/>
</if>
<status status="PASS" starttime="20241122 21:57:05.651" endtime="20241122 21:57:05.659"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.634" endtime="20241122 21:57:05.659"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:05.683" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241122 21:57:05.668" endtime="20241122 21:57:05.683"/>
</kw>
<msg timestamp="20241122 21:57:05.683" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.667" endtime="20241122 21:57:05.683"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:05.683" endtime="20241122 21:57:05.683"/>
</return>
<status status="PASS" starttime="20241122 21:57:05.667" endtime="20241122 21:57:05.683"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.688" endtime="20241122 21:57:05.688"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.688" endtime="20241122 21:57:05.688"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.683" endtime="20241122 21:57:05.688"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.667" endtime="20241122 21:57:05.688"/>
</try>
<msg timestamp="20241122 21:57:05.689" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.659" endtime="20241122 21:57:05.689"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:05.689" endtime="20241122 21:57:05.689"/>
</return>
<msg timestamp="20241122 21:57:05.689" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241122 21:57:05.659" endtime="20241122 21:57:05.689"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</if>
<status status="PASS" starttime="20241122 21:57:05.689" endtime="20241122 21:57:05.691"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.659" endtime="20241122 21:57:05.691"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.589" endtime="20241122 21:57:05.691"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:05.691" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.691"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.756"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.756"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.756" endtime="20241122 21:57:05.756"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.756" endtime="20241122 21:57:05.756"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.756" endtime="20241122 21:57:05.756"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.756"/>
</try>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.756"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.756"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.756"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.756" endtime="20241122 21:57:05.756"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.756" endtime="20241122 21:57:05.756"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.691" endtime="20241122 21:57:05.756"/>
</try>
<status status="PASS" starttime="20241122 21:57:05.581" endtime="20241122 21:57:05.756"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.577" endtime="20241122 21:57:05.756"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.756" endtime="20241122 21:57:05.756"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.764" endtime="20241122 21:57:05.764"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.756" endtime="20241122 21:57:05.764"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.764" endtime="20241122 21:57:05.764"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.764" endtime="20241122 21:57:05.764"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.764" endtime="20241122 21:57:05.764"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.764" endtime="20241122 21:57:05.764"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.764" endtime="20241122 21:57:05.773"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.773"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:05.781" endtime="20241122 21:57:05.781"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.789" endtime="20241122 21:57:05.789"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.773" endtime="20241122 21:57:05.789"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.791" endtime="20241122 21:57:05.791"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.791" endtime="20241122 21:57:05.791"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.791" endtime="20241122 21:57:05.791"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.792" endtime="20241122 21:57:05.792"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.792" endtime="20241122 21:57:05.792"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:05.791" endtime="20241122 21:57:05.792"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:05.789" endtime="20241122 21:57:05.792"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:05.799" endtime="20241122 21:57:05.799"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.799" endtime="20241122 21:57:05.799"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.792" endtime="20241122 21:57:05.799"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.799" endtime="20241122 21:57:05.799"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.799" endtime="20241122 21:57:05.799"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.805" endtime="20241122 21:57:05.805"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.799" endtime="20241122 21:57:05.805"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241122 21:57:05.816" endtime="20241122 21:57:05.816"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:05.816" endtime="20241122 21:57:05.816"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:05.805" endtime="20241122 21:57:05.816"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.568" endtime="20241122 21:57:05.816"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:05.816" endtime="20241122 21:57:05.816"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241122 21:57:10.823" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241122 21:57:05.816" endtime="20241122 21:57:10.823"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.560" endtime="20241122 21:57:10.823"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:10.831" level="INFO">${response_message} = {'flowActionSequenceId': '44', 'testCaseRunId': '79', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241122 21:57:10.831" endtime="20241122 21:57:10.834"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241122 21:57:10.840" level="INFO">${json_response} = {"flowActionSequenceId": "44", "testCaseRunId": "79", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241122 21:57:10.837" endtime="20241122 21:57:10.840"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241122 21:57:10.866" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241122 21:57:10.874" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F952D503A0&gt;</msg>
<status status="PASS" starttime="20241122 21:57:10.841" endtime="20241122 21:57:10.874"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:10.874" endtime="20241122 21:57:10.878"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241122 21:57:10.878" endtime="20241122 21:57:10.879"/>
</return>
<status status="PASS" starttime="20241122 21:57:10.835" endtime="20241122 21:57:10.879"/>
</kw>
<status status="PASS" starttime="20241122 21:57:10.823" endtime="20241122 21:57:10.879"/>
</kw>
<status status="PASS" starttime="20241122 21:57:05.552" endtime="20241122 21:57:10.882"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:10.885" endtime="20241122 21:57:10.885"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241122 21:57:10.885" endtime="20241122 21:57:10.885"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:10.885" endtime="20241122 21:57:10.885"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:10.882" endtime="20241122 21:57:10.885"/>
</branch>
<status status="PASS" starttime="20241122 21:57:05.552" endtime="20241122 21:57:10.885"/>
</try>
<status status="PASS" starttime="20241122 21:57:05.552" endtime="20241122 21:57:10.885"/>
</iter>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:57:10.885"/>
</for>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:57:10.891"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.840" endtime="20241122 21:57:10.891"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceId=${testCaseFlowSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:10.900" level="INFO">${response_message} = {'testCaseFlowSequenceId': '46', 'testCaseRunId': '79', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241122 21:57:10.900" endtime="20241122 21:57:10.900"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241122 21:57:10.906" level="INFO">${json_response} = {"testCaseFlowSequenceId": "46", "testCaseRunId": "79", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241122 21:57:10.906" endtime="20241122 21:57:10.906"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241122 21:57:10.968" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241122 21:57:10.968" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F952D503A0&gt;</msg>
<status status="PASS" starttime="20241122 21:57:10.906" endtime="20241122 21:57:10.968"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:10.970" endtime="20241122 21:57:10.973"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241122 21:57:10.973" endtime="20241122 21:57:10.975"/>
</return>
<status status="PASS" starttime="20241122 21:57:10.900" endtime="20241122 21:57:10.975"/>
</kw>
<status status="PASS" starttime="20241122 21:57:10.891" endtime="20241122 21:57:10.975"/>
</kw>
<status status="PASS" starttime="20241122 21:56:52.827" endtime="20241122 21:57:10.975"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:10.975" endtime="20241122 21:57:10.975"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241122 21:57:10.975" endtime="20241122 21:57:10.980"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:10.980" endtime="20241122 21:57:10.980"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:10.975" endtime="20241122 21:57:10.980"/>
</branch>
<status status="PASS" starttime="20241122 21:56:52.827" endtime="20241122 21:57:10.980"/>
</try>
<status status="PASS" starttime="20241122 21:56:52.827" endtime="20241122 21:57:10.980"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-22T07:35:55.018Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:10.980" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241122 21:57:10.980" endtime="20241122 21:57:10.980"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:10.980" endtime="20241122 21:57:10.980"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:57:11.007" endtime="20241122 21:57:11.009"/>
</kw>
<msg timestamp="20241122 21:57:11.009" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.005" endtime="20241122 21:57:11.009"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:11.017" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241122 21:57:11.014" endtime="20241122 21:57:11.019"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:11.023" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.021" endtime="20241122 21:57:11.023"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.020" endtime="20241122 21:57:11.024"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.024" endtime="20241122 21:57:11.024"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.024" endtime="20241122 21:57:11.024"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.019" endtime="20241122 21:57:11.024"/>
</if>
<status status="PASS" starttime="20241122 21:57:11.012" endtime="20241122 21:57:11.027"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.009" endtime="20241122 21:57:11.028"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241122 21:57:11.028" endtime="20241122 21:57:11.029"/>
</return>
<msg timestamp="20241122 21:57:11.032" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.001" endtime="20241122 21:57:11.032"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:11.041" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241122 21:57:11.038" endtime="20241122 21:57:11.041"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:11.043" endtime="20241122 21:57:11.045"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241122 21:57:11.049" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241122 21:57:11.047" endtime="20241122 21:57:11.050"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.052" endtime="20241122 21:57:11.053"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.053" endtime="20241122 21:57:11.055"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.051" endtime="20241122 21:57:11.055"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.050" endtime="20241122 21:57:11.055"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:11.055" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241122 21:57:11.055" endtime="20241122 21:57:11.055"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:11.065" endtime="20241122 21:57:11.066"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.063" endtime="20241122 21:57:11.066"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:11.068" endtime="20241122 21:57:11.068"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.067" endtime="20241122 21:57:11.068"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:11.118" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241122 21:57:11.097" endtime="20241122 21:57:11.118"/>
</kw>
<msg timestamp="20241122 21:57:11.118" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.096" endtime="20241122 21:57:11.118"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.118" endtime="20241122 21:57:11.119"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.096" endtime="20241122 21:57:11.119"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.120" endtime="20241122 21:57:11.120"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.120" endtime="20241122 21:57:11.120"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.120" endtime="20241122 21:57:11.120"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.095" endtime="20241122 21:57:11.120"/>
</try>
<msg timestamp="20241122 21:57:11.120" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.093" endtime="20241122 21:57:11.120"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.120" endtime="20241122 21:57:11.120"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.087" endtime="20241122 21:57:11.120"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:11.120" endtime="20241122 21:57:11.120"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:11.120" endtime="20241122 21:57:11.120"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.087" endtime="20241122 21:57:11.125"/>
</try>
<msg timestamp="20241122 21:57:11.127" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.087" endtime="20241122 21:57:11.127"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.134" endtime="20241122 21:57:11.134"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.134" endtime="20241122 21:57:11.134"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.134" endtime="20241122 21:57:11.134"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.134" endtime="20241122 21:57:11.134"/>
</if>
<status status="PASS" starttime="20241122 21:57:11.132" endtime="20241122 21:57:11.134"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.085" endtime="20241122 21:57:11.134"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:11.169" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241122 21:57:11.152" endtime="20241122 21:57:11.169"/>
</kw>
<msg timestamp="20241122 21:57:11.169" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.152" endtime="20241122 21:57:11.169"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.169" endtime="20241122 21:57:11.169"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.152" endtime="20241122 21:57:11.169"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.169" endtime="20241122 21:57:11.169"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.171" endtime="20241122 21:57:11.171"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.169" endtime="20241122 21:57:11.171"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.152" endtime="20241122 21:57:11.171"/>
</try>
<msg timestamp="20241122 21:57:11.172" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.151" endtime="20241122 21:57:11.172"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.172" endtime="20241122 21:57:11.172"/>
</return>
<msg timestamp="20241122 21:57:11.173" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.146" endtime="20241122 21:57:11.173"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.175" endtime="20241122 21:57:11.175"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.175" endtime="20241122 21:57:11.175"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.175" endtime="20241122 21:57:11.175"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.175" endtime="20241122 21:57:11.175"/>
</if>
<status status="PASS" starttime="20241122 21:57:11.175" endtime="20241122 21:57:11.175"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.141" endtime="20241122 21:57:11.175"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:11.236" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241122 21:57:11.191" endtime="20241122 21:57:11.236"/>
</kw>
<msg timestamp="20241122 21:57:11.236" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.191" endtime="20241122 21:57:11.236"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.236" endtime="20241122 21:57:11.236"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.191" endtime="20241122 21:57:11.236"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.236" endtime="20241122 21:57:11.236"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.236" endtime="20241122 21:57:11.236"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.236" endtime="20241122 21:57:11.236"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.189" endtime="20241122 21:57:11.241"/>
</try>
<msg timestamp="20241122 21:57:11.241" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.189" endtime="20241122 21:57:11.241"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.242" endtime="20241122 21:57:11.242"/>
</return>
<msg timestamp="20241122 21:57:11.242" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.186" endtime="20241122 21:57:11.242"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.249" endtime="20241122 21:57:11.249"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.251" endtime="20241122 21:57:11.251"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.249" endtime="20241122 21:57:11.251"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.249" endtime="20241122 21:57:11.252"/>
</if>
<status status="PASS" starttime="20241122 21:57:11.244" endtime="20241122 21:57:11.252"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.184" endtime="20241122 21:57:11.252"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.077" endtime="20241122 21:57:11.253"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:11.254" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241122 21:57:11.253" endtime="20241122 21:57:11.254"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.260" endtime="20241122 21:57:11.260"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.258" endtime="20241122 21:57:11.260"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:57:11.260" endtime="20241122 21:57:11.260"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.260" endtime="20241122 21:57:11.260"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.258" endtime="20241122 21:57:11.260"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241122 21:57:11.263" endtime="20241122 21:57:11.357"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.260" endtime="20241122 21:57:11.357"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.359" endtime="20241122 21:57:11.360"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.361" endtime="20241122 21:57:11.362"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.359" endtime="20241122 21:57:11.362"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.260" endtime="20241122 21:57:11.362"/>
</try>
<status status="PASS" starttime="20241122 21:57:11.257" endtime="20241122 21:57:11.362"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.254" endtime="20241122 21:57:11.362"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.254" endtime="20241122 21:57:11.365"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.366" endtime="20241122 21:57:11.367"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.365" endtime="20241122 21:57:11.367"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.254" endtime="20241122 21:57:11.367"/>
</try>
<status status="PASS" starttime="20241122 21:57:11.073" endtime="20241122 21:57:11.367"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.069" endtime="20241122 21:57:11.367"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.378" endtime="20241122 21:57:11.379"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.384" endtime="20241122 21:57:11.384"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.367" endtime="20241122 21:57:11.384"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.388" endtime="20241122 21:57:11.388"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.384" endtime="20241122 21:57:11.389"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.400" endtime="20241122 21:57:11.400"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.389" endtime="20241122 21:57:11.401"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.407" endtime="20241122 21:57:11.407"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.401" endtime="20241122 21:57:11.408"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.410" endtime="20241122 21:57:11.410"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.408" endtime="20241122 21:57:11.410"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.420" endtime="20241122 21:57:11.420"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.421" endtime="20241122 21:57:11.421"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.421" endtime="20241122 21:57:11.421"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.424" endtime="20241122 21:57:11.424"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.423" endtime="20241122 21:57:11.425"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:11.421" endtime="20241122 21:57:11.425"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:11.410" endtime="20241122 21:57:11.425"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:11.443" endtime="20241122 21:57:11.443"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.452" endtime="20241122 21:57:11.452"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.425" endtime="20241122 21:57:11.452"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.457" endtime="20241122 21:57:11.457"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.459" endtime="20241122 21:57:11.459"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.458" endtime="20241122 21:57:11.459"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.460" endtime="20241122 21:57:11.461"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.460" endtime="20241122 21:57:11.462"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:11.457" endtime="20241122 21:57:11.462"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:11.452" endtime="20241122 21:57:11.462"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:11.481" endtime="20241122 21:57:11.481"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.491" endtime="20241122 21:57:11.492"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.462" endtime="20241122 21:57:11.492"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.492" endtime="20241122 21:57:11.497"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.492" endtime="20241122 21:57:11.497"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.502" endtime="20241122 21:57:11.505"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.497" endtime="20241122 21:57:11.505"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241122 21:57:11.527" endtime="20241122 21:57:11.527"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.527" endtime="20241122 21:57:11.528"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.505" endtime="20241122 21:57:11.528"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.061" endtime="20241122 21:57:11.528"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:11.528" endtime="20241122 21:57:11.529"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241122 21:57:11.531" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241122 21:57:11.529" endtime="20241122 21:57:11.531"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.055" endtime="20241122 21:57:11.531"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:11.538" level="INFO">${response_message} = {'flowActionSequenceId': '45', 'testCaseRunId': '79', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241122 21:57:11.534" endtime="20241122 21:57:11.538"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241122 21:57:11.540" level="INFO">${json_response} = {"flowActionSequenceId": "45", "testCaseRunId": "79", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241122 21:57:11.540" endtime="20241122 21:57:11.540"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241122 21:57:11.549" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241122 21:57:11.549" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F952D503A0&gt;</msg>
<status status="PASS" starttime="20241122 21:57:11.540" endtime="20241122 21:57:11.549"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:11.549" endtime="20241122 21:57:11.554"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.554"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.539" endtime="20241122 21:57:11.554"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.531" endtime="20241122 21:57:11.554"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.032" endtime="20241122 21:57:11.554"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.554"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.554"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.554"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.554"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.032" endtime="20241122 21:57:11.554"/>
</try>
<status status="PASS" starttime="20241122 21:57:11.032" endtime="20241122 21:57:11.554"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:11.554" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.554"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.554"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241122 21:57:11.554" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.554"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.562" endtime="20241122 21:57:11.563"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.563" endtime="20241122 21:57:11.564"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.562" endtime="20241122 21:57:11.564"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.554" endtime="20241122 21:57:11.564"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:11.564" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241122 21:57:11.564" endtime="20241122 21:57:11.564"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:11.564" endtime="20241122 21:57:11.564"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.564" endtime="20241122 21:57:11.564"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:11.564" endtime="20241122 21:57:11.564"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.564" endtime="20241122 21:57:11.564"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:11.596" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241122 21:57:11.588" endtime="20241122 21:57:11.596"/>
</kw>
<msg timestamp="20241122 21:57:11.596" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.586" endtime="20241122 21:57:11.596"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.596" endtime="20241122 21:57:11.596"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.586" endtime="20241122 21:57:11.596"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.596" endtime="20241122 21:57:11.596"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.596" endtime="20241122 21:57:11.596"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.596" endtime="20241122 21:57:11.596"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.586" endtime="20241122 21:57:11.596"/>
</try>
<msg timestamp="20241122 21:57:11.596" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.584" endtime="20241122 21:57:11.596"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.596" endtime="20241122 21:57:11.596"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.578" endtime="20241122 21:57:11.596"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:11.596" endtime="20241122 21:57:11.596"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:11.596" endtime="20241122 21:57:11.596"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.578" endtime="20241122 21:57:11.596"/>
</try>
<msg timestamp="20241122 21:57:11.602" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.578" endtime="20241122 21:57:11.602"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.606" endtime="20241122 21:57:11.606"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.606" endtime="20241122 21:57:11.606"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.606" endtime="20241122 21:57:11.606"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.606" endtime="20241122 21:57:11.606"/>
</if>
<status status="PASS" starttime="20241122 21:57:11.605" endtime="20241122 21:57:11.611"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.578" endtime="20241122 21:57:11.611"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:11.627" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241122 21:57:11.619" endtime="20241122 21:57:11.627"/>
</kw>
<msg timestamp="20241122 21:57:11.627" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.611" endtime="20241122 21:57:11.627"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.627" endtime="20241122 21:57:11.627"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.611" endtime="20241122 21:57:11.627"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.627" endtime="20241122 21:57:11.627"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.627" endtime="20241122 21:57:11.627"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.627" endtime="20241122 21:57:11.627"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.611" endtime="20241122 21:57:11.627"/>
</try>
<msg timestamp="20241122 21:57:11.627" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.611" endtime="20241122 21:57:11.627"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.627" endtime="20241122 21:57:11.627"/>
</return>
<msg timestamp="20241122 21:57:11.627" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.611" endtime="20241122 21:57:11.627"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.637" endtime="20241122 21:57:11.637"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.637" endtime="20241122 21:57:11.637"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.637" endtime="20241122 21:57:11.637"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.637" endtime="20241122 21:57:11.637"/>
</if>
<status status="PASS" starttime="20241122 21:57:11.637" endtime="20241122 21:57:11.637"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.611" endtime="20241122 21:57:11.637"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:11.669" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241122 21:57:11.646" endtime="20241122 21:57:11.669"/>
</kw>
<msg timestamp="20241122 21:57:11.675" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.646" endtime="20241122 21:57:11.675"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.675" endtime="20241122 21:57:11.675"/>
</return>
<status status="PASS" starttime="20241122 21:57:11.646" endtime="20241122 21:57:11.675"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.675" endtime="20241122 21:57:11.675"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.675" endtime="20241122 21:57:11.675"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.675" endtime="20241122 21:57:11.675"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.646" endtime="20241122 21:57:11.675"/>
</try>
<msg timestamp="20241122 21:57:11.675" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.646" endtime="20241122 21:57:11.675"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:11.675" endtime="20241122 21:57:11.675"/>
</return>
<msg timestamp="20241122 21:57:11.675" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241122 21:57:11.643" endtime="20241122 21:57:11.675"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.683" endtime="20241122 21:57:11.683"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.683" endtime="20241122 21:57:11.683"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.675" endtime="20241122 21:57:11.683"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.675" endtime="20241122 21:57:11.683"/>
</if>
<status status="PASS" starttime="20241122 21:57:11.675" endtime="20241122 21:57:11.683"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.643" endtime="20241122 21:57:11.683"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.570" endtime="20241122 21:57:11.683"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:11.683" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241122 21:57:11.683" endtime="20241122 21:57:11.683"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.688" endtime="20241122 21:57:11.688"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.688" endtime="20241122 21:57:11.688"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241122 21:57:11.688" endtime="20241122 21:57:11.688"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.688" endtime="20241122 21:57:11.691"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.688" endtime="20241122 21:57:11.691"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241122 21:57:11.691" endtime="20241122 21:57:11.951"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.691" endtime="20241122 21:57:11.951"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.959" endtime="20241122 21:57:11.959"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.960" endtime="20241122 21:57:11.960"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.951" endtime="20241122 21:57:11.961"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.691" endtime="20241122 21:57:11.961"/>
</try>
<status status="PASS" starttime="20241122 21:57:11.688" endtime="20241122 21:57:11.961"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.683" endtime="20241122 21:57:11.963"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.683" endtime="20241122 21:57:11.963"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.963" endtime="20241122 21:57:11.963"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.963" endtime="20241122 21:57:11.963"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.683" endtime="20241122 21:57:11.963"/>
</try>
<status status="PASS" starttime="20241122 21:57:11.570" endtime="20241122 21:57:11.963"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.570" endtime="20241122 21:57:11.967"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.980" endtime="20241122 21:57:11.980"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.988" endtime="20241122 21:57:11.988"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.967" endtime="20241122 21:57:11.988"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241122 21:57:11.993" endtime="20241122 21:57:11.993"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.988" endtime="20241122 21:57:11.994"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.005" endtime="20241122 21:57:12.005"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:11.994" endtime="20241122 21:57:12.005"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.008" endtime="20241122 21:57:12.008"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.005" endtime="20241122 21:57:12.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.015" endtime="20241122 21:57:12.015"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.008" endtime="20241122 21:57:12.015"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.021" endtime="20241122 21:57:12.022"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.022" endtime="20241122 21:57:12.023"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.022" endtime="20241122 21:57:12.023"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.023" endtime="20241122 21:57:12.023"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.023" endtime="20241122 21:57:12.023"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:12.022" endtime="20241122 21:57:12.024"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:12.015" endtime="20241122 21:57:12.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:12.031" endtime="20241122 21:57:12.031"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.048" endtime="20241122 21:57:12.048"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.024" endtime="20241122 21:57:12.049"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.049" endtime="20241122 21:57:12.049"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.049" endtime="20241122 21:57:12.049"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.049" endtime="20241122 21:57:12.049"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.049" endtime="20241122 21:57:12.056"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.049" endtime="20241122 21:57:12.056"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:12.049" endtime="20241122 21:57:12.056"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:12.049" endtime="20241122 21:57:12.056"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:12.068" endtime="20241122 21:57:12.072"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.072" endtime="20241122 21:57:12.072"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.056" endtime="20241122 21:57:12.072"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.086" endtime="20241122 21:57:12.086"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.081" endtime="20241122 21:57:12.086"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.090" endtime="20241122 21:57:12.090"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.086" endtime="20241122 21:57:12.097"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241122 21:57:12.113" endtime="20241122 21:57:12.113"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.113" endtime="20241122 21:57:12.113"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.097" endtime="20241122 21:57:12.113"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.564" endtime="20241122 21:57:12.113"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:12.113" endtime="20241122 21:57:12.113"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241122 21:57:12.113" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241122 21:57:12.113" endtime="20241122 21:57:12.113"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.564" endtime="20241122 21:57:12.113"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:12.124" level="INFO">${response_message} = {'flowActionSequenceId': '46', 'testCaseRunId': '79', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241122 21:57:12.124" endtime="20241122 21:57:12.124"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241122 21:57:12.133" level="INFO">${json_response} = {"flowActionSequenceId": "46", "testCaseRunId": "79", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241122 21:57:12.124" endtime="20241122 21:57:12.133"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241122 21:57:12.151" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241122 21:57:12.151" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F952D503A0&gt;</msg>
<status status="PASS" starttime="20241122 21:57:12.133" endtime="20241122 21:57:12.153"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:12.153" endtime="20241122 21:57:12.154"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241122 21:57:12.154" endtime="20241122 21:57:12.154"/>
</return>
<status status="PASS" starttime="20241122 21:57:12.124" endtime="20241122 21:57:12.154"/>
</kw>
<status status="PASS" starttime="20241122 21:57:12.121" endtime="20241122 21:57:12.156"/>
</kw>
<status status="PASS" starttime="20241122 21:57:11.554" endtime="20241122 21:57:12.156"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.157" endtime="20241122 21:57:12.157"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241122 21:57:12.157" endtime="20241122 21:57:12.157"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.157" endtime="20241122 21:57:12.160"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.157" endtime="20241122 21:57:12.160"/>
</branch>
<status status="PASS" starttime="20241122 21:57:11.554" endtime="20241122 21:57:12.160"/>
</try>
<status status="PASS" starttime="20241122 21:57:11.554" endtime="20241122 21:57:12.160"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:12.160" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241122 21:57:12.160" endtime="20241122 21:57:12.160"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:12.160" endtime="20241122 21:57:12.164"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241122 21:57:12.164" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241122 21:57:12.164" endtime="20241122 21:57:12.164"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.164" endtime="20241122 21:57:12.164"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.164" endtime="20241122 21:57:12.164"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.164" endtime="20241122 21:57:12.164"/>
</branch>
<status status="PASS" starttime="20241122 21:57:12.164" endtime="20241122 21:57:12.164"/>
</if>
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241122 21:57:12.174" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241122 21:57:12.172" endtime="20241122 21:57:12.174"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:12.174" endtime="20241122 21:57:12.174"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.174" endtime="20241122 21:57:12.180"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241122 21:57:12.180" endtime="20241122 21:57:12.180"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.180" endtime="20241122 21:57:12.180"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.195" endtime="20241122 21:57:12.195"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.180" endtime="20241122 21:57:12.195"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.203" endtime="20241122 21:57:12.204"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.204" endtime="20241122 21:57:12.204"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.196" endtime="20241122 21:57:12.204"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.212" endtime="20241122 21:57:12.213"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.204" endtime="20241122 21:57:12.214"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.221" endtime="20241122 21:57:12.221"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.216" endtime="20241122 21:57:12.221"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.233" endtime="20241122 21:57:12.233"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.229" endtime="20241122 21:57:12.233"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.237" endtime="20241122 21:57:12.237"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.233" endtime="20241122 21:57:12.237"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.245" endtime="20241122 21:57:12.245"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.245" endtime="20241122 21:57:12.245"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.245" endtime="20241122 21:57:12.245"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.245" endtime="20241122 21:57:12.251"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.245" endtime="20241122 21:57:12.251"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:12.245" endtime="20241122 21:57:12.252"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:12.237" endtime="20241122 21:57:12.252"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:12.262" endtime="20241122 21:57:12.262"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.275" endtime="20241122 21:57:12.275"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.253" endtime="20241122 21:57:12.278"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.281" endtime="20241122 21:57:12.282"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.282" endtime="20241122 21:57:12.282"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.282" endtime="20241122 21:57:12.282"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.282" endtime="20241122 21:57:12.282"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.282" endtime="20241122 21:57:12.282"/>
</branch>
<status status="NOT RUN" starttime="20241122 21:57:12.282" endtime="20241122 21:57:12.282"/>
</if>
<status status="NOT RUN" starttime="20241122 21:57:12.278" endtime="20241122 21:57:12.282"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241122 21:57:12.298" endtime="20241122 21:57:12.299"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.302" endtime="20241122 21:57:12.302"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.282" endtime="20241122 21:57:12.302"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241122 21:57:12.390" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241122 21:57:12.318" endtime="20241122 21:57:12.394"/>
</kw>
<msg timestamp="20241122 21:57:12.394" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:12.317" endtime="20241122 21:57:12.394"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:12.394" endtime="20241122 21:57:12.394"/>
</return>
<status status="PASS" starttime="20241122 21:57:12.316" endtime="20241122 21:57:12.394"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.396" endtime="20241122 21:57:12.396"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.398" endtime="20241122 21:57:12.398"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.394" endtime="20241122 21:57:12.398"/>
</branch>
<status status="PASS" starttime="20241122 21:57:12.316" endtime="20241122 21:57:12.399"/>
</try>
<msg timestamp="20241122 21:57:12.400" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241122 21:57:12.314" endtime="20241122 21:57:12.400"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241122 21:57:12.400" endtime="20241122 21:57:12.400"/>
</return>
<status status="PASS" starttime="20241122 21:57:12.310" endtime="20241122 21:57:12.400"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241122 21:57:12.400" endtime="20241122 21:57:12.401"/>
</return>
<status status="NOT RUN" starttime="20241122 21:57:12.400" endtime="20241122 21:57:12.401"/>
</branch>
<status status="PASS" starttime="20241122 21:57:12.310" endtime="20241122 21:57:12.401"/>
</try>
<msg timestamp="20241122 21:57:12.401" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241122 21:57:12.310" endtime="20241122 21:57:12.401"/>
</kw>
<status status="PASS" starttime="20241122 21:57:12.302" endtime="20241122 21:57:12.402"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.406" endtime="20241122 21:57:12.407"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.402" endtime="20241122 21:57:12.407"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241122 21:57:12.418" endtime="20241122 21:57:12.418"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241122 21:57:12.419" endtime="20241122 21:57:12.419"/>
</kw>
<status status="NOT RUN" starttime="20241122 21:57:12.407" endtime="20241122 21:57:12.420"/>
</branch>
<status status="PASS" starttime="20241122 21:57:12.174" endtime="20241122 21:57:12.420"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241122 21:57:12.420" endtime="20241122 21:57:12.420"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241122 21:57:12.422" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241122 21:57:12.420" endtime="20241122 21:57:12.422"/>
</kw>
<status status="PASS" starttime="20241122 21:57:12.164" endtime="20241122 21:57:12.422"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[id]</arg>
<arg>${testCaseRun}[id]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceId=${flowActionSequenceId}</arg>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241122 21:57:12.423" level="INFO">${response_message} = {'flowActionSequenceId': '47', 'testCaseRunId': '79', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
